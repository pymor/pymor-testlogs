<?xml version="1.0" encoding="utf-8"?><testsuite errors="0" failures="0" name="pytest" skips="6355" tests="12711" time="1206.424"><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;0]" time="0.001046895980834961"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f4bf258c0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;1]" time="0.0004966259002685547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f4bef406780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;2]" time="0.0005655288696289062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f4bef406c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;3]" time="0.0005276203155517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f4bef41a160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;4]" time="0.0007576942443847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f4bef41a630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;5]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f4bef406c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;6]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f4bef4064a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;7]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f4bef401160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;8]" time="0.00048422813415527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f4bef41a400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;9]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f4bef41a978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;10]" time="0.00048470497131347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f4bef41ae48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;11]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f4bef422358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;12]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f4bef41a550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;13]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f4bef41a160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;14]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f4bef41a6a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;15]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f4bef4065c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;16]" time="0.00047707557678222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f4bef4067b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;17]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f4c2b866cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;18]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f4bef422128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;19]" time="0.0004737377166748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f4bef422b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;20]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f4bf25cdeb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;21]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f4bef422470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;22]" time="0.0004925727844238281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f4bef401048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;23]" time="0.0005028247833251953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f4bef4069e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;24]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f4c0f4c2828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;25]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f4bef41a4a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;26]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f4bef41ac50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;27]" time="0.00047516822814941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f4bef42b208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;28]" time="0.0007932186126708984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f4bef42b748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;29]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f4bef41abe0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;30]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f4c2b86e4e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;31]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f4bef406748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;32]" time="0.0004229545593261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f4bef406240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;33]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f4bef422780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;34]" time="0.0004229545593261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f4bef422b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;35]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f4bef42b080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;36]" time="0.0007894039154052734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f4bef42bc88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;37]" time="0.0004851818084716797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f4bef4012e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;38]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f4bef406da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;39]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f4c0f4c2828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;40]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f4bef41acc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;41]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f4bef41aa58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;42]" time="0.0004680156707763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f4bef42b8d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;0]" time="0.0004241466522216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f4bef42b2b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;1]" time="0.0007255077362060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f4bef4352e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;2]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f4bef42b400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;3]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f4bef41ad68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;4]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f4bef41a198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;5]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f4bef406f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;6]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f4bef406128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;7]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f4bef422978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;8]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f4bef435128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;9]" time="0.0007510185241699219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f4bef435908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;10]" time="0.0005109310150146484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f4bef4012e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;11]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f4bef406550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;12]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f4bef41acf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;13]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f4c2b83af60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;14]" time="0.0004737377166748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f4bef42bd68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;15]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f4bef435518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;16]" time="0.00048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f4bef435390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;17]" time="0.0008299350738525391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f4bef435f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;18]" time="0.0004711151123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f4bef4354e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;19]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f4bef42ba90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;20]" time="0.0005617141723632812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f4c2b8430f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;21]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f4bef41abe0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;22]" time="0.0004754066467285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f4c2b86eeb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;23]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f4c2b8772e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;24]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f4bef43b048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;25]" time="0.0007932186126708984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f4bef43b588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;26]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f4bef4069e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;27]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f4bef41a6a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;28]" time="0.0004875659942626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f4c2b83aa20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;29]" time="0.0004711151123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f4bef42b5f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;30]" time="0.0005335807800292969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f4bef4359b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;31]" time="0.000667572021484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f4bef4353c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;32]" time="0.0005869865417480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f4bef43b0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;33]" time="0.0007977485656738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f4bef43bba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;34]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f4c2b830dd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;35]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f4c2b843ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;36]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f4c2b83a8d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;37]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f4c2b86ec18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;38]" time="0.0004680156707763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f4bef406748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;39]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f4bef43b898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;40]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f4bef43b2b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;41]" time="0.004248857498168945"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f4bef3c1208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;42]" time="0.0005037784576416016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f4c2b86e780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;0]" time="0.0004775524139404297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f4c2b843b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;1]" time="0.0004849433898925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f4bef43bd68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;2]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f4bef43b630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;3]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f4bef435c88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;4]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f4bef42b4a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;5]" time="0.0004773139953613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f4bef422b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;6]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f4bef422550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;7]" time="0.0007686614990234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f4bef42be10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;8]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f4bef4356a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;9]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f4bef43b7b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;10]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f4bef43bda0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;11]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f4c2b843438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;12]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f4bef406898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;13]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f4bef422c88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;14]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f4bef41a6a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;15]" time="0.0007543563842773438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f4bef41ae10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;16]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f4bef4225f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;17]" time="0.0004904270172119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f4c2b86e6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;18]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f4bef401358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;19]" time="0.00048279762268066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f4bef43b630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;20]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f4bef435be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;21]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f4bef42be10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;22]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f4bef3c17f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;23]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f4bef3c1d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;24]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f4c31012d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;25]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f4bef43b208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;26]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f4c2b83afd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;27]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f4bef422438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;28]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f4c3101b2e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;29]" time="0.0004870891571044922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f4bef3c1518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;30]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f4bef3ca0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;31]" time="0.0008156299591064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f4bef3ca630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;32]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f4bef3c17f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;33]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f4c3101b630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;34]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f4bef406978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;35]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f4c2b843a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;36]" time="0.0004839897155761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f4bef43b1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;37]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f4bef435be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;38]" time="0.0004241466522216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f4bef3ca710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;39]" time="0.0007872581481933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f4bef3cac50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;40]" time="0.0004928112030029297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f4bef43ba20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;41]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f4bef401358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;42]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f4bef422d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;0]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f4c3101ba20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;1]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef3c1ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;2]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef3ca898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;3]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef3ca198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;4]" time="0.0007488727569580078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef3d22b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;5]" time="0.0004992485046386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef3ca390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;6]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef41ac50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;7]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f4c3101b2e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;8]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef422d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;9]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f4c2b83ad68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;10]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef43b668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;11]" time="0.0004813671112060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef3d20b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;12]" time="0.0007822513580322266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef3d28d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;13]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef43be10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;14]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f4c2b866fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;15]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f4c3101b2e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;16]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f4c2b811fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;17]" time="0.0005397796630859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef3cad68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;18]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef3d25c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;19]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef3d2080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;20]" time="0.0008721351623535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef3d2ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;21]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef3d2588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;22]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef3caeb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;23]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f4c2b811ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;24]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef3c1438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;25]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f4c2b83afd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;26]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f4c31012978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;27]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef435f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;28]" time="0.0007650852203369141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef3d8550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;29]" time="0.0005693435668945312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef401358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;30]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef422588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;31]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef3c1470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;32]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef3cad68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;33]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef3d2940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;34]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef3d2da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;35]" time="0.00048613548278808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef3d8400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;36]" time="0.0008561611175537109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef3d8b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;37]" time="0.0004956722259521484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f4c2b811fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;38]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef3cae80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;39]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f4c3101b780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;40]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f4c2b818b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;41]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef43bbe0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;42]" time="0.0004839897155761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef3d8240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;0]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f4bef3d80f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;1]" time="0.0008027553558349609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f4bef3e01d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;2]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f4bef3d80f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;3]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f4bef3d8c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;4]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f4c2b83ad68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;5]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f4c3101bfd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;6]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f4bef3caeb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;7]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f4bef3d24e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;8]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f4bef3e0240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;9]" time="0.0011048316955566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f4bef3e07f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;10]" time="0.0004928112030029297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f4c2b818ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;11]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f4c380f7828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;12]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f4bef3d87b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;13]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f4bef3d8b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;14]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f4bef3d29e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;15]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f4bef3caac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;16]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f4bef41a668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;17]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f4bef3c1a90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;18]" time="0.0007786750793457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f4bef3cac50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;19]" time="0.0004706382751464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f4bef3d2ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;20]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f4bef3d8b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;21]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f4bef3d8a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;22]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f4c380f7828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;23]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f4c2b818588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;24]" time="0.0004875659942626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f4bef3c1668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;25]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f4bef42bdd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;26]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f4bef42b2e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;27]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f4bef3c1b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;28]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f4c380f7b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;29]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f4bef3d8da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;30]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f4bef3d2518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;31]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f4c380ffac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;32]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f4bef3cac50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;33]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f4bef3e0198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;34]" time="0.0008604526519775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f4bef3e0eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;35]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f4c380ffb70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;36]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f4bef3d8e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;37]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f4c31022198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;38]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f4c2b83afd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;39]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f4bef3c1ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;40]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f4bef3e09e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;41]" time="0.0005042552947998047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f4bef3e0080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;42]" time="0.0007908344268798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f4bef3eb438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;0]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f4bef3e01d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;1]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f4bef3c14e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;2]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f4bef43b208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;3]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f4bef3d8d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;4]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f4bef3d2390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;5]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f4c380ff240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;6]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f4bef3eb278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;7]" time="0.0007874965667724609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f4bef3eba58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;8]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f4bef3d2390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;9]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f4bef3d89e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;10]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f4c381060f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;11]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f4bef3c14e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;12]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f4bef3e0d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;13]" time="0.0005419254302978516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f4bef3ebac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;14]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f4bef3eb4a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;15]" time="0.0008485317230224609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f4bef3ef0b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;16]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f4bef3eb4a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;17]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f4bef42be80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;18]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f4bef3e09e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;19]" time="0.0004742145538330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f4bef477c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;20]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f4bef401198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;21]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f4c380ffe10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;22]" time="0.0005052089691162109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f4bef3ef1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;23]" time="0.0008471012115478516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f4bef3ef6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;24]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f4bef3d8860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;25]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f4c380f7ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;26]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f4bef3c1ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;27]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f4bef42be80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;28]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f4bef3ebd68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;29]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f4c30fee198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;30]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f4bef3ef208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;31]" time="0.0007748603820800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f4bef3efcf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;32]" time="0.00041985511779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f4bef3ebcc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;33]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f4c2b818978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;34]" time="0.0004832744598388672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f4c30fe7b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;35]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f4bef43b208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;36]" time="0.0004916191101074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f4bef3d8d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;37]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f4bef3ef358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;38]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f4bef3ef470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;39]" time="0.0008134841918945312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f4bef3f7358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;40]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f4bef3ef860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;41]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f4c380ff780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;42]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f4bef477c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;0]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f4bef3e0cf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;1]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f4bef3ebbe0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;2]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f4c30feed68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;3]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f4bef3f7160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;4]" time="0.0008146762847900391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f4bef3f7978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;5]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f4bef3eb8d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;6]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f4bef3e0940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;7]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f4c31022198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;8]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f4c380ff780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;9]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f4bef3ef748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;10]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f4bef3f7a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;11]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f4bef3f7470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;12]" time="0.0008349418640136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f4bef3f7f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;13]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f4bef3f7710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;14]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f4bef3ef470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;15]" time="0.0006659030914306641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f4bef3d2390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;16]" time="0.000640869140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f4c2b811ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;17]" time="0.0006101131439208984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f4c3101b780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;18]" time="0.000560760498046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f4c380b8b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;19]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f4bef3400b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;20]" time="0.0010783672332763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f4bef3405f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;21]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f4c2b811ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;22]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f4c30f77390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;23]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f4bef3f7b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;24]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f4bef3f7358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;25]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f4bef3efe10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;26]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f4bef3ef080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;27]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f4bef3eb438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;28]" time="0.00047707557678222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f4bef42b0b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;29]" time="0.0007951259613037109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f4bef3c14e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;30]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f4bef3d2278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;31]" time="0.0004878044128417969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f4bef3efe48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;32]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f4bef3f7438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;33]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f4bef3f7198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;34]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f4c2b818978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;35]" time="0.0005412101745605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f4c380b8f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;36]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f4bef3402e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;37]" time="0.0007910728454589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f4bef435940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;38]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f4c380c3278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;39]" time="0.0004787445068359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f4c2b811ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;40]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f4bef3f7b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;41]" time="0.0004811286926269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f4bef3efe48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;42]" time="0.00048613548278808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f4bef3c14e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;0]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f4bef340208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;1]" time="0.0004813671112060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f4bef340b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;2]" time="0.0005974769592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f4bef348080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;3]" time="0.0004897117614746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f4bef340080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;4]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f4bef3efcc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;5]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f4c30fee588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;6]" time="0.00051116943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f4bef3f7780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;7]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f4bef3d8e80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;8]" time="0.00046896934509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f4c380c3518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;9]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f4bef348400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;10]" time="0.00079345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f4bef348940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;11]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f4c380b8ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;12]" time="0.00048065185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f4bef3f7780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;13]" time="0.0005042552947998047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f4bef3ef940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;14]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f4bef3ebeb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;15]" time="0.00047516822814941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f4bef340c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;16]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f4bef3489b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;17]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f4bef348278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;18]" time="0.0008573532104492188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f4bef348f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;19]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f4bef348710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;20]" time="0.00047516822814941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f4bef340908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;21]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f4bef3ebba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;22]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f4bef3efda0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;23]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f4c380ff390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;24]" time="0.0004849433898925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f4c380b8f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;25]" time="0.0005037784576416016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f4bef34e080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;26]" time="0.0008440017700195312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f4bef34e5c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;27]" time="0.0004780292510986328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f4bef3f7208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;28]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f4bef3ef940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;29]" time="0.00048542022705078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f4c38053668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;30]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f4c3804ab00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;31]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f4bef348c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;32]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f4bef348ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;33]" time="0.0004892349243164062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f4bef34e0b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;34]" time="0.0007748603820800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f4bef34ebe0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;35]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f4bef3408d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;36]" time="0.0004944801330566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f4bef3ebba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;37]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f4c380537b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;38]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f4c30fee630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;39]" time="0.00047469139099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f4bef3f7b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;40]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f4bef34e240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;41]" time="0.00048065185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f4bef34e358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;42]" time="0.000843048095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f4bef355240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;0]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f4bef34e710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;1]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f4c380c3320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;2]" time="0.0004963874816894531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f4c30fee828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;3]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f4c38053470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;4]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f4bef3ebcc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;5]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f4bef3487f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;6]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f4bef355048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;7]" time="0.0008437633514404297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f4bef355860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;8]" time="0.0004978179931640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f4bef340208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;9]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f4c38053668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;10]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f4c30fee588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;11]" time="0.00048422813415527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f4bef3f7780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;12]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f4bef34e7f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;13]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f4bef34e080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;14]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f4bef355048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;15]" time="0.0008821487426757812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f4bef355e80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;16]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f4bef3552e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;17]" time="0.0004832744598388672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f4bef34e940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;18]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f4bef34e240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;19]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f4bef3efd30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;20]" time="0.0004737377166748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f4c30ffc4e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;21]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f4c38053b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;22]" time="0.0004851818084716797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f4bef348cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;23]" time="0.0008680820465087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f4bef35c4e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;24]" time="0.0005838871002197266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f4bef3ebac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;25]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f4c30ffccc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;26]" time="0.0004954338073730469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f4bef3f7780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;27]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f4bef34eda0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;28]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f4bef3554a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;29]" time="0.0005679130554199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f4bef355c88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;30]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f4bef35c358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;31]" time="0.001157522201538086"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f4bef35cb00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;32]" time="0.00047707557678222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f4c30f77240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;33]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f4c38053128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;34]" time="0.0005013942718505859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f4bef355048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;35]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f4bef34e128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;36]" time="0.0004680156707763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f4bef34eba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;37]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f4bef348f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;38]" time="0.0004792213439941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f4bef340278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;39]" time="0.00048041343688964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f4bef340320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;40]" time="0.0008616447448730469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f4bef340e80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;41]" time="0.0005154609680175781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f4bef348908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;42]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f4bef34e588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;0]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f4bef355ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;1]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f4bef355438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;2]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f4c3805d3c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;3]" time="0.00047516822814941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f4bef3d8e80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;4]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f4bef35c6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;5]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f4bef3e09e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;6]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f4bef4225f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;7]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f4c38053128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;8]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f4bef355ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;9]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f4bef34eba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;10]" time="0.0004754066467285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f4c380c3c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;11]" time="0.00047397613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f4bef35cba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;12]" time="0.0004961490631103516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f4bef35c4a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;13]" time="0.0007815361022949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f4bef367208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;14]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f4bef35c0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;15]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f4bef340278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;16]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f4bef3c14e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;17]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f4bef3558d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;18]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f4c30ffcac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;19]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f4c3805d320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;20]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f4bef3672b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;21]" time="0.0008292198181152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f4bef367748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;22]" time="0.0004813671112060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f4c2b7ce780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;23]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f4c30ffc588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;24]" time="0.0004980564117431641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f4bef34e240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;25]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f4bef3487b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;26]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f4bef35cb70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;27]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f4bef35c390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;28]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f4bef3672b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;29]" time="0.0008900165557861328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f4bef367d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;30]" time="0.0004894733428955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f4bef35ceb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;31]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f4bef348fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;32]" time="0.0004734992980957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f4bef355908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;33]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f4c3100aac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;34]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f4c2b7ceeb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;35]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f4bef367278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;36]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f4bef367518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;37]" time="0.0008094310760498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f4bef36c3c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;38]" time="0.0004706382751464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f4bef3679b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;39]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f4c2b7ceeb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;40]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f4c30ffc588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;41]" time="0.0005071163177490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f4bef355908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;42]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f4c3804ae48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;0]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f4bef35c9b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;1]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f4bef36c1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;2]" time="0.0008137226104736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f4bef36c9e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;3]" time="0.0005130767822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f4c2b7dc2e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;4]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f4bef340b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;5]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f4bef34ee48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;6]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f4c2b7cefd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;7]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f4bef367278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;8]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f4bef36c5c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;9]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f4bef36c438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;10]" time="0.000804901123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f4bef373048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;11]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f4bef36c7f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;12]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f4bef3678d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;13]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f4c2b7cecc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;14]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f4bef34ee48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;15]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f4c3804ae48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;16]" time="0.0004711151123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f4c2b7e5dd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;17]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f4bef373160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;18]" time="0.0007712841033935547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f4bef373668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;19]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f4c2b7dce48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;20]" time="0.0004978179931640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f4bef340e80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;21]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f4bef42bd30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;22]" time="0.0005042552947998047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f4bef367908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;23]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f4bef36c860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;24]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f4bef36c518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;25]" time="0.00049591064453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f4bef373198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;26]" time="0.0007817745208740234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f4bef373c88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;27]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f4bef367e10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;28]" time="0.0006327629089355469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f4c2b7ec550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;29]" time="0.0005457401275634766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f4c3100a828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;30]" time="0.0005156993865966797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f4c3804ae48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;31]" time="0.0004973411560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f4c2b7dc2e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;32]" time="0.000518798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f4bef3732e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;33]" time="0.0004966259002685547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f4bef373400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;34]" time="0.0009138584136962891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f4bef37b2e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;35]" time="0.0004825592041015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f4bef3737f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;36]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f4c2b7dc2e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;37]" time="0.0004899501800537109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f4bef34e390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;38]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f4c3100a828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;39]" time="0.0006427764892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f4c2b7ec940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;40]" time="0.0006592273712158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f4bef36cdd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;41]" time="0.0006432533264160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f4bef37b0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;42]" time="0.0012674331665039062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f4bef37b908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;0]" time="0.0004906654357910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f4bef348908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;1]" time="0.0006351470947265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f4bef355c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;2]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f4bef373eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;3]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f4bef373b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;4]" time="0.0006518363952636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f4bef36c588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;5]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f4bef367908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;6]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f4bef3efda0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;7]" time="0.00047588348388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f4c380b8ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;8]" time="0.0008437633514404297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f4bef35c748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;9]" time="0.00046896934509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f4bef36c710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;10]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f4bef373ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;11]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f4bef373a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;12]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f4c2b7b9cf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;13]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f4c2b7ce588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;14]" time="0.0004942417144775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f4c2b7ec160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;15]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f4bef37b978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;16]" time="0.0008656978607177734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f4bef340cf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;17]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f4c2b7ce978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;18]" time="0.0004901885986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f4c2b7e5b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;19]" time="0.0004923343658447266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f4bef373240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;20]" time="0.0004780292510986328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f4bef373358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;21]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f4bef367d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;22]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f4bef37ba58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;23]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f4bef37be10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;24]" time="0.0005538463592529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f4bef304390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;25]" time="0.0004782676696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f4bef37b5f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;26]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f4bef36c588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;27]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f4bef373d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;28]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f4c2b7c13c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;29]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f4c3804afd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;30]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f4c2b7ce588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;31]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f4bef304710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;32]" time="0.0008654594421386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f4bef304c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;33]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f4c2b7b9ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;34]" time="0.0004680156707763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f4c2b7c1cf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;35]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f4bef373630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;36]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f4bef36c668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;37]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f4bef37b668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;38]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f4bef304cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;39]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f4bef304588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;40]" time="0.0008552074432373047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f4bef3092b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;41]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f4bef3048d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;42]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f4bef37b668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;0]" time="0.00048804283142089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f4bef36cb38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;1]" time="0.0005106925964355469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f4bef373ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;2]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f4c2b7c1908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;3]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f4bef355c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;4]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f4bef3090f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;5]" time="0.0008080005645751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f4bef3098d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;6]" time="0.0004820823669433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f4c2b7c1f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;7]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f4c2b749320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;8]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f4c380d3748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;9]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f4bef36ce48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;10]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f4bef304a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;11]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f4bef3095c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;12]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f4bef3090b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;13]" time="0.0008552074432373047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f4bef309ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;14]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f4bef309588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;15]" time="0.0005686283111572266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f4bef304e10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;16]" time="0.00048613548278808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f4bef37bba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;17]" time="0.00047469139099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f4c380d3e80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;18]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f4bef3739e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;19]" time="0.0004801750183105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f4c2b7c1fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;20]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f4c2b7ecd30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;21]" time="0.0008702278137207031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f4bef311550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;22]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f4c2b7ced68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;23]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f4c380da208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;24]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f4bef367908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;25]" time="0.00047969818115234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f4bef37bc18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;26]" time="0.0004837512969970703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f4bef309940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;27]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f4bef309da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;28]" time="0.00046515464782714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f4bef311400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;29]" time="0.0008318424224853516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f4bef311b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;30]" time="0.0004773139953613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f4bef304588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;31]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f4bef37bb70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;32]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f4c380d3d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;33]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f4c2b7495c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;34]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f4c2b7c1f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;35]" time="0.0006875991821289062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f4bef311240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;36]" time="0.0005173683166503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f4bef3110f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;37]" time="0.0008287429809570312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f4bef3171d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;38]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f4bef311898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;39]" time="0.0005252361297607422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f4c2b7c19b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;40]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f4bef373e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;41]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f4c380da208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;42]" time="0.0005085468292236328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f4bef37bac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;0]" time="0.0005009174346923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f4bef309fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;1]" time="0.0004978179931640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f4bef317240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;2]" time="0.0008609294891357422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f4bef3177f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;3]" time="0.0004973411560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f4bef304fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;4]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f4c380ebda0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;5]" time="0.0004706382751464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f4c380da7f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;6]" time="0.0005071163177490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f4bef373e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;7]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f4bef311828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;8]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f4bef3110f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;9]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f4bef317358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;10]" time="0.0014638900756835938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f4bef317e10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;11]" time="0.0004889965057373047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f4c2b7f4208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;12]" time="0.0004951953887939453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f4c380ebe48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;13]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f4bef311eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;14]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f4bef311518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;15]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f4bef309f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;16]" time="0.0004949569702148438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f4bef304a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;17]" time="0.0005083084106445312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f4bef3403c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;18]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f4bef348908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;19]" time="0.0007779598236083984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f4bef37be80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;20]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f4bef367f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;21]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f4bef309f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;22]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f4bef311828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;23]" time="0.0004935264587402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f4c380ebe48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;24]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f4c38039a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;25]" time="0.0004887580871582031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f4bef355c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;26]" time="0.0004909038543701172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f4bef317860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;27]" time="0.0006031990051269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f4bef35c748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;28]" time="0.0005195140838623047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f4c38039128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;29]" time="0.0005509853363037109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f4c380da940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;30]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f4bef311710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;31]" time="0.0004982948303222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f4bef309c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;32]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f4bef304128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;33]" time="0.0005164146423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f4bef317860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;34]" time="0.0004761219024658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f4bef317198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;35]" time="0.0008215904235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f4bef321518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;36]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f4bef317860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;37]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f4c2b7ec400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;38]" time="0.00048470497131347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f4c38035470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;39]" time="0.00048160552978515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f4bef311a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;40]" time="0.000986337661743164"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f4c380da208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;41]" time="0.0006883144378662109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f4c380395c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;42]" time="0.0005075931549072266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f4bef321390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;0]" time="0.0008690357208251953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f4bef321a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;1]" time="0.0005121231079101562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f4c2b7c1128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;2]" time="0.00047469139099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f4c380d3f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;3]" time="0.0005266666412353516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f4c38035320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;4]" time="0.0005433559417724609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f4bef309eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;5]" time="0.0005214214324951172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f4bef317fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;6]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f4bef321ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;7]" time="0.0004737377166748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f4bef3210f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;8]" time="0.0008761882781982422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f4bef3270b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;9]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f4bef3211d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;10]" time="0.0005075931549072266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f4bef367e10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;11]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f4bef304eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;12]" time="0.0005092620849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f4c38035668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;13]" time="0.0004937648773193359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f4bef311c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;14]" time="0.0005037784576416016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f4bef355c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;15]" time="0.0005385875701904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f4bef3271d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;16]" time="0.0009090900421142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f4bef3276d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;17]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f4c380da940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;18]" time="0.00048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f4c2b824588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;19]" time="0.0005333423614501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f4bef309b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;20]" time="0.0005159378051757812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f4bef3174e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;21]" time="0.00066375732421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f4bef321ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;22]" time="0.0005419254302978516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f4bef321c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;23]" time="0.0005233287811279297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f4bef327208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;24]" time="0.0010006427764892578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f4bef327cf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;25]" time="0.0005047321319580078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f4bef3215f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;26]" time="0.0004940032958984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f4bef3175c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;27]" time="0.000484466552734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f4bef311ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;28]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f4c2b824198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;29]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f4c380dadd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;30]" time="0.0005168914794921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f4bef327358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;31]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f4bef327470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;32]" time="0.0008738040924072266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f4bef32f358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;33]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f4bef327a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;34]" time="0.0005314350128173828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f4c380da748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;35]" time="0.0004887580871582031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f4c2b824c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;36]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f4bef309ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;37]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f4bef304048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;38]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f4bef321748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;39]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f4bef32f160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;40]" time="0.0008418560028076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f4bef32f978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;41]" time="0.0004787445068359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f4bef3175c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;42]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f4c2b830438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;0]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f4bef311c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;1]" time="0.0004987716674804688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f4c2b8215f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;2]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f4bef327e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;3]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f4bef32fa58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;4]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f4bef32f470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;5]" time="0.0008602142333984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f4bef32ff98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;6]" time="0.0004742145538330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f4bef32f710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;7]" time="0.0005576610565185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f4bef327860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;8]" time="0.0005764961242675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f4bef327e10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;9]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f4c2b824198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;10]" time="0.0005097389221191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f4c380d3f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;11]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f4bef3171d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;12]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f4bef3310b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;13]" time="0.0012054443359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f4bef3315f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;14]" time="0.000530242919921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f4c2b830ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;15]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f4bef309940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;16]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f4c38039518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;17]" time="0.0005259513854980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f4bef327f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;18]" time="0.0005307197570800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f4bef32f198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;19]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f4bef32f438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;20]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f4bef3310f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;21]" time="0.0011343955993652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f4bef331c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;22]" time="0.0004892349243164062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f4c2b824b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;23]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f4bef309ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;24]" time="0.00047469139099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f4bef32f748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;25]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f4bef32f940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;26]" time="0.0004868507385253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f4bef327a90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;27]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f4bef321358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;28]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f4bef317518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;29]" time="0.0004889965057373047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f4bef37b550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;30]" time="0.15604376792907715"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f4bef321dd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;31]" time="0.0008294582366943359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f4bef3271d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;32]" time="0.0007128715515136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f4bef32fdd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;33]" time="0.0011065006256103516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f4c2b830a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;34]" time="0.0006499290466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f4c2b824c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;35]" time="0.0005240440368652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f4bef304c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;36]" time="0.0005598068237304688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f4bef32fa90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;37]" time="0.0005233287811279297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f4c3806c438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;38]" time="0.0004940032958984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f4bef327d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;39]" time="0.0004858970642089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f4bef317be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;40]" time="0.000507354736328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f4bef37b390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;41]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f4bef803b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;42]" time="0.0008711814880371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f4bef331cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;0]" time="0.0006251335144042969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f4bef3405c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;1]" time="0.0006182193756103516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f4bef317dd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;2]" time="0.0005652904510498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f4bef3217f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;3]" time="0.0005004405975341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f4c3806cb70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;4]" time="0.0005681514739990234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f4bef32fda0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;5]" time="0.0004832744598388672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f4bef304358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;6]" time="0.0004775524139404297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f4bef3310f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;7]" time="0.0009298324584960938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f4bef331ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;8]" time="0.0004787445068359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f4c2b830588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;9]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f4bef327dd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;10]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f4bef321358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;11]" time="0.0004956722259521484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f4bef317c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;12]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f4bef3c11d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;13]" time="0.0004971027374267578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f4bef3311d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;14]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f4bef331fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;15]" time="0.0008642673492431641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f4bef2c4550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;16]" time="0.00046896934509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f4bef331780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;17]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f4bef3405c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;18]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f4c2b7fe9b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;19]" time="0.0005075931549072266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f4c38067cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;20]" time="0.0004968643188476562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f4c3806c390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;21]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f4c2b830a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;22]" time="0.00048470497131347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f4bef2c40b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;23]" time="0.0008862018585205078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f4bef2c4b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;24]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f4bef327ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;25]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f4bef3213c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;26]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f4bef3e0828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;27]" time="0.0004992485046386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f4bef35cc88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;28]" time="0.0005052089691162109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f4bef331fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;29]" time="0.0004782676696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f4bef2c4240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;30]" time="0.00047397613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f4bef2c4198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;31]" time="0.0008120536804199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f4bef2c71d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;32]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f4bef2c4048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;33]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f4bef3311d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;34]" time="0.0004792213439941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f4bef35ce80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;35]" time="0.0005109310150146484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f4c2b7feda0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;36]" time="0.00048160552978515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f4c38067f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;37]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f4bef32fe10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;38]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f4bef2c7240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;39]" time="0.0008616447448730469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f4bef2c77f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;40]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f4c2b806a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;41]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f4c2b7fec50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;42]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f4bef37b8d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;0]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f4bef331320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;1]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f4bef2c4160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;2]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f4bef2c4898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;3]" time="0.0005156993865966797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f4bef2c7358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;4]" time="0.0008096694946289062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f4bef2c7e10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;5]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f4bef2c4160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;6]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f4bef3318d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;7]" time="0.0005080699920654297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f4bef3e0828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;8]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f4c2b806278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;9]" time="0.0004742145538330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f4bef32f320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;10]" time="0.0004792213439941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f4bef2c7470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;11]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f4bef2c7588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;12]" time="0.0008881092071533203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f4bef2cd470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;13]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f4bef2c7b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;14]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f4c2b806908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;15]" time="0.0004706382751464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f4c2b7fe1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;16]" time="0.0004763603210449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f4bef35ce80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;17]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f4bef2c47b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;18]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f4c2b87a588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;19]" time="0.0004868507385253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f4bef2cd278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;20]" time="0.0008780956268310547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f4bef2cda90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;21]" time="0.00047850608825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f4bef2c4fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;22]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f4bef3315c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;23]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f4c2b7fecf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;24]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f4bef3271d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;25]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f4bef2c7c88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;26]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f4bef2cdc18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;27]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f4bef2cd4e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;28]" time="0.0008358955383300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f4bef2d30f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;29]" time="0.0004889965057373047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f4bef2cd8d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;30]" time="0.0005009174346923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f4bef32fa90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;31]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f4bef2c7588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;32]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f4c2b7fe668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;33]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f4bef3319e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;34]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f4bef2c4ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;35]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f4bef2d3208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;36]" time="0.001165628433227539"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f4bef2d3710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;37]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f4c2b806668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;38]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f4c2b87a588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;39]" time="0.0005009174346923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f4bef2cd748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;40]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f4bef2cdc50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;41]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f4bef2c7240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;42]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f4bef2c4780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;0]" time="0.0004763603210449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f4bef331c88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;1]" time="0.0007357597351074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f4c38067d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;2]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f4bef331d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;3]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f4bef2c4ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;4]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f4bef2c7978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;5]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f4bef2cdf60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;6]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f4c2b87aac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;7]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f4c2b808390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;8]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f4c2b7fe1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;9]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f4bef2d34e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;10]" time="0.0010499954223632812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f4bef317dd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;11]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f4c2b87ae10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;12]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f4bef2cda58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;13]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f4bef2c7be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;14]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f4c30fac588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;15]" time="0.0005087852478027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f4bef32ffd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;16]" time="0.0005133152008056641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f4bef2d3320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;17]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f4bef2d3b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;18]" time="0.00047707557678222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f4c38067390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;19]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f4c30fac978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;20]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f4bef2c7e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;21]" time="0.00048232078552246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f4bef2cddd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;22]" time="0.0004782676696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f4c2b87a240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;23]" time="0.0004949569702148438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f4bef2d3c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;24]" time="0.0004909038543701172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f4bef2d3278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;25]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f4bef2df438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;26]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f4bef2d3fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;27]" time="0.0005013942718505859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f4c2b808ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;28]" time="0.0005755424499511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f4bef2cd7b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;29]" time="0.0005125999450683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f4bef2c4048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;30]" time="0.0005114078521728516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f4bef331f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;31]" time="0.0004949569702148438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f4bef32ffd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;32]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f4bef2df160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;33]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f4bef2dfcf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;34]" time="0.0006642341613769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f4bef2e2278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;35]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f4bef2df588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;36]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f4c30fac630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;37]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f4bef2c79b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;38]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f4c3806c438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;39]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f4c2b808630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;40]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f4bef2d3b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;41]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f4bef2e25f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;42]" time="0.0009455680847167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f4bef2e2b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;0]" time="0.0004980564117431641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f4c30fb4240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;1]" time="0.0005257129669189453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f4bef2cdc18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;2]" time="0.0005238056182861328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f4bef331f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;3]" time="0.0005869865417480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f4c30fac0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;4]" time="0.0004799365997314453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f4bef2df908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;5]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f4bef2e2780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;6]" time="0.00048065185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f4bef2e2c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;7]" time="0.0008959770202636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f4bef2e8198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;8]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f4bef2e27b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;9]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f4bef2dfa20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;10]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f4c30facc18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;11]" time="0.0005240440368652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f4bef2c4048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;12]" time="0.0004985332489013672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f4c2b808630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;13]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f4c30fb4b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;14]" time="0.0004818439483642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f4bef2e82e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;15]" time="0.0008478164672851562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f4bef2e87b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;16]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f4c30fb4ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;17]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f4c2b7538d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;18]" time="0.0004990100860595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f4bef2c7588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;19]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f4bef2df908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;20]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f4bef2e22e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;21]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f4bef2e26a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;22]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f4bef2e8208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;23]" time="0.0008940696716308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f4bef2e8dd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;24]" time="0.0004801750183105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f4bef2dfdd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;25]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f4c30fac240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;26]" time="0.0007181167602539062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f4bef2c7c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;27]" time="0.0004763603210449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f4c2b753a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;28]" time="0.0004985332489013672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f4c2b749898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;29]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f4bef2e8438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;30]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f4bef2e8550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;31]" time="0.0008442401885986328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f4bef2f0438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;32]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f4bef2e89b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;33]" time="0.0005166530609130859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f4c30fb4b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;34]" time="0.0004978179931640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f4c2b753c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;35]" time="0.0004994869232177734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f4bef2c7fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;36]" time="0.0004742145538330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f4c2b75a978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;37]" time="0.0004944801330566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f4bef2e2f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;38]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f4bef2f0240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;39]" time="0.0014312267303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f4bef2f0a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;40]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f4c2b75a0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;41]" time="0.0005033016204833984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f4c30face10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;42]" time="0.0004837512969970703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f4c2b808630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;0]" time="0.00048470497131347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f4bef2d32e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;1]" time="0.0006124973297119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f4bef2e8e80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;2]" time="0.0004780292510986328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f4bef2f0ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;3]" time="0.0005512237548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f4bef2f04a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;4]" time="0.001216888427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f4bef2f50b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;5]" time="0.0005104541778564453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f4c3806c438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;6]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f4c2b75a438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;7]" time="0.0004787445068359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f4bef2f0cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;8]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f4bef2f06d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;9]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f4bef2e83c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;10]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f4bef2e87b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;11]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f4bef2e2240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;12]" time="0.0005707740783691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f4bef2dfe80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;13]" time="0.0009307861328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f4bef2e2f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;14]" time="0.0004935264587402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f4bef2e8be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;15]" time="0.000492095947265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f4bef2f0e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;16]" time="0.0004901885986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f4c2b75a630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;17]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f4c30faccc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;18]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f4c2b753fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;19]" time="0.0004889965057373047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f4bef2df208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;20]" time="0.0004918575286865234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f4c38067d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;21]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f4c30fb44e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;22]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f4bef2dfda0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;23]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f4c2b84e4e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;24]" time="0.00047850608825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f4c2b75aa20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;25]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f4bef2f0898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;26]" time="0.0004901885986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f4bef2e87f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;27]" time="0.00047969818115234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f4bef2d30b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;28]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f4c2b806a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;29]" time="0.0009024143218994141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f4bef2f55c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;30]" time="0.0004913806915283203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f4c2b85d0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;31]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f4bef2f0a90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;32]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f4bef2f0e10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;33]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f4bef2c7588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;34]" time="0.0005002021789550781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f4c2b84eac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;35]" time="0.0004837512969970703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f4bef2df208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;36]" time="0.0006725788116455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f4bef2f5438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;37]" time="0.0010132789611816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f4bef2f5b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;38]" time="0.0005908012390136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f4c2b753fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;39]" time="0.000530242919921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f4c2b75a198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;40]" time="0.0004737377166748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f4bef2f0128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;41]" time="0.0005042552947998047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f4bef2e88d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;42]" time="0.0006937980651855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f4c2b806668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;0]" time="0.001165151596069336"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f4bef2f5c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;1]" time="0.0005939006805419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f4bef2f5198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;2]" time="0.0009233951568603516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f4bef280160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;3]" time="0.0005247592926025391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f4bef2f5128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;4]" time="0.0004887580871582031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f4c30f4e5f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;5]" time="0.0004954338073730469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f4c2b85d4e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;6]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f4bef2f0898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;7]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f4c2b75aa20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;8]" time="0.0004837512969970703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f4c2b753fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;9]" time="0.00046944618225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f4bef280278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;10]" time="0.0008487701416015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f4bef280780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;11]" time="0.0006244182586669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f4c2b84e4e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;12]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f4bef2f0a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;13]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f4bef2e87f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;14]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f4c30f4efd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;15]" time="0.0005221366882324219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f4bef2f5828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;16]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f4c2b7fe9b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;17]" time="0.0004944801330566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f4bef2802b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;18]" time="0.0008413791656494141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f4bef280da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;19]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f4bef2f5d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;20]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f4bef2d3ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;21]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f4bef2e84a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;22]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f4bef2f0a90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;23]" time="0.0004894733428955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f4bef2dfda0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;24]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f4bef280400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;25]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f4bef280518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;26]" time="0.0008807182312011719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f4bef286400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;27]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f4bef280c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;28]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f4c2b84ed68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;29]" time="0.0004930496215820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f4bef2f0a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;30]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f4c2b85db70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;31]" time="0.0005145072937011719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f4bef2f58d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;32]" time="0.00047087669372558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f4c30f51828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;33]" time="0.0004899501800537109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f4bef286208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;34]" time="0.0009655952453613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f4bef286a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;35]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f4bef2f5d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;36]" time="0.0005829334259033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f4bef2e82b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;37]" time="0.0004973411560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f4bef2f0ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;38]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f4bef2dfda0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;39]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f4bef280c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;40]" time="0.0004870891571044922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f4bef286b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;41]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f4bef286470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;42]" time="0.0008053779602050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f4bef28d080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;0]" time="0.0006248950958251953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f4bef286860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;1]" time="0.0005326271057128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f4bef280390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;2]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f4c30f602e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;3]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f4bef2df080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;4]" time="0.000484466552734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f4c2b75ac18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;5]" time="0.0005428791046142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f4bef2f58d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;6]" time="0.0005290508270263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f4bef28d198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;7]" time="0.0008232593536376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f4bef28d6a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;8]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f4bef2f5e80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;9]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f4bef2f06d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;10]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f4c30f60438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;11]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f4bef2808d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;12]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f4bef286748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;13]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f4bef2860f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;14]" time="0.0004820823669433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f4bef28d1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;15]" time="0.0011665821075439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f4bef28dcc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;16]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f4c30f60b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;17]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f4c2b85d8d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;18]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f4bef2860f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;19]" time="0.0004897117614746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f4bef286a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;20]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f4bef280f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;21]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f4bef2f52e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;22]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f4bef2d3d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;23]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f4bef2e2080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;24]" time="0.0008563995361328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f4c2b808978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;25]" time="0.0005395412445068359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f4bef2f5e80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;26]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f4bef280c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;27]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f4bef286898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;28]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f4bef2f0e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;29]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f4c2b84e4e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;30]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f4c30f92a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;31]" time="0.0005085468292236328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f4bef28db70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;32]" time="0.0008146762847900391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f4c30f92d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;33]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f4c30f60438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;34]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f4c30f51780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;35]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f4bef286dd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;36]" time="0.00048613548278808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f4bef280be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;37]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f4bef2d32e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;38]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f4bef28da20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;39]" time="0.0005135536193847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f4bef298208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;40]" time="0.0004870891571044922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f4bef298748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;41]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f4bef28d978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;42]" time="0.0005092620849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f4c30fa2240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;0]" time="0.0005562305450439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f4bef286c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;1]" time="0.000507354736328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f4c2b806f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;2]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f4c30f9afd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;3]" time="0.000492095947265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f4bef298320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;4]" time="0.0004913806915283203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f4bef298ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;5]" time="0.0008985996246337891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f4bef29d048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;6]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f4bef2987f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;7]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f4c30f9aa20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;8]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f4c30f51780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;9]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f4bef286a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;10]" time="0.0004963874816894531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f4bef280be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;11]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f4bef32fe10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;12]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f4bef29d160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;13]" time="0.0008587837219238281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f4bef29d668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;14]" time="0.00048542022705078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f4bef2d3e10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;15]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f4bef280e80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;16]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f4bef2869e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;17]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f4c30f514e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;18]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f4bef298978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;19]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f4bef298a90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;20]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f4bef29d160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;21]" time="0.0008478164672851562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f4bef29dc88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;22]" time="0.0004742145538330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f4c30f9a198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;23]" time="0.0004909038543701172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f4c30f60a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;24]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f4c2b78ec18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;25]" time="0.0004966259002685547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f4bef2f5e80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;26]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f4bef28d160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;27]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f4bef29d128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;28]" time="0.0004799365997314453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f4bef29d438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;29]" time="0.0008771419525146484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f4bef2a42e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;30]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f4bef29d320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;31]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f4bef28d0b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;32]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f4bef2d3860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;33]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f4bef286a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;34]" time="0.0004868507385253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f4c30f89dd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;35]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f4bef298d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;36]" time="0.0005025863647460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f4bef2a40f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;37]" time="0.0008423328399658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f4bef2a4908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;38]" time="0.0004875659942626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f4c30f9a588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;39]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f4bef286a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;40]" time="0.0004930496215820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f4bef2d3860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;41]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f4c2b7972e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;42]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f4bef29ddd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;0]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f4bef2a4518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;1]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f4bef2a4390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;2]" time="0.0008835792541503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f4bef2a4f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;3]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f4bef2a4438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;4]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f4bef29d320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;5]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f4bef28d6a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;6]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f4c2b797a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;7]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f4bef286c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;8]" time="0.0004918575286865234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f4c30f9ae10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;9]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f4bef2ac048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;10]" time="0.0008265972137451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f4bef2ac588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;11]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f4c2b78ecc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;12]" time="0.0004875659942626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f4bef280748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;13]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f4bef28dd30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;14]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f4bef29d2e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;15]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f4bef2a4748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;16]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f4bef2a4d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;17]" time="0.0005080699920654297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f4bef2ac0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;18]" time="0.00119781494140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f4bef2acba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;19]" time="0.00047707557678222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f4bef2a4a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;20]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f4bef29d2e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;21]" time="0.0004818439483642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f4c2b797a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;22]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f4bef286550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;23]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f4c2b79e390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;24]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f4bef2ac898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;25]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f4bef2ac2b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;26]" time="0.0011637210845947266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f4bef2b2208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;27]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f4c2b7972e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;28]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f4c30f3d828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;29]" time="0.0004961490631103516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f4bef2aceb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;30]" time="0.0005147457122802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f4bef2ac278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;31]" time="0.0004949569702148438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f4bef2a4d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;32]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f4bef2a4ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;33]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f4bef29dc50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;34]" time="0.00046944618225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f4bef298470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;35]" time="0.0008254051208496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f4bef298400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;36]" time="0.000514984130859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f4bef2a4940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;37]" time="0.00047087669372558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f4bef2ac2b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;38]" time="0.0004937648773193359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f4bef2ac6a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;39]" time="0.0005311965942382812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f4c30f45b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;40]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f4c30f3dac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;41]" time="0.00047850608825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f4bef2d3860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;42]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f4bef28d7f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;0]" time="0.0005125999450683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f4c30f9a198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;1]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f4c30f60a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;2]" time="0.0005095005035400391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f4c30f45390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;3]" time="0.0004839897155761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f4bef2ac8d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;4]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f4bef2ac048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;5]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f4bef2a4940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;6]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f4bef298e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;7]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f4bef2b20b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;8]" time="0.0010421276092529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f4bef2b28d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;9]" time="0.0005309581756591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f4bef29dfd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;10]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f4c30f4e2e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;11]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f4bef2ac6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;12]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f4c30f3deb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;13]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f4c2b797b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;14]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f4c30f9ab70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;15]" time="0.000492095947265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f4bef2b2080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;16]" time="0.0009562969207763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f4bef2b2e10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;17]" time="0.0005259513854980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f4c2b797a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;18]" time="0.0005166530609130859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f4c30f7a630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;19]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f4bef2acc50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;20]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f4bef2a4978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;21]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f4bef29d6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;22]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f4bef2b22e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;23]" time="0.0005202293395996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f4bef2b2710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;24]" time="0.0008714199066162109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f4bef2bc470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;25]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f4bef2b29e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;26]" time="0.0005166530609130859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f4bef29d400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;27]" time="0.0005726814270019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f4c30f3dfd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;28]" time="0.00046896934509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f4bef2ac8d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;29]" time="0.0006144046783447266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f4c30f7a438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;30]" time="0.0006661415100097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f4bef28d160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;31]" time="0.0005044937133789062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f4bef2bc278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;32]" time="0.000858306884765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f4bef2bca90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;33]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f4bef280198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;34]" time="0.0005359649658203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f4bef2acdd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;35]" time="0.0004930496215820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f4bef2a4780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;36]" time="0.000492095947265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f4bef29dfd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;37]" time="0.0004863739013671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f4bef2b2b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;38]" time="0.0005369186401367188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f4bef2bcc18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;39]" time="0.0004813671112060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f4bef2bc4e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;40]" time="0.0008599758148193359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f4bef2430f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;41]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f4bef2bc940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;42]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f4bef2b2518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;0]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f4c30f89390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;1]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f4c30f4e390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;2]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f4bef2ac320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;3]" time="0.0005011558532714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f4c30f7ad68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;4]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f4bef243208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;5]" time="0.0008521080017089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f4bef243710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;6]" time="0.00047969818115234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f4c30f7a0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;7]" time="0.0005099773406982422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f4bef2ac978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;8]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f4bef2e2240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;9]" time="0.0004901885986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f4bef2b2748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;10]" time="0.0004763603210449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f4bef2bc748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;11]" time="0.0004911422729492188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f4bef2bc5c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;12]" time="0.0004863739013671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f4bef243240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;13]" time="0.0008301734924316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f4bef243d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;14]" time="0.0005199909210205078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f4bef2bcdd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;15]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f4c30f892e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;16]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f4bef2e2278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;17]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f4c30fd0780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;18]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f4c30f7ad68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;19]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f4bef243390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;20]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f4bef2434a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;21]" time="0.0008213520050048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f4bef24a390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;22]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f4bef243978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;23]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f4bef2d3e10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;24]" time="0.0005295276641845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f4c30fd0390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;25]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f4c30f3db70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;26]" time="0.00048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f4bef2b2ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;27]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f4bef2bc320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;28]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f4bef24a198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;29]" time="0.0010704994201660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f4bef24a9b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;30]" time="0.0004951953887939453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f4bef2b2c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;31]" time="0.00048470497131347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f4c30fdf0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;32]" time="0.0006134510040283203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f4bef2a40b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;33]" time="0.0005097389221191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f4c30f7aeb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;34]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f4bef243908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;35]" time="0.0004801750183105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f4bef24aac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;36]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f4bef24a4e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;37]" time="0.0011687278747558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f4bef24afd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;38]" time="0.0005495548248291016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f4c30fd00f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;39]" time="0.0005004405975341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f4bef29d400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;40]" time="0.0005872249603271484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f4bef24a748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;41]" time="0.0004971027374267578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f4bef24a780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;42]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f4bef243ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;0]" time="0.0004825592041015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f4bef243cf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;1]" time="0.0004787445068359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f4bef2bc908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;2]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f4bef2b2908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;3]" time="0.0008521080017089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f4bef2bc6a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;4]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f4bef2430b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;5]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f4bef24a1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;6]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f4bef24ada0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;7]" time="0.00052642822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f4c30fdf630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;8]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f4c2b75a780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;9]" time="0.0005204677581787109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f4bef280198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;10]" time="0.0005347728729248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f4bef2a4630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;11]" time="0.000858306884765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f4bef2a4978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;12]" time="0.0005054473876953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f4c30fd0438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;13]" time="0.0005133152008056641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f4bef2acfd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;14]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f4bef24abe0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;15]" time="0.0005085468292236328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f4bef243860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;16]" time="0.0004978179931640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f4bef2bc320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;17]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f4c38121a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;18]" time="0.0005035400390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f4bef24e518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;19]" time="0.0005083084106445312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f4bef24ea58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;20]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f4bef243908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;21]" time="0.0005083084106445312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f4bef24a5f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;22]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f4bef24ac18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;23]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f4c30f89588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;24]" time="0.00048422813415527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f4c30fd0240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;25]" time="0.0005004405975341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f4bef24e240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;26]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f4bef24edd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;27]" time="0.0009059906005859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f4bef25a358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;28]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f4bef24ec18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;29]" time="0.0005276203155517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f4bef2df080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;30]" time="0.0005137920379638672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f4c30fdf6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;31]" time="0.0005462169647216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f4bef24ae48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;32]" time="0.0005016326904296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f4c3812a438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;33]" time="0.0004913806915283203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f4bef243be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;34]" time="0.0005283355712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f4bef25a1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;35]" time="0.0009000301361083984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f4bef25a978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;36]" time="0.0005335807800292969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f4bef2bcb00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;37]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f4bef2ac9b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;38]" time="0.0005238056182861328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f4c30f4e390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;39]" time="0.0006046295166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f4c30f45fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;40]" time="0.0005009174346923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f4bef24e278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;41]" time="0.0005612373352050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f4bef25aa58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;42]" time="0.0004792213439941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f4bef25a3c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;0]" time="0.00091552734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f4bef25af98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;1]" time="0.0005283355712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f4bef25a5c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;2]" time="0.0005180835723876953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f4bef24eeb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;3]" time="0.0005130767822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f4bef24e080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;4]" time="0.0004856586456298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f4c30fdf6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;5]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f4bef24ab70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;6]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f4bef243908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;7]" time="0.0005016326904296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f4bef2600b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;8]" time="0.0009748935699462891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f4bef2605f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;9]" time="0.0005116462707519531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f4c3812ae10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;10]" time="0.0004897117614746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f4bef24a9b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;11]" time="0.0005078315734863281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f4c30f45630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;12]" time="0.0004916191101074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f4bef24ef60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;13]" time="0.0005421638488769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f4bef25abe0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;14]" time="0.0004930496215820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f4bef25a3c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;15]" time="0.0004799365997314453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f4bef2600f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;16]" time="0.0009613037109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f4bef260c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;17]" time="0.0005152225494384766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f4c2b7a86a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;18]" time="0.00052642822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f4bef24ef60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;19]" time="0.0004832744598388672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f4c30f7aeb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;20]" time="0.0005259513854980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f4bef24abe0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;21]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f4c3812acc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;22]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f4bef260278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;23]" time="0.0004909038543701172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f4bef260390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;24]" time="0.0009441375732421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f4bef265278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;25]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f4bef260160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;26]" time="0.0004830360412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f4bef2bc278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;27]" time="0.0004904270172119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f4c30fdf390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;28]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f4c30f45fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;29]" time="0.0004894733428955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f4c2b7a8f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;30]" time="0.0005016326904296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f4bef25a048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;31]" time="0.0005102157592773438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f4bef265080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;32]" time="0.0008761882781982422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f4bef265898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;33]" time="0.0004944801330566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f4c2b7a8208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;34]" time="0.0005121231079101562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f4bef24eb38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;35]" time="0.0004780292510986328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f4c30fdf6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;36]" time="0.0005550384521484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f4c2b7b0898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;37]" time="0.0005342960357666016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f4bef260828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;38]" time="0.0005402565002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f4bef2609e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;39]" time="0.0005350112915039062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f4bef265518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;40]" time="0.0010259151458740234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f4bef265eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;41]" time="0.0005195140838623047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f4bef265080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;42]" time="0.0005500316619873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f4bef260a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;0]" time="0.0006055831909179688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f4c2b7b0a90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;1]" time="0.0005562305450439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f4bef243b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;2]" time="0.0007004737854003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f4bef24ae48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;3]" time="0.0006899833679199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f4c2b7a8400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;4]" time="0.0005540847778320312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f4bef25ad68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;5]" time="0.0013928413391113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f4bef26c518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;6]" time="0.0005743503570556641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f4c3810a240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;7]" time="0.0005524158477783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f4c2b7b05f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;8]" time="0.0005543231964111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f4bef265940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;9]" time="0.0005352497100830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f4bef265a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;10]" time="0.0004894733428955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f4bef260e10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;11]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f4bef25ad68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;12]" time="0.0005929470062255859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f4bef2bc6a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;13]" time="0.0005064010620117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f4bef24e7f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;14]" time="0.0009303092956542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f4bef24ea90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;15]" time="0.00048804283142089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f4bef25a518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;16]" time="0.0004928112030029297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f4bef2603c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;17]" time="0.0005331039428710938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f4bef265438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;18]" time="0.0004973411560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f4bef2430b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;19]" time="0.0005035400390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f4c30fd0240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;20]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f4c3810a390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;21]" time="0.0005135536193847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f4bef298860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;22]" time="0.0004956722259521484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f4bef2a4978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;23]" time="0.0004894733428955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f4c3810aac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;24]" time="0.0005404949188232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f4c2b7b04a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;25]" time="0.0004930496215820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f4bef265cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;26]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f4bef265a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;27]" time="0.0004887580871582031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f4bef260780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;28]" time="0.0005083084106445312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f4bef24ea90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;29]" time="0.0004875659942626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f4bef26c080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;30]" time="0.0008821487426757812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f4bef26cbe0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;31]" time="0.0005750656127929688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f4bef260780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;32]" time="0.00048804283142089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f4bef2430b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;33]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f4bef265c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;34]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f4c3812afd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;35]" time="0.0005030632019042969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f4c3810a630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;36]" time="0.0006957054138183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f4bef26c710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;37]" time="0.0004909038543701172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f4bef26c2b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;38]" time="0.0008819103240966797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f4bef276160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;39]" time="0.00054931640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f4bef26cf98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;40]" time="0.000507354736328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f4bef26c7b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;41]" time="0.0005002021789550781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f4c2b7a8f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;42]" time="0.0005741119384765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f4bef265f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;0]" time="0.0004737377166748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f4c381178d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;1]" time="0.0004961490631103516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f4bef2609e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;2]" time="0.0005323886871337891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f4bef276278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;3]" time="0.0008983612060546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f4bef276780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;4]" time="0.004255056381225586"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f4bef260c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;5]" time="0.0005767345428466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f4bef265a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;6]" time="0.0005128383636474609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f4c2b7b04a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;7]" time="0.0005333423614501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f4c3810a588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;8]" time="0.0005142688751220703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f4bef26c6a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;9]" time="0.0004787445068359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f4bef298860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;10]" time="0.0004899501800537109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f4bef2762b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;11]" time="0.0010063648223876953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f4bef276da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;12]" time="0.0005049705505371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f4bef26c278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;13]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f4c3810a588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;14]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f4bef265f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;15]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f4c38106fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;16]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f4c31027780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;17]" time="0.00048542022705078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f4bef276400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;18]" time="0.0004930496215820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f4bef276518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;19]" time="0.0009496212005615234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f4bef27c400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;20]" time="0.0004830360412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f4bef276a90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;21]" time="0.0004773139953613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f4c31027240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;22]" time="0.0005102157592773438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f4bef2430f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;23]" time="0.0006530284881591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f4bef265a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;24]" time="0.0004818439483642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f4c3810a828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;25]" time="0.0005900859832763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f4bef26c208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;26]" time="0.0005326271057128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f4bef27c208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;27]" time="0.0009009838104248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f4bef27ca20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;28]" time="0.0004851818084716797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f4c2b79e198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;29]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f4bef265a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;30]" time="0.00047469139099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f4c31022fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;31]" time="0.0004944801330566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f4c31027240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;32]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f4bef2769b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;33]" time="0.0005450248718261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f4bef27cb70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;34]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f4bef27c470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;35]" time="0.0009253025054931641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f4bef201080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;36]" time="0.0005028247833251953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f4bef27c860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;37]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f4bef276940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;38]" time="0.0004889965057373047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f4c310270f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;39]" time="0.0005042552947998047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f4bef2430b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;40]" time="0.000537872314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f4bef24ab70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;41]" time="0.0005221366882324219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f4c31033390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;42]" time="0.00047588348388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f4bef201198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;0]" time="0.0008170604705810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f4bef2016a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;1]" time="0.0005083084106445312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f4c31033390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;2]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f4c2b7b05f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;3]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f4bef25a978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;4]" time="0.0004858970642089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f4bef276518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;5]" time="0.0005357265472412109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f4bef27c7b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;6]" time="0.0005276203155517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f4bef27c550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;7]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f4bef2011d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;8]" time="0.0008347034454345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f4bef201cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;9]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f4bef276908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;10]" time="0.0006046295166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f4c310270f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;11]" time="0.0005359649658203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f4bef25a7b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;12]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f4c30f68cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;13]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f4bef26c208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;14]" time="0.0004737377166748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f4bef201320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;15]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f4bef201438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;16]" time="0.0011501312255859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f4bef208320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;17]" time="0.0005593299865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f4c2b7b04a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;18]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f4c381174e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;19]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f4bef201fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;20]" time="0.0004773139953613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f4bef201b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;21]" time="0.0005178451538085938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f4bef27c710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;22]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f4bef27c3c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;23]" time="0.0004906654357910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f4bef276748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;24]" time="0.00048065185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f4c30fdf630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;25]" time="0.0008704662322998047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f4bef26c978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;26]" time="0.0005066394805908203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f4bef27c3c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;27]" time="0.00046896934509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f4bef201d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;28]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f4bef201400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;29]" time="0.0004782676696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f4c31027198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;30]" time="0.00047707557678222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f4c31033828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;31]" time="0.0005123615264892578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f4c30f6f2e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;32]" time="0.0004875659942626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f4bef24e860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;33]" time="0.0008687973022460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f4bef24e828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;34]" time="0.0004899501800537109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f4c30f6f390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;35]" time="0.0004968643188476562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f4c30f68ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;36]" time="0.000530242919921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f4bef201dd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;37]" time="0.00048732757568359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f4bef201b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;38]" time="0.0005943775177001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f4bef27c3c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;39]" time="0.0005466938018798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f4bef26c588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;40]" time="0.0005092620849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f4bef208828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;41]" time="0.0005207061767578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f4bef208d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;42]" time="0.0005125999450683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f4bef27c7b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;0]" time="0.00048661231994628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f4bef201198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;1]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f4bef2012b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;2]" time="0.0004913806915283203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f4c3810a588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;3]" time="0.0004839897155761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f4bef25af60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;4]" time="0.0004925727844238281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f4bef208550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;5]" time="0.0004775524139404297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f4bef214128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;6]" time="0.0008962154388427734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f4bef214668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;7]" time="0.0004951953887939453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f4bef208518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;8]" time="0.0004901885986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f4c30f6f390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;9]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f4c30f68eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;10]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f4bef2016a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;11]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f4bef276b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;12]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f4c2b84b2e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;13]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f4bef2142e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;14]" time="0.001024484634399414"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f4bef214c88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;15]" time="0.0005195140838623047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f4bef243be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;16]" time="0.0004932880401611328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f4bef2017b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;17]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f4bef265080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;18]" time="0.0005028247833251953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f4c30f6fe10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;19]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f4bef208e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;20]" time="0.0005123615264892578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f4bef2148d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;21]" time="0.0004980564117431641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f4bef2144a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;22]" time="0.0008912086486816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f4bef21c2e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;23]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f4bef214780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;24]" time="0.0004761219024658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f4bef2080b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;25]" time="0.0005457401275634766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f4bef24a860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;26]" time="0.0004916191101074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f4c30fbdac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;27]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f4bef2019b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;28]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f4c30fc48d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;29]" time="0.0005326271057128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f4bef21c0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;30]" time="0.0010116100311279297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f4bef21c908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;31]" time="0.0004937648773193359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f4bef27c780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;32]" time="0.0004956722259521484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f4bef2430f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;33]" time="0.00048542022705078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f4bef24a860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;34]" time="0.0005216598510742188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f4bef208828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;35]" time="0.00047850608825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f4bef214320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;36]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f4bef21c518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;37]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f4bef21c390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;38]" time="0.0008516311645507812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f4bef21cf28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;39]" time="0.00047516822814941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f4bef21c4a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;40]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f4bef214278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;41]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f4bef208e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;42]" time="0.00047707557678222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f4c30f6f390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;0]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f4c30fbdac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;1]" time="0.0004875659942626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f4c2b7a8f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;2]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f4bef221048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;3]" time="0.0011756420135498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f4bef221588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;4]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f4bef27cd30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;5]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f4bef265a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;6]" time="0.0005006790161132812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f4c30f68ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;7]" time="0.00048279762268066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f4bef214eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;8]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f4bef21c7b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;9]" time="0.000499725341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f4bef21cdd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;10]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f4bef2210f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;11]" time="0.0008804798126220703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f4bef221ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;12]" time="0.0004942417144775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f4bef21c7b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;13]" time="0.0005373954772949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f4bef214828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;14]" time="0.0004792213439941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f4bef2b2b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;15]" time="0.0004780292510986328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f4bef201b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;16]" time="0.0005383491516113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f4c30fc42e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;17]" time="0.0004706382751464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f4bef221898&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem0]" time="0.0005822181701660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f4bef2212e8&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem1]" time="0.0012688636779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f4bef228240&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem2]" time="0.0005679130554199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f4bef221438&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem3]" time="0.0005328655242919922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f4c30fc4fd0&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem4]" time="0.0005359649658203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f4c38043240&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem5]" time="0.0005304813385009766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f4c3810ab70&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem6]" time="0.0005428791046142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f4bef214358&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem7]" time="0.0004987716674804688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f4bef21c6d8&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem8]" time="0.0005509853363037109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f4bef228080&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem9]" time="0.0013914108276367188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f4bef228860&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem10]" time="0.0006251335144042969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f4bef201b70&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem11]" time="0.0005807876586914062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f4c23edcd30&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem12]" time="0.0005402565002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f4bef221668&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem13]" time="0.0005252361297607422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f4bef221908&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem14]" time="0.0005438327789306641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f4bef21cc50&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem15]" time="0.0005152225494384766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f4bef21c320&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem0]" time="0.0004897117614746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7f4bef2146a0&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem1]" time="0.0005323886871337891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7f4bef208b38&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem2]" time="0.0009012222290039062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7f4bef214470&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem3]" time="0.0005195140838623047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7f4bef21cbe0&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem4]" time="0.0004878044128417969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7f4bef221748&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem5]" time="0.0005183219909667969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7f4c30fc44e0&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem6]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7f4c38043a20&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem7]" time="0.0005140304565429688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7f4c3810ab70&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem8]" time="0.0004875659942626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7f4bef208908&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem9]" time="0.0005223751068115234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7f4bef26cbe0&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem10]" time="0.0005323886871337891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7f4bef26cd68&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem11]" time="0.0006000995635986328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7f4bef208d30&gt;</skipped></testcase><testcase classname="src.pymortests.basic" file="src/pymortests/basic.py" line="6" name="test_importable" time="0.0005691051483154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/basic.py:6: &lt;py._xmlgen.raw object at 0x7f4c380434e0&gt;</skipped></testcase><testcase classname="src.pymortests.block" file="src/pymortests/block.py" line="13" name="test_apply" time="0.0005803108215332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/block.py:13: &lt;py._xmlgen.raw object at 0x7f4c23edca90&gt;</skipped></testcase><testcase classname="src.pymortests.block" file="src/pymortests/block.py" line="39" name="test_apply_adjoint" time="0.0005342960357666016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/block.py:39: &lt;py._xmlgen.raw object at 0x7f4bef221ef0&gt;</skipped></testcase><testcase classname="src.pymortests.block" file="src/pymortests/block.py" line="65" name="test_block_diagonal" time="0.0005180835723876953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/block.py:65: &lt;py._xmlgen.raw object at 0x7f4bef21cb00&gt;</skipped></testcase><testcase classname="src.pymortests.block" file="src/pymortests/block.py" line="76" name="test_blk_diag_apply_inverse" time="0.0005145072937011719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/block.py:76: &lt;py._xmlgen.raw object at 0x7f4bef214da0&gt;</skipped></testcase><testcase classname="src.pymortests.block" file="src/pymortests/block.py" line="98" name="test_blk_diag_apply_inverse_adjoint" time="0.0004870891571044922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/block.py:98: &lt;py._xmlgen.raw object at 0x7f4bef228a58&gt;</skipped></testcase><testcase classname="src.pymortests.cache.TestCache" file="src/pymortests/cache.py" line="57" name="test_runtime" time="0.0006160736083984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/cache.py:57: &lt;py._xmlgen.raw object at 0x7f4bef2320f0&gt;</skipped></testcase><testcase classname="src.pymortests.cache.TestCache" file="src/pymortests/cache.py" line="83" name="test_region_api" time="0.0005357265472412109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/cache.py:83: &lt;py._xmlgen.raw object at 0x7f4bef21cc50&gt;</skipped></testcase><testcase classname="src.pymortests.complex_values" file="src/pymortests/complex_values.py" line="11" name="test_complex" time="0.0005505084991455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/complex_values.py:11: &lt;py._xmlgen.raw object at 0x7f4bef221748&gt;</skipped></testcase><testcase classname="src.pymortests.complex_values" file="src/pymortests/complex_values.py" line="65" name="test_real_imag" time="0.0005300045013427734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/complex_values.py:65: &lt;py._xmlgen.raw object at 0x7f4bef221048&gt;</skipped></testcase><testcase classname="src.pymortests.complex_values" file="src/pymortests/complex_values.py" line="82" name="test_scal" time="0.0004913806915283203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/complex_values.py:82: &lt;py._xmlgen.raw object at 0x7f4c23ee2da0&gt;</skipped></testcase><testcase classname="src.pymortests.complex_values" file="src/pymortests/complex_values.py" line="95" name="test_axpy" time="0.0004928112030029297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/complex_values.py:95: &lt;py._xmlgen.raw object at 0x7f4c38043240&gt;</skipped></testcase><testcase classname="src.pymortests.complex_values" file="src/pymortests/complex_values.py" line="107" name="test_dot" time="0.000476837158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/complex_values.py:107: &lt;py._xmlgen.raw object at 0x7f4bef208048&gt;</skipped></testcase><testcase classname="src.pymortests.complex_values" file="src/pymortests/complex_values.py" line="114" name="test_pairwise_dot" time="0.0005128383636474609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/complex_values.py:114: &lt;py._xmlgen.raw object at 0x7f4bef2323c8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic:&apos;0 0 0 0&apos;]" time="0.0009851455688476562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f4bef232940&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic:&apos;1 2 0 3&apos;]" time="0.0005178451538085938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f4c38043828&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic:&apos;--rect 1 2 0 3&apos;]" time="0.0005104541778564453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f4c23edcb38&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic:&apos;0 0 2 1&apos;]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f4bef2212b0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic:&apos;--fv 0 0 0 0&apos;]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f4c30fcb198&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic:&apos;--fv 1 2 0 3&apos;]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f4c24008be0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic:&apos;--fv --rect 1 2 0 3&apos;]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f4bef232a58&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic:&apos;--fv 0 0 2 1&apos;]" time="0.0005550384521484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f4bef232240&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic2:&apos;1 20&apos;]" time="0.0009472370147705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f4bef232f60&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic2:&apos;--fv 1 20&apos;]" time="0.0005092620849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f4bef232668&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic_oned:&apos;1 20&apos;]" time="0.0004904270172119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f4bef228080&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic_oned:&apos;--fv 1 20&apos;]" time="0.0005276203155517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f4bef21c320&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[burgers:&apos;--num-flux=lax_friedrichs 0.1&apos;]" time="0.0005064010620117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f4bef221ef0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[burgers:&apos;--num-flux=engquist_osher 0.1&apos;]" time="0.00048232078552246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f4c23edca90&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[burgers:&apos;--num-flux=simplified_engquist_osher 0.1&apos;]" time="0.0004851818084716797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f4c38043588&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[parabolic:&apos;heat 1&apos;]" time="0.0006299018859863281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f4bef23a080&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[parabolic:&apos;heat --rect 1&apos;]" time="0.0009431838989257812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f4bef23a5c0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[parabolic:&apos;heat --fv 1&apos;]" time="0.0004832744598388672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f4bef265080&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[parabolic:&apos;heat --rect --fv 1&apos;]" time="0.00048041343688964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f4bef2215f8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[parabolic:&apos;dar 1&apos;]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f4c168c9be0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[parabolic:&apos;dar --rect 1&apos;]" time="0.00047707557678222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f4bef21cc50&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic_unstructured:&apos;6.0 16 0.1&apos;]" time="0.0004971027374267578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f4bef2327b8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock:&apos;--plot-solutions --plot-err --plot-error-sequence 2 2 3 5&apos;]" time="0.000484466552734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f4bef232ac8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock:&apos;--fenics 2 2 3 5&apos;]" time="0.0006146430969238281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f4bef23a0b8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock:&apos;--greedy-without-estimator 3 1 2 5&apos;]" time="0.0009403228759765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f4bef23abe0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock:&apos;--alg=pod 2 2 3 5&apos;]" time="0.00047969818115234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f4bef228588&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock:&apos;--alg=adaptive_greedy 2 2 10 30&apos;]" time="0.00048065185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f4bef21c4a8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock:&apos;--alg=naive --reductor=traditional 2 2 10 5&apos;]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f4c168c9f28&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock_adaptive:&apos;10&apos;]" time="0.00047969818115234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f4c23edc9e8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock_adaptive:&apos;--visualize-refinement 10&apos;]" time="0.0004875659942626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f4bef24e7b8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock_simple:&apos;pymor naive 2 10 10&apos;]" time="0.0005140304565429688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f4bef23a240&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock_simple:&apos;fenics greedy 2 10 10&apos;]" time="0.000499725341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f4bef23a358&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock_simple:&apos;ngsolve greedy 2 10 10&apos;]" time="0.0008738040924072266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f4bef1c1240&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock_simple:&apos;pymor-text adaptive_greedy -1 3 3&apos;]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f4bef23a128&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock_gui:&apos;--testing 2 2 3 5&apos;]" time="0.0004982948303222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f4bef208438&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[burgers_ei:&apos;1 2 2 5 2 5 --plot-ei-err&apos;]" time="0.0005190372467041016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f4c23edcb38&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[burgers_ei:&apos;1 2 2 5 2 5 --ei-alg=deim&apos;]" time="0.0006151199340820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f4c168c9fd0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[parabolic_mor:&apos;pymor greedy 2 3 1&apos;]" time="0.0005822181701660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f4c30fcb198&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[parabolic_mor:&apos;pymor pod 2 3 1&apos;]" time="0.0005249977111816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f4bef232c18&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[parabolic_mor:&apos;fenics adaptive_greedy 2 3 1&apos;]" time="0.0004837512969970703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f4bef1c1048&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[heat:&apos;&apos;]" time="0.0009233951568603516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f4bef1c1860&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[delay:&apos;&apos;]" time="0.0005488395690917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f4bef228a20&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[string_equation:&apos;&apos;]" time="0.0005340576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f4c16851748&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[hapod:&apos;--snap=3 0.01 10 100&apos;]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f4bef221eb8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[hapod:&apos;--snap=3 --threads=2 0.01 10 100&apos;]" time="0.0004966259002685547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f4c23ee2c50&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[hapod:&apos;--snap=3 --procs=2 0.01 10 100&apos;]" time="0.0005078315734863281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f4bef23a7f0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="171" name="test_analyze_pickle1" time="0.0004863739013671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:171: &lt;py._xmlgen.raw object at 0x7f4bef23aa20&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="181" name="test_analyze_pickle2" time="0.0005066394805908203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:181: &lt;py._xmlgen.raw object at 0x7f4bef1c1048&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="192" name="test_analyze_pickle3" time="0.0010106563568115234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:192: &lt;py._xmlgen.raw object at 0x7f4bef1c1e80&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="203" name="test_analyze_pickle4" time="0.0004897117614746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:203: &lt;py._xmlgen.raw object at 0x7f4bef1c1048&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic:&apos;0 0 0 0&apos;]" time="0.0004932880401611328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f4c30fbdc18&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic:&apos;1 2 0 3&apos;]" time="0.0005192756652832031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f4bef23a8d0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic:&apos;--rect 1 2 0 3&apos;]" time="0.00049591064453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f4c168c24e0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic:&apos;0 0 2 1&apos;]" time="0.0005090236663818359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f4bef2b2c18&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic:&apos;--fv 0 0 0 0&apos;]" time="0.00048232078552246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f4bef21c320&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic:&apos;--fv 1 2 0 3&apos;]" time="0.0004990100860595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f4bef232cc0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic:&apos;--fv --rect 1 2 0 3&apos;]" time="0.0008623600006103516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f4bef1c94e0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic:&apos;--fv 0 0 2 1&apos;]" time="0.0005571842193603516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f4c16851400&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic2:&apos;1 20&apos;]" time="0.0004999637603759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f4bef2219e8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic2:&apos;--fv 1 20&apos;]" time="0.0004742145538330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f4c23edc9e8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic_oned:&apos;1 20&apos;]" time="0.0005135536193847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f4bef23a6d8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic_oned:&apos;--fv 1 20&apos;]" time="0.0004897117614746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f4bef1c15c0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[burgers:&apos;--num-flux=lax_friedrichs 0.1&apos;]" time="0.0004994869232177734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f4bef1c1c18&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[burgers:&apos;--num-flux=engquist_osher 0.1&apos;]" time="0.0004987716674804688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f4bef1c9358&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[burgers:&apos;--num-flux=simplified_engquist_osher 0.1&apos;]" time="0.0013806819915771484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f4bef1c9b00&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[parabolic:&apos;heat 1&apos;]" time="0.0005102157592773438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f4c168c2390&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[parabolic:&apos;heat --rect 1&apos;]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f4c16851c88&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[parabolic:&apos;heat --fv 1&apos;]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f4bef1c19b0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[parabolic:&apos;heat --rect --fv 1&apos;]" time="0.0004870891571044922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f4bef1c1828&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[parabolic:&apos;dar 1&apos;]" time="0.0004899501800537109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f4bef23ae48&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[parabolic:&apos;dar --rect 1&apos;]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f4bef232550&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic_unstructured:&apos;6.0 16 0.1&apos;]" time="0.0005083084106445312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f4c30fdf390&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock:&apos;--plot-solutions --plot-err --plot-error-sequence 2 2 3 5&apos;]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f4bef228908&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock:&apos;--fenics 2 2 3 5&apos;]" time="0.0009360313415527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f4bef228ac8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock:&apos;--greedy-without-estimator 3 1 2 5&apos;]" time="0.0004851818084716797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f4bef232b38&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock:&apos;--alg=pod 2 2 3 5&apos;]" time="0.0004930496215820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f4bef23a8d0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock:&apos;--alg=adaptive_greedy 2 2 10 30&apos;]" time="0.0004985332489013672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f4bef1c1048&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock:&apos;--alg=naive --reductor=traditional 2 2 10 5&apos;]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f4c168b8550&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock_adaptive:&apos;10&apos;]" time="0.0004737377166748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f4bef2219e8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock_adaptive:&apos;--visualize-refinement 10&apos;]" time="0.0004987716674804688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f4c168ae940&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock_simple:&apos;pymor naive 2 10 10&apos;]" time="0.0004925727844238281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f4bef1c96d8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock_simple:&apos;fenics greedy 2 10 10&apos;]" time="0.0005021095275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f4c38117630&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock_simple:&apos;ngsolve greedy 2 10 10&apos;]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f4c240083c8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock_simple:&apos;pymor-text adaptive_greedy -1 3 3&apos;]" time="0.000484466552734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f4c168b87f0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock_gui:&apos;--testing 2 2 3 5&apos;]" time="0.000545501708984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f4bef1c1c88&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[burgers_ei:&apos;1 2 2 5 2 5 --plot-ei-err&apos;]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f4bef23a9b0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[burgers_ei:&apos;1 2 2 5 2 5 --ei-alg=deim&apos;]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f4bef26ce80&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[parabolic_mor:&apos;pymor greedy 2 3 1&apos;]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f4bef1c9ba8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[parabolic_mor:&apos;pymor pod 2 3 1&apos;]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f4bef1c94a8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[parabolic_mor:&apos;fenics adaptive_greedy 2 3 1&apos;]" time="0.0008831024169921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f4bef1d3208&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[heat:&apos;&apos;]" time="0.0005233287811279297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f4bef1c90f0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[delay:&apos;&apos;]" time="0.0005469322204589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f4bef21cda0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[string_equation:&apos;&apos;]" time="0.0005033016204833984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f4bef23aba8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[hapod:&apos;--snap=3 0.01 10 100&apos;]" time="0.0004832744598388672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f4bef1c14e0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[hapod:&apos;--snap=3 --threads=2 0.01 10 100&apos;]" time="0.0005061626434326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f4c168b8f28&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[hapod:&apos;--snap=3 --procs=2 0.01 10 100&apos;]" time="0.00048804283142089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f4c168c2208&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="227" name="test_thermalblock_results[thermalblock:&apos;--plot-solutions --plot-err --plot-error-sequence 2 2 3 5&apos;]" time="0.0005083084106445312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:227: &lt;py._xmlgen.raw object at 0x7f4bef1d32b0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="227" name="test_thermalblock_results[thermalblock:&apos;--fenics 2 2 3 5&apos;]" time="0.0009119510650634766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:227: &lt;py._xmlgen.raw object at 0x7f4bef1d3748&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="227" name="test_thermalblock_results[thermalblock:&apos;--greedy-without-estimator 3 1 2 5&apos;]" time="0.0005164146423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:227: &lt;py._xmlgen.raw object at 0x7f4bef2430f0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="227" name="test_thermalblock_results[thermalblock:&apos;--alg=pod 2 2 3 5&apos;]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:227: &lt;py._xmlgen.raw object at 0x7f4c16851400&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="227" name="test_thermalblock_results[thermalblock:&apos;--alg=adaptive_greedy 2 2 10 30&apos;]" time="0.0005056858062744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:227: &lt;py._xmlgen.raw object at 0x7f4bef1c1a58&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="227" name="test_thermalblock_results[thermalblock:&apos;--alg=naive --reductor=traditional 2 2 10 5&apos;]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:227: &lt;py._xmlgen.raw object at 0x7f4bef2327f0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="240" name="test_burgers_ei_results" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:240: &lt;py._xmlgen.raw object at 0x7f4bef1c9dd8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="249" name="test_parabolic_mor_results" time="0.000484466552734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:249: &lt;py._xmlgen.raw object at 0x7f4bef1c9390&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;0]" time="0.0005521774291992188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f4bef1d33c8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;1]" time="0.0008547306060791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f4bef1d3da0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;2]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f4bef21cda0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;3]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f4bef23af60&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;4]" time="0.0004918575286865234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f4bef1c15c0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;5]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f4c168b8160&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;6]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f4c168c22b0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;7]" time="0.00047850608825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f4bef1d39e8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;8]" time="0.0005023479461669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f4bef1d3588&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;9]" time="0.001203775405883789"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f4bef1d8400&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;10]" time="0.0004754066467285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f4bef1d32e8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;11]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f4c168c22b0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;12]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f4c168580b8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;13]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f4bef2320f0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;14]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f4bef21cda0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;15]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f4bef1c9630&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;16]" time="0.0004782676696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f4bef1d8208&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;17]" time="0.0008904933929443359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f4bef1d8a20&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;18]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f4bef208da0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;19]" time="0.0005428791046142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f4bef2327f0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;20]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f4c168105c0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;21]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f4c16898fd0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;22]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f4bef1d39e8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;23]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f4bef1d8b70&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;0]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f4bef1d8470&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;1]" time="0.0008859634399414062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f4bef1df080&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;2]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f4bef1d80f0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;3]" time="0.0004761219024658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f4bef1d3438&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;4]" time="0.00047898292541503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f4bef1d3ac8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;5]" time="0.0004863739013671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f4c168101d0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;6]" time="0.0005009174346923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f4bef1c1f28&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;7]" time="0.0004904270172119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f4bef21c4a8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;8]" time="0.0004897117614746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f4bef1df198&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;9]" time="0.0009083747863769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f4bef1df6a0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;10]" time="0.0005068778991699219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f4bef23a978&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;11]" time="0.0004734992980957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f4bef1c1f28&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;12]" time="0.0005347728729248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f4c168b8fd0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;13]" time="0.0004987716674804688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f4c168c2780&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;14]" time="0.0005166530609130859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f4bef1d88d0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;15]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f4bef1d8eb8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;16]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f4bef1df1d0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;17]" time="0.0008230209350585938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f4bef1dfcc0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;18]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f4bef1d8d30&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;19]" time="0.00048279762268066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f4bef1d32b0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;20]" time="0.00046515464782714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f4c168b8400&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;21]" time="0.0004825592041015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f4c16898b70&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;0]" time="0.00048041343688964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f4bef23a978&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;1]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f4bef1df320&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;2]" time="0.0005838871002197266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f4bef1df438&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;3]" time="0.0008709430694580078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f4bef1e6320&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;4]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f4bef1dfb70&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;5]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f4bef1df710&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;6]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f4c16898b70&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;7]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f4c31033978&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;8]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f4c168269e8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;9]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f4bef1d80f0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;10]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f4bef1e6128&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;11]" time="0.0011782646179199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f4bef1e6940&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;12]" time="0.0005035400390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f4c16898e80&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;13]" time="0.00048041343688964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f4c1681c550&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;14]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f4bef1df9b0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;15]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f4bef1dfc88&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;16]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f4bef1d8eb8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;17]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f4bef1d3eb8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;18]" time="0.0004787445068359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f4bef1c9128&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;19]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f4bef228518&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;20]" time="0.0008490085601806641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f4c168c97f0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;21]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f4c1683dc50&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;22]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f4bef1d8470&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;23]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f4bef1dfe80&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function0]" time="0.0005412101745605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7f4c1681cd30&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function1]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7f4c168105c0&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function2]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7f4bef228908&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function3]" time="0.00047469139099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7f4bef1e65f8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function4]" time="0.0007789134979248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7f4bef228d68&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function5]" time="0.0004734992980957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7f4c16898e80&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function6]" time="0.00046515464782714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7f4c1681ce80&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function7]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7f4bef1df9b0&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function8]" time="0.00048065185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7f4bef1d8400&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function9]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7f4bef1d3710&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function10]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7f4bef1e69e8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function11]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7f4bef1e6e80&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="35" name="test_lincomb_function" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:35: &lt;py._xmlgen.raw object at 0x7f4bef1f0400&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function0]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7f4bef1e6b00&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function1]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7f4bef1d3b70&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function2]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7f4bef1dfeb8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function3]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7f4bef1dfb70&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function4]" time="0.0005059242248535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7f4c16832cf8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function5]" time="0.000492095947265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7f4c1682d208&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function6]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7f4bef1f0780&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function7]" time="0.0008463859558105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7f4bef1f0cc0&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function8]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7f4c16832cf8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function9]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7f4bef1dfb70&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function10]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7f4bef1d8a90&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function11]" time="0.0005095005035400391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7f4bef1d3780&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="62" name="test_pickle_without_dumps_function[picklable_function0]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:62: &lt;py._xmlgen.raw object at 0x7f4bef1e6b00&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="62" name="test_pickle_without_dumps_function[picklable_function1]" time="0.0004851818084716797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:62: &lt;py._xmlgen.raw object at 0x7f4bef1f0978&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="62" name="test_pickle_without_dumps_function[picklable_function2]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:62: &lt;py._xmlgen.raw object at 0x7f4bef1f05f8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="62" name="test_pickle_without_dumps_function[picklable_function3]" time="0.0009057521820068359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:62: &lt;py._xmlgen.raw object at 0x7f4bef1f4320&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="62" name="test_pickle_without_dumps_function[picklable_function4]" time="0.000476837158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:62: &lt;py._xmlgen.raw object at 0x7f4bef1f09e8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="62" name="test_pickle_without_dumps_function[picklable_function5]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:62: &lt;py._xmlgen.raw object at 0x7f4bef1e6b00&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="62" name="test_pickle_without_dumps_function[picklable_function6]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:62: &lt;py._xmlgen.raw object at 0x7f4c16848ac8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="62" name="test_pickle_without_dumps_function[picklable_function7]" time="0.0004928112030029297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:62: &lt;py._xmlgen.raw object at 0x7f4bef1d8a90&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function0]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7f4bef1df860&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function1]" time="0.0004830360412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7f4c168267f0&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function2]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7f4bef1f4160&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function3]" time="0.0008687973022460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7f4bef1f4940&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function4]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7f4c1681c5f8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function5]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7f4c168ae6a0&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function6]" time="0.00048542022705078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7f4c1683ff98&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function7]" time="0.0005209445953369141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7f4bef1c9be0&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function8]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7f4bef1f0ef0&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function9]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7f4bef1f49e8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function10]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7f4bef1f4400&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function11]" time="0.0008563995361328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7f4bef1f4f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;0]" time="0.0005724430084228516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f4bef1f46a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;1]" time="0.0004918575286865234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f4bef1f0ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;2]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f4bef1e6cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;3]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f4c1683fe48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;4]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f4bef1d3be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;5]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f4c16832b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;6]" time="0.0006215572357177734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f4bef1fb080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;7]" time="0.0013089179992675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f4bef1fb5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;8]" time="0.0004990100860595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f4bef1df1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;9]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f4bef1d8400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;10]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f4bef1c9748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;11]" time="0.00046515464782714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f4bef1f0978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;12]" time="0.0007104873657226562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f4bef1f4d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;13]" time="0.0006508827209472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f4bef1f4390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;14]" time="0.0006353855133056641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f4bef1fb0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;15]" time="0.0010213851928710938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f4bef1fbbe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;16]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f4c163eecf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;17]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f4bef1f0ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;18]" time="0.0005159378051757812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f4c16848080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;19]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f4bef21c4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;20]" time="0.0005693435668945312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f4bef1df710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;21]" time="0.0005462169647216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f4bef1fb8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;22]" time="0.0005154609680175781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f4bef1fb390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;23]" time="0.0008797645568847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f4bef182240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;24]" time="0.0004849433898925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f4bef1fb080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;25]" time="0.0005052089691162109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f4c1681c358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;26]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f4bef1df6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;27]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f4c1683f198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;28]" time="0.0004889965057373047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f4bef1f09e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;29]" time="0.0004901885986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f4bef1f44e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;30]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f4bef182048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;31]" time="0.0008690357208251953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f4bef182860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;32]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f4c163ee7b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;33]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f4bef1e62e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;34]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f4c1683ff98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;35]" time="0.0005023479461669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f4c1681c5f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;36]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f4bef1fb908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;37]" time="0.0004734992980957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f4bef1fbe80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;38]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f4bef182048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;39]" time="0.0012607574462890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f4bef182e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;40]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f4c163f7278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;41]" time="0.0005092620849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f4c163ee518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;42]" time="0.0004911422729492188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f4bef182a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;0]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f4bef182630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;1]" time="0.0004901885986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f4bef1fb780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;2]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f4bef1fb5f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;3]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f4bef1f4978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;4]" time="0.0004734992980957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f4bef1f0438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;5]" time="0.0009102821350097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f4bef1f4438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;6]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f4bef1fbe48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;7]" time="0.0004916191101074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f4bef182860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;8]" time="0.00048160552978515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f4bef182c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;9]" time="0.0004892349243164062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f4c1683fe48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;10]" time="0.0004947185516357422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f4c16832860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;11]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f4bef1f03c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;12]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f4c16826e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;13]" time="0.0004775524139404297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f4c16835320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;14]" time="0.0004963874816894531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f4c163f75c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;15]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f4c1683f6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;16]" time="0.0005013942718505859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f4bef182f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;17]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f4bef1d3be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;18]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f4bef1fbf60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;19]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f4bef1e6b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;20]" time="0.0004992485046386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f4bef18b080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;21]" time="0.0008873939514160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f4bef18b588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;22]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f4bef1fb908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;23]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f4c167c3be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;24]" time="0.00047898292541503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f4bef1820b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;25]" time="0.0004940032958984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f4c1683ff98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;26]" time="0.0004923343658447266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f4c16783828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;27]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f4c167bbdd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;28]" time="0.0005135536193847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f4bef18b128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;29]" time="0.0009245872497558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f4bef18bac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;30]" time="0.0004801750183105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f4c16848ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;31]" time="0.0004830360412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f4c1683ff98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;32]" time="0.0004913806915283203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f4bef1826d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;33]" time="0.0005037784576416016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f4c167c3a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;34]" time="0.0004878044128417969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f4bef1c9828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;35]" time="0.0005090236663818359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f4bef18bb70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;36]" time="0.0004951953887939453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f4bef18b2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;37]" time="0.0008821487426757812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f4bef192128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;38]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f4bef18bc88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;39]" time="0.0004825592041015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f4bef1e6320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;40]" time="0.00048661231994628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f4bef1fb908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;41]" time="0.00048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f4bef182cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;42]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f4bef1d8a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;0]" time="0.0004868507385253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f4c16848ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;1]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef192240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;2]" time="0.000827789306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef192748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;3]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef1d8a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;4]" time="0.0004863739013671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f4c167c3940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;5]" time="0.0004978179931640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef182630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;6]" time="0.0004818439483642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef1e6b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;7]" time="0.0005011558532714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef18b828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;8]" time="0.0005307197570800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef18bfd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;9]" time="0.0005140304565429688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef1922e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;10]" time="0.0011653900146484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef192d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;11]" time="0.0005705356597900391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef18beb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;12]" time="0.0005166530609130859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef1fb978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;13]" time="0.0005342960357666016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef1829e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;14]" time="0.0004773139953613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f4c167831d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;15]" time="0.00048470497131347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f4c1661cfd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;16]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef192a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;17]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef1924e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;18]" time="0.0008859634399414062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef1993c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;19]" time="0.0004706382751464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef192b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;20]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef1f02b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;21]" time="0.00047969818115234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f4c167831d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;22]" time="0.0004990100860595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef1fbf28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;23]" time="0.0006704330444335938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef18bdd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;24]" time="0.0004839897155761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f4c1662f4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;25]" time="0.0005142688751220703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef1991d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;26]" time="0.000926971435546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef1999e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;27]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef1c98d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;28]" time="0.0005056858062744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef1fb978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;29]" time="0.00047087669372558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f4c167c3e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;30]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef1f02b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;31]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef1928d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;32]" time="0.0004820823669433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef1995c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;33]" time="0.0004940032958984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef199550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;34]" time="0.000888824462890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef19f080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;35]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef199780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;36]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef192b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;37]" time="0.0004742145538330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f4c1661cfd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;38]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f4c163eea58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;39]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef1fbfd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;40]" time="0.0005431175231933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f4c1662ff28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;41]" time="0.0005068778991699219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef19f160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;42]" time="0.0008928775787353516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f4bef19f668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;0]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f4bef18b860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;1]" time="0.0004889965057373047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f4bef182cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;2]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f4bef1f02b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;3]" time="0.0005133152008056641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f4bef192f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;4]" time="0.0004787445068359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f4bef199d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;5]" time="0.0005342960357666016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f4bef199be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;6]" time="0.0004994869232177734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f4bef19f208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;7]" time="0.0013813972473144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f4bef19fc88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;8]" time="0.000514984130859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f4c1633bd30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;9]" time="0.0005335807800292969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f4c1662f9e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;10]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f4bef1996d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;11]" time="0.0005171298980712891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f4bef199400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;12]" time="0.0005037784576416016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f4bef192828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;13]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f4bef18b978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;14]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f4bef1e6b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;15]" time="0.000499725341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f4bef1f4358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;16]" time="0.0009770393371582031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f4bef1e6b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;17]" time="0.0005300045013427734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f4c162c52b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;18]" time="0.0004930496215820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f4bef192940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;19]" time="0.0004856586456298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f4bef199400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;20]" time="0.00048160552978515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f4bef182cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;21]" time="0.0004754066467285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f4c167c3e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;22]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f4c166465f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;23]" time="0.00048065185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f4bef19fb38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;24]" time="0.0008389949798583984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f4c1633bf28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;25]" time="0.0004820823669433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f4c1662f940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;26]" time="0.0008251667022705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f4bef199208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;27]" time="0.0005404949188232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f4bef192940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;28]" time="0.0005311965942382812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f4c162c54a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;29]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f4bef1e6f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;30]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f4bef19f9e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;31]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f4bef1a81d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;32]" time="0.0005137920379638672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f4bef1a8710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;33]" time="0.00046515464782714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f4bef19f908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;34]" time="0.0004930496215820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f4c162c5e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;35]" time="0.00047469139099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f4bef192240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;36]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f4bef1998d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;37]" time="0.00048470497131347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f4c167830f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;38]" time="0.00047087669372558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f4bef1a8358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;39]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f4bef1a8a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;40]" time="0.0008473396301269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f4bef1ae048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;41]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f4bef1a87b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;42]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f4c1633bd30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;0]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f4c1661c358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;1]" time="0.0004901885986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f4bef192fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;2]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f4c162c5b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;3]" time="0.0004906654357910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f4bef19ff28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;4]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f4bef1ae128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;5]" time="0.0009427070617675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f4bef1ae630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;6]" time="0.0005221366882324219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f4bef18b588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;7]" time="0.0005776882171630859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f4bef192d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;8]" time="0.0004856586456298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f4bef199dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;9]" time="0.0005071163177490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f4c1661cf60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;10]" time="0.0005447864532470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f4bef1a82e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;11]" time="0.000476837158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f4bef1a8b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;12]" time="0.0005648136138916016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f4bef1ae160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;13]" time="0.0009081363677978516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f4bef1aec50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;14]" time="0.0005178451538085938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f4bef1a8cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;15]" time="0.00048732757568359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f4bef1826d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;16]" time="0.0005013942718505859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f4c16368d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;17]" time="0.0004944801330566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f4bef192fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;18]" time="0.0004918575286865234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f4bef19fd68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;19]" time="0.0005118846893310547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f4bef1ae940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;20]" time="0.0006265640258789062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f4bef1ae400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;21]" time="0.000934600830078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f4bef1b62b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;22]" time="0.0004944801330566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f4bef1ae6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;23]" time="0.0004913806915283203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f4bef19fd68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;24]" time="0.00048613548278808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f4c162c5dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;25]" time="0.0005080699920654297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f4c16368eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;26]" time="0.0004897117614746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f4c1661cbe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;27]" time="0.0005688667297363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f4bef1a88d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;28]" time="0.0004851818084716797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f4bef1b60b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;29]" time="0.0008907318115234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f4bef1b68d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;30]" time="0.0004990100860595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f4bef1a8940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;31]" time="0.0005085468292236328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f4c16370828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;32]" time="0.0004868507385253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f4c16368d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;33]" time="0.0004975795745849609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f4bef192f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;34]" time="0.0005085468292236328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f4bef1aeda0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;35]" time="0.0005517005920410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f4bef1b65c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;36]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f4bef1b6128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;37]" time="0.0009059906005859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f4bef1b6ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;38]" time="0.00048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f4bef1b6a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;39]" time="0.0005097389221191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f4bef1aeb38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;40]" time="0.0005300045013427734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f4bef19fe10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;41]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f4c162c5fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;42]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f4bef199748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;0]" time="0.0005052089691162109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f4c16370a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;1]" time="0.0004863739013671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f4bef1bb048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;2]" time="0.0011246204376220703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f4bef1bb550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;3]" time="0.0005102157592773438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f4c16370a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;4]" time="0.0004949569702148438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f4c162cb358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;5]" time="0.0007176399230957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f4bef192f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;6]" time="0.0006375312805175781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f4bef1ae748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;7]" time="0.0006821155548095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f4bef1b6978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;8]" time="0.0005171298980712891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f4bef1b6ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;9]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f4bef1bb438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;10]" time="0.0008857250213623047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f4bef1bbb70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;11]" time="0.0005030632019042969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f4bef1b6978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;12]" time="0.0005004405975341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f4bef1ae748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;13]" time="0.0004951953887939453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f4bef18b860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;14]" time="0.0004680156707763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f4c16370438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;15]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f4c162812b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;16]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f4bef1bb048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;17]" time="0.0005249977111816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f4bef1bb278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;18]" time="0.0011265277862548828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f4bef1421d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;19]" time="0.0004985332489013672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f4c16370a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;20]" time="0.00046944618225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f4c1661cf60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;21]" time="0.0005218982696533203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f4bef1bbf60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;22]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f4bef1bb9e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;23]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f4bef1b6a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;24]" time="0.0005249977111816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f4bef1b6320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;25]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f4bef1aecc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;26]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f4bef1a8438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;27]" time="0.0008254051208496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f4bef1a8e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;28]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f4bef1b6f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;29]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f4bef1b6128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;30]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f4bef1bbbe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;31]" time="0.0006589889526367188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f4bef1bbfd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;32]" time="0.0006086826324462891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f4bef192f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;33]" time="0.0006315708160400391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f4c16281940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;34]" time="0.0005161762237548828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f4bef19f748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;35]" time="0.0005459785461425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f4bef19f828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;36]" time="0.0005130767822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f4c16370828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;37]" time="0.00048661231994628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f4c16378198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;38]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f4bef1bb198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;39]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f4c162890b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;40]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f4bef1b6b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;41]" time="0.0005116462707519531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f4bef1a85c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;42]" time="0.0005164146423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f4bef142080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;0]" time="0.0009937286376953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f4bef142898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;1]" time="0.0030908584594726562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f4bef1aee48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;2]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f4bef1b6fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;3]" time="0.0004942417144775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f4bef1bb128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;4]" time="0.0004937648773193359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f4bef1bb908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;5]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f4c16281748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;6]" time="0.0004906654357910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f4bef19ff28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;7]" time="0.0004894733428955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f4bef142550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;8]" time="0.0008788108825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f4bef142dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;9]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f4c162c5d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;10]" time="0.0005359649658203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f4bef1bb630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;11]" time="0.0004978179931640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f4c16289a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;12]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f4bef1e61d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;13]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f4bef1aecc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;14]" time="0.00048041343688964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f4bef142ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;15]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f4bef1426d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;16]" time="0.0009024143218994141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f4bef14d438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;17]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f4bef142b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;18]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f4bef1ae630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;19]" time="0.0006976127624511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f4bef1b6128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;20]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f4c1629a3c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;21]" time="0.00048732757568359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f4bef1bb438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;22]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f4c16281898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;23]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f4bef14d240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;24]" time="0.0008294582366943359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f4bef14da58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;25]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f4bef1bb780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;26]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f4c1629a1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;27]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f4bef1f4358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;28]" time="0.0005350112915039062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f4bef1a8be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;29]" time="0.0005011558532714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f4bef142ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;30]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f4bef14db00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;31]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f4bef14d5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;32]" time="0.0008490085601806641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f4bef1520b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;33]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f4bef14d908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;34]" time="0.00047516822814941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f4bef1424e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;35]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f4c16290ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;36]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f4bef1f49e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;37]" time="0.0005445480346679688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f4c1629acf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;38]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f4bef1bb780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;39]" time="0.00048661231994628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f4bef1521d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;40]" time="0.0008578300476074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f4bef1526d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;41]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f4bef1bb550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;42]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f4c162899e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;0]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f4bef1a8be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;1]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f4bef1424a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;2]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f4bef14db00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;3]" time="0.0004782676696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f4bef14d080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;4]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f4bef152278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;5]" time="0.0008783340454101562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f4bef152cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;6]" time="0.00048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f4bef14def0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;7]" time="0.0005142688751220703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f4bef142ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;8]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f4bef1ae6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;9]" time="0.0004887580871582031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f4c1629a668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;10]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f4bef1bb780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;11]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f4bef1529e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;12]" time="0.0005002021789550781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f4bef152470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;13]" time="0.0013022422790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f4bef159358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;14]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f4bef152860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;15]" time="0.0005354881286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f4bef1e61d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;16]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f4c1629aa58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;17]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f4bef1a8be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;18]" time="0.00047969818115234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f4bef1425c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;19]" time="0.0004773139953613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f4bef14db38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;20]" time="0.0004849433898925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f4bef159160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;21]" time="0.0009052753448486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f4bef159978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;22]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f4c166b7e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;23]" time="0.0004820823669433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f4c16290cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;24]" time="0.0005342960357666016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f4c166bf5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;25]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f4c16281358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;26]" time="0.0005130767822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f4bef1527f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;27]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f4bef159a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;28]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f4bef1594a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;29]" time="0.0011610984802246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f4bef159fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;30]" time="0.0005400180816650391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f4c166bf1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;31]" time="0.0005352497100830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f4bef1f4358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;32]" time="0.0005176067352294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f4bef159d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;33]" time="0.0004849433898925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f4bef159160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;34]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f4bef152b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;35]" time="0.0005512237548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f4bef152cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;36]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f4bef14da90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;37]" time="0.0005702972412109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f4c16783908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;38]" time="0.0009188652038574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f4bef1428d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;39]" time="0.0006601810455322266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f4bef152cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;40]" time="0.0005059242248535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f4c162a3470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;41]" time="0.0005462169647216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f4bef159a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;42]" time="0.0005002021789550781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f4bef159c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;0]" time="0.0004951953887939453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f4c16289550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;1]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f4c1629aa58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;2]" time="0.00048661231994628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f4bef1d37b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;3]" time="0.0008037090301513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f4bef1d3b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;4]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f4c166bf668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;5]" time="0.0004849433898925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f4c162bbd30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;6]" time="0.0004894733428955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f4bef159e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;7]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f4c166c8128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;8]" time="0.0004897117614746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f4bef1520f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;9]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f4bef1428d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;10]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f4bef1604e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;11]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f4bef160a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;12]" time="0.0005040168762207031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f4bef1526d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;13]" time="0.0004737377166748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f4bef1596d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;14]" time="0.0004947185516357422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f4bef1595f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;15]" time="0.0004887580871582031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f4bef1f42e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;16]" time="0.00047898292541503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f4c166bf320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;17]" time="0.0005300045013427734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f4bef160208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;18]" time="0.0004742145538330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f4bef160da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;19]" time="0.0008795261383056641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f4bef168320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;20]" time="0.0006003379821777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f4bef160c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;21]" time="0.0005323886871337891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f4c1629aba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;22]" time="0.0006299018859863281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f4c162bbe80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;23]" time="0.0004935264587402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f4bef159d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;24]" time="0.0004742145538330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f4bef152b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;25]" time="0.0005333423614501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f4c162a3278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;26]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f4bef168198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;27]" time="0.0008392333984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f4bef168940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;28]" time="0.0006062984466552734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f4c162445f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;29]" time="0.0004813671112060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f4bef159780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;30]" time="0.0005822181701660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f4c166b7c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;31]" time="0.0005037784576416016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f4bef19f748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;32]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f4bef160518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;33]" time="0.0005745887756347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f4bef168a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;34]" time="0.0005817413330078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f4bef168470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;35]" time="0.0008730888366699219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f4bef168f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;36]" time="0.0005269050598144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f4bef168710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;37]" time="0.0004987716674804688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f4c1629afd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;38]" time="0.0004937648773193359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f4bef160278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;39]" time="0.0004975795745849609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f4c166bfda0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;40]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f4bef159a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;41]" time="0.000576019287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f4c162445f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;42]" time="0.0005855560302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f4bef16f080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;0]" time="0.0010235309600830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f4bef16f5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;1]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f4c162445f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;2]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f4bef1596d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;3]" time="0.0005354881286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f4c162bbbe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;4]" time="0.0005943775177001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f4bef160518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;5]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f4bef168a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;6]" time="0.0006277561187744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f4bef168b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;7]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f4bef16f160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;8]" time="0.0010564327239990234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f4bef16fbe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;9]" time="0.00047516822814941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f4bef1686d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;10]" time="0.0005266666412353516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f4bef160ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;11]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f4bef1b6a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;12]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f4c1670eda0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;13]" time="0.0004971027374267578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f4c16244a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;14]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f4bef16f8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;15]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f4bef16f358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;16]" time="0.0008475780487060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f4bef175240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;17]" time="0.0004706382751464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f4bef16f9e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;18]" time="0.0006430149078369141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f4bef16fd68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;19]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f4c1670e860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;20]" time="0.0004956722259521484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f4c166c83c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;21]" time="0.0004818439483642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f4bef160358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;22]" time="0.0004813671112060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f4bef1687f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;23]" time="0.0005371570587158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f4bef175048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;24]" time="0.0008940696716308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f4bef175860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;25]" time="0.00048041343688964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f4bef160fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;26]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f4c1629a3c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;27]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f4c16244898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;28]" time="0.0006163120269775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f4bef16f9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;29]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f4bef16fe80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;30]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f4bef14de48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;31]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f4bef175048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;32]" time="0.0008525848388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f4bef175e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;33]" time="0.0004951953887939453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f4bef175358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;34]" time="0.0004928112030029297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f4c167a8320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;35]" time="0.0004763603210449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f4bef16f8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;36]" time="0.0004799365997314453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f4bef152dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;37]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f4c16244898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;38]" time="0.0004839897155761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f4bef160518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;39]" time="0.0005209445953369141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f4c1624b4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;40]" time="0.0011637210845947266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f4bef17d4e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;41]" time="0.00047588348388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f4c1670e908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;42]" time="0.0005283355712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f4c167a87f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;0]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f4bef1754e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;1]" time="0.0004978179931640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f4bef175898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;2]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f4bef16f7b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;3]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f4bef168d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;4]" time="0.0004947185516357422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f4bef152dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;5]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f4bef1607b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;6]" time="0.0009379386901855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f4bef14db38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;7]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f4c1624b5f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;8]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f4bef16ff60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;9]" time="0.0005292892456054688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f4bef175ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;10]" time="0.0005230903625488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f4bef175b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;11]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f4c167a8a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;12]" time="0.0005028247833251953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f4bef159358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;13]" time="0.0005092620849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f4bef1a8940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;14]" time="0.0005223751068115234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f4c166bfda0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;15]" time="0.0005161762237548828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f4bef19f438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;16]" time="0.00046896934509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f4c1633fe80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;17]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f4bef175668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;18]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f4bef16fe10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;19]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f4c1624b4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;20]" time="0.0005016326904296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f4bef14d128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;21]" time="0.0005009174346923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f4bef17d0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;22]" time="0.0009055137634277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f4bef17dba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;23]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f4bef16f6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;24]" time="0.00047969818115234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f4bef175c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;25]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f4c16347358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;26]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f4c166c8278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;27]" time="0.0004856586456298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f4c1670ecf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;28]" time="0.0004913806915283203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f4bef17d898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;29]" time="0.0005178451538085938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f4bef17d278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;30]" time="0.0008897781372070312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f4bef106128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;31]" time="0.00051116943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f4bef17dcc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;32]" time="0.0004775524139404297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f4bef17d160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;33]" time="0.0005033016204833984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f4c167a8d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;34]" time="0.0005397796630859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f4c16347a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;35]" time="0.000492095947265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f4bef175978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;36]" time="0.0005033016204833984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f4bef16f6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;37]" time="0.0004963874816894531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f4bef106240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;38]" time="0.0009267330169677734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f4bef106748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;39]" time="0.0004863739013671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f4bef16f160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;40]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f4c163476a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;41]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f4c1633fbe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;42]" time="0.0005712509155273438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f4c167a85c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;0]" time="0.0005247592926025391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f4bef17d6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;1]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f4c166bf1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;2]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f4bef1062e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;3]" time="0.0009431838989257812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f4bef106d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;4]" time="0.0004868507385253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f4bef17d2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;5]" time="0.0005044937133789062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f4c162817f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;6]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f4c1634f160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;7]" time="0.0004990100860595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f4bef175eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;8]" time="0.0005235671997070312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f4bef168fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;9]" time="0.0004894733428955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f4bef106a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;10]" time="0.0004935264587402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f4bef1064e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;11]" time="0.0008726119995117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f4bef10a3c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;12]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f4bef106c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;13]" time="0.0006272792816162109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f4bef16fdd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;14]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f4c16219320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;15]" time="0.0005011558532714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f4bef19f828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;16]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f4c167a8d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;17]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f4bef17d1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;18]" time="0.0004961490631103516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f4bef10a1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;19]" time="0.0008656978607177734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f4bef10a9e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;20]" time="0.0005407333374023438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f4c16210f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;21]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f4c163477f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;22]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f4bef175eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;23]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f4bef168f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;24]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f4bef106c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;25]" time="0.0004818439483642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f4bef10a5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;26]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f4bef10a550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;27]" time="0.0008571147918701172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f4bef112080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;28]" time="0.0005536079406738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f4bef10a828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;29]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f4bef1062b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;30]" time="0.0004787445068359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f4bef1684e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;31]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f4c16219128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;32]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f4c16347748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;33]" time="0.0004875659942626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f4c16210da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;34]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f4bef112160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;35]" time="0.0010254383087158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f4bef112668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;36]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f4bef1a8b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;37]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f4c163477f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;38]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f4bef168f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;39]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f4bef1062e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;40]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f4bef10a8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;41]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f4bef10a0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;42]" time="0.0004856586456298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f4bef112208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;0]" time="0.0008704662322998047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f4bef112c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;1]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f4bef10aa90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;2]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f4bef1067f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;3]" time="0.0004889965057373047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f4c16219278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;4]" time="0.0005006790161132812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f4bef1755c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;5]" time="0.0005228519439697266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f4bef17d9e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;6]" time="0.0005090236663818359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f4bef112978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;7]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f4bef112400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;8]" time="0.0015349388122558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f4bef11b2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;9]" time="0.0005450248718261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f4c16219128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;10]" time="0.0005657672882080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f4c16256668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;11]" time="0.0005242824554443359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f4bef112240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;12]" time="0.0005524158477783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f4bef112da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;13]" time="0.0004956722259521484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f4bef10a8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;14]" time="0.0004975795745849609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f4c166bf3c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;15]" time="0.0005326271057128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f4bef1067b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;16]" time="0.0005252361297607422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f4bef175ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;17]" time="0.0008707046508789062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f4bef17de48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;18]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f4bef1684e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;19]" time="0.000522613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f4bef10ac18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;20]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f4bef112a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;21]" time="0.0005249977111816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f4bef16fe80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;22]" time="0.00047516822814941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f4c16256a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;23]" time="0.0005090236663818359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f4c16219cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;24]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f4bef1607b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;25]" time="0.0008432865142822266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f4bef1607b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;26]" time="0.0004825592041015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f4c16219cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;27]" time="0.0004982948303222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f4c16222710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;28]" time="0.0004916191101074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f4bef1121d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;29]" time="0.0005021095275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f4bef1122b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;30]" time="0.0004999637603759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f4bef10aa20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;31]" time="0.00047397613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f4bef17d2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;32]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f4bef11b7f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;33]" time="0.0005009174346923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f4bef11bd30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;34]" time="0.00047469139099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f4bef10a5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;35]" time="0.0004985332489013672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f4bef1127f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;36]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f4c1625e7b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;37]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f4c162227b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;38]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f4c16210f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;39]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f4bef11b518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;40]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f4bef1230f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;41]" time="0.0008153915405273438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f4bef123630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;42]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f4bef11b588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;0]" time="0.0004742145538330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f4bef1424e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;1]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f4c1625e278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;2]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f4bef112b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;3]" time="0.0004937648773193359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f4bef1062e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;4]" time="0.0004773139953613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f4bef17dbe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;5]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f4bef1230f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;6]" time="0.0008945465087890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f4bef123c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;7]" time="0.00048661231994628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f4bef1120b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;8]" time="0.00047969818115234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f4c162227b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;9]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f4c163d3fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;10]" time="0.0005290508270263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f4c1633f748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;11]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f4bef11be80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;12]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f4bef1236d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;13]" time="0.00047397613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f4bef123470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;14]" time="0.0010848045349121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f4bef12a2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;15]" time="0.0004892349243164062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f4bef1237f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;16]" time="0.0004901885986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f4bef11b5f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;17]" time="0.0005147457122802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f4c162569b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;18]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f4c1625e3c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;19]" time="0.0005137920379638672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f4c163dd358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;20]" time="0.0004999637603759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f4bef1064e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;21]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f4bef12a0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;22]" time="0.0009047985076904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f4bef12a8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;23]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f4bef1127f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;24]" time="0.0005140304565429688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f4c163dd748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;25]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f4c1625e1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;26]" time="0.0004930496215820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f4bef11b588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;27]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f4bef123278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;28]" time="0.0005397796630859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f4bef12a5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;29]" time="0.0005097389221191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f4bef12a128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;30]" time="0.0008676052093505859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f4bef12aef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;31]" time="0.0005216598510742188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f4bef12aa90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;32]" time="0.0005018711090087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f4bef123e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;33]" time="0.0005140304565429688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f4bef123358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;34]" time="0.0004942417144775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f4c16256518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;35]" time="0.0005714893341064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f4c162227b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;36]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f4bef1064e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;37]" time="0.0005571842193603516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f4bef132048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;38]" time="0.0008604526519775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f4bef132550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;39]" time="0.0004780292510986328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f4c163ddf28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;40]" time="0.0004968643188476562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f4c1625ec50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;41]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f4bef11bf28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;42]" time="0.0005228519439697266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f4bef123f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;0]" time="0.00048232078552246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f4bef12a6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;1]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f4bef12add8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;2]" time="0.00048542022705078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f4bef132438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;3]" time="0.0009152889251708984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f4bef132b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;4]" time="0.0005176067352294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f4bef12aa90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;5]" time="0.0004889965057373047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f4bef123828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;6]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f4bef11bf28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;7]" time="0.00047969818115234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f4c1625ec50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;8]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f4c163dd9e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;9]" time="0.0005304813385009766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f4bef132048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;10]" time="0.0004987716674804688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f4bef132278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;11]" time="0.0008704662322998047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f4bef1371d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;12]" time="0.00048422813415527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f4bef132748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;13]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f4c163ddf28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;14]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f4c1625ec50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;15]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f4c16256fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;16]" time="0.0004856586456298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f4bef12acc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;17]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f4c1666d898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;18]" time="0.000492095947265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f4bef137278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;19]" time="0.0012133121490478516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f4bef1377f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;20]" time="0.0005195140838623047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f4bef1122b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;21]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f4c163e5550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;22]" time="0.00052642822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f4bef132198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;23]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f4bef132d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;24]" time="0.0004851818084716797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f4bef12aa58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;25]" time="0.0006201267242431641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f4bef123e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;26]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f4c1633fdd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;27]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f4bef11bb70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;28]" time="0.0008392333984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f4bef123748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;29]" time="0.0006251335144042969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f4bef12aa20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;30]" time="0.0006029605865478516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f4bef1322e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;31]" time="0.0005667209625244141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f4bef1328d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;32]" time="0.0005655288696289062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f4c163ddc88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;33]" time="0.0007078647613525391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f4c1666d358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;34]" time="0.0004849433898925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f4bef11b898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;35]" time="0.0005066394805908203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f4bef17dba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;36]" time="0.0005750656127929688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f4bef17dba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;37]" time="0.00047087669372558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f4bef11b080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;38]" time="0.0004913806915283203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f4c1666d358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;39]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f4bef132cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;40]" time="0.0005884170532226562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f4bef132c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;41]" time="0.0004680156707763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f4c16684fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;42]" time="0.0005049705505371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f4bef123b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;0]" time="0.0005867481231689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f4bef1371d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;1]" time="0.0011036396026611328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f4bef137eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;2]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f4c16684fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;3]" time="0.00048279762268066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f4bef132c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;4]" time="0.0005381107330322266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f4c1625e128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;5]" time="0.0005190372467041016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f4bef1126a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;6]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f4bef11b898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;7]" time="0.0005109310150146484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f4bef137ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;8]" time="0.0004987716674804688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f4bef1376d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;9]" time="0.0008988380432128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f4bef0c1438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;10]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f4bef137400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;11]" time="0.0004906654357910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f4bef11b940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;12]" time="0.0004928112030029297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f4c162227b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;13]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f4bef1327b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;14]" time="0.0004787445068359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f4c16684c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;15]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f4c163fcf28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;16]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f4bef0c1278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;17]" time="0.0008890628814697266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f4bef0c1a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;18]" time="0.0004923343658447266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f4c16684c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;19]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f4bef132048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;20]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f4c163e55f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;21]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f4c163845f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;22]" time="0.0005617141723632812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f4bef137c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;23]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f4bef0c1b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;24]" time="0.0004909038543701172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f4bef0c15c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;25]" time="0.0008728504180908203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f4bef0c80b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;26]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f4bef0c1160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;27]" time="0.00048732757568359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f4bef137390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;28]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f4c16384d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;29]" time="0.0004863739013671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f4bef11b940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;30]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f4c1625e128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;31]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f4bef123748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;32]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f4bef0c81d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;33]" time="0.0008213520050048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f4bef0c86d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;34]" time="0.0004818439483642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f4bef132128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;35]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f4bef1126a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;36]" time="0.0004763603210449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f4c16384208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;37]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f4bef137cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;38]" time="0.0004858970642089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f4bef0c1b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;39]" time="0.00047969818115234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f4bef0c1c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;40]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f4bef0c8278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;41]" time="0.0008757114410400391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f4bef0c8cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;42]" time="0.00047898292541503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f4bef0c12b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;0]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f4c162227b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;1]" time="0.0004763603210449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f4c163842b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;2]" time="0.0004940032958984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f4bef132780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;3]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f4c1638e5f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;4]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f4bef0c89e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;5]" time="0.0004999637603759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f4bef0c8470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;6]" time="0.0009262561798095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f4bef0cf358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;7]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f4bef0c87b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;8]" time="0.0005352497100830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f4bef12aa20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;9]" time="0.0004973411560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f4bef132c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;10]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f4c163844a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;11]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f4bef137588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;12]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f4bef0c1908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;13]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f4bef0cf160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;14]" time="0.0008444786071777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f4bef0cf978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;15]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f4bef1371d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;16]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f4c1632c780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;17]" time="0.0005192756652832031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f4bef123748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;18]" time="0.0004954338073730469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f4bef12a908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;19]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f4bef0c89e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;20]" time="0.0004963874816894531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f4bef0cfa90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;21]" time="0.0004849433898925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f4bef0cf4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;22]" time="0.0008683204650878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f4bef0cffd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;23]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f4bef0cf748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;24]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f4bef0c8b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;25]" time="0.0005466938018798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f4c1638e5f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;26]" time="0.0005025863647460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f4c1625ec50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;27]" time="0.0005009174346923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f4c1632cf60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;28]" time="0.0004994869232177734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f4bef1371d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;29]" time="0.0004837512969970703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f4bef0d40f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;30]" time="0.0012934207916259766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f4bef0d45f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;31]" time="0.00048732757568359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f4c163849e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;32]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f4bef132438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;33]" time="0.0004913806915283203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f4bef0cfa90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;34]" time="0.0004811286926269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f4bef0cf048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;35]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f4bef0c8f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;36]" time="0.0004906654357910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f4bef0c80f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;37]" time="0.0004737377166748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f4bef0c1a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;38]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f4bef1374e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;39]" time="0.0009109973907470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f4bef1378d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;40]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f4bef0c87b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;41]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f4bef0c89e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;42]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f4bef0cf860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;0]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f4bef0cfd30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;1]" time="0.0004999637603759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f4bef132c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;2]" time="0.0004985332489013672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f4c1632ccc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;3]" time="0.0004863739013671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f4bef0d42e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;4]" time="0.0008366107940673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f4bef123978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;5]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f4c163849e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;6]" time="0.0004930496215820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f4bef0cf3c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;7]" time="0.0005414485931396484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f4bef0cf860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;8]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f4bef0c89e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;9]" time="0.0004937648773193359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f4bef0c1ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;10]" time="0.0004911422729492188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f4bef0d4240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;11]" time="0.00048041343688964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f4bef0d4b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;12]" time="0.0004935264587402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f4bef0dc080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;13]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f4bef137cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;14]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f4bef0c84a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;15]" time="0.0004830360412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f4c16333240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;16]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f4bef0cfcf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;17]" time="0.00048232078552246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f4c16384b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;18]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f4c162d53c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;19]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f4bef0dc400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;20]" time="0.0009355545043945312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f4bef0dc940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;21]" time="0.0004980564117431641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f4c1632c978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;22]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f4bef112b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;23]" time="0.0004968643188476562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f4c16333198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;24]" time="0.00048613548278808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f4bef0c8dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;25]" time="0.0005064010620117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f4bef0d4b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;26]" time="0.0005254745483398438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f4bef0dc518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;27]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f4bef0dc278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;28]" time="0.00136566162109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f4bef0dcf60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;29]" time="0.0004963874816894531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f4bef0dc7f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;30]" time="0.0006425380706787109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f4bef0d4198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;31]" time="0.000644683837890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f4c16684828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;32]" time="0.0006039142608642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f4c163334e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;33]" time="0.0004801750183105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f4bef0cf828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;34]" time="0.000476837158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f4c162d5da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;35]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f4bef0e7080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;36]" time="0.0009710788726806641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f4bef0e75c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;37]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f4c1638e550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;38]" time="0.0005257129669189453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f4c16333438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;39]" time="0.000499725341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f4c16684828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;40]" time="0.0005180835723876953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f4bef0c1ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;41]" time="0.0005006790161132812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f4bef0dc438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;42]" time="0.0005235671997070312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f4bef0dcb00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;0]" time="0.0004761219024658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f4bef0e7160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;1]" time="0.0008683204650878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f4bef0e7be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;2]" time="0.0005087852478027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f4bef0dc128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;3]" time="0.0005471706390380859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f4bef0c1c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;4]" time="0.0004734992980957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f4c162dd860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;5]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f4bef0cf3c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;6]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f4c162d5908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;7]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f4bef0e78d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;8]" time="0.0005152225494384766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f4bef0e7358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;9]" time="0.0009055137634277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f4bef0ec240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;10]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f4bef0e7160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;11]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f4c162d5f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;12]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f4bef0cfa90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;13]" time="0.0005130767822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f4c162dd860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;14]" time="0.00047850608825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f4bef0c12e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;15]" time="0.0004916191101074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f4bef0dcb70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;16]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f4bef0ec048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;17]" time="0.0009434223175048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f4bef0ec860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;18]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f4bef0d4908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;19]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f4c16333c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;20]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f4c1638e5f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;21]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f4c1626e978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;22]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f4bef0e77f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;23]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f4bef0e72b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;24]" time="0.0004787445068359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f4bef0ec048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;25]" time="0.0008554458618164062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f4bef0ece80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;26]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f4bef0ec358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;27]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f4bef0e7080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;28]" time="0.0004987716674804688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f4c1626e4e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;29]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f4bef0cf3c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;30]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f4c162dd7b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;31]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f4bef0d4240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;32]" time="0.0004973411560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f4bef0dc128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;33]" time="0.0009369850158691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f4bef0f54e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;34]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f4bef0c8940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;35]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f4c16384b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;36]" time="0.0004918575286865234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f4c1626efd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;37]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f4bef0e7dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;38]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f4bef0ec668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;39]" time="0.0005161762237548828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f4bef0eccc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;40]" time="0.0005049705505371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f4bef0f5358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;41]" time="0.0015914440155029297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f4bef0f5b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;42]" time="0.000553131103515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f4bef0cf6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;0]" time="0.0005290508270263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f4c16333a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;1]" time="0.0004937648773193359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f4bef0ecf98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;2]" time="0.00047588348388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f4bef0ece80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;3]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f4bef0e7668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;4]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f4bef0dc128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;5]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f4bef0d4c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;6]" time="0.0004849433898925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f4bef0d4320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;7]" time="0.0008513927459716797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f4bef0d4e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;8]" time="0.0005130767822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f4bef0dc0f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;9]" time="0.00048732757568359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f4bef0e7f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;10]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f4bef0c8940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;11]" time="0.0005595684051513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f4bef0ecfd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;12]" time="0.0005481243133544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f4c162764e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;13]" time="0.00049591064453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f4c1626e240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;14]" time="0.0006587505340576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f4bef0f51d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;15]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f4bef11ba58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;16]" time="0.0005009174346923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f4c166ce6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;17]" time="0.0004894733428955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f4bef0ec588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;18]" time="0.0004830360412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f4c166ec7b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;19]" time="0.0004930496215820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f4bef0e7f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;20]" time="0.0004818439483642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f4bef0dc2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;21]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f4bef0f5978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;22]" time="0.0005021095275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f4bef0f54e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;23]" time="0.0008676052093505859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f4bef0fd208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;24]" time="0.0004868507385253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f4bef0f50f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;25]" time="0.0004954338073730469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f4bef0c1e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;26]" time="0.0007042884826660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f4bef0e7668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;27]" time="0.0006189346313476562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f4c166ec3c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;28]" time="0.0005083084106445312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f4bef0ec278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;29]" time="0.0005056858062744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f4c1626ea20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;30]" time="0.0005037784576416016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f4bef0fd2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;31]" time="0.0009133815765380859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f4bef0fd748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;32]" time="0.0005192756652832031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f4bef0ec0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;33]" time="0.0005216598510742188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f4c166ecba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;34]" time="0.0005211830139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f4bef0e7780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;35]" time="0.0005125999450683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f4bef123dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;36]" time="0.0005168914794921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f4bef0f5f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;37]" time="0.0005300045013427734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f4bef0f53c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;38]" time="0.0005018711090087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f4bef0fd048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;39]" time="0.0009856224060058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f4bef0fdd68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;40]" time="0.0005316734313964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f4c166f29b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;41]" time="0.00048422813415527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f4bef0dc5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;42]" time="0.0004889965057373047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f4c166eccf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;0]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f4c16276198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;1]" time="0.0005066394805908203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f4c1626ef60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;2]" time="0.0004973411560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f4bef0fda58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;3]" time="0.0005021095275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f4bef0fd518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;4]" time="0.000989675521850586"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f4bef0833c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;5]" time="0.0006837844848632812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f4bef0fd3c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;6]" time="0.0006098747253417969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f4c162d5e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;7]" time="0.0005140304565429688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f4c16276780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;8]" time="0.0005209445953369141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f4bef0e7668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;9]" time="0.0005197525024414062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f4bef0dc9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;10]" time="0.0005080699920654297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f4bef0f5eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;11]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f4bef0831d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;12]" time="0.0009071826934814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f4bef0839e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;13]" time="0.0005059242248535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f4c166f2320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;14]" time="0.0005724430084228516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f4bef0e7fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;15]" time="0.0005352497100830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f4c16276390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;16]" time="0.0004982948303222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f4c1626ea20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;17]" time="0.0005550384521484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f4bef0fd3c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;18]" time="0.0005269050598144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f4bef0835c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;19]" time="0.0005190372467041016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f4bef083550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;20]" time="0.0009236335754394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f4bef088080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;21]" time="0.0004956722259521484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f4bef083780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;22]" time="0.0005064010620117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f4bef0fd2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;23]" time="0.0004992485046386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f4c16671cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;24]" time="0.000507354736328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f4c16276780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;25]" time="0.0005135536193847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f4bef0e7668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;26]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f4c1666c1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;27]" time="0.0005049705505371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f4bef088160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;28]" time="0.0008928775787353516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f4bef088668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;29]" time="0.0004813671112060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f4c1666c550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;30]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f4c166ecfd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;31]" time="0.0005130767822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f4bef0ec358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;32]" time="0.0005214214324951172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f4bef0fdc50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;33]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f4bef083668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;34]" time="0.0005578994750976562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f4bef083be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;35]" time="0.0005307197570800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f4bef088208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;36]" time="0.0009248256683349609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f4bef088c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;37]" time="0.0005359649658203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f4bef083b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;38]" time="0.0004863739013671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f4bef0fda58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;39]" time="0.0005190372467041016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f4c166ec9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;40]" time="0.0005671977996826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f4c166f27b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;41]" time="0.0005137920379638672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f4c1666ca58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;42]" time="0.0005927085876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f4bef088978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;0]" time="0.0005054473876953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f4bef088400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;1]" time="0.0008366107940673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f4bef0902e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;2]" time="0.0005369186401367188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f4bef088748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;3]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f4bef0f5f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;4]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f4bef0d4d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;5]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f4bef0ecd30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;6]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f4bef0fdc50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;7]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f4bef083c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;8]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f4bef0900f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;9]" time="0.001135110855102539"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f4bef090908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;10]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f4c166ec710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;11]" time="0.0004780292510986328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f4c1666c828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;12]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f4bef088ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;13]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f4bef088470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;14]" time="0.0006799697875976562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f4bef083da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;15]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f4bef0fd978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;16]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f4bef0f50f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;17]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f4bef0dc400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;18]" time="0.0010151863098144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f4bef0f5550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;19]" time="0.0004818439483642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f4bef083c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;20]" time="0.0005509853363037109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f4bef088c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;21]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f4bef088438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;22]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f4c166a74a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;23]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f4c166ecb00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;24]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f4c1664e128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;25]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f4bef0909b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;26]" time="0.0008449554443359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f4bef0d4400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;27]" time="0.00047969818115234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f4c166ecb00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;28]" time="0.0005300045013427734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f4c166a7358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;29]" time="0.00047707557678222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f4bef088eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;30]" time="0.0006129741668701172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f4bef1755c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;31]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f4bef0fd780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;32]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f4bef090588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;33]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f4bef090e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;34]" time="0.00048804283142089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f4bef09b390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;35]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f4bef0905f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;36]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f4bef083da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;37]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f4bef088828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;38]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f4c166b0208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;39]" time="0.0004825592041015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f4c166a7fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;40]" time="0.0004930496215820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f4c166ecb00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;41]" time="0.0005002021789550781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f4bef09b710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;42]" time="0.0008833408355712891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f4bef09bc50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;0]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f4bef0e7780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;1]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f4c166b0d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;2]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f4bef088208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;3]" time="0.0004987716674804688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f4bef083a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;4]" time="0.0004863739013671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f4bef0905f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;5]" time="0.0004856586456298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f4bef09b828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;6]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f4bef09b588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;7]" time="0.0008144378662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f4bef0a02b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;8]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f4bef09b908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;9]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f4bef0905f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;10]" time="0.0004990100860595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f4bef083400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;11]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f4bef088b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;12]" time="0.0005269050598144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f4c166a7898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;13]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f4bef0e7668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;14]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f4bef0a00f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;15]" time="0.0012247562408447266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f4bef0a08d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;16]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f4c1666ccc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;17]" time="0.0005016326904296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f4c166b05f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;18]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f4bef0fd3c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;19]" time="0.0004734992980957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f4c16695240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;20]" time="0.0005025863647460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f4bef09beb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;21]" time="0.0004940032958984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f4bef0a05c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;22]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f4bef0a0160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;23]" time="0.0008761882781982422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f4bef0a0ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;24]" time="0.0004990100860595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f4bef0a0a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;25]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f4bef09bdd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;26]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f4bef090c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;27]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f4c16695630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;28]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f4bef0fd780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;29]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f4c1666cd68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;30]" time="0.0005650520324707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f4bef0a7048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;31]" time="0.0008814334869384766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f4bef0a7550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;32]" time="0.0004971027374267578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f4c166b0a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;33]" time="0.0004737377166748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f4bef088978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;34]" time="0.0005011558532714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f4c16695630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;35]" time="0.0005233287811279297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f4bef090be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;36]" time="0.0004918575286865234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f4bef0a0630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;37]" time="0.0005428791046142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f4bef0a0ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;38]" time="0.0004949569702148438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f4bef0a7438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;39]" time="0.0009067058563232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f4bef0a7b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;40]" time="0.0005321502685546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f4bef09b9e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;41]" time="0.0005116462707519531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f4bef090ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;42]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f4c166958d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;0]" time="0.0004832744598388672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f4bef0fd898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;1]" time="0.0004925727844238281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f4c1666c828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;2]" time="0.0005376338958740234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f4bef0a7048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;3]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f4bef0a7278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;4]" time="0.0009105205535888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f4bef0ad1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;5]" time="0.000576019287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f4bef0a7748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;6]" time="0.0005369186401367188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f4c166b0898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;7]" time="0.0005846023559570312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f4bef088a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;8]" time="0.00049591064453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f4c16695390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;9]" time="0.0005319118499755859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f4bef1755c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;10]" time="0.0005643367767333984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f4bef0a0160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;11]" time="0.0005085468292236328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f4bef0ad278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;12]" time="0.000978708267211914"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f4bef0ad7f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;13]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f4bef09b908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;14]" time="0.0004813671112060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f4c1669f438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;15]" time="0.0005090236663818359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f4c16695f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;16]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f4bef088710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;17]" time="0.0005021095275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f4bef0a7128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;18]" time="0.0005695819854736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f4bef0a76a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;19]" time="0.0004904270172119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f4bef0ad0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;20]" time="0.001287698745727539"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f4bef0ade10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;21]" time="0.0004928112030029297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f4c163c4978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;22]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f4c16695a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;23]" time="0.0005896091461181641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f4bef0ad438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;24]" time="0.0004863739013671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f4bef0ad940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;25]" time="0.0005352497100830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f4bef0a7748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;26]" time="0.00048613548278808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f4bef0a7a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;27]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f4bef0a0f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;28]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f4bef09bc88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;29]" time="0.0009589195251464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f4bef0a0a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;30]" time="0.00047087669372558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f4bef0a7128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;31]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f4bef0adba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;32]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f4bef0ad390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;33]" time="0.00048732757568359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f4c166c89e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;34]" time="0.0004858970642089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f4c163c4eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;35]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f4bef09b160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;36]" time="0.00048804283142089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f4bef090be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;37]" time="0.0005125999450683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f4bef090be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;38]" time="0.00047588348388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f4c163cb780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;39]" time="0.0005230903625488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f4c163c4e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;40]" time="0.0004918575286865234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f4c166a7fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;41]" time="0.0004987716674804688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f4bef0ad208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;42]" time="0.0005290508270263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f4bef0a7e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;0]" time="0.0005979537963867188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f4bef0a0630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;1]" time="0.0005056858062744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f4c1626e978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;2]" time="0.0008745193481445312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f4bef0ba518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;3]" time="0.0005259513854980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f4bef0a7eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;4]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f4bef0adc88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;5]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f4bef0ad908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;6]" time="0.0005209445953369141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f4c1669f588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;7]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f4c163cb0f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;8]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f4bef09b3c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;9]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f4bef0ba3c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;10]" time="0.0008962154388427734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f4bef0baa58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;11]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f4bef088710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;12]" time="0.00048041343688964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f4bef083080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;13]" time="0.00047969818115234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f4bef0ad550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;14]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f4bef0a7f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;15]" time="0.0005116462707519531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f4c16394a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;16]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f4bef0babe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;17]" time="0.0004925727844238281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f4bef0ba128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;18]" time="0.0009007453918457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f4bef0bd0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;19]" time="0.00047898292541503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f4bef0baeb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;20]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f4bef0babe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;21]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f4c163947b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;22]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f4c1669f438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;23]" time="0.0006012916564941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f4bef0e7828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;24]" time="0.0005061626434326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f4c163cb2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;25]" time="0.0005304813385009766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f4bef0bd1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;26]" time="0.0009937286376953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f4bef0bd6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;27]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f4c163cb2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;28]" time="0.0004968643188476562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f4bef0adc50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;29]" time="0.0005044937133789062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f4bef0a7a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;30]" time="0.0004906654357910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f4bef0ba6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;31]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f4bef0bacf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;32]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f4bef0f5c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;33]" time="0.0004787445068359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f4bef0bd278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;34]" time="0.00087738037109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f4bef0bdcf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;35]" time="0.0006153583526611328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f4c163947b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;36]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f4bef0ba160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;37]" time="0.0004761219024658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f4bef0a7438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;38]" time="0.0005011558532714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f4bef0adc50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;39]" time="0.0005130767822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f4bef09bc50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;40]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f4bef0bd9e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;41]" time="0.0005023479461669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f4bef0bd470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;42]" time="0.0009262561798095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f4bef045358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;0]" time="0.00122833251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f4bef0bd780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;1]" time="0.0005118846893310547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f4c163cb198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;2]" time="0.0004899501800537109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f4bef0ad390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;3]" time="0.0005116462707519531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f4bef0a7438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;4]" time="0.0004935264587402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f4bef0ba400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;5]" time="0.0004892349243164062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f4c1639d518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;6]" time="0.0006690025329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f4bef045160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;7]" time="0.0009739398956298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f4bef045978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;8]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f4c16351128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;9]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f4bef0ba940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;10]" time="0.0005657672882080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f4bef0adc50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;11]" time="0.0005583763122558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f4c163cb4e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;12]" time="0.0005176067352294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f4bef0bd320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;13]" time="0.0004792213439941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f4bef045a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;14]" time="0.00049591064453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f4bef0454a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;15]" time="0.0009534358978271484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f4bef045fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;16]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f4bef045748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;17]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f4bef0bdf28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;18]" time="0.0005545616149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f4c163c4588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;19]" time="0.00052642822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f4bef0a7be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;20]" time="0.0004990100860595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f4bef0ba400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;21]" time="0.0004925727844238281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f4c163513c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;22]" time="0.0005238056182861328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f4bef04c0f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;23]" time="0.0008807182312011719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f4bef04c5f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;24]" time="0.0005037784576416016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f4c16351128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;25]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f4bef0ba160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;26]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f4c163cb438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;27]" time="0.0004763603210449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f4bef0bd1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;28]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f4bef045588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;29]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f4bef045048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;30]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f4bef04c198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;31]" time="0.0011830329895019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f4bef04cc18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;32]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f4bef0ad470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;33]" time="0.0004825592041015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f4c16351ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;34]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f4bef045860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;35]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f4bef045160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;36]" time="0.0004863739013671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f4bef0bda90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;37]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f4bef0ba278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;38]" time="0.00047469139099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f4bef090128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;39]" time="0.0006051063537597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f4bef0a0908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;40]" time="0.000896453857421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f4c163cb4e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;41]" time="0.0004851818084716797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f4bef0bd320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;42]" time="0.0005245208740234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f4bef0bdef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;0]" time="0.000499725341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f4bef0456d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;1]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f4c163947b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;2]" time="0.00048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f4c1634ffd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;3]" time="0.0004782676696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f4c16360278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;4]" time="0.00047087669372558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f4bef04ca58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;5]" time="0.0008451938629150391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f4bef1755c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;6]" time="0.00047969818115234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f4c16351f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;7]" time="0.0005223751068115234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f4c1639d1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;8]" time="0.00047850608825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f4bef0457b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;9]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f4bef0bd908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;10]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f4bef0905c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;11]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f4bef04c908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;12]" time="0.0005047321319580078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f4bef057160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;13]" time="0.0005431175231933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f4bef0576a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;14]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f4bef04c828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;15]" time="0.00048732757568359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f4bef0bdd68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;16]" time="0.0005266666412353516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f4bef0457b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;17]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f4c16647908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;18]" time="0.0005469322204589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f4c16351a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;19]" time="0.0004994869232177734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f4bef088710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;20]" time="0.0005159378051757812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f4bef057a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;21]" time="0.0008859634399414062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f4bef057f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;22]" time="0.0004892349243164062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f4bef057358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;23]" time="0.00047087669372558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f4c163605c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;24]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f4c1639de48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;25]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f4bef045588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;26]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f4bef0bd4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;27]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f4bef04ceb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;28]" time="0.00048232078552246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f4bef05b080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;29]" time="0.0008733272552490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f4bef05b5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;30]" time="0.0004863739013671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f4bef0ba940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;31]" time="0.00048160552978515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f4bef045d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;32]" time="0.0004975795745849609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f4c16647b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;33]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f4c16360668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;34]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f4bef057c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;35]" time="0.00048422813415527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f4bef057b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;36]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f4bef05b0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;37]" time="0.0008504390716552734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f4bef05bbe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;38]" time="0.0004928112030029297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f4c1663aba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;39]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f4c16394ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;40]" time="0.000484466552734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f4c16647e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;41]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f4bef045cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;42]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f4bef04c160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;0]" time="0.0004894733428955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f4bef05b8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;1]" time="0.00048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f4bef05b390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;2]" time="0.0009331703186035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f4bef063240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;3]" time="0.0004942417144775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f4bef05b080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;4]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f4bef0ba940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;5]" time="0.0005095005035400391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f4bef045ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;6]" time="0.0005407333374023438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f4c163511d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;7]" time="0.00048470497131347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f4bef09bc50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;8]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f4bef057240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;9]" time="0.0004937648773193359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f4bef063048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;10]" time="0.000942230224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f4bef063860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;11]" time="0.0005152225494384766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f4c1663a320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;12]" time="0.0004780292510986328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f4c166475c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;13]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f4bef045860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;14]" time="0.0006518363952636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f4c163027f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;15]" time="0.0005216598510742188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f4bef05b908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;16]" time="0.0004904270172119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f4bef05be80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;17]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f4bef063048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;18]" time="0.0008263587951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f4bef063e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;19]" time="0.0004963874816894531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f4bef063358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;20]" time="0.0004706382751464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f4bef05bd30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;21]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f4c16302be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;22]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f4bef04ceb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;23]" time="0.0004982948303222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f4bef0bdcf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;24]" time="0.0004901885986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f4c1663a668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;25]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f4bef057d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;26]" time="0.0012924671173095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f4bef0624e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;27]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f4bef09bc50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;28]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f4c163511d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;29]" time="0.0004987716674804688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f4c16302d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;30]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f4bef05bcc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;31]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f4bef063668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;32]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f4bef063cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;33]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f4bef062358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;34]" time="0.0008838176727294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f4bef062b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;35]" time="0.0004928112030029297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f4bef0639b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;36]" time="0.0005006790161132812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f4bef0baa58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;37]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f4bef04cd30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;38]" time="0.0004742145538330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f4bef0bd7f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;39]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f4c163094a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;40]" time="0.0004940032958984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f4bef062cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;41]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f4bef0626a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;42]" time="0.0012881755828857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f4bef071160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;0]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f4c16351128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;1]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f4c16302358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;2]" time="0.00048470497131347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f4bef062e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;3]" time="0.0004856586456298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f4bef062160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;4]" time="0.0005033016204833984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f4bef0639b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;5]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f4bef063898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;6]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f4bef05bc18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;7]" time="0.00048613548278808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f4bef057710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;8]" time="0.0009446144104003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f4bef05bf60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;9]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f4bef063cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;10]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f4bef062b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;11]" time="0.0005176067352294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f4bef062f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;12]" time="0.0004849433898925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f4c16302208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;13]" time="0.0005102157592773438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f4c16309358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;14]" time="0.0005030632019042969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f4bef057d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;15]" time="0.0004949569702148438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f4bef04c2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;16]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f4bef04ce10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;17]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f4bef057d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;18]" time="0.0005154609680175781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f4c16302dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;19]" time="0.0004801750183105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f4bef062550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;20]" time="0.0005245208740234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f4bef062cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;21]" time="0.00046515464782714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f4c1677a5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;22]" time="0.0005319118499755859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f4bef05bf60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;23]" time="0.0005035400390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f4bef071320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;24]" time="0.0008537769317626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f4bef071828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;25]" time="0.0004825592041015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f4bef063fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;26]" time="0.00047516822814941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f4c1677aa58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;27]" time="0.00047087669372558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f4bef062cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;28]" time="0.00048613548278808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f4bef0baa58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;29]" time="0.00047707557678222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f4c1663aef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;30]" time="0.0004951953887939453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f4bef04c860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;31]" time="0.0004711151123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f4bef071048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;32]" time="0.0008461475372314453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f4bef071d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;33]" time="0.0004947185516357422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f4c163519b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;34]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f4c16647ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;35]" time="0.000522613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f4bef062b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;36]" time="0.0005400180816650391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f4c1677afd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;37]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f4bef063fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;38]" time="0.0004773139953613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f4bef0719e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;39]" time="0.0005002021789550781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f4bef0715c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;40]" time="0.0008392333984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f4bef07a3c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;41]" time="0.0004742145538330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f4bef071a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;42]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f4bef063940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;0]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f4c16767e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;1]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f4bef062160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;2]" time="0.0005030632019042969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f4c16302400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;3]" time="0.0005662441253662109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f4bef057cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;4]" time="0.0004942417144775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f4bef07a1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;5]" time="0.0009264945983886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f4bef07a9e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;6]" time="0.0004892349243164062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f4c16302358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;7]" time="0.0005159378051757812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f4bef062780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;8]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f4c16767278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;9]" time="0.0005102157592773438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f4bef063940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;10]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f4bef071470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;11]" time="0.0005538463592529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f4bef07a5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;12]" time="0.00047397613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f4bef07a550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;13]" time="0.0008902549743652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f4bef001080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;14]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f4bef07aeb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;15]" time="0.0004956722259521484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f4bef0715f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;16]" time="0.00048804283142089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f4bef05bcc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;17]" time="0.0004992485046386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f4c16767048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;18]" time="0.0004947185516357422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f4c1673e5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;19]" time="0.0004892349243164062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f4bef0baa58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;20]" time="0.0004913806915283203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f4bef001160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;21]" time="0.0012357234954833984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f4bef001668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;22]" time="0.0005168914794921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f4bef062828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;23]" time="0.0005259513854980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f4c1673eb00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;24]" time="0.0004811286926269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f4c1677ae48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;25]" time="0.0005004405975341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f4bef071be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;26]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f4bef07a8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;27]" time="0.0004787445068359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f4bef07add8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;28]" time="0.0004837512969970703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f4bef001208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;29]" time="0.0008413791656494141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f4bef001c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;30]" time="0.0005118846893310547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f4bef07a6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;31]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f4bef0718d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;32]" time="0.0004734992980957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f4c1677afd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;33]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f4c167463c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;34]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f4bef062f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;35]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f4bef001978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;36]" time="0.0005071163177490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f4bef001400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;37]" time="0.0009222030639648438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f4bef0092e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;38]" time="0.0006089210510253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f4bef001748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;39]" time="0.0005102157592773438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f4bef062898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;40]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f4c167461d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;41]" time="0.0004904270172119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f4c16767240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;42]" time="0.0005271434783935547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f4bef071518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;0]" time="0.0005202293395996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f4bef07a5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;1]" time="0.0005009174346923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f4bef0090f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;2]" time="0.0009214878082275391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f4bef009908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;3]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f4bef07ac18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;4]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f4c16767278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;5]" time="0.0004975795745849609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f4c16302a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;6]" time="0.0004818439483642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f4bef057518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;7]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f4bef0012b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;8]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f4bef009550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;9]" time="0.0004978179931640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f4bef0093c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;10]" time="0.0011615753173828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f4bef009f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;11]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f4c16302358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;12]" time="0.0005426406860351562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f4c1677a908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;13]" time="0.0004832744598388672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f4bef009b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;14]" time="0.0005183219909667969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f4bef009438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;15]" time="0.00048470497131347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f4bef009358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;16]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f4bef001ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;17]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f4bef07ac88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;18]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f4bef071c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;19]" time="0.0009107589721679688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f4bef07aa20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;20]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f4bef001048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;21]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f4c1631a278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;22]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f4bef0096d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;23]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f4c16312ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;24]" time="0.0004975795745849609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f4c16302358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;25]" time="0.0004792213439941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f4c16746ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;26]" time="0.0005006790161132812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f4bef04c358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;27]" time="0.0008449554443359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f4bef057cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;28]" time="0.0004878044128417969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f4c1673e278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;29]" time="0.0005040168762207031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f4c163129b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;30]" time="0.0005173683166503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f4bef009588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;31]" time="0.0005018711090087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f4c1631a710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;32]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f4bef001048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;33]" time="0.0005564689636230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f4bef05b2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;34]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f4bef014470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;35]" time="0.0004856586456298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f4bef0149b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;36]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f4bef001b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;37]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f4c1631a1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;38]" time="0.00047898292541503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f4bef009cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;39]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f4c16312da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;40]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f4c16746c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;41]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f4bef0140b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;42]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f4bef014d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;0]" time="0.0009224414825439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f4bef01a2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;1]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f4bef014ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;2]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f4bef04c390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;3]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f4c16312a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;4]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f4bef009550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;5]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f4c1631a1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;6]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f4bef001cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;7]" time="0.0004887580871582031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f4bef01a128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;8]" time="0.0008330345153808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f4bef01a8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;9]" time="0.0005338191986083984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f4c1631ac50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;10]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f4bef009c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;11]" time="0.0004949569702148438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f4bef062160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;12]" time="0.0004837512969970703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f4c16704fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;13]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f4bef0145c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;14]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f4bef01a5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;15]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f4bef01a390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;16]" time="0.0009095668792724609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f4bef01aef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;17]" time="0.0005109310150146484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f4bef01a550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;18]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f4bef014fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;19]" time="0.0004963874816894531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f4c167072e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;20]" time="0.0004787445068359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f4c1673eda0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;21]" time="0.0005142688751220703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f4bef009cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;22]" time="0.0004940032958984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f4c1631aef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;23]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f4bef021048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;24]" time="0.0008831024169921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f4bef021550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;25]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f4bef009e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;26]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f4c1677afd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;27]" time="0.0004897117614746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f4c16704a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;28]" time="0.0004925727844238281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f4bef0142e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;29]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f4bef01a668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;30]" time="0.00048279762268066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f4bef01aac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;31]" time="0.0005083084106445312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f4bef021438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;32]" time="0.0008959770202636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f4bef021b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;33]" time="0.0005271434783935547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f4bef014358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;34]" time="0.0005235671997070312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f4c16707eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;35]" time="0.0004987716674804688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f4c16704a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;36]" time="0.0005178451538085938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f4bef062160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;37]" time="0.0005190372467041016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f4bef0012b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;38]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f4bef021048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;39]" time="0.0005002021789550781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f4bef021278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;40]" time="0.0008842945098876953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f4bef0261d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;41]" time="0.000492095947265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f4bef021438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;42]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f4bef001a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;0]" time="0.0005033016204833984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f4c1631aef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;1]" time="0.0005021095275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f4c16704e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;2]" time="0.0005159378051757812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f4c16707e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;3]" time="0.0005009174346923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f4bef01a6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;4]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f4bef026278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;5]" time="0.0008733272552490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f4bef0267f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;6]" time="0.00047707557678222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f4bef014ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;7]" time="0.0005118846893310547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f4c16707ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;8]" time="0.0004801750183105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f4c1665e4e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;9]" time="0.0005280971527099609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f4bef009550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;10]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f4bef0218d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;11]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f4bef021940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;12]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f4bef0260b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;13]" time="0.0008444786071777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f4bef026e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;14]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f4bef026390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;15]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f4bef021da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;16]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f4bef001a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;17]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f4bef0097f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;18]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f4c16704eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;19]" time="0.0004944801330566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f4bef014198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;20]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f4bef01a6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;21]" time="0.001653909683227539"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f4bef02d470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;22]" time="0.0005090236663818359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f4c162acd68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;23]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f4bef0097f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;24]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f4bef0263c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;25]" time="0.0004813671112060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f4bef026f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;26]" time="0.0004875659942626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f4bef021860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;27]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f4bef01a9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;28]" time="0.0005192756652832031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f4bef001a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;29]" time="0.0004892349243164062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f4bef0146d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;30]" time="0.0009200572967529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f4bef07a550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;31]" time="0.0005550384521484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f4bef01a4e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;32]" time="0.0004942417144775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f4bef021eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;33]" time="0.0004916191101074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f4bef026f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;34]" time="0.0004830360412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f4bef009518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;35]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f4c162ac780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;36]" time="0.0004949569702148438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f4c16707eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;37]" time="0.0005095005035400391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f4bef05bac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;38]" time="0.00048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f4c1673e320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;39]" time="0.0004897117614746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f4c162b38d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;40]" time="0.0004787445068359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f4c16312fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;41]" time="0.0004773139953613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f4bef0263c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;42]" time="0.0004832744598388672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f4bef026f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;0]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f4bef021908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;1]" time="0.0005154609680175781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f4bef014828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;2]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f4bef02d358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;3]" time="0.0009272098541259766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f4bef02db38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;4]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f4bef021320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;5]" time="0.0005266666412353516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f4bef009668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;6]" time="0.00048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f4bef0269b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;7]" time="0.00047898292541503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f4c162aca20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;8]" time="0.0005502700805664062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f4c162b3d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;9]" time="0.0005018711090087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f4bef02d6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;10]" time="0.0005056858062744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f4bef02d198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;11]" time="0.0008976459503173828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f4bef0380b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;12]" time="0.0004894733428955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f4bef02dc50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;13]" time="0.0005002021789550781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f4c16707f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;14]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f4bef05bcc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;15]" time="0.00048613548278808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f4bef0264a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;16]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f4bef021b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;17]" time="0.0005280971527099609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f4bef01a4e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;18]" time="0.0004875659942626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f4bef0381d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;19]" time="0.0008802413940429688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f4bef0386d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;20]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f4bef021588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;21]" time="0.0005161762237548828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f4bef026390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;22]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f4c1677ada0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;23]" time="0.00047850608825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f4c16707198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;24]" time="0.0005078315734863281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f4bef02d588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;25]" time="0.0004904270172119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f4bef062e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;26]" time="0.0005192756652832031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f4bef038278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;27]" time="0.0009322166442871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f4bef038cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;28]" time="0.0005018711090087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f4bef02da20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;29]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f4bef05bef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;30]" time="0.00064849853515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f4c16312fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;31]" time="0.0006573200225830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f4bef026e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;32]" time="0.0006411075592041016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f4bef0212b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;33]" time="0.0006196498870849609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f4bef0389e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;34]" time="0.0005204677581787109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f4bef038470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;35]" time="0.0011379718780517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f4beefbf358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;36]" time="0.0005052089691162109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f4bef038860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;37]" time="0.00047469139099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f4bef021ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;38]" time="0.0005009174346923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f4bef026b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;39]" time="0.0005216598510742188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f4c162b3d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;40]" time="0.0004706382751464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f4c166e94a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;41]" time="0.0005109310150146484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f4bef02d940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;42]" time="0.00047707557678222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f4beefbf160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;0]" time="0.0008511543273925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f4beefbf978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;1]" time="0.0004947185516357422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f4bef05bef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;2]" time="0.0005774497985839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f4c162acac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;3]" time="0.0004909038543701172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f4bef01a5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;4]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f4c16758940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;5]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f4bef0387f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;6]" time="0.0004913806915283203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f4beefbfa90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;7]" time="0.00047397613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f4beefbf4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;8]" time="0.0008945465087890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f4beefbffd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;9]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f4beefbf748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;10]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f4bef038b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;11]" time="0.0005521774291992188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f4bef021f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;12]" time="0.0005109310150146484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f4c162b3cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;13]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f4c1660c668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;14]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f4c166e9550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;15]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f4beefc50f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;16]" time="0.0009009838104248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f4beefc55f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;17]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f4c166e97f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;18]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f4bef01af60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;19]" time="0.0004706382751464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f4bef026940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;20]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f4bef038be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;21]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f4beefbf588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;22]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f4beefbf048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;23]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f4beefc5198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;24]" time="0.0008835792541503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f4beefc5c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;25]" time="0.0004818439483642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f4beefbf160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;26]" time="0.0005030632019042969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f4bef021b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;27]" time="0.0004763603210449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f4c16758be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;28]" time="0.0005261898040771484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f4c1660c588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;29]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f4bef02d588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;30]" time="0.0005083084106445312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f4beefc5908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;31]" time="0.000514984130859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f4beefc5390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;32]" time="0.0012564659118652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f4beefca278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;33]" time="0.0005128383636474609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f4bef026c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;34]" time="0.0004942417144775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f4c166104e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;35]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f4beefc5400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;36]" time="0.00047850608825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f4beefc5d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;37]" time="0.0005097389221191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f4beefbfda0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;38]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f4bef038860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;39]" time="0.0005192756652832031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f4c16758940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;40]" time="0.0005190372467041016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f4bef05bcf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;41]" time="0.0009150505065917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f4bef02db38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;42]" time="0.0004811286926269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f4bef0381d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;0]" time="0.0005142688751220703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f4beefbf048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;1]" time="0.0004937648773193359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f4beefc56a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;2]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f4beefc5fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;3]" time="0.0005366802215576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f4c16610908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;4]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f4c1660cf60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;5]" time="0.0005145072937011719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f4bef014710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;6]" time="0.0011112689971923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f4bef014710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;7]" time="0.0004899501800537109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f4c1660cf60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;8]" time="0.0005319118499755859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f4c16610a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;9]" time="0.0005013942718505859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f4beefc5780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;10]" time="0.0004994869232177734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f4c1673e5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;11]" time="0.0005421638488769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f4beefbfdd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;12]" time="0.0005362033843994141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f4bef02dcc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;13]" time="0.0004982948303222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f4beefca780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;14]" time="0.0005381107330322266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f4beefcacc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;15]" time="0.0005714893341064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f4beefbf7f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;16]" time="0.0005066394805908203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f4c16724dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;17]" time="0.0004932880401611328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f4beefc5940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;18]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f4c166106d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;19]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f4bef071c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;20]" time="0.0004818439483642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f4beefca4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;21]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f4beefd4080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;22]" time="0.0008749961853027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f4beefd45c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;23]" time="0.0005481243133544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f4beefca0f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;24]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f4bef026908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;25]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f4beefc5668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;26]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f4c16724c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;27]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f4c1672b748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;28]" time="0.00048065185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f4bef038940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;29]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f4beefd4080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;30]" time="0.0009021759033203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f4beefd4be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;31]" time="0.00047087669372558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f4c1672b6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;32]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f4c166ce358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;33]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f4beefc57b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;34]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f4c1660c438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;35]" time="0.0004851818084716797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f4beefcae10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;36]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f4beefd4668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;37]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f4beefd4400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;38]" time="0.0008382797241210938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f4beefdc240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;39]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f4beefd4780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;40]" time="0.0004754066467285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f4c167340b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;41]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f4bef071f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;42]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f4c162b38d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;0]" time="0.0004913806915283203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f4beefbf978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;1]" time="0.0004811286926269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f4c1672b0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;2]" time="0.00047469139099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f4beefdc048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;3]" time="0.0008845329284667969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f4beefdc860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;4]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f4beefbfc88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;5]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f4beefc57b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;6]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f4c1660c390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;7]" time="0.0004858970642089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f4beefca7b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;8]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f4beefd4828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;9]" time="0.0005049705505371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f4beefd49e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;10]" time="0.00048232078552246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f4beefdc048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;11]" time="0.0009138584136962891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f4beefdce80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;12]" time="0.0004813671112060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f4beefdc358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;13]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f4beefd41d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;14]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f4c167340b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;15]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f4bef071d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;16]" time="0.0004887580871582031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f4beefc57b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;17]" time="0.00046896934509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f4c16200a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;18]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f4bef038ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;19]" time="0.0008864402770996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f4beefd74e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;20]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f4c16200940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;21]" time="0.0005145072937011719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f4beefc5400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;22]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f4beefca4e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;23]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f4beefd4f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;24]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f4beefdc668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;25]" time="0.0005123615264892578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f4beefdccc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;26]" time="0.0004813671112060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f4beefd7358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;27]" time="0.0008761882781982422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f4beefd7b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;28]" time="0.0004968643188476562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f4bef071c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;29]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f4beefd49e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;30]" time="0.0005786418914794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f4beefca780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;31]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f4beefbfc88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;32]" time="0.0004761219024658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f4c162082b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;33]" time="0.0005939006805419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f4beefd7cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;34]" time="0.0004858970642089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f4beefd76a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;35]" time="0.0010194778442382812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f4beefe9160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;36]" time="0.0004904270172119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f4beefd79e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;37]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f4c1672bf28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;38]" time="0.0005078315734863281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f4c16200e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;39]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f4beefc55f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;40]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f4beefd4fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;41]" time="0.0004901885986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f4beefdc940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;42]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f4beefe92b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;0]" time="0.001720428466796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f4beefe9780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;1]" time="0.0007519721984863281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f4beefbfb38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;2]" time="0.0006473064422607422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f4c16208208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;3]" time="0.0004930496215820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f4beefd7cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;4]" time="0.0007538795471191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f4beefd7f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;5]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f4beefdccf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;6]" time="0.0004901885986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f4beefd4828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;7]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f4bef038cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;8]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f4beefcaa90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;9]" time="0.0009307861328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f4beefd49b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;10]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f4beefdc898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;11]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f4beefd7128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;12]" time="0.0004763603210449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f4beefd7390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;13]" time="0.00048470497131347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f4c16208160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;14]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f4c166106d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;15]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f4beefca080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;16]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f4bef05bcf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;17]" time="0.0005040168762207031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f4bef02d198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;18]" time="0.0004830360412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f4beefca080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;19]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f4c16200f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;20]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f4beefd7b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;21]" time="0.0005128383636474609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f4beefd73c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;22]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f4beefdc550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;23]" time="0.0004813671112060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f4beefd4c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;24]" time="0.0005033016204833984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f4beefe9160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;25]" time="0.0008995532989501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f4beefe9e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;26]" time="0.0004858970642089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f4c163afa20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;27]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f4beefd73c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;28]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f4c1672bf28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;29]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f4c16610438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;30]" time="0.0005023479461669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f4beefca320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;31]" time="0.0005300045013427734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f4beefe9b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;32]" time="0.00049591064453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f4beefe9668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;33]" time="0.0013191699981689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f4beeff43c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;34]" time="0.0005502700805664062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f4beefe9518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;35]" time="0.0005199909210205078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f4c163a5f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;36]" time="0.000507354736328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f4c163b5438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;37]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f4beefd7390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;38]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f4beefdc2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;39]" time="0.0005013942718505859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f4c163af4e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;40]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f4beeff4208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;41]" time="0.0009417533874511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f4beeff49e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;42]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f4beefdcf28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;0]" time="0.0004742145538330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f4c16208e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;1]" time="0.00047588348388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f4c163b5588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;2]" time="0.0005047321319580078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f4c163a5eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;3]" time="0.0005004405975341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f4beefe9518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;4]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f4beeff45c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;5]" time="0.0005769729614257812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f4beeff4550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;6]" time="0.0009467601776123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f4beeff9080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;7]" time="0.0004978179931640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f4beeff4080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;8]" time="0.0005142688751220703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f4beefe9668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;9]" time="0.0005517005920410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f4bef014fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;10]" time="0.0005903244018554688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f4c162e7b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;11]" time="0.0004889965057373047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f4c162087f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;12]" time="0.0005273818969726562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f4beefdccc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;13]" time="0.0004990100860595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f4beeff9160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;14]" time="0.0009400844573974609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f4beeff9668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;15]" time="0.0005087852478027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f4beefd7518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;16]" time="0.0005993843078613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f4c163b50f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;17]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f4c162e7ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;18]" time="0.0004961490631103516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f4beefe9a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;19]" time="0.000484466552734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f4beeff48d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;20]" time="0.0004680156707763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f4beeff4ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;21]" time="0.00047898292541503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f4beeff9208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;22]" time="0.00095367431640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f4beeff9c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;23]" time="0.0004801750183105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f4beeff4780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;24]" time="0.0004801750183105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f4beefe99e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;25]" time="0.0005190372467041016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f4beefcad30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;26]" time="0.0004901885986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f4c162ef630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;27]" time="0.0006377696990966797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f4beefd7eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;28]" time="0.0006628036499023438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f4beeff9978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;29]" time="0.0004849433898925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f4beeff9400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;30]" time="0.0009541511535644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f4beef822e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;31]" time="0.0004863739013671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f4beeff9208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;32]" time="0.0005061626434326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f4beefdceb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;33]" time="0.0005071163177490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f4c162ef0f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;34]" time="0.0004935264587402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f4beefcaba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;35]" time="0.0004956722259521484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f4beefe99e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;36]" time="0.0005495548248291016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f4beeff4ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;37]" time="0.0005459785461425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f4beef820f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;38]" time="0.0009467601776123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f4beef82908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;39]" time="0.0005729198455810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f4c162f70f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;40]" time="0.0006601810455322266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f4bef014ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;41]" time="0.0005350112915039062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f4c16208c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;42]" time="0.0005238056182861328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f4beefdccc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;0]" time="0.0005049705505371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f4beeff92b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;1]" time="0.00048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f4beef82550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;2]" time="0.0005133152008056641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f4beef823c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;3]" time="0.0009350776672363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f4beef82f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;4]" time="0.0008347034454345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f4beef82390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;5]" time="0.0005030632019042969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f4beeff9748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;6]" time="0.0005142688751220703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f4beeff9a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;7]" time="0.0005934238433837891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f4c162efa20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;8]" time="0.0005292892456054688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f4bef014ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;9]" time="0.0005033016204833984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f4c162f7438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;10]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f4beef8a080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;11]" time="0.0012965202331542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f4beef8a588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;12]" time="0.0008873939514160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f4beefdc9e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;13]" time="0.0005147457122802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f4c16839da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;14]" time="0.0005528926849365234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f4beef821d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;15]" time="0.00048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f4beef82b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;16]" time="0.0004954338073730469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f4beeff9438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;17]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f4c163affd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;18]" time="0.0004742145538330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f4beeff43c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;19]" time="0.0005145072937011719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f4beefe9eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;20]" time="0.0008962154388427734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f4beefe94e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;21]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f4c163affd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;22]" time="0.0004742145538330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f4beeff9b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;23]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f4beef82358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;24]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f4beef82470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;25]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f4c162efa20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;26]" time="0.0004782676696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f4c163b50f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;27]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f4beef8a1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;28]" time="0.0008199214935302734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f4beefd4be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;29]" time="0.0004734992980957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f4beefbfa90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;30]" time="0.0005140304565429688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f4beef82f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;31]" time="0.0004837512969970703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f4beef82a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;32]" time="0.0005042552947998047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f4beeff9b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;33]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f4beeff4438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;34]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f4beef8a6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;35]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f4beef8aa90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;36]" time="0.0004899501800537109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f4beef90048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;37]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f4beefe94e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;38]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f4beeff96a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;39]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f4c166e6a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;40]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f4beef82da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;41]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f4beefbfa90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;42]" time="0.0004897117614746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f4c162f7390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;0]" time="0.0005118846893310547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f4beef90390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;1]" time="0.000926971435546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f4beef908d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;2]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f4c16839d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;3]" time="0.0004818439483642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f4beef82518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;4]" time="0.000499725341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f4c166e6ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;5]" time="0.0005013942718505859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f4beeff4d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;6]" time="0.0005009174346923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f4beef8a080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;7]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f4beef904a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;8]" time="0.00047087669372558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f4beef90208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;9]" time="0.0009400844573974609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f4beef90ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;10]" time="0.0004711151123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f4beef906d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;11]" time="0.0005030632019042969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f4beef8a908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;12]" time="0.0005223751068115234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f4beeff4080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;13]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f4c166e6d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;14]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f4beefd78d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;15]" time="0.0004761219024658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f4c162e7eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;16]" time="0.0004928112030029297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f4beef97048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;17]" time="0.0009088516235351562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f4beef97550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;18]" time="0.0004928112030029297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f4beef82a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;19]" time="0.00048041343688964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f4c167a2668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;20]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f4beeff9748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;21]" time="0.0005018711090087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f4beeff4d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;22]" time="0.0004792213439941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f4beef905f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;23]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f4beef90ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;24]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f4beef97438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;25]" time="0.0008556842803955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f4beef97b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;26]" time="0.0004940032958984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f4beef90748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;27]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f4beeff4da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;28]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f4c166e6550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;29]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f4c167a2588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;30]" time="0.0005424022674560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f4beef82518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;31]" time="0.0005164146423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f4beef97048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;32]" time="0.0006690025329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f4beef97278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;33]" time="0.0009222030639648438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f4beef9c1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;34]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f4beef972e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;35]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f4beef97240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;36]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f4c167a2400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;37]" time="0.0004792213439941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f4beeff9470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;38]" time="0.0004980564117431641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f4c167966d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;39]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f4beef90470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;40]" time="0.0005018711090087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f4beef9c278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;41]" time="0.0009105205535888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f4beef9c7f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;42]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f4beef8a128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;0]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f4beeff4d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;1]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f4c167a2a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;2]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f4beef82c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;3]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f4beef97048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;4]" time="0.0004780292510986328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f4c16839c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;5]" time="0.0004742145538330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f4beef9c0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;6]" time="0.0008482933044433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f4beef9ce10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;7]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f4beef9c9e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;8]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f4beef970f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;9]" time="0.0005011558532714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f4beef97240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;10]" time="0.0004754066467285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f4c167a2400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;11]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f4beefe9c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;12]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f4c16796630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;13]" time="0.0004909038543701172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f4beef903c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;14]" time="0.0008730888366699219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f4beefa4470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;15]" time="0.00052642822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f4c16796588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;16]" time="0.0005104541778564453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f4beeff97f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;17]" time="0.0005009174346923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f4beef82a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;18]" time="0.0004956722259521484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f4beef97f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;19]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f4beef9c400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;20]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f4beef9cb38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;21]" time="0.00051116943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f4beefa42b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;22]" time="0.0011932849884033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f4beefa4a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;23]" time="0.0004913806915283203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f4c167721d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;24]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f4beefd40f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;25]" time="0.0005321502685546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f4beef9cba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;26]" time="0.0004799365997314453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f4beef9c7f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;27]" time="0.0004973411560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f4beef97320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;28]" time="0.00046515464782714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f4beef90710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;29]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f4beef8ac18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;30]" time="0.0004782676696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f4beef8a2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;31]" time="0.0008459091186523438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f4beef8ae10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;32]" time="0.0005013942718505859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f4beef90940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;33]" time="0.0004856586456298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f4beef97e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;34]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f4beef9c390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;35]" time="0.0005118846893310547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f4c16765128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;36]" time="0.0004956722259521484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f4c166e6828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;37]" time="0.0004909038543701172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f4c16772630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;38]" time="0.0005140304565429688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f4beefca9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;39]" time="0.0004780292510986328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f4c16707eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;40]" time="0.00048732757568359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f4c162f7390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;41]" time="0.0005140304565429688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f4c167657b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;42]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f4beef9c588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;0]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f4beef97e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;1]" time="0.0005505084991455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f4beef905c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;2]" time="0.000499725341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f4beefa4b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;3]" time="0.0004899501800537109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f4beefa4470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;4]" time="0.0008814334869384766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f4beefae198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;5]" time="0.0004963874816894531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f4beefa4550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;6]" time="0.0004858970642089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f4beef906d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;7]" time="0.0004925727844238281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f4beef97208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;8]" time="0.0005130767822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f4beef9c390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;9]" time="0.00048160552978515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f4c166e6c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;10]" time="0.0005018711090087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f4c167a20b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;11]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f4beefae278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;12]" time="0.0009303092956542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f4beefae6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;13]" time="0.00046515464782714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f4c167657b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;14]" time="0.0004971027374267578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f4beef9c400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;15]" time="0.00048661231994628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f4c167129b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;16]" time="0.0004787445068359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f4beef97f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;17]" time="0.0004916191101074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f4beefa4748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;18]" time="0.0004787445068359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f4beefa4c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;19]" time="0.0005056858062744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f4beefae080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;20]" time="0.0008814334869384766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f4beefaecf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;21]" time="0.0005159378051757812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f4beef8a438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;22]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f4beef97ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;23]" time="0.00048065185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f4c166e6c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;24]" time="0.0004887580871582031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f4c1671c470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;25]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f4c167a2a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;26]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f4beefae390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;27]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f4beefae438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;28]" time="0.0008175373077392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f4beefb5358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;29]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f4beefaea58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;30]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f4c16765c88&gt;</skipped></testcase><testcase classname="src.pymortests.gui" file="src/pymortests/gui.py" line="26" name="test_visualize_patch[backend_gridtype0]" time="0.0005259513854980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/gui.py:26: &lt;py._xmlgen.raw object at 0x7f4c1671c128&gt;</skipped></testcase><testcase classname="src.pymortests.gui" file="src/pymortests/gui.py" line="26" name="test_visualize_patch[backend_gridtype1]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/gui.py:26: &lt;py._xmlgen.raw object at 0x7f4beef82a20&gt;</skipped></testcase><testcase classname="src.pymortests.gui" file="src/pymortests/gui.py" line="26" name="test_visualize_patch[backend_gridtype2]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/gui.py:26: &lt;py._xmlgen.raw object at 0x7f4beef972e8&gt;</skipped></testcase><testcase classname="src.pymortests.la" file="src/pymortests/la.py" line="13" name="test_induced" time="0.0005266666412353516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/la.py:13: &lt;py._xmlgen.raw object at 0x7f4beefa4080&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[scipy-False-False-1-100]" time="0.0005719661712646484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beefb5240&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[scipy-False-False-1-200]" time="0.0008847713470458984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beefb5a58&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[scipy-False-False-2-100]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beef97f28&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[scipy-False-False-2-200]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4c16712e48&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[scipy-False-True-1-100]" time="0.0004897117614746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4c1671c128&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[scipy-False-True-1-200]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4c167651d0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[scipy-False-True-2-100]" time="0.0005099773406982422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beefae2b0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[scipy-False-True-2-200]" time="0.0005030632019042969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beefb5ba8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[scipy-True-False-1-100]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beefb5080&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[scipy-True-False-1-200]" time="0.0012810230255126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beefbc0b8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[scipy-True-False-2-100]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beefb5908&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[scipy-True-False-2-200]" time="0.0005066394805908203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beefae240&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[scipy-True-True-1-100]" time="0.0004956722259521484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4c167727b8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[scipy-True-True-1-200]" time="0.0005235671997070312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4c0f59a6a0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[scipy-True-True-2-100]" time="0.0004761219024658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beef9c5c0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[scipy-True-True-2-200]" time="0.0004858970642089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beef97908&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[slycot_bartels-stewart-False-False-1-100]" time="0.0005707740783691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beefbc1d0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[slycot_bartels-stewart-False-False-1-200]" time="0.0009856224060058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beefbc6d8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[slycot_bartels-stewart-False-False-2-100]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beefdceb8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[slycot_bartels-stewart-False-False-2-200]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4c1671cb00&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[slycot_bartels-stewart-False-True-1-100]" time="0.00048470497131347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4c16772fd0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[slycot_bartels-stewart-False-True-1-200]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beefae240&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[slycot_bartels-stewart-False-True-2-100]" time="0.0005850791931152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beefb5860&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[slycot_bartels-stewart-False-True-2-200]" time="0.0005013942718505859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beefb5048&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[slycot_bartels-stewart-True-False-1-100]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beefbc208&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[slycot_bartels-stewart-True-False-1-200]" time="0.0008840560913085938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beefbccf8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[slycot_bartels-stewart-True-False-2-100]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beefb5dd8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[slycot_bartels-stewart-True-False-2-200]" time="0.000484466552734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beefae8d0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[slycot_bartels-stewart-True-True-1-100]" time="0.0005590915679931641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4c167651d0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[slycot_bartels-stewart-True-True-1-200]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4c16839748&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[slycot_bartels-stewart-True-True-2-100]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beefa4da0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[slycot_bartels-stewart-True-True-2-200]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beefbc358&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_glyap-False-False-1-100]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beefbc470&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_glyap-False-False-1-200]" time="0.0008487701416015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beef41358&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_glyap-False-False-2-100]" time="0.0004904270172119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beefbc828&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_glyap-False-False-2-200]" time="0.0005044937133789062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beef972e8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_glyap-False-True-1-100]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beef9c0b8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_glyap-False-True-1-200]" time="0.0005130767822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4c16772fd0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_glyap-False-True-2-100]" time="0.00048661231994628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beefb5e10&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_glyap-False-True-2-200]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4c0f5a7f28&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_glyap-True-False-1-100]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beef41160&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_glyap-True-False-1-200]" time="0.001237630844116211"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beef41978&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_glyap-True-False-2-100]" time="0.0005121231079101562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beef972e8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_glyap-True-False-2-200]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4c0f5a7400&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_glyap-True-True-1-100]" time="0.00047969818115234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beefbcdd8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_glyap-True-True-1-200]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beefbcd30&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_glyap-True-True-2-100]" time="0.0004906654357910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beefb5240&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_glyap-True-True-2-200]" time="0.00048422813415527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beefae3c8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_lradi-False-False-1-100]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beefa4080&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_lradi-False-False-1-200]" time="0.0005035400390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beef8ab38&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_lradi-False-False-2-100]" time="0.0008804798126220703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4c163b50f0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_lradi-False-False-2-200]" time="0.0005025863647460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beefb5390&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_lradi-False-True-1-100]" time="0.0004773139953613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4c0f5a6358&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_lradi-False-True-1-200]" time="0.0004801750183105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beefbcba8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_lradi-False-True-2-100]" time="0.000476837158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4c0f5ad940&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_lradi-False-True-2-200]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4c0f5a7940&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_lradi-True-False-1-100]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4c1671c9b0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_lradi-True-False-1-200]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beef41630&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_lradi-True-False-2-100]" time="0.0008466243743896484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beef8acf8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_lradi-True-False-2-200]" time="0.0004830360412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4c0f5a7898&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_lradi-True-True-1-100]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4c0f5ad9e8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_lradi-True-True-1-200]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beefbcdd8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_lradi-True-True-2-100]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beefb5240&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[pymess_lradi-True-True-2-200]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beefae198&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[lradi-False-False-1-100]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beef41588&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[lradi-False-False-1-200]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beef41e80&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[lradi-False-False-2-100]" time="0.0004849433898925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beef4a400&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[lradi-False-False-2-200]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beef414a8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[lradi-False-True-1-100]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beefb5e10&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[lradi-False-True-1-200]" time="0.0005109310150146484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beefbc4a8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[lradi-False-True-2-100]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4c0f5b57f0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[lradi-False-True-2-200]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4c0f5ad5f8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[lradi-True-False-1-100]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4c16712908&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[lradi-True-False-1-200]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beef4a780&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[lradi-True-False-2-100]" time="0.0008404254913330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beef4acc0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[lradi-True-False-2-200]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4c0f5ad6a0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[lradi-True-True-1-100]" time="0.0004851818084716797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4c0f5b56a0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[lradi-True-True-1-200]" time="0.0005297660827636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beefbc6d8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[lradi-True-True-2-100]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beefb5cc0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="93" name="test_lrcf[lradi-True-True-2-200]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:93: &lt;py._xmlgen.raw object at 0x7f4beef41d30&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[scipy-False-False-1-100]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4beef4a978&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[scipy-False-False-1-200]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4beef4a5f8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[scipy-False-False-2-100]" time="0.0009055137634277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4beef50320&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[scipy-False-False-2-200]" time="0.0004773139953613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4beef4a748&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[scipy-False-True-1-100]" time="0.0005040168762207031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4beef41320&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[scipy-False-True-1-200]" time="0.0005159378051757812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4beefaeb70&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[scipy-False-True-2-100]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4beefbcba8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[scipy-False-True-2-200]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4c0f5b54a8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[scipy-True-False-1-100]" time="0.0005023479461669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4c16765048&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[scipy-True-False-1-200]" time="0.0004734992980957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4beef50160&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[scipy-True-False-2-100]" time="0.0008809566497802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4beef50940&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[scipy-True-False-2-200]" time="0.0005137920379638672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4c0f5b55f8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[scipy-True-True-1-100]" time="0.0005025863647460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4beefbce10&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[scipy-True-True-1-200]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4beefb5a90&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[scipy-True-True-2-100]" time="0.0005183219909667969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4beef41748&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[scipy-True-True-2-200]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4beef4a9b0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[slycot_bartels-stewart-False-False-1-100]" time="0.0004994869232177734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4beef509e8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[slycot_bartels-stewart-False-False-1-200]" time="0.00048613548278808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4beef50400&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[slycot_bartels-stewart-False-False-2-100]" time="0.0008244514465332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4beef50f60&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[slycot_bartels-stewart-False-False-2-200]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4beef505f8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[slycot_bartels-stewart-False-True-1-100]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4beef4ae48&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[slycot_bartels-stewart-False-True-1-200]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4beef41ef0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[slycot_bartels-stewart-False-True-2-100]" time="0.00048661231994628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4beefb5a90&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[slycot_bartels-stewart-False-True-2-200]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4c0f5c8eb8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[slycot_bartels-stewart-True-False-1-100]" time="0.000568389892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4c0f5b55f8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[slycot_bartels-stewart-True-False-1-200]" time="0.0004775524139404297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4beef5a080&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[slycot_bartels-stewart-True-False-2-100]" time="0.00092315673828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4beef5a5c0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[slycot_bartels-stewart-True-False-2-200]" time="0.000492095947265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4c0f5c8b70&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[slycot_bartels-stewart-True-True-1-100]" time="0.000518798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4beefbcba8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[slycot_bartels-stewart-True-True-1-200]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4beefae8d0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[slycot_bartels-stewart-True-True-2-100]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4beef4a860&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[slycot_bartels-stewart-True-True-2-200]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4beef509e8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[pymess_glyap-False-False-1-100]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4beef50390&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[pymess_glyap-False-False-1-200]" time="0.0004973411560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4beef5a0b8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[pymess_glyap-False-False-2-100]" time="0.0008823871612548828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4beef5abe0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[pymess_glyap-False-False-2-200]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4beef4a5f8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[pymess_glyap-False-True-1-100]" time="0.00048470497131347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4beef413c8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[pymess_glyap-False-True-1-200]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4beefbc2e8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[pymess_glyap-False-True-2-100]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4c0f5c8ac8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[pymess_glyap-False-True-2-200]" time="0.00048279762268066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4c0f5b5e80&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[pymess_glyap-True-False-1-100]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4beef5a240&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[pymess_glyap-True-False-1-200]" time="0.0005104541778564453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4beef5a358&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[pymess_glyap-True-False-2-100]" time="0.0009024143218994141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4beef5f240&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[pymess_glyap-True-False-2-200]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4beef5a710&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[pymess_glyap-True-True-1-100]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4c0f5adf28&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[pymess_glyap-True-True-1-200]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4c0f551390&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[pymess_glyap-True-True-2-100]" time="0.0005152225494384766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4beefbcfd0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="122" name="test_dense[pymess_glyap-True-True-2-200]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:122: &lt;py._xmlgen.raw object at 0x7f4beef41390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="21" name="test_selection_op" time="0.0005714893341064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:21: &lt;py._xmlgen.raw object at 0x7f4beef50550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="53" name="test_lincomb_op" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:53: &lt;py._xmlgen.raw object at 0x7f4beef5f080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;0]" time="0.0008223056793212891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f4beef5f898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;1]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f4beef4af98&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;2]" time="0.00048160552978515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f4beefb5a90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;3]" time="0.00046896934509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f4c0f5c8cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;4]" time="0.0005521774291992188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f4beef8acf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;5]" time="0.0004734992980957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f4beef5acc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;6]" time="0.0004868507385253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f4beef5aef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;7]" time="0.00048661231994628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f4beef5f048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;8]" time="0.0012502670288085938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f4beef5feb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;9]" time="0.0005052089691162109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f4beefbc0b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;10]" time="0.0004775524139404297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f4beefaeb70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;11]" time="0.00048041343688964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f4beef5ffd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;12]" time="0.0004985332489013672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f4beef5f978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;13]" time="0.0005161762237548828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f4beef5aef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;14]" time="0.00047969818115234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f4beef5a6a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;15]" time="0.0005121231079101562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f4beef50da0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;16]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f4beef4acf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;17]" time="0.0008699893951416016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f4beef506d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;18]" time="0.0005028247833251953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f4beef5ac88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;19]" time="0.0005130767822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f4beef5f860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;20]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f4beef5fbe0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;21]" time="0.0005924701690673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f4beefaea90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;22]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f4c0f551438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;23]" time="0.0004832744598388672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f4beef4a0b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;24]" time="0.0005037784576416016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f4beef8ad30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;25]" time="0.00047469139099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f4c163b50f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;26]" time="0.0004968643188476562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f4c0f551d68&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;27]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f4c0f5c84e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;28]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f4bf470a198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;29]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f4beef5f5c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;30]" time="0.0004787445068359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f4beef5a9e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;31]" time="0.0004856586456298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f4beef41c18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;32]" time="0.0004782676696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f4beef6a080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;33]" time="0.0009448528289794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f4beef6a5c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;34]" time="0.0004940032958984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f4beef5aa58&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;35]" time="0.00048542022705078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f4beef5f9e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;36]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f4beef5fcf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;37]" time="0.0004973411560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f4bf470a390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;38]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f4c0f551f60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;39]" time="0.0005025863647460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f4beef4aa58&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;40]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f4beef6a0b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;0]" time="0.0008492469787597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f4beef6ab00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;1]" time="0.00047588348388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f4c0f551f60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;2]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f4bf470aeb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;3]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f4beef5f4e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;4]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f4bf4710240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;5]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f4beef41c18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;6]" time="0.00048232078552246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f4beef6a7b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;7]" time="0.0006062984466552734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f4beef6a320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;8]" time="0.0009181499481201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f4beef6f160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;9]" time="0.0004935264587402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f4beef6af98&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;10]" time="0.0004978179931640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f4beef6a7f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;11]" time="0.0005180835723876953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f4beef5a320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;12]" time="0.0004897117614746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f4beef5f9e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;13]" time="0.00052642822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f4bf470acc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;14]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f4beef4a128&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;15]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f4beef6f278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;16]" time="0.0008625984191894531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f4beef6f780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;17]" time="0.0005040168762207031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f4c0f5c88d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;18]" time="0.0005550384521484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f4bf4638898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;19]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f4beef5fc50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;20]" time="0.0005307197570800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f4beef5aef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;21]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f4beef6a2b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;22]" time="0.0004811286926269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f4beefa46a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;23]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f4beef6f2b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;24]" time="0.0010700225830078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f4beef6fda0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;25]" time="0.0004978179931640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f4beef6ac88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;26]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f4beef5abe0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;27]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f4bf46387f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;28]" time="0.0005331039428710938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f4bf470ad68&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;29]" time="0.000713348388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f4c0f5bf978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;30]" time="0.0006244182586669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f4beef6f400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;31]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f4beef6f518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;32]" time="0.0009036064147949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f4beef75400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;33]" time="0.0004994869232177734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f4beef6fb00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;34]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f4bf4702fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;35]" time="0.0004940032958984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f4bf4638358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;36]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f4bf46400b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;37]" time="0.0005028247833251953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f4beef5aba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;38]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f4beef6a390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;39]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f4beef75208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;0]" time="0.0008437633514404297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f4beef75a20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;1]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f4beef6a048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;2]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f4bf4640898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;3]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f4bf46389e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;4]" time="0.0005052089691162109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f4c0f5bf0b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;5]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f4beef6fc18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;6]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f4beef75b70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;7]" time="0.00048422813415527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f4beef75470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;8]" time="0.0009484291076660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f4beef7c080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;9]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f4beef75550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;10]" time="0.00047707557678222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f4beef6fbe0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;11]" time="0.00047469139099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f4beef6f400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;12]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f4bf46380b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;13]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f4bf47104e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;14]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f4bf45dacc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;15]" time="0.0006723403930664062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f4beef7c198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;16]" time="0.0009326934814453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f4beef7c6a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;17]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f4beef5f668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;18]" time="0.0005049705505371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f4bf46405f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;19]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f4c0f5bf0b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;20]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f4beef6f940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;21]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f4beef75898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;22]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f4beef75ef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;23]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f4beef7c1d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;24]" time="0.0012111663818359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f4beef7ccc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;25]" time="0.0005092620849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f4bf46384a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;26]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f4bf470a828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;27]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f4beef75ef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;28]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f4beef75828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;29]" time="0.0004925727844238281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f4beef6f9b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;30]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f4beef6ab70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;31]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f4beef413c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;32]" time="0.00047969818115234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f4beef50908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;33]" time="0.0008881092071533203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f4beef413c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;34]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f4beef6a978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;35]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f4beef6f470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;36]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f4beef757f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;37]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f4beef5f4e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;38]" time="0.00048279762268066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f4bf4638be0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;39]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f4bf45e38d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;40]" time="0.0005061626434326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f4beef7cb70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;0]" time="0.0008358955383300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f4bf45e30f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;1]" time="0.00046896934509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f4bf470a828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;2]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f4beef75c88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;3]" time="0.0005679130554199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f4beef6f860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;4]" time="0.0005142688751220703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f4beef6a390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;5]" time="0.0005004405975341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f4beef41b70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;6]" time="0.00054168701171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f4beef7ca20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;7]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f4beef07208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;8]" time="0.0006885528564453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f4beef07748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;9]" time="0.0006060600280761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f4beef7c978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;10]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f4beef6ae80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;11]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f4beefca9b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;12]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f4beef755f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;13]" time="0.0005147457122802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f4bf478e8d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;14]" time="0.0004680156707763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f4beef07320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;15]" time="0.0006017684936523438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f4beef07ac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;16]" time="0.0010442733764648438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f4beef0d048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;17]" time="0.0004949569702148438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f4beef077f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;18]" time="0.0005049705505371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f4bf478ec18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;19]" time="0.000560760498046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f4bf4640160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;20]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f4beef75da0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;21]" time="0.0004904270172119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f4beef6fba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;22]" time="0.0005395412445068359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f4beef7c0b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;23]" time="0.0006539821624755859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f4beef0d160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;24]" time="0.0011858940124511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f4beef0d668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;25]" time="0.0004887580871582031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f4beef6ab00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;26]" time="0.0005271434783935547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f4beef6f160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;27]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f4beef75710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;28]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f4bf478ee10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;29]" time="0.0005042552947998047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f4beef07860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;30]" time="0.0006029605865478516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f4beef07a90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;31]" time="0.0004911422729492188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f4beef0d160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;32]" time="0.0010313987731933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f4beef0dc88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;33]" time="0.0005872249603271484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f4beef07080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;34]" time="0.0006244182586669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f4bf478ee10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;35]" time="0.0005948543548583984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f4beef75780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;36]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f4beef6aac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;37]" time="0.0005285739898681641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f4beef7c208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;38]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f4beef0d128&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;39]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f4beef0d438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;40]" time="0.000881195068359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f4beef132e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;0]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f4beef0d320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;1]" time="0.0005400180816650391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f4beef7c208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;2]" time="0.000484466552734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f4beef50668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;3]" time="0.0004935264587402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f4c0f5c88d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;4]" time="0.0005176067352294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f4bf4638550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;5]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f4beef07048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;6]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f4beef130f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;7]" time="0.0009555816650390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f4beef13908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;8]" time="0.0005075931549072266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f4bf478ec18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;9]" time="0.0004894733428955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f4bf45dacc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;10]" time="0.0005307197570800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f4bf47948d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;11]" time="0.0004904270172119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f4beef7c6a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;12]" time="0.0004944801330566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f4beef0dda0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;13]" time="0.0005159378051757812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f4beef13518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;14]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f4beef13390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;15]" time="0.00109100341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f4beef13f28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;16]" time="0.00051116943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f4beef134e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;17]" time="0.0004963874816894531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f4beef0d470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;18]" time="0.0005545616149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f4bf46f1cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;19]" time="0.0005497932434082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f4bf4794828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;20]" time="0.0005252361297607422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f4beef6aeb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;21]" time="0.0005307197570800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f4beef07dd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;22]" time="0.000553131103515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f4beef19048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;23]" time="0.00090789794921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f4beef19588&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;24]" time="0.0004992485046386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f4beef5f588&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;25]" time="0.0005297660827636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f4bf46f8240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;26]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f4bf4794c18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;27]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f4beef0dac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;28]" time="0.0004813671112060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f4beef139b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;29]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f4beef133c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;30]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f4beef190f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;31]" time="0.0009233951568603516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f4beef19ba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;32]" time="0.0004763603210449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f4bf46e8a58&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;33]" time="0.00048422813415527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f4bf46f1a20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;34]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f4beef7cb70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;35]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f4beef6a5c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;36]" time="0.0005013942718505859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f4beef07048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;37]" time="0.0005486011505126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f4beef19898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;38]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f4beef192b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;39]" time="0.0012137889862060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f4beef20208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;40]" time="0.0004961490631103516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f4bf46f86d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;0]" time="0.0004942417144775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f4bf46f1eb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;1]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f4beef19940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;2]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f4beef19160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;3]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f4beef13ac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;4]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f4beef13fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;5]" time="0.0004999637603759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f4beef0def0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;6]" time="0.0004780292510986328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f4beef072e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;7]" time="0.0008955001831054688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f4beef0dac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;8]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f4beef13ac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;9]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f4beef197b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;10]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f4beef19a20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;11]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f4c0f5c88d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;12]" time="0.0005481243133544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f4bf46f8e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;13]" time="0.0005006790161132812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f4beef07710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;14]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f4beef7c7f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;15]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f4beef7c400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;16]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f4beef075c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;17]" time="0.00048041343688964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f4beef6f128&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;18]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f4bf478e2e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;19]" time="0.0004966259002685547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f4beef19438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;20]" time="0.0005018711090087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f4beef13cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;21]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f4beef0da20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;22]" time="0.0004973411560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f4beef200b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;23]" time="0.0008859634399414062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f4beef208d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;24]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f4beef13c18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;25]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f4beef19898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;26]" time="0.0004892349243164062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f4bf478e2e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;27]" time="0.0004892349243164062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f4beef6f8d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;28]" time="0.00047469139099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f4beef07048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;29]" time="0.000507354736328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f4beef7c828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;30]" time="0.00048160552978515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f4beef20080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;31]" time="0.0009684562683105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f4beef20e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;32]" time="0.0005013942718505859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f4bf470ad68&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;33]" time="0.0004961490631103516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f4bf46f14e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;34]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f4bf461ff98&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;35]" time="0.0004999637603759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f4beef19ef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;36]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f4beef13518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;37]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f4beef202e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;38]" time="0.0005609989166259766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f4beef20710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;39]" time="0.0008835792541503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f4beef2a470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;40]" time="0.0006420612335205078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f4beef20a58&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;0]" time="0.000514984130859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f4bf45eb438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;1]" time="0.0005862712860107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f4beef199b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;2]" time="0.0005080699920654297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f4bf4794c18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;3]" time="0.0004975795745849609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f4beef07cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;4]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f4bf4627278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;5]" time="0.0005056858062744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f4beef2a278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;6]" time="0.0008502006530761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f4beef2aa90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;7]" time="0.0004947185516357422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f4beef07550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;8]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f4bf461fba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;9]" time="0.0004856586456298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f4beef197b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;10]" time="0.0005030632019042969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f4beef13b70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;11]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f4beef20a58&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;12]" time="0.0004971027374267578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f4beef2ac18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;13]" time="0.0004792213439941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f4beef2a4e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;14]" time="0.0008447170257568359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f4beef2f0f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;15]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f4beef2a940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;16]" time="0.0005903244018554688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f4beef202b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;17]" time="0.0005979537963867188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f4beef13c88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;18]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f4bf467d3c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;19]" time="0.0004906654357910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f4c0f5c88d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;20]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f4beef07550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;21]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f4beef2f208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;22]" time="0.0008747577667236328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f4beef2f710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;23]" time="0.00048065185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f4bf46f8cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;24]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f4beef19748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;25]" time="0.00048160552978515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f4beef502e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;26]" time="0.0004909038543701172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f4beef20c88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;27]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f4beef2a748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;28]" time="0.0005280971527099609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f4beef2a5c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;29]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f4beef2f240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;30]" time="0.0009028911590576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f4beef2fd30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;31]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f4beef2a128&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;32]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f4beef205c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;33]" time="0.00048613548278808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f4bf467dcf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;34]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f4beef19748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;35]" time="0.0005176067352294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f4bf4627c50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;36]" time="0.00048804283142089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f4beef2f390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;37]" time="0.0004875659942626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f4beef2f4a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;38]" time="0.0008730888366699219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f4beef36390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;39]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f4beef2f390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;40]" time="0.0004825592041015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f4bf46f1f60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;0]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f4bf4686518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;1]" time="0.0005295276641845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f4bf467d710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;2]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f4beef20c50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;3]" time="0.0004904270172119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f4beef2a5c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;4]" time="0.00047588348388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f4beef36198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;5]" time="0.000946044921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f4beef369b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;6]" time="0.0005435943603515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f4beef20cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;7]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f4bf467dda0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;8]" time="0.0005114078521728516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f4bf4686278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;9]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f4beef075c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;10]" time="0.0005230903625488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f4beef2fba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;11]" time="0.00048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f4beef36ac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;12]" time="0.0005757808685302734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f4beef364e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;13]" time="0.0013480186462402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f4beef36fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;14]" time="0.0005893707275390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f4beef6aac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;15]" time="0.0005207061767578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f4bf467dfd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;16]" time="0.0007383823394775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f4beef36e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;17]" time="0.0006825923919677734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f4beef366d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;18]" time="0.0007143020629882812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f4beef2f2e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;19]" time="0.0005669593811035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f4beef2fd30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;20]" time="0.0005824565887451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f4beef2aeb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;21]" time="0.0005044937133789062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f4beef07550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;22]" time="0.0010058879852294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f4beef20e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;23]" time="0.0005154609680175781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f4beef2fcf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;24]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f4bf4627860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;25]" time="0.00048232078552246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f4beef36400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;26]" time="0.0005064010620117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f4beef36cf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;27]" time="0.0004799365997314453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f4bf46d4a90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;28]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f4bf4675e48&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;29]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f4beef50c50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;30]" time="0.0008351802825927734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f4beef50c50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;31]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f4bf46861d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;32]" time="0.0004837512969970703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f4bf467d128&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;33]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f4beef364a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;34]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f4beef2f208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;35]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f4bf465b550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;36]" time="0.00048804283142089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f4beef2aa90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;37]" time="0.0004782676696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f4beef3d518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;38]" time="0.0007784366607666016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f4beef3da58&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;39]" time="0.0005137920379638672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f4beef2f7f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;40]" time="0.0005261898040771484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f4bf4627f98&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;0]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f4beef36d30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;1]" time="0.0005331039428710938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f4bf46d4b38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;2]" time="0.0005636215209960938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f4beef7c470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;3]" time="0.000518798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f4beef3d240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;4]" time="0.0004754066467285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f4beef3ddd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;5]" time="0.0008814334869384766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f4beeec7358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;6]" time="0.000476837158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f4beef3dc50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;7]" time="0.0004923343658447266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f4bf4686518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;8]" time="0.00048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f4beef5f588&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;9]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f4beef36198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;10]" time="0.0004782676696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f4beef2f4e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;11]" time="0.0004887580871582031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f4bf465b400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;12]" time="0.0004832744598388672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f4beeec71d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;13]" time="0.0009243488311767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f4beeec7978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;14]" time="0.0005137920379638672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f4beef2f7f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;15]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f4beef36d30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;16]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f4beef192e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;17]" time="0.0004858970642089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f4bf461ffd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;18]" time="0.0005159378051757812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f4beef3d518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;19]" time="0.00048542022705078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f4beeec7a58&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;20]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f4beeec73c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;21]" time="0.0008816719055175781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f4beeec7f98&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;22]" time="0.0005421638488769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f4beeec7748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;23]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f4beef3deb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;24]" time="0.0004761219024658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f4beef7c240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;25]" time="0.0004754066467285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f4bf474f2e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;26]" time="0.0004773139953613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f4bf4627470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;27]" time="0.0005049705505371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f4bf465b9e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;28]" time="0.0005016326904296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f4beeecb0b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;29]" time="0.0008976459503173828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f4beeecb5f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;30]" time="0.0004987716674804688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f4beef366d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;31]" time="0.0005125999450683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f4bf46d4d30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;32]" time="0.0004737377166748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f4bf474f780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;33]" time="0.0004813671112060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f4beef3d240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;34]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f4beeec77b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;35]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f4beeec7470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;36]" time="0.0005438327789306641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f4beeecb0f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;37]" time="0.0008826255798339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f4beeecbc18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;38]" time="0.00048232078552246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f4beef7c198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;39]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f4beef3d160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;40]" time="0.0004754066467285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f4bf474fd68&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;0]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f4bf46d4a90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;1]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f4beef36860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;2]" time="0.0005624294281005859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f4beeecb278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;3]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f4beeecb390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;4]" time="0.0012052059173583984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f4beeed3278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;5]" time="0.0004982948303222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f4beeecb0f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;6]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f4bf47300f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;7]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f4bf46d4d30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;8]" time="0.0005142688751220703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f4bf474f2e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;9]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f4beef3d320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;10]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f4beeec7780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;11]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f4beeed3080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;12]" time="0.0009014606475830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f4beeed3898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;13]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f4beef3df60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;14]" time="0.000484466552734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f4bf4627f98&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;15]" time="0.0004801750183105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f4bf46d4400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;16]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f4bf47306d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;17]" time="0.0004754066467285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f4beeecbcf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;18]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f4beef2aeb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;19]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f4beeed3518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;20]" time="0.0008862018585205078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f4beeed3eb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;21]" time="0.0005087852478027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f4beeed3358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;22]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f4beeecbf60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;23]" time="0.0005011558532714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f4bf4730e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;24]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f4beef2fac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;25]" time="0.0004754066467285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f4bf474f588&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;26]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f4beef3d160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;27]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f4beeec7be0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;28]" time="0.0012595653533935547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f4beeed7518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;29]" time="0.000492095947265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f4bf474f6d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;30]" time="0.0004966259002685547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f4bf4730240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;31]" time="0.0004930496215820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f4beeed3fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;32]" time="0.0005006790161132812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f4beeed3cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;33]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f4beeecbcc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;34]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f4beef50908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;35]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f4beeec7320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;36]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f4beef3d828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;37]" time="0.0009033679962158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f4beef2aa90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;38]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f4beeecba90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;39]" time="0.0005075931549072266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f4beeecbcf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;40]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f4beeed3320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;0]" time="0.0005106925964355469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f4beef2f208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;1]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f4bf474f6d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;2]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f4bf473d630&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;3]" time="0.00047516822814941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f4beef0dc88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;4]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f4bf46d4d30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;5]" time="0.0005090236663818359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f4bf473d198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;6]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f4bf4730240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;7]" time="0.0004737377166748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f4beeed3898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;8]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f4beeed3c88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;9]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f4beeecbef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;10]" time="0.0005152225494384766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f4beef3d828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;11]" time="0.0004754066467285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f4beeed7080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;12]" time="0.0008556842803955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f4beeed7be0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;13]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f4beeecb5c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;14]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f4beef5f588&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;15]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f4beeed36a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;16]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f4bf47306d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;17]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f4bf47478d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;18]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f4beeed7710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;19]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f4beeed72b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;20]" time="0.0008654594421386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f4beeee4160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;21]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f4beeed7fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;22]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f4beeed75f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;23]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f4bf4773e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;24]" time="0.0004734992980957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f4beeed3550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;25]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f4bf477ca20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;26]" time="0.00047850608825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f4beeec7c88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;27]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f4beeee4278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;28]" time="0.0009551048278808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f4beeee4780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;29]" time="0.0006139278411865234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f4bf477c630&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;30]" time="0.0008425712585449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f4beeed3c88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;31]" time="0.0008654594421386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f4bf4730390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;32]" time="0.0006322860717773438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f4bf473d630&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;33]" time="0.0005528926849365234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f4beeed76a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;34]" time="0.0004973411560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f4beef0db00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;35]" time="0.00047898292541503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f4beeee42b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;36]" time="0.0009310245513916016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f4beeee4da0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;37]" time="0.0004925727844238281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f4beeed7a90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;38]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f4bf4773cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;39]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f4beeed3898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;40]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f4bf477c0f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;0]" time="0.00051116943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f4beeec7748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;1]" time="0.000476837158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f4beeee4400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;2]" time="0.0005042552947998047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f4beeee4518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;3]" time="0.0008640289306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f4beeeeb400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;4]" time="0.0005390644073486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f4beeee4a90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;5]" time="0.0004839897155761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f4beeec7c88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;6]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f4bf477c390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;7]" time="0.0004990100860595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f4bf4730b70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;8]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f4bf4773c18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;9]" time="0.0006115436553955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f4beeed7208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;10]" time="0.0004928112030029297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f4beeeeb208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;11]" time="0.0008411407470703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f4beeeeba20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;12]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f4bf4773fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;13]" time="0.0004904270172119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f4bf4730828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;14]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f4bf477ca20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;15]" time="0.0005028247833251953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f4beeec7c88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;16]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f4beeee49b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;17]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f4beeeebb70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;18]" time="0.0005156993865966797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f4beeeeb470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;19]" time="0.0008249282836914062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f4beeeef080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;20]" time="0.0004916191101074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f4beeeeb860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;21]" time="0.000484466552734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f4beeee4b00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;22]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f4bf49bc438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;23]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f4beeecbc50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;24]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f4beeed3358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;25]" time="0.0004942417144775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f4bf4773fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;26]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f4beeeef198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;27]" time="0.0008828639984130859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f4beeeef6a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;28]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f4bf473d438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;29]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f4bf477ca20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;30]" time="0.0005972385406494141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f4bf49bc780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;31]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f4beeee4ba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;32]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f4beeeeb7b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;33]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f4beeeeb550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;34]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f4beeeef1d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;35]" time="0.0008990764617919922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f4beeeefcc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;36]" time="0.0005078315734863281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f4beeee4908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;37]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f4bf49bc630&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;38]" time="0.0004894733428955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f4beeec7fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;39]" time="0.0004849433898925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f4bf477c390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;40]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f4beeed7d30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;0]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f4beeeef320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;1]" time="0.0005080699920654297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f4beeeef438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;2]" time="0.0012536048889160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f4beeef7320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;3]" time="0.0004811286926269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f4beeed3438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;4]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f4bf49b6470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;5]" time="0.0004911422729492188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f4beeeeffd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;6]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f4beeeefb38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;7]" time="0.0006973743438720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f4beeeeb710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;8]" time="0.0005135536193847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f4beeeeb3c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;9]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f4beeee4b70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;10]" time="0.0005125999450683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f4beeed7be0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;11]" time="0.0009002685546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f4beeee4128&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;12]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f4beeeebeb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;13]" time="0.0004818439483642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f4beeeefcf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;14]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f4beeeef208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;15]" time="0.0006105899810791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f4bf49bc4e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;16]" time="0.00046944618225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f4beeed3eb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;17]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f4bf4785390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;18]" time="0.0005922317504882812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f4beef3d8d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;19]" time="0.0008599758148193359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f4beef3d908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;20]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f4bf471d978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;21]" time="0.0004825592041015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f4beeec7c88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;22]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f4beeeefef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;23]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f4beeecbc50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;24]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f4bf47254e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;25]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f4beeee4128&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;26]" time="0.00048732757568359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f4beeef7828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;27]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f4beeef7d68&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;28]" time="0.00048160552978515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f4beeecb710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;29]" time="0.0005183219909667969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f4beeeef9b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;30]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f4beeeefa90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;31]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f4bf475a4e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;32]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f4bf477c438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;33]" time="0.0005097389221191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f4beeef7550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;34]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f4beee80128&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;35]" time="0.0008490085601806641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f4beee80668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;36]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f4beeef7518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;37]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f4bf46f8828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;38]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f4bf49bc198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;39]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f4beeeefb38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;40]" time="0.0004839897155761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f4bf4725fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;0]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f4beeee4b38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;1]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f4beee802e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;2]" time="0.0008571147918701172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f4beee80c88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;3]" time="0.0004923343658447266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f4beeeebe48&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;4]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f4beeeefe80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;5]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f4beeed3c88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;6]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f4bf471de10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;7]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f4beeef7e48&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;8]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f4beee808d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;9]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f4beee804a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;10]" time="0.0009038448333740234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f4beee892e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;11]" time="0.0004837512969970703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f4beee80780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;12]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f4beeef7f98&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;13]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f4bf46f8cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;14]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f4beeec7c88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;15]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f4beeeebd30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;16]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f4bf464ab70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;17]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f4beee890f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;18]" time="0.0008261203765869141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f4beee89908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;19]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f4bf464afd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;20]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f4beeeef898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;21]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f4bf475a0f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;22]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f4beeef7978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;23]" time="0.0004680156707763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f4beee80320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;24]" time="0.0005571842193603516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f4beee89518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;25]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f4beee89390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;26]" time="0.0008738040924072266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f4beee89f28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;27]" time="0.00042247772216796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f4beee894e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;28]" time="0.0004992485046386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f4beee80ef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;29]" time="0.00046515464782714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f4bf46f8828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;30]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f4bf475a2e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;31]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f4beeeefc88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;32]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f4bf464a8d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;33]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f4beee8d048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;34]" time="0.0008246898651123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f4beee8d588&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;35]" time="0.0004956722259521484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f4bf4725f60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;36]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f4bf49bcac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;37]" time="0.0004906654357910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f4beeef76a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;38]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f4beee80320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;39]" time="0.00047898292541503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f4beee899b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;40]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f4beee893c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;0]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f4beee8d0f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;1]" time="0.0011107921600341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f4beee8dba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;2]" time="0.0005178451538085938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f4beee89518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;3]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f4beee80320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;4]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f4beeef76d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;5]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f4beeeefa90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;6]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f4bf46514e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;7]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f4beee8d898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;8]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f4beee8d2b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;9]" time="0.0008780956268310547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f4beee95208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;10]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f4beee8d208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;11]" time="0.0004982948303222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f4bf4725a20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;12]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f4beeeef470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;13]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f4bf475a2e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;14]" time="0.0005135536193847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f4beee808d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;15]" time="0.000484466552734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f4beee89630&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;16]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f4beee95390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;17]" time="0.0012111663818359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f4beee95828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;18]" time="0.00047397613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f4bf475a2e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;19]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f4bf4651780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;20]" time="0.0005252361297607422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f4beee8def0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;21]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f4beee8de10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;22]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f4beee89cf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;23]" time="0.00048661231994628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f4beee892b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;24]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f4beeee4e80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;25]" time="0.00048279762268066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f4beeef7ac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;26]" time="0.0008411407470703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f4beee80cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;27]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f4beee89940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;28]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f4beee8d550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;29]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f4bf472d390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;30]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f4beeeefef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;31]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f4bf468eef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;32]" time="0.0005240440368652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f4beeef7908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;33]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f4beef0db00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;34]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f4beef0db00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;35]" time="0.00046896934509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f4bf468e5c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;36]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f4beeed3eb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;37]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f4bf472d2e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;38]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f4beee8dcc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;39]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f4beee896a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;40]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f4beee80cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;0]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f4beee951d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;1]" time="0.0008475780487060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f4beee95ef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;2]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f4beee896a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;3]" time="0.0005357265472412109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f4beee8dcc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;4]" time="0.0005130767822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f4bf4651438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;5]" time="0.0004863739013671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f4bf475a0f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;6]" time="0.0006036758422851562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f4beeef7630&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;7]" time="0.0004899501800537109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f4beee95a20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;8]" time="0.0005412101745605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f4beee950b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;9]" time="0.0009696483612060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f4beee9f470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;10]" time="0.0005049705505371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f4beee955c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;11]" time="0.0004856586456298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f4bf475a2e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;12]" time="0.00051116943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f4beeeeb780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;13]" time="0.0005261898040771484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f4beee8dfd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;14]" time="0.0004875659942626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f4bf465be48&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;15]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f4bf4617518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;16]" time="0.0005662441253662109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f4beee9f2b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;17]" time="0.0009057521820068359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f4beee9fa90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;18]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f4bf465be48&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;19]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f4beee8d6d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;20]" time="0.0005056858062744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f4beeeeb780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;21]" time="0.0005018711090087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f4beeef7048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;22]" time="0.00048041343688964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f4beee95a20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;23]" time="0.0004711151123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f4beee9fc18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;24]" time="0.0005042552947998047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f4beee9f4e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;25]" time="0.0009229183197021484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f4beeea70f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;26]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f4beee9f7b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;27]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f4beeed7080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;28]" time="0.0005209445953369141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f4beeef75f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;29]" time="0.0005242824554443359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f4bf4651198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;30]" time="0.0004878044128417969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f4beee8d0f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;31]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f4bf466f9e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;32]" time="0.0004901885986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f4beeea7208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;33]" time="0.0008490085601806641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f4beeea7710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;34]" time="0.0005040168762207031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f4beee89f98&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;35]" time="0.0004999637603759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f4beee8d208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;36]" time="0.0005085468292236328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f4bf468e860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;0]" time="0.0005011558532714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f4beee95978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;1]" time="0.000537872314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f4beee9fc18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;2]" time="0.0005064010620117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f4beee9f128&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;3]" time="0.0005021095275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f4beeea7240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;4]" time="0.0008885860443115234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f4beeea7d30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;5]" time="0.0005040168762207031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f4beee9f780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;6]" time="0.00048160552978515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f4beee95b38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;7]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f4bf4651e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;8]" time="0.0004773139953613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f4beee8d6a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;9]" time="0.0004906654357910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f4bf466f208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;10]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f4beeea7390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;11]" time="0.0005023479461669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f4beeea74a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;12]" time="0.0008838176727294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f4beeead390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;13]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f4beeea7898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;14]" time="0.0005044937133789062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f4bf466f0b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;15]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f4beee806a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;16]" time="0.0005753040313720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f4beee955c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;17]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f4beee9f5f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;18]" time="0.0004868507385253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f4bf4715780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;19]" time="0.0005590915679931641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f4beeead198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;20]" time="0.0008707046508789062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f4beeead9b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;21]" time="0.0004904270172119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f4beee9fe10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;22]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f4beee95b38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;23]" time="0.0005371570587158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f4beee8d6d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;24]" time="0.0005266666412353516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f4bf466fd30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;25]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f4beeea7ba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;26]" time="0.00047516822814941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f4beeeadac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;27]" time="0.0004763603210449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f4beeead4e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;28]" time="0.0008847713470458984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f4beeeadfd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;29]" time="0.000484466552734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f4beeead710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;30]" time="0.0005025863647460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f4beeea7400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;31]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f4bf466f748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;32]" time="0.0005190372467041016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f4beee895c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;33]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f4beee95208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;34]" time="0.0004949569702148438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f4beee9f7b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;35]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f4beeeb2128&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;36]" time="0.0012831687927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f4beeeb2630&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;0]" time="0.0004868507385253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f4bf466f208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;1]" time="0.0005021095275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f4bf4715b70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;2]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f4beeeadac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;3]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f4beeead748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;4]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f4beeea7e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;5]" time="0.0004897117614746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f4beee9f6d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;6]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f4bf468e320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;7]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f4beeed7be0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;8]" time="0.0009114742279052734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f4beee95400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;9]" time="0.00048160552978515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f4beee9fe80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;10]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f4beeea7f98&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;11]" time="0.0004899501800537109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f4beeeadfd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;12]" time="0.0004878044128417969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f4beeead198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;13]" time="0.0004982948303222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f4bf47154e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;14]" time="0.0004889965057373047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f4bf472d390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;15]" time="0.0005400180816650391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f4beeeb2240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;16]" time="0.0010843276977539062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f4beee806a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;17]" time="0.0005028247833251953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f4bf46d73c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;18]" time="0.0005283355712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f4beeead7f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;19]" time="0.0004849433898925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f4beeead710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;20]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f4beeea70b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;21]" time="0.00048160552978515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f4bf46e18d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;22]" time="0.0004956722259521484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f4beeeb2240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;23]" time="0.0004987716674804688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f4beeeb2b38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;24]" time="0.0006070137023925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f4beeebd0b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;25]" time="0.0006670951843261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f4bf468ecf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;26]" time="0.0007376670837402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f4beeef7be0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;27]" time="0.0007002353668212891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f4beeea7240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;28]" time="0.0006198883056640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f4beeead828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;29]" time="0.0005176067352294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f4bf47152e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;30]" time="0.0005295276641845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f4beee895c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;31]" time="0.0005085468292236328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f4beeebd438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;32]" time="0.0009012222290039062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f4beeebd978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;33]" time="0.00048422813415527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f4bf47154e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;34]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f4beeead518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;35]" time="0.0004949569702148438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f4beeea7cf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;36]" time="0.0005285739898681641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f4bf46e1588&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;37]" time="0.00057220458984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f4beeeb2c18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;38]" time="0.0005161762237548828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f4beeebd9e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;39]" time="0.000492095947265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f4beeebd2b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;40]" time="0.0009005069732666016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f4beeebdf98&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;0]" time="0.0004849433898925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f4beeebd828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;1]" time="0.0004706382751464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f4beeeb2198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;2]" time="0.0004987716674804688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f4bf46e1ac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;3]" time="0.00052642822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f4beeea7cf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;4]" time="0.0004916191101074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f4beeead710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;5]" time="0.0004811286926269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f4bf46d7eb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;6]" time="0.0005123615264892578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f4beee430b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;7]" time="0.0009214878082275391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f4beee435f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;8]" time="0.000530242919921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f4beeeadd30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;9]" time="0.0005583763122558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f4beee9fa90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;10]" time="0.0005180835723876953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f4beee95940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;11]" time="0.0005080699920654297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f4beeeb29e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;12]" time="0.0005261898040771484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f4beeebd470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;13]" time="0.0005145072937011719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f4beeebd278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;14]" time="0.0005047321319580078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f4beee430f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;15]" time="0.0008783340454101562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f4beee43c18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;16]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f4beeebd6d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;17]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f4beeeb2c18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;18]" time="0.0005023479461669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f4beeea7240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;19]" time="0.0004811286926269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f4beee9fe80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;20]" time="0.0004711151123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f4bf4715f60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;21]" time="0.0005002021789550781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f4beee43278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;22]" time="0.0004754066467285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f4beee43390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;23]" time="0.0009472370147705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f4beee4a278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;24]" time="0.00047469139099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f4beee43208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;25]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f4bf46e8588&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;26]" time="0.0004904270172119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f4beeeadd30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;27]" time="0.0005135536193847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f4beeea7a90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;28]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f4beeeb20f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;29]" time="0.0005667209625244141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f4beeebd550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;30]" time="0.0004818439483642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f4beee4a080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;31]" time="0.0009481906890869141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f4beee4a898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;32]" time="0.0005810260772705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f4beeebdd30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;33]" time="0.0005922317504882812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f4bf46e10f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;34]" time="0.0005180835723876953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f4bf46d7fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;35]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f4bf46b3160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;36]" time="0.0004830360412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f4beee43cf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;37]" time="0.0005013942718505859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f4beee43f28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;38]" time="0.0005340576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f4beee4a518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;39]" time="0.0008928775787353516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f4beee4aeb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;40]" time="0.0005085468292236328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f4beee4a080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;0]" time="0.0006358623504638672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f4beee43f98&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;1]" time="0.0006208419799804688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f4beee43e48&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;2]" time="0.0005543231964111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f4bf46b3748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;3]" time="0.0006487369537353516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f4beeea7f60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;4]" time="0.0005450248718261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f4beeebdcf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;5]" time="0.0006093978881835938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f4bf46ac5f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;6]" time="0.0008995532989501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f4beee50518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;7]" time="0.0005085468292236328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f4beeeb2908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;8]" time="0.0005509853363037109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f4bf46d73c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;9]" time="0.0005323886871337891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f4bf46b3a90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;10]" time="0.0004837512969970703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f4beee43e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;11]" time="0.0005121231079101562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f4beee4a6a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;12]" time="0.0004971027374267578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f4beee4acf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;13]" time="0.0005991458892822266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f4beee50390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;14]" time="0.0013408660888671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f4beee50b38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;15]" time="0.0005068778991699219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f4bf46b3e80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;16]" time="0.0005164146423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f4beee4aa20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;17]" time="0.0004894733428955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f4beee4ab70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;18]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f4beee43a20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;19]" time="0.0004780292510986328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f4beee43c18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;20]" time="0.0005700588226318359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f4beeebd9b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;21]" time="0.0004966259002685547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f4beeeb2d68&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;22]" time="0.0005214214324951172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f4beeed7be0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;23]" time="0.0010423660278320312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f4beeeb2da0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;24]" time="0.0005564689636230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f4beeebdf60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;25]" time="0.0005984306335449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f4beee43dd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;26]" time="0.000537872314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f4beee4a080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;27]" time="0.0005323886871337891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f4beee4aa20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;28]" time="0.0005464553833007812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f4bf46c3358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;29]" time="0.0006282329559326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f4bf46b3d30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;30]" time="0.0006659030914306641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f4beee50710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;31]" time="0.0007548332214355469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f4beee95b38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;32]" time="0.0005786418914794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f4bf46b3e80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;33]" time="0.0005729198455810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f4bf46c3898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;34]" time="0.0004897117614746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f4beee4acc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;35]" time="0.0005104541778564453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f4beee43208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;36]" time="0.0005998611450195312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f4beeebd710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;37]" time="0.0004999637603759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f4beee50be0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;38]" time="0.0005338191986083984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f4beee504e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;39]" time="0.0009145736694335938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f4beee5d240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;40]" time="0.0005114078521728516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f4beee50668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;0]" time="0.0004911422729492188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f4bf46d7eb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;1]" time="0.0004904270172119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f4beee43c50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;2]" time="0.000492095947265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f4bf46cb2b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;3]" time="0.0004961490631103516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f4bf472d2e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;4]" time="0.0005118846893310547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f4bf46badd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;5]" time="0.0005648136138916016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f4beee5d048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;6]" time="0.0009827613830566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f4beee5d780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;7]" time="0.0005230903625488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f4bf46c3d30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;8]" time="0.0004909038543701172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f4beee4a240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;9]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f4bf45f34e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;10]" time="0.000560760498046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f4beee43828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;11]" time="0.0005774497985839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f4beee50ef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;12]" time="0.0005583763122558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f4beee505f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;13]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f4beee5d048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;14]" time="0.0009164810180664062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f4beee5dda0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;15]" time="0.00048041343688964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f4bf46d73c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;16]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f4beeebd438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;17]" time="0.0004975795745849609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f4bf45f38d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;18]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f4beee4a940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;19]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f4bf46c3dd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;20]" time="0.0004813671112060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f4beee5d2e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;21]" time="0.0006248950958251953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f4beee5d550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;22]" time="0.0010499954223632812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f4beee64400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;23]" time="0.0006756782531738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f4beee5d8d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;24]" time="0.000629425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f4bf46bac88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;25]" time="0.000530242919921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f4bf472d2e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;26]" time="0.0005826950073242188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f4bf45f3780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;27]" time="0.0005702972412109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f4beee43c18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;28]" time="0.0005385875701904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f4beee50f28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;29]" time="0.0006439685821533203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f4beee64208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;30]" time="0.000988006591796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f4beee64a20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;31]" time="0.0006365776062011719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f4beee43c50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;32]" time="0.0005826950073242188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f4bf45f3b70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;33]" time="0.0006003379821777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f4bf46ac550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;34]" time="0.00061798095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f4beee5d940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;35]" time="0.0005009174346923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f4beee5d400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;36]" time="0.0005657672882080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f4beee64b70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;37]" time="0.0005426406860351562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f4beee64470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;38]" time="0.0010967254638671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f4beee69080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;39]" time="0.0005714893341064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f4beee647f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;40]" time="0.0005385875701904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f4bf45f9438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;0]" time="0.0006082057952880859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f4beee5d438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;1]" time="0.0006196498870849609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f4bf46c3208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;2]" time="0.0005118846893310547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f4bf46cb160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;3]" time="0.0005795955657958984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f4beee43c50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;4]" time="0.0005443096160888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f4beee69198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;5]" time="0.0010972023010253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f4beee696a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;6]" time="0.0006184577941894531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f4bf45f3f60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;7]" time="0.0006420612335205078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f4beee4ab70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;8]" time="0.0006530284881591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f4beee5d080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;9]" time="0.0005986690521240234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f4bf45f92e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;10]" time="0.0006208419799804688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f4beee646a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;11]" time="0.00074005126953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f4beee64be0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;12]" time="0.0005788803100585938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f4beee691d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;13]" time="0.0010216236114501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f4beee69cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;14]" time="0.0005295276641845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f4beee648d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;15]" time="0.0005624294281005859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f4beee5d940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;16]" time="0.0006251335144042969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f4bf47648d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;17]" time="0.0006566047668457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f4bf46ac550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;18]" time="0.0007128715515136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f4beee50668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;19]" time="0.000659942626953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f4beee69320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;20]" time="0.0006487369537353516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f4beee69438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;21]" time="0.0009958744049072266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f4beee71320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;22]" time="0.000518798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f4beee69a20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;23]" time="0.00047469139099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f4beee501d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;24]" time="0.00048160552978515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f4bf46ac5f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;25]" time="0.0005207061767578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f4bf47648d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;26]" time="0.0005133152008056641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f4beee5deb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;27]" time="0.0005311965942382812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f4beee64898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;28]" time="0.0004813671112060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f4beee71128&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;29]" time="0.0018794536590576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f4beee71940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;30]" time="0.0005757808685302734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f4bf4764780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;31]" time="0.0006318092346191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f4bf476c780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;32]" time="0.0006089210510253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f4beee69da0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;33]" time="0.0007631778717041016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f4beee69fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;34]" time="0.0005538463592529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f4beee64ef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;35]" time="0.0006568431854248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f4beee5d080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;36]" time="0.0006356239318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f4bf46babe0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;37]" time="0.0006275177001953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f4beeed7dd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;38]" time="0.001035928726196289"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f4bf46baf28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;39]" time="0.0005350112915039062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f4bf46d7fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;40]" time="0.0005288124084472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f4beeeadda0&gt;</skipped></testcase><testcase classname="src.pymortests.parameters" file="src/pymortests/parameters.py" line="18" name="test_uniform" time="0.0005803108215332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/parameters.py:18: &lt;py._xmlgen.raw object at 0x7f4beee691d0&gt;</skipped></testcase><testcase classname="src.pymortests.parameters" file="src/pymortests/parameters.py" line="25" name="test_randomly" time="0.0005624294281005859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/parameters.py:25: &lt;py._xmlgen.raw object at 0x7f4bf476c198&gt;</skipped></testcase><testcase classname="src.pymortests.playground" file="src/pymortests/playground.py" line="12" name="test_eval" time="0.0005915164947509766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/playground.py:12: &lt;py._xmlgen.raw object at 0x7f4bf46c3160&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-False-False-False-1-1]" time="0.0006632804870605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf45f92e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-False-False-False-1-2]" time="0.0005257129669189453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee71588&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-False-False-False-2-1]" time="0.0009047985076904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beeeb2dd8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-False-False-False-2-2]" time="0.0005261898040771484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beeebd160&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-False-False-True-1-1]" time="0.0005407333374023438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf476cc18&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-False-False-True-1-2]" time="0.0005276203155517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee69a90&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-False-False-True-2-1]" time="0.0005240440368652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee64550&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-False-False-True-2-2]" time="0.0005133152008056641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee5db70&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-True-False-False-1-1]" time="0.0005283355712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee71438&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-True-False-False-1-2]" time="0.0005211830139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee71ef0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-True-False-False-2-1]" time="0.0005335807800292969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee7a470&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-True-False-False-2-2]" time="0.0005362033843994141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee71780&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-True-False-True-1-1]" time="0.0004982948303222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf4615cf8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-True-False-True-1-2]" time="0.00046896934509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee69390&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-True-False-True-2-1]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee698d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-True-False-True-2-2]" time="0.0005064010620117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee43c18&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-True-True-False-1-1]" time="0.0004909038543701172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf4764b70&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-True-True-False-1-2]" time="0.0005769729614257812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee7a7f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-True-True-False-2-1]" time="0.0009744167327880859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee7ad30&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-True-True-False-2-2]" time="0.0004897117614746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf46ac4a8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-True-True-True-1-1]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee69cf8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-True-True-True-1-2]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee64588&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-True-True-True-2-1]" time="0.0005049705505371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf46154a8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-False-True-True-True-2-2]" time="0.0004839897155761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee71c18&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-False-False-False-1-1]" time="0.0007450580596923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee7a8d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-False-False-False-1-2]" time="0.0005583763122558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee7a668&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-False-False-False-2-1]" time="0.0009453296661376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedff390&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-False-False-False-2-2]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee7a8d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-False-False-True-1-1]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee717f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-False-False-True-1-2]" time="0.0005183219909667969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf4615470&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-False-False-True-2-1]" time="0.0004799365997314453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee69f28&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-False-False-True-2-2]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf476c240&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-True-False-False-1-1]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf4604898&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-True-False-False-1-2]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedff1d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-True-False-False-2-1]" time="0.0008542537689208984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedff9b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-True-False-False-2-2]" time="0.0004780292510986328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf45f9240&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-True-False-True-1-1]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee69a20&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-True-False-True-1-2]" time="0.0005030632019042969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee5d240&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-True-False-True-2-1]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee71eb8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-True-False-True-2-2]" time="0.0004951953887939453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee7a080&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-True-True-False-1-1]" time="0.0004775524139404297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedffac8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-True-True-False-1-2]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedff4e0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-True-True-False-2-1]" time="0.0008795261383056641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedfffd0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-True-True-False-2-2]" time="0.00046515464782714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedff710&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-True-True-True-1-1]" time="0.0004954338073730469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee7af28&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-True-True-True-1-2]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf4615da0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-True-True-True-2-1]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf46baf28&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-scipy-True-True-True-True-2-2]" time="0.00048279762268066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee69e80&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-False-False-False-1-1]" time="0.00046944618225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf4764e10&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-False-False-False-1-2]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee05128&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-False-False-False-2-1]" time="0.0009336471557617188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee05630&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-False-False-False-2-2]" time="0.0004780292510986328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf476c438&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-False-False-True-1-1]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beeebdf60&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-False-False-True-1-2]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf4615ef0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-False-False-True-2-1]" time="0.0005013942718505859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee7a0b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-False-False-True-2-2]" time="0.00047588348388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedffcc0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-True-False-False-1-1]" time="0.00047469139099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedffb70&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-True-False-False-1-2]" time="0.0005109310150146484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee05160&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-True-False-False-2-1]" time="0.0008928775787353516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee05c50&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-True-False-False-2-2]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf4606438&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-True-False-True-1-1]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee7aba8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-True-False-True-1-2]" time="0.0004916191101074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee71d68&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-True-False-True-2-1]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee64dd8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-True-False-True-2-2]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beeeb27b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-True-True-False-1-1]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee052b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-True-True-False-1-2]" time="0.00047588348388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee053c8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-True-True-False-2-1]" time="0.000881195068359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee0d2b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-True-True-False-2-2]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee05748&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-True-True-True-1-1]" time="0.0005202293395996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf46074e0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-True-True-True-1-2]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee64588&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-True-True-True-2-1]" time="0.0005166530609130859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf4615668&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-False-True-True-True-2-2]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf45cdc18&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-False-False-False-1-1]" time="0.0005004405975341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedffe80&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-False-False-False-1-2]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee0d0b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-False-False-False-2-1]" time="0.0008406639099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee0d8d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-False-False-False-2-2]" time="0.0006067752838134766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf4605748&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-False-False-True-1-1]" time="0.0004932880401611328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee4a588&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-False-False-True-1-2]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee64588&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-False-False-True-2-1]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf4607b38&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-False-False-True-2-2]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee05d68&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-True-False-False-1-1]" time="0.0005230903625488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee0d5c0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-True-False-False-1-2]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee0d080&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-True-False-False-2-1]" time="0.0012552738189697266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee0def0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-True-False-False-2-2]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf45f9588&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-True-False-True-1-1]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf4605748&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-True-False-True-1-2]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee0dcc0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-True-False-True-2-1]" time="0.0004923343658447266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee0d4e0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-True-False-True-2-2]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee05a90&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-True-True-False-1-1]" time="0.0005083084106445312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf4607b38&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-True-True-False-1-2]" time="0.0004825592041015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedff9e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-True-True-False-2-1]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee7a470&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-True-True-False-2-2]" time="0.0009236335754394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedff668&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-True-True-True-1-1]" time="0.0004811286926269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee05898&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-True-True-True-1-2]" time="0.00048613548278808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee0d550&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-True-True-True-2-1]" time="0.0004818439483642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee0dba8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-slycot-True-True-True-True-2-2]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf46d7fd0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-False-False-False-1-1]" time="0.0005066394805908203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf4569a20&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-False-False-False-1-2]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee7add8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-False-False-False-2-1]" time="0.00047087669372558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee71c50&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-False-False-False-2-2]" time="0.00048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee71c50&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-False-False-True-1-1]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee7a240&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-False-False-True-1-2]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf4569eb8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-False-False-True-2-1]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee0dbe0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-False-False-True-2-2]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee0da90&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-True-False-False-1-1]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee05320&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-True-False-False-1-2]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf4607b38&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-True-False-False-2-1]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee170b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-True-False-False-2-2]" time="0.0008704662322998047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee175f8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-True-False-True-1-1]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee05d68&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-True-False-True-1-2]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf456c588&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-True-False-True-2-1]" time="0.0004761219024658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee0dcc0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-True-False-True-2-2]" time="0.0005018711090087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee5d240&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-True-True-False-1-1]" time="0.0004801750183105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee69cf8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-True-True-False-1-2]" time="0.0005209445953369141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beeeb27b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-True-True-False-2-1]" time="0.0004818439483642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee170f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-True-True-False-2-2]" time="0.000946044921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee17b38&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-True-True-True-1-1]" time="0.0004930496215820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee69cf8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-True-True-True-1-2]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf4605a90&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-True-True-True-2-1]" time="0.00047469139099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee0d6a0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-False-True-True-True-2-2]" time="0.0004875659942626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf456ca20&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-False-False-False-1-1]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee057b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-False-False-False-1-2]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee177f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-False-False-False-2-1]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee17358&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-False-False-False-2-2]" time="0.0009007453918457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee1c198&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-False-False-True-1-1]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee17fd0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-False-False-True-1-2]" time="0.000614166259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee17208&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-False-False-True-2-1]" time="0.0006241798400878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf456c8d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-False-False-True-2-2]" time="0.0004901885986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee0d6a0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-True-False-False-1-1]" time="0.00049591064453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee5d240&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-True-False-False-1-2]" time="0.0005185604095458984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf4569390&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-True-False-False-2-1]" time="0.0005044937133789062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee1c2e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-True-False-False-2-2]" time="0.0009486675262451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee1c7b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-True-False-True-1-1]" time="0.0005328655242919922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf4573ac8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-True-False-True-1-2]" time="0.0005028247833251953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee0d940&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-True-False-True-2-1]" time="0.0005118846893310547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf456ce10&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-True-False-True-2-2]" time="0.0005087852478027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee05630&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-True-True-False-1-1]" time="0.0004839897155761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee176d8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-True-True-False-1-2]" time="0.0005121231079101562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee50eb8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-True-True-False-2-1]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee1c208&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-True-True-False-2-2]" time="0.0008559226989746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee1cdd8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-True-True-True-1-1]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee179b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-True-True-True-1-2]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf456c198&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-True-True-True-2-1]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee0d9e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[10-pymess_dense_nm_gmpcare-True-True-True-True-2-2]" time="0.0004870891571044922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf45736d8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-False-False-False-1-1]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee7a7b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-False-False-False-1-2]" time="0.0004987716674804688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee1c438&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-False-False-False-2-1]" time="0.0005216598510742188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee1c550&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-False-False-False-2-2]" time="0.00089263916015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee24438&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-False-False-True-1-1]" time="0.0004951953887939453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee1c9b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-False-False-True-1-2]" time="0.0004775524139404297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf4569390&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-False-False-True-2-1]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf4573e10&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-False-False-True-2-2]" time="0.0004944801330566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf456c438&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-True-False-False-1-1]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf457f2e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-True-False-False-1-2]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee17e80&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-True-False-False-2-1]" time="0.0005159378051757812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee24240&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-True-False-False-2-2]" time="0.0009696483612060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee24a58&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-True-False-True-1-1]" time="0.0005357265472412109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedffd30&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-True-False-True-1-2]" time="0.0005075931549072266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf456c198&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-True-False-True-2-1]" time="0.0005543231964111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf4573978&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-True-False-True-2-2]" time="0.0005116462707519531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee4a588&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-True-True-False-1-1]" time="0.0005698204040527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee1cac8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-True-True-False-1-2]" time="0.0005974769592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee24ac8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-True-True-False-2-1]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee244a8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-True-True-False-2-2]" time="0.0008804798126220703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee2b0b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-True-True-True-1-1]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee248d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-True-True-True-1-2]" time="0.0005285739898681641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee1c8d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-True-True-True-2-1]" time="0.0005037784576416016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee7a240&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-False-True-True-True-2-2]" time="0.0005018711090087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf45730f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-False-False-False-1-1]" time="0.0005164146423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf457ffd0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-False-False-False-1-2]" time="0.0005481243133544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedffd30&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-False-False-False-2-1]" time="0.0004839897155761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee2b1d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-False-False-False-2-2]" time="0.0008962154388427734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee2b6d8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-False-False-True-1-1]" time="0.00049591064453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf457fcc0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-False-False-True-1-2]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee0d3c8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-False-False-True-2-1]" time="0.0004999637603759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee7a9b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-False-False-True-2-2]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee1c8d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-True-False-False-1-1]" time="0.0004894733428955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee24ac8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-True-False-False-1-2]" time="0.0004901885986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee24048&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-True-False-False-2-1]" time="0.00048160552978515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee2b208&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-True-False-False-2-2]" time="0.0012729167938232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee2bcf8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-True-False-True-1-1]" time="0.0004889965057373047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf45738d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-True-False-True-1-2]" time="0.0004858970642089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee05748&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-True-False-True-2-1]" time="0.0004813671112060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee24240&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-True-False-True-2-2]" time="0.0005049705505371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee24438&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-True-True-False-1-1]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee1c7f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-True-True-False-1-2]" time="0.0005197525024414062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee17d68&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-True-True-False-2-1]" time="0.0006792545318603516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee715c0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-True-True-False-2-2]" time="0.0007491111755371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedff358&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-True-True-True-1-1]" time="0.0009708404541015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee7af60&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-True-True-True-1-2]" time="0.0004944801330566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee17cc0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-True-True-True-2-1]" time="0.0006039142608642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee1c2e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-scipy-True-True-True-True-2-2]" time="0.0005021095275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee24c50&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-False-False-False-1-1]" time="0.0005807876586914062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf457fac8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-False-False-False-1-2]" time="0.0004706382751464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf45738d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-False-False-False-2-1]" time="0.0004775524139404297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf4588198&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-False-False-False-2-2]" time="0.000606536865234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee2bba8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-False-False-True-1-1]" time="0.0008947849273681641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf4588240&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-False-False-True-1-2]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee4a588&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-False-False-True-2-1]" time="0.0004909038543701172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee24a90&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-False-False-True-2-2]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee1c4a8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-True-False-False-1-1]" time="0.00048279762268066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee711d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-True-False-False-1-2]" time="0.000484466552734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee7af28&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-True-False-False-2-1]" time="0.0004973411560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee2ba58&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-True-False-False-2-2]" time="0.0005202293395996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee34240&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-True-False-True-1-1]" time="0.0005273818969726562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee34780&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-True-False-True-1-2]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf45698d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-True-False-True-2-1]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee710f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-True-False-True-2-2]" time="0.0004839897155761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee1ce80&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-True-True-False-1-1]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee24438&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-True-True-False-1-2]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee0d9e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-True-True-False-2-1]" time="0.0005223751068115234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee34470&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-True-True-False-2-2]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee34b00&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-True-True-True-1-1]" time="0.0008974075317382812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee39080&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-True-True-True-1-2]" time="0.00047588348388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee34080&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-True-True-True-2-1]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf4588b70&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-False-True-True-True-2-2]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf457f2e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-False-False-False-1-1]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee1cda0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-False-False-False-1-2]" time="0.0004870891571044922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf4591d68&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-False-False-False-2-1]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee7a240&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-False-False-False-2-2]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee39198&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-False-False-True-1-1]" time="0.0010945796966552734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee396a0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-False-False-True-1-2]" time="0.0005385875701904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee176d8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-False-False-True-2-1]" time="0.0004801750183105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf4591780&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-False-False-True-2-2]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee24ba8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-True-False-False-1-1]" time="0.0004918575286865234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf4588588&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-True-False-False-1-2]" time="0.0004830360412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee34d30&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-True-False-False-2-1]" time="0.000499725341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee34b00&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-True-False-False-2-2]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee39198&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-True-False-True-1-1]" time="0.0008745193481445312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee39cc0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-True-False-True-1-2]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee348d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-True-False-True-2-1]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf457f828&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-True-False-True-2-2]" time="0.0005505084991455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee24d68&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-True-True-False-1-1]" time="0.00047469139099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf4591f60&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-True-True-False-1-2]" time="0.0005247592926025391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee2bba8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-True-True-False-2-1]" time="0.000492095947265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee39160&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-True-True-False-2-2]" time="0.0005085468292236328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee39470&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-True-True-True-1-1]" time="0.0009982585906982422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedc1320&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-True-True-True-1-2]" time="0.00048279762268066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee39358&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-True-True-True-2-1]" time="0.0005321502685546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee2bba8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-slycot-True-True-True-True-2-2]" time="0.0005080699920654297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee711d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-False-False-False-1-1]" time="0.0004990100860595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee247f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-False-False-False-1-2]" time="0.0005538463592529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee34da0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-False-False-False-2-1]" time="0.0006363391876220703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf451a588&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-False-False-False-2-2]" time="0.0004994869232177734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedc1128&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-False-False-True-1-1]" time="0.0008747577667236328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedc1940&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-False-False-True-1-2]" time="0.0004706382751464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee34358&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-False-False-True-2-1]" time="0.00046515464782714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf4604780&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-False-False-True-2-2]" time="0.0005114078521728516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee175c0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-True-False-False-1-1]" time="0.000476837158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee2b9b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-True-False-False-1-2]" time="0.0006544589996337891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee39710&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-True-False-False-2-1]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedc19e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-True-False-False-2-2]" time="0.0004706382751464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedc1400&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-True-False-True-1-1]" time="0.0009236335754394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedc1f60&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-True-False-True-1-2]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedc15f8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-True-False-True-2-1]" time="0.00048661231994628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee39a58&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-True-False-True-2-2]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf4524588&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-True-True-False-1-1]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee2b0f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-True-True-False-1-2]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee24dd8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-True-True-False-2-1]" time="0.0005190372467041016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee34ba8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-True-True-False-2-2]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedca080&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-True-True-True-1-1]" time="0.0009322166442871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedca5c0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-True-True-True-1-2]" time="0.0005025863647460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf457f390&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-True-True-True-2-1]" time="0.0005323886871337891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf4591780&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-False-True-True-True-2-2]" time="0.00048065185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf4524198&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-False-False-False-1-1]" time="0.00048279762268066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee39dd8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-False-False-False-1-2]" time="0.0005128383636474609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedc19e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-False-False-False-2-1]" time="0.0004775524139404297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedc1390&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-False-False-False-2-2]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedca0b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-False-False-True-1-1]" time="0.0008504390716552734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedcabe0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-False-False-True-1-2]" time="0.00049591064453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee39710&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-False-False-True-2-1]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf4524e10&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-False-False-True-2-2]" time="0.0004980564117431641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee50c88&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-True-False-False-1-1]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf457f828&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-True-False-False-1-2]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf452c240&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-True-False-False-2-1]" time="0.0004935264587402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedca240&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-True-False-False-2-2]" time="0.0005066394805908203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedca358&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-True-False-True-1-1]" time="0.001424551010131836"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedcf240&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-True-False-True-1-2]" time="0.0005161762237548828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee710f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-True-False-True-2-1]" time="0.0005438327789306641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedcadd8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-True-False-True-2-2]" time="0.0005331039428710938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedca0b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-True-True-False-1-1]" time="0.0005261898040771484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedcaba8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-True-True-False-1-2]" time="0.0004887580871582031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedc1c18&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-True-True-False-2-1]" time="0.0005037784576416016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf451aa20&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-True-True-False-2-2]" time="0.0005419254302978516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee396a0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-True-True-True-1-1]" time="0.0004763603210449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee34588&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-True-True-True-1-2]" time="0.0009911060333251953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee390b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-True-True-True-2-1]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf451a588&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[20-pymess_dense_nm_gmpcare-True-True-True-True-2-2]" time="0.00047707557678222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedc1400&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-False-False-False-1-1]" time="0.00046515464782714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedca128&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-False-False-False-1-2]" time="0.0004680156707763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedca320&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-False-False-False-2-1]" time="0.0004987716674804688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf457f2e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-False-False-False-2-2]" time="0.0004706382751464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf452c780&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-False-False-True-1-1]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee2b470&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-False-False-True-1-2]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee2b240&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-False-False-True-2-1]" time="0.00048661231994628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf452ce10&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-False-False-True-2-2]" time="0.00047087669372558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf45240f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-True-False-False-1-1]" time="0.0005180835723876953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedca128&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-True-False-False-1-2]" time="0.0004870891571044922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedc1908&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-True-False-False-2-1]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf4537390&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-True-False-False-2-2]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee34cf8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-True-False-True-1-1]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedcf0f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-True-False-True-1-2]" time="0.0008668899536132812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedcf908&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-True-False-True-2-1]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee39358&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-True-False-True-2-2]" time="0.0005118846893310547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedc1320&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-True-True-False-1-1]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedca5c0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-True-True-False-1-2]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedca080&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-True-True-False-2-1]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee24668&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-True-True-False-2-2]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee2b240&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-True-True-True-1-1]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedcf2e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-True-True-True-1-2]" time="0.0008361339569091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedcfe48&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-True-True-True-2-1]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee710f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-False-True-True-True-2-2]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedca5f8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-False-False-False-1-1]" time="0.0004737377166748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedc1cf8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-False-False-False-1-2]" time="0.0004956722259521484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf4537cc0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-False-False-False-2-1]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee39710&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-False-False-False-2-2]" time="0.0004944801330566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedcfa90&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-False-False-True-1-1]" time="0.0004773139953613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedcf7b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-False-False-True-1-2]" time="0.000881195068359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedda4a8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-False-False-True-2-1]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedcf358&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-False-False-True-2-2]" time="0.0004968643188476562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedffbe0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-True-False-False-1-1]" time="0.0004856586456298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedc1908&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-True-False-False-1-2]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedca940&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-True-False-False-2-1]" time="0.0006165504455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee24048&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-True-False-False-2-2]" time="0.0004825592041015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee2b0f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-True-False-True-1-1]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedda2e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-True-False-True-1-2]" time="0.0009038448333740234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beeddaac8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-True-False-True-2-1]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf452ce10&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-True-False-True-2-2]" time="0.0005090236663818359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedca940&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-True-True-False-1-1]" time="0.00048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedc1d30&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-True-True-False-1-2]" time="0.0004878044128417969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee396d8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-True-True-False-2-1]" time="0.0005016326904296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedcfcc0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-True-True-False-2-2]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beeddac50&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-True-True-True-1-1]" time="0.0004894733428955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedda630&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-True-True-True-1-2]" time="0.0008709430694580078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beeddf128&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-True-True-True-2-1]" time="0.0006265640258789062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedda7f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[200-pymess_lrnm-True-True-True-True-2-2]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedff9e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-False-False-False-1-1]" time="0.00046944618225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedcf978&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-False-False-False-1-2]" time="0.0005164146423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf4537f60&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-False-False-False-2-1]" time="0.0004773139953613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedcacc0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-False-False-False-2-2]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf4541d68&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-False-False-True-1-1]" time="0.0005116462707519531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beeddf240&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-False-False-True-1-2]" time="0.0010902881622314453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beeddf748&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-False-False-True-2-1]" time="0.0004849433898925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedcaa58&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-False-False-True-2-2]" time="0.0004987716674804688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedc1ac8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-True-False-False-1-1]" time="0.0004811286926269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee34320&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-True-False-False-1-2]" time="0.00048232078552246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedff860&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-True-False-False-2-1]" time="0.00047397613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedda780&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-True-False-False-2-2]" time="0.0004906654357910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedda160&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-True-False-True-1-1]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beeddf278&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-True-False-True-1-2]" time="0.000835418701171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beeddfd68&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-True-False-True-2-1]" time="0.0006570816040039062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedda978&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-True-False-True-2-2]" time="0.0005271434783935547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee34048&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-True-True-False-1-1]" time="0.000499725341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf451a630&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-True-True-False-1-2]" time="0.0004954338073730469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedc1978&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-True-True-False-2-1]" time="0.0005207061767578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf45414e0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-True-True-False-2-2]" time="0.0004856586456298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beeddf3c8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-True-True-True-1-1]" time="0.0004947185516357422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beeddf4e0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-True-True-True-1-2]" time="0.0008692741394042969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beede63c8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-True-True-True-2-1]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beeddf9b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-False-True-True-True-2-2]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf4541390&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-False-False-False-1-1]" time="0.0004792213439941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf4537ac8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-False-False-False-1-2]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedcf0b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-False-False-False-2-1]" time="0.00048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf454a630&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-False-False-False-2-2]" time="0.0004940032958984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedda080&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-False-False-True-1-1]" time="0.0004894733428955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beede61d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-False-False-True-1-2]" time="0.0008687973022460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beede69e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-False-False-True-2-1]" time="0.00049591064453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf454a390&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-False-False-True-2-2]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedcf9e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-True-False-False-1-1]" time="0.0005273818969726562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedcaf28&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-True-False-False-1-2]" time="0.0004863739013671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf45558d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-True-False-False-2-1]" time="0.0005154609680175781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beeddf940&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-True-False-False-2-2]" time="0.0005259513854980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beede65c0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-True-False-True-1-1]" time="0.0005285739898681641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beede6438&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-True-False-True-1-2]" time="0.0012731552124023438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beeded048&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-True-False-True-2-1]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf451a588&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-True-False-True-2-2]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf454acc0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-True-True-False-1-1]" time="0.0004925727844238281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beede6d68&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-True-True-False-1-2]" time="0.000484466552734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beede6668&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-True-True-False-2-1]" time="0.000484466552734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beeddf898&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-True-True-False-2-2]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beeddf0f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-True-True-True-1-1]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beedda4a8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-True-True-True-1-2]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beee2b0f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-True-True-True-2-1]" time="0.0009222030639648438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4bf44dd0f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="60" name="test_ricc_lrcf[300-pymess_lrnm-True-True-True-True-2-2]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:60: &lt;py._xmlgen.raw object at 0x7f4beeddf3c8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-False-False-False-1-1-10]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beeddf320&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-False-False-False-1-1-20]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beede6ba8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-False-False-False-1-2-10]" time="0.0005156993865966797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf454a780&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-False-False-False-1-2-20]" time="0.000476837158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beee24668&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-False-False-False-2-1-10]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf4555588&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-False-False-False-2-1-20]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beee34320&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-False-False-False-2-2-10]" time="0.0008227825164794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beee34358&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-False-False-False-2-2-20]" time="0.0005035400390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf4555fd0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-False-False-True-1-1-10]" time="0.0004870891571044922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedcabe0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-False-False-True-1-1-20]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beede6d30&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-False-False-True-1-2-10]" time="0.0005083084106445312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beeddff98&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-False-False-True-1-2-20]" time="0.0005140304565429688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf4591780&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-False-False-True-2-1-10]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedda7b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-False-False-True-2-1-20]" time="0.0004832744598388672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beeded550&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-False-False-True-2-2-10]" time="0.0005443096160888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beededa90&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-False-False-True-2-2-20]" time="0.000499725341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beeddf240&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-False-False-1-1-10]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beede6b00&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-False-False-1-1-20]" time="0.0004923343658447266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf454a780&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-False-False-1-2-10]" time="0.0004875659942626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedffcc0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-False-False-1-2-20]" time="0.0004944801330566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44f6320&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-False-False-2-1-10]" time="0.00047898292541503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beeded278&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-False-False-2-1-20]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedede10&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-False-False-2-2-10]" time="0.0008552074432373047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedf7390&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-False-False-2-2-20]" time="0.0004742145538330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beededb70&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-False-True-1-1-10]" time="0.0004918575286865234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44f6320&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-False-True-1-1-20]" time="0.0005891323089599609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf451a588&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-False-True-1-2-10]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beede6d30&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-False-True-1-2-20]" time="0.0004911422729492188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44e5e10&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-False-True-2-1-10]" time="0.0004868507385253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedcfe48&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-False-True-2-1-20]" time="0.0005247592926025391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedf7208&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-False-True-2-2-10]" time="0.0009069442749023438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedf79b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-False-True-2-2-20]" time="0.0005245208740234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beeddf978&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-True-False-1-1-10]" time="0.0005071163177490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beede6e10&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-True-False-1-1-20]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedff358&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-True-False-1-2-10]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beededc50&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-True-False-1-2-20]" time="0.0005354881286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beededdd8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-True-False-2-1-10]" time="0.0005276203155517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedf7ac8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-True-False-2-1-20]" time="0.0005190372467041016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedf7048&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-True-False-2-2-10]" time="0.000988006591796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedf7fd0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-True-False-2-2-20]" time="0.0005259513854980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedf77b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-True-True-1-1-10]" time="0.0005240440368652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf4511978&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-True-True-1-1-20]" time="0.00048422813415527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beededb00&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-True-True-1-2-10]" time="0.00048470497131347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf45550f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-True-True-1-2-20]" time="0.0006072521209716797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedca780&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-True-True-2-1-10]" time="0.0006413459777832031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedcfe48&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-True-True-2-1-20]" time="0.0005424022674560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedfc128&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-True-True-2-2-10]" time="0.0008842945098876953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedfc630&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-False-True-True-True-2-2-20]" time="0.0005519390106201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beede6a20&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-False-False-False-1-1-10]" time="0.0006129741668701172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf451a588&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-False-False-False-1-1-20]" time="0.0004868507385253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44f2198&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-False-False-False-1-2-10]" time="0.0005080699920654297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beeded630&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-False-False-False-1-2-20]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedf7630&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-False-False-False-2-1-10]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedf7400&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-False-False-False-2-1-20]" time="0.0004985332489013672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedfc160&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-False-False-False-2-2-10]" time="0.0009112358093261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedfcc50&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-False-False-False-2-2-20]" time="0.0005519390106201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedf7dd8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-False-False-True-1-1-10]" time="0.0005064010620117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beeded0f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-False-False-True-1-1-20]" time="0.0004930496215820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44f2828&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-False-False-True-1-2-10]" time="0.0006580352783203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedff358&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-False-False-True-1-2-20]" time="0.0004913806915283203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beede6a20&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-False-False-True-2-1-10]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedfc2b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-False-False-True-2-1-20]" time="0.0005180835723876953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedfc3c8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-False-False-True-2-2-10]" time="0.0009062290191650391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed842b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-False-False-True-2-2-20]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedfca90&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-False-False-1-1-10]" time="0.0005285739898681641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beeddfeb8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-False-False-1-1-20]" time="0.0005087852478027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf449c0f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-False-False-1-2-10]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44f26d8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-False-False-1-2-20]" time="0.0005176067352294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beededcc0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-False-False-2-1-10]" time="0.0005021095275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedf7400&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-False-False-2-1-20]" time="0.00048732757568359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed840b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-False-False-2-2-10]" time="0.0008749961853027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed848d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-False-False-2-2-20]" time="0.0005095005035400391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedf77b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-False-True-1-1-10]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedca780&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-False-True-1-1-20]" time="0.0004832744598388672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44e5e10&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-False-True-1-2-10]" time="0.0004911422729492188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beeddfd30&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-False-True-1-2-20]" time="0.0004792213439941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedfcd68&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-False-True-2-1-10]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed845c0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-False-True-2-1-20]" time="0.0004994869232177734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed84080&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-False-True-2-2-10]" time="0.0009365081787109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed84ef0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-False-True-2-2-20]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed84588&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-True-False-1-1-10]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedfceb8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-True-False-1-1-20]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beeddfa58&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-True-False-1-2-10]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf449c0f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-True-False-1-2-20]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44f26d8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-True-False-2-1-10]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beeded630&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-True-False-2-1-20]" time="0.0004706382751464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf4511f60&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-True-False-2-2-10]" time="0.0012485980987548828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed8b550&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-True-False-2-2-20]" time="0.00047469139099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44f28d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-True-True-1-1-10]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf449ca20&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-True-True-1-1-20]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed846a0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-True-True-1-2-10]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed84cf8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-True-True-1-2-20]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedfcd30&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-True-True-2-1-10]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedfc668&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-True-True-2-1-20]" time="0.0004742145538330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedf73c8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-True-True-2-2-10]" time="0.0004792213439941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beeded860&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[scipy-True-True-True-True-2-2-20]" time="0.0008976459503173828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedda7b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-False-False-False-1-1-10]" time="0.0004832744598388672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedfc630&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-False-False-False-1-1-20]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf4511a20&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-False-False-False-1-2-10]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed84cc0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-False-False-False-1-2-20]" time="0.0004928112030029297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beeddfb00&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-False-False-False-2-1-10]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf449c4e0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-False-False-False-2-1-20]" time="0.00047588348388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44f2cc0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-False-False-False-2-2-10]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beee347b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-False-False-False-2-2-20]" time="0.0004916191101074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf454a438&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-False-False-True-1-1-10]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf45550f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-False-False-True-1-1-20]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44a6c18&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-False-False-True-1-2-10]" time="0.0004761219024658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed84ba8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-False-False-True-1-2-20]" time="0.0004985332489013672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed842b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-False-False-True-2-1-10]" time="0.0004839897155761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedfc668&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-False-False-True-2-1-20]" time="0.0004916191101074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beeded630&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-False-False-True-2-2-10]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed8b1d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-False-False-True-2-2-20]" time="0.0009510517120361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed8bc18&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-False-False-1-1-10]" time="0.0004968643188476562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedfcc18&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-False-False-1-1-20]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed846a0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-False-False-1-2-10]" time="0.000507354736328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed84ef0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-False-False-1-2-20]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44a6c18&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-False-False-2-1-10]" time="0.00047588348388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44f2438&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-False-False-2-1-20]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed8b748&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-False-False-2-2-10]" time="0.0005273818969726562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed8b320&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-False-False-2-2-20]" time="0.0009336471557617188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed94198&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-False-True-1-1-10]" time="0.0004932880401611328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed8b358&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-False-True-1-1-20]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed8b6d8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-False-True-1-2-10]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44a6240&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-False-True-1-2-20]" time="0.0004856586456298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed84710&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-False-True-2-1-10]" time="0.0004990100860595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44af8d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-False-True-2-1-20]" time="0.0005292892456054688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedfc668&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-False-True-2-2-10]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed942e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-False-True-2-2-20]" time="0.0008742809295654297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed947b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-True-False-1-1-10]" time="0.0005202293395996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44af4e0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-True-False-1-1-20]" time="0.0004951953887939453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed842b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-True-False-1-2-10]" time="0.0006668567657470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf449cf60&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-True-False-1-2-20]" time="0.0005040168762207031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf45550f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-True-False-2-1-10]" time="0.0005342960357666016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed8b208&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-True-False-2-1-20]" time="0.0005319118499755859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf4537438&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-True-False-2-2-10]" time="0.0006475448608398438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed94208&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-True-False-2-2-20]" time="0.0009839534759521484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed94dd8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-True-True-1-1-10]" time="0.000568389892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed8ba58&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-True-True-1-1-20]" time="0.0004990100860595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44a6240&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-True-True-1-2-10]" time="0.0005021095275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44b80f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-True-True-1-2-20]" time="0.0004968643188476562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44af588&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-True-True-2-1-10]" time="0.0004856586456298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedf77f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-True-True-2-1-20]" time="0.0004994869232177734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed94438&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-True-True-2-2-10]" time="0.0005304813385009766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed94550&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-False-True-True-True-2-2-20]" time="0.0008654594421386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed9b438&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-False-False-False-1-1-10]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed94c50&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-False-False-False-1-1-20]" time="0.0004830360412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44af8d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-False-False-False-1-2-10]" time="0.0004837512969970703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed849e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-False-False-False-1-2-20]" time="0.0005946159362792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44b80f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-False-False-False-2-1-10]" time="0.0004904270172119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44f2978&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-False-False-False-2-1-20]" time="0.0004909038543701172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed8b7b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-False-False-False-2-2-10]" time="0.0005583763122558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed9b240&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-False-False-False-2-2-20]" time="0.0009307861328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed9ba58&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-False-False-True-1-1-10]" time="0.0005469322204589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44f2eb8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-False-False-True-1-1-20]" time="0.0004856586456298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44b8e10&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-False-False-True-1-2-10]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed84a20&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-False-False-True-1-2-20]" time="0.0005104541778564453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedfcf28&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-False-False-True-2-1-10]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed94898&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-False-False-True-2-1-20]" time="0.00048804283142089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed9bac8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-False-False-True-2-2-10]" time="0.0004820823669433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed9b4a8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-False-False-True-2-2-20]" time="0.0009038448333740234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed9f0b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-False-False-1-1-10]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed9b8d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-False-False-1-1-20]" time="0.0005102157592773438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed94c18&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-False-False-1-2-10]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedfc668&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-False-False-1-2-20]" time="0.0006518363952636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed84940&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-False-False-2-1-10]" time="0.0005872249603271484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44b8978&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-False-False-2-1-20]" time="0.0005877017974853516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44f2eb8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-False-False-2-2-10]" time="0.0005028247833251953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed9f1d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-False-False-2-2-20]" time="0.0008876323699951172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed9f6d8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-False-True-1-1-10]" time="0.0005433559417724609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44a6a20&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-False-True-1-1-20]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44c2390&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-False-True-1-2-10]" time="0.0005307197570800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44af588&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-False-True-1-2-20]" time="0.0004899501800537109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed94c50&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-False-True-2-1-10]" time="0.0004773139953613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed9b7b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-False-True-2-1-20]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed9b588&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-False-True-2-2-10]" time="0.0004787445068359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed9f208&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-False-True-2-2-20]" time="0.000934600830078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed9fcf8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-True-False-1-1-10]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed9b8d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-True-False-1-1-20]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed94518&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-True-False-1-2-10]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44c2d68&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-True-False-1-2-20]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44b8f60&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-True-False-2-1-10]" time="0.0005095005035400391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed8b978&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-True-False-2-1-20]" time="0.0004904270172119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed9f358&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-True-False-2-2-10]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed9f470&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-True-False-2-2-20]" time="0.0012187957763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beeda7358&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-True-True-1-1-10]" time="0.0004951953887939453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed84a20&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-True-True-1-1-20]" time="0.0005021095275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44affd0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-True-True-1-2-10]" time="0.0005283355712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed9ff60&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-True-True-1-2-20]" time="0.0004787445068359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed9f8d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-True-True-2-1-10]" time="0.0005183219909667969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed9b8d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-True-True-2-1-20]" time="0.0004787445068359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf4537438&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-True-True-2-2-10]" time="0.0005772113800048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed94780&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[slycot-True-True-True-True-2-2-20]" time="0.0005462169647216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed8b6a0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-False-False-1-1-10]" time="0.0009789466857910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed94160&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-False-False-1-1-20]" time="0.0005159378051757812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed9bcc0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-False-False-1-2-10]" time="0.00048804283142089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed9f208&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-False-False-1-2-20]" time="0.0005004405975341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed9f828&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-False-False-2-1-10]" time="0.00048232078552246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44c24e0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-False-False-2-1-20]" time="0.0004813671112060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44cca20&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-False-False-2-2-10]" time="0.0004775524139404297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44b84e0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-False-False-2-2-20]" time="0.0005743503570556641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beeded828&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-False-True-1-1-10]" time="0.0008525848388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beededac8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-False-True-1-1-20]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44b8630&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-False-True-1-2-10]" time="0.0006458759307861328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44c2438&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-False-True-1-2-20]" time="0.00047969818115234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed9fef0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-False-True-2-1-10]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed9f1d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-False-True-2-1-20]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed9be10&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-False-True-2-2-10]" time="0.0004918575286865234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed94160&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-False-False-True-2-2-20]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beeda7860&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-False-False-1-1-10]" time="0.0004894733428955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beeda7da0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-False-False-1-1-20]" time="0.0005056858062744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed9be10&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-False-False-1-2-10]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed9f240&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-False-False-1-2-20]" time="0.0004889965057373047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44c22e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-False-False-2-1-10]" time="0.0005054473876953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44ccfd0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-False-False-2-1-20]" time="0.0005066394805908203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed8bc50&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-False-False-2-2-10]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beeda7588&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-False-False-2-2-20]" time="0.0004813671112060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedb1160&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-False-True-1-1-10]" time="0.0008432865142822266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedb16a0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-False-True-1-1-20]" time="0.0004782676696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beeda79b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-False-True-1-2-10]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed8b978&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-False-True-1-2-20]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44cc438&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-False-True-2-1-10]" time="0.0004825592041015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed9f3c8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-False-True-2-1-20]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedfc0f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-False-True-2-2-10]" time="0.0004763603210449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed94c50&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-False-True-2-2-20]" time="0.0004951953887939453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedb1320&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-True-False-1-1-10]" time="0.000823974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedb1cc0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-True-False-1-1-20]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed9f240&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-True-False-1-2-10]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44c2ac8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-True-False-1-2-20]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44d4588&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-True-False-2-1-10]" time="0.0006117820739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed8ba58&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-True-False-2-1-20]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beeda7ef0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-True-False-2-2-10]" time="0.0005064010620117188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedb1908&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-True-False-2-2-20]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedb14e0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-True-True-1-1-10]" time="0.0008885860443115234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedb7320&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-True-True-1-1-20]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedb17b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-True-True-1-2-10]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beeda7f28&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-True-True-1-2-20]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44b8fd0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-True-True-2-1-10]" time="0.00047969818115234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44d4240&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-True-True-2-1-20]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44afcc0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-True-True-2-2-10]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed94c18&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-False-True-True-True-2-2-20]" time="0.0005328655242919922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedb7128&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-False-False-1-1-10]" time="0.0008845329284667969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedb7940&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-False-False-1-1-20]" time="0.0004973411560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed9f6d8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-False-False-1-2-10]" time="0.0004782676696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf445f198&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-False-False-1-2-20]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44cc978&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-False-False-2-1-10]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beeda7860&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-False-False-2-1-20]" time="0.000530242919921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedb1e10&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-False-False-2-2-10]" time="0.0004763603210449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedb79e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-False-False-2-2-20]" time="0.00046896934509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedb7400&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-False-True-1-1-10]" time="0.0010263919830322266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedb7f60&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-False-True-1-1-20]" time="0.0005321502685546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedb75f8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-False-True-1-2-10]" time="0.0005161762237548828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedb1e80&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-False-True-1-2-20]" time="0.0006625652313232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed8bc50&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-False-True-2-1-10]" time="0.0006210803985595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44cce10&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-False-True-2-1-20]" time="0.0005376338958740234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf445ffd0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-False-True-2-2-10]" time="0.0005085468292236328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed943c8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-False-False-True-2-2-20]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed3f080&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-False-False-1-1-10]" time="0.0009427070617675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed3f5c0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-False-False-1-1-20]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf445f8d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-False-False-1-2-10]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44d42e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-False-False-1-2-20]" time="0.0004863739013671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed8b978&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-False-False-2-1-10]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedb14e0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-False-False-2-1-20]" time="0.00048542022705078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedb76d8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-False-False-2-2-10]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedb7390&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-False-False-2-2-20]" time="0.0005004405975341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed3f0b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-False-True-1-1-10]" time="0.0009009838104248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed3fbe0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-False-True-1-1-20]" time="0.0005745887756347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedb7fd0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-False-True-1-2-10]" time="0.00047588348388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedb18d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-False-True-1-2-20]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44cce10&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-False-True-2-1-10]" time="0.0005052089691162109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44d4588&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-False-True-2-1-20]" time="0.0004792213439941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf445f240&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-False-True-2-2-10]" time="0.0004916191101074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed3f240&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-False-True-2-2-20]" time="0.0005123615264892578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed3f358&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-True-False-1-1-10]" time="0.0008938312530517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed47240&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-True-False-1-1-20]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed3f710&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-True-False-1-2-10]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed9fe48&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-True-False-1-2-20]" time="0.0004792213439941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44d44e0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-True-False-2-1-10]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf44b8fd0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-True-False-2-1-20]" time="0.0005154609680175781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedb7da0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-True-False-2-2-10]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf446ad68&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-True-False-2-2-20]" time="0.0004734992980957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed47048&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-True-True-1-1-10]" time="0.001230001449584961"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed47860&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-True-True-1-1-20]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf445f588&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-True-True-1-2-10]" time="0.0004980564117431641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4bf446a978&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-True-True-1-2-20]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed3f7f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-True-True-2-1-10]" time="0.0004918575286865234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beed3f320&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-True-True-2-1-20]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedb7c18&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-True-True-2-2-10]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beedb1358&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="105" name="test_pos_ricc_lrcf[pymess_dense_nm_gmpcare-True-True-True-True-2-2-20]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:105: &lt;py._xmlgen.raw object at 0x7f4beeda7898&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="48" name="test_generic_solvers[generic_lgmres]" time="0.0005311965942382812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:48: &lt;py._xmlgen.raw object at 0x7f4beeda7470&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="48" name="test_generic_solvers[generic_least_squares_lsqr]" time="0.0009281635284423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:48: &lt;py._xmlgen.raw object at 0x7f4beeda7b38&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="48" name="test_generic_solvers[generic_least_squares_lsmr]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:48: &lt;py._xmlgen.raw object at 0x7f4beedb1278&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="55" name="test_numpy_dense_solvers" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:55: &lt;py._xmlgen.raw object at 0x7f4beedb77b8&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[generic_least_squares_lsqr]" time="0.0006058216094970703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7f4beed3f5c0&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[scipy_least_squares_lsmr]" time="0.0005002021789550781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7f4beed3f2b0&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[scipy_spsolve]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7f4bf4473780&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[scipy_lgmres]" time="0.00046944618225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7f4bf445f438&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[scipy_bicgstab_spilu]" time="0.0004932880401611328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7f4beedcfcc0&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[scipy_least_squares_lsqr]" time="0.0004780292510986328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7f4beedcfcc0&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[pyamg_rs]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7f4bf44d4390&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[pyamg_solve]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7f4bf446a240&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[generic_lgmres]" time="0.0004901885986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7f4beed3f588&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[generic_least_squares_lsmr]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7f4beedb7c50&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[pyamg_sa]" time="0.0004839897155761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7f4beedb1c88&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[scipy_bicgstab]" time="0.0005009174346923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7f4beeda7b38&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[1-1-100]" time="0.0005505084991455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7f4beed47a58&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[1-1-1000]" time="0.0009207725524902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7f4beed47f98&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[1-10-100]" time="0.0004951953887939453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7f4beed475f8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[1-10-1000]" time="0.0005183219909667969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7f4bf43ff518&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[1-20-100]" time="0.0005283355712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7f4beed9f3c8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[1-20-1000]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7f4beed3f710&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[2-1-100]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7f4beed3fda0&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[2-1-1000]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7f4bf44a6b70&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[2-10-100]" time="0.0005662441253662109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7f4beedcfcc0&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[2-10-1000]" time="0.0008912086486816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7f4beed50518&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[2-20-100]" time="0.00048613548278808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7f4bf44734e0&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[2-20-1000]" time="0.0004899501800537109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7f4beed3fa90&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[1-1-100]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7f4beedb7c50&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[1-1-1000]" time="0.0005850791931152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7f4bf43ff588&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[1-10-100]" time="0.00048732757568359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7f4beed47080&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[1-10-1000]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7f4beed47e10&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[1-20-100]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7f4beed503c8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[1-20-1000]" time="0.0008754730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7f4beed50b38&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[2-1-100]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7f4beed47b70&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[2-1-1000]" time="0.00046896934509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7f4beedb16d8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[2-10-100]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7f4beedb7c18&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[2-10-1000]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7f4beed3fda0&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[2-20-100]" time="0.0005052089691162109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7f4bf445f438&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[2-20-1000]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7f4beed507f0&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[1-1-100]" time="0.0005114078521728516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7f4beed500f0&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[1-1-1000]" time="0.0008709430694580078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7f4beed54198&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[1-10-100]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7f4beed50f98&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[1-10-1000]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7f4beed50710&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[1-20-100]" time="0.0004775524139404297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7f4bf446ad68&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[1-20-1000]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7f4bf43ff518&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[2-1-100]" time="0.00047087669372558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7f4bf3409ba8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[2-1-1000]" time="0.0004825592041015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7f4bf43cc9e8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[2-10-100]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7f4beed542e8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[2-10-1000]" time="0.0008862018585205078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7f4beed547b8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[2-20-100]" time="0.0006165504455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7f4bf43cc9e8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[2-20-1000]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7f4beedb7710&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[1-1-100]" time="0.0005006790161132812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7f4bf43df128&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[1-1-1000]" time="0.0006926059722900391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7f4bf446ab70&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[1-10-100]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7f4beed500b8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[1-10-1000]" time="0.0005078315734863281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7f4bf43f9588&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[1-20-100]" time="0.0004711151123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7f4beed54208&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[1-20-1000]" time="0.00089263916015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7f4beed54dd8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[2-1-100]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7f4beed50898&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[2-1-1000]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7f4bf445fcc0&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[2-10-100]" time="0.0004839897155761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7f4beed3f5c0&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[2-10-1000]" time="0.0005040168762207031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7f4beedb7978&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[2-20-100]" time="0.0005142688751220703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7f4beed479e8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[2-20-1000]" time="0.0004825592041015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7f4beed54438&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="34" name="test_to_matrix_NumpyMatrixOperator" time="0.0005462169647216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:34: &lt;py._xmlgen.raw object at 0x7f4beed54588&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="45" name="test_to_matrix_BlockOperator" time="0.0009174346923828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:45: &lt;py._xmlgen.raw object at 0x7f4beed5c470&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="68" name="test_to_matrix_BlockDiagonalOperator" time="0.0005528926849365234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:68: &lt;py._xmlgen.raw object at 0x7f4beed549b0&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="86" name="test_to_matrix_AdjointOperator" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:86: &lt;py._xmlgen.raw object at 0x7f4beeda7a58&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="127" name="test_to_matrix_ComponentProjection" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:127: &lt;py._xmlgen.raw object at 0x7f4beed9fe48&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="138" name="test_to_matrix_Concatenation" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:138: &lt;py._xmlgen.raw object at 0x7f4beed3fef0&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="165" name="test_to_matrix_IdentityOperator" time="0.0004985332489013672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:165: &lt;py._xmlgen.raw object at 0x7f4beed50748&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="173" name="test_to_matrix_LincombOperator" time="0.0004849433898925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:173: &lt;py._xmlgen.raw object at 0x7f4bf43f9240&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="202" name="test_to_matrix_VectorArrayOperator" time="0.0004761219024658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:202: &lt;py._xmlgen.raw object at 0x7f4beed5c2b0&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="214" name="test_to_matrix_ZeroOperator" time="0.0009367465972900391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:214: &lt;py._xmlgen.raw object at 0x7f4beed5ca90&gt;</skipped></testcase><testcase classname="src.pymortests.tools.TestGaussQuadrature" file="src/pymortests/tools.py" line="27" name="test_polynomials" time="0.0005810260772705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:27: &lt;py._xmlgen.raw object at 0x7f4beed50908&gt;</skipped></testcase><testcase classname="src.pymortests.tools.TestGaussQuadrature" file="src/pymortests/tools.py" line="38" name="test_other_functions" time="0.0004858970642089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:38: &lt;py._xmlgen.raw object at 0x7f4beedb7c18&gt;</skipped></testcase><testcase classname="src.pymortests.tools.TestGaussQuadrature" file="src/pymortests/tools.py" line="46" name="test_weights" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:46: &lt;py._xmlgen.raw object at 0x7f4bf43ff9b0&gt;</skipped></testcase><testcase classname="src.pymortests.tools.TestGaussQuadrature" file="src/pymortests/tools.py" line="51" name="test_points" time="0.0005717277526855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:51: &lt;py._xmlgen.raw object at 0x7f4beed47a58&gt;</skipped></testcase><testcase classname="src.pymortests.tools.TestCmp" file="src/pymortests/tools.py" line="61" name="test_props" time="0.0004944801330566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:61: &lt;py._xmlgen.raw object at 0x7f4beed54208&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;0]" time="0.0005011558532714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f4beed5c6d8&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;1]" time="0.0005674362182617188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f4beed5c128&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;2]" time="0.0008909702301025391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f4beed64128&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;3]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f4beed5c5f8&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;4]" time="0.0004918575286865234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f4beed5cbe0&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;5]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f4beed54898&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;6]" time="0.0004773139953613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f4bf43cc9e8&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;7]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f4bf43dfac8&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;8]" time="0.00049591064453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f4beed50c18&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;9]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f4beed64240&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;10]" time="0.001302480697631836"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f4beed64748&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;11]" time="0.00049591064453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f4bf43fc1d0&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;12]" time="0.0004944801330566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f4bf33cfeb8&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;13]" time="0.0004913806915283203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f4beed5c630&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;14]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f4beed5c2e8&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;15]" time="0.0004930496215820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f4beed54fd0&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;16]" time="0.0004799365997314453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f4beed50e48&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;17]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f4beed47a58&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;18]" time="0.0005021095275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f4beeda7da0&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;19]" time="0.0009136199951171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f4bf44a6438&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;20]" time="0.0004870891571044922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f4beed54dd8&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;21]" time="0.0004849433898925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f4beed548d0&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;22]" time="0.0004680156707763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f4beed5cf60&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;23]" time="0.00048732757568359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f4bf43cc1d0&gt;</skipped></testcase><testcase classname="src.pymortests.tools.TestTiming" file="src/pymortests/tools.py" line="102" name="testTimingContext" time="0.0004820823669433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:102: &lt;py._xmlgen.raw object at 0x7f4bf44d4e10&gt;</skipped></testcase><testcase classname="src.pymortests.tools.TestTiming" file="src/pymortests/tools.py" line="112" name="testTimingDecorator" time="0.0004982948303222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:112: &lt;py._xmlgen.raw object at 0x7f4beeda79e8&gt;</skipped></testcase><testcase classname="src.pymortests.tools.TestTiming" file="src/pymortests/tools.py" line="115" name="testTiming" time="0.0005228519439697266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:115: &lt;py._xmlgen.raw object at 0x7f4beed647b8&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="123" name="testDeprecated" time="0.0008242130279541016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:123: &lt;py._xmlgen.raw object at 0x7f4beeda7898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;0]" time="0.0005638599395751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4bf43ce198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;1]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4bf43cc6a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;2]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed5cf28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;3]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed54da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;4]" time="0.0005042552947998047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed50c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;5]" time="0.0004763603210449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed64518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;6]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed64c88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;7]" time="0.0008542537689208984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed6b208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;8]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed64940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;9]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed50208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;10]" time="0.0004985332489013672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed54b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;11]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed5c8d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;12]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4bf33cfeb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;13]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4bf43dfac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;14]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed6b080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;15]" time="0.0009474754333496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed6b748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;16]" time="0.0004878044128417969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4bf43cc438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;17]" time="0.0004742145538330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4bf32ff5f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;18]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed5cd30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;19]" time="0.0005004405975341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed541d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;20]" time="0.0004925727844238281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed64b00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;21]" time="0.0004253387451171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed47048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;22]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed6b080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;23]" time="0.0008869171142578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed6bd68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;24]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed64160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;25]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed547b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;26]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed5c780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;0]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4bf32ff5f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;1]" time="0.0004851818084716797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4bf43dfc50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;2]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed6b048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;3]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed6b518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;4]" time="0.0008795261383056641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed723c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;5]" time="0.00047850608825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed6b358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;6]" time="0.0005459785461425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4bf43cecf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;7]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4bf32ffbe0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;8]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4bf43f9940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;9]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4bf3308358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;10]" time="0.0004773139953613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed64e10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;11]" time="0.0004858970642089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed721d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;12]" time="0.00087738037109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed729e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;13]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed50898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;14]" time="0.0004754066467285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed54a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;15]" time="0.0005006790161132812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed5ccf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;16]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4bf43ce780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;17]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed6b358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;18]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed725c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;19]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed72438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;20]" time="0.0008728504180908203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed78048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;21]" time="0.00048279762268066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed727f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;22]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed6b4e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;23]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4bf3311400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;24]" time="0.0004775524139404297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4bf33cfe80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;25]" time="0.0004849433898925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed54e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;26]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed50898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;0]" time="0.0004904270172119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed78160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;1]" time="0.0009295940399169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed78668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;2]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4bf3308b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;3]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed5cb00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;4]" time="0.0004811286926269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4bf3311898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;5]" time="0.0004930496215820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed6b320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;6]" time="0.0004839897155761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed72860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;7]" time="0.0004961490631103516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed72518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;8]" time="0.0005290508270263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed78198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;9]" time="0.0011734962463378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed78c88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;10]" time="0.000720977783203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed6ba58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;11]" time="0.0006847381591796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4bf3311dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;12]" time="0.0006825923919677734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4bf33cfeb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;13]" time="0.0007188320159912109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed5c278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;14]" time="0.0004870891571044922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4bf33080b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;15]" time="0.000537872314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed782e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;16]" time="0.0004992485046386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed78400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;17]" time="0.0008895397186279297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beecff2e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;18]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed787f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;19]" time="0.00048661231994628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed50208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;20]" time="0.0005092620849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed5c518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;21]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4bf33cff98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;22]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4bf43fc8d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;23]" time="0.0005199909210205078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed72dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;24]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beecff0f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;25]" time="0.0012340545654296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beecff908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;26]" time="0.0004889965057373047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f4beed54a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;0]" time="0.0004851818084716797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4bf33196a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;1]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed78dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;2]" time="0.0005037784576416016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed78828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;3]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed72d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;4]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed6be10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;5]" time="0.0004889965057373047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed64908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;6]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed47048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;7]" time="0.0009386539459228516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed64160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;8]" time="0.0005114078521728516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4bf43fc8d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;9]" time="0.0004987716674804688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4bf2e8d8d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;10]" time="0.0004940032958984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed78438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;11]" time="0.0005242824554443359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4bf3319208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;12]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4bf32ff5f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;13]" time="0.0005025863647460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4bf3311550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;14]" time="0.0005023479461669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beecff978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;15]" time="0.0008571147918701172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed47048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;16]" time="0.0005066394805908203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4bf32ff5f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;17]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed78160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;18]" time="0.00047397613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed786a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;19]" time="0.00048661231994628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed72668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;20]" time="0.0004780292510986328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed6bf98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;21]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beecffa58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;22]" time="0.0004734992980957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beecffe10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;23]" time="0.0005285739898681641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed09390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;24]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beecffcc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;25]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4bf2e97198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;26]" time="0.00046515464782714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4bf2e8db70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;0]" time="0.00047969818115234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed78d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;1]" time="0.0004839897155761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4bf33195f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;2]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4bf33cfeb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;3]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed09710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;4]" time="0.0009286403656005859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed09c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;5]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4bf33197f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;6]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed78828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;7]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed72588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;8]" time="0.0004818439483642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed6b550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;9]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beecffa58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;10]" time="0.0005271434783935547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed09cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;11]" time="0.00046944618225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed09588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;12]" time="0.0008883476257324219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed102b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;13]" time="0.0004963874816894531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed09748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;14]" time="0.0004901885986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beecffa58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;15]" time="0.0005116462707519531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4bf2e97b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;16]" time="0.0004904270172119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed72d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;17]" time="0.00061798095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed78cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;18]" time="0.0004928112030029297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4bf32ff5f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;19]" time="0.0005083084106445312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed100f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;20]" time="0.0009183883666992188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed108d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;21]" time="0.0005118846893310547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4bf2e9f0f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;22]" time="0.0004878044128417969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4bf2e8dac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;23]" time="0.0004856586456298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed6b748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;24]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beecffb00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;25]" time="0.0005171298980712891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed09940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;26]" time="0.0004858970642089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed105c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;0]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed100b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;1]" time="0.0009922981262207031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed10ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;2]" time="0.00047850608825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed10588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;3]" time="0.0005216598510742188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed09f28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;4]" time="0.0004839897155761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beecffba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;5]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed72588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;6]" time="0.0004887580871582031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4bf2e8d780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;7]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4bf2e9f4e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;8]" time="0.0004966259002685547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed47f98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;9]" time="0.0008444786071777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed17550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;10]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4bf2e9fac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;11]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed6bb38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;12]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4bf2e97fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;13]" time="0.0005102157592773438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed09400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;14]" time="0.0004916191101074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed10940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;15]" time="0.0005099773406982422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed10da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;16]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed17400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;17]" time="0.0008666515350341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed17b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;18]" time="0.0004811286926269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed10940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;19]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beecffb00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;20]" time="0.0005340576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4bf2e97f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;21]" time="0.0004782676696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed78ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;22]" time="0.0005030632019042969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4bf2e9fb70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;23]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed17240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;24]" time="0.0005002021789550781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed170f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;25]" time="0.0009052753448486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed1d1d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;26]" time="0.00047397613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f4beed17208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;0]" time="0.0005109310150146484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4bf32ffc88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;1]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed78860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;2]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed723c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;3]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed09898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;4]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed105c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;5]" time="0.0004839897155761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed1d240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;6]" time="0.0008704662322998047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed1d7f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;7]" time="0.0005023479461669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4bf2ea84e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;8]" time="0.0004737377166748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4bf2c77668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;9]" time="0.000518798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed6b748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;10]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed78860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;11]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed17240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;12]" time="0.0005035400390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4bf3311b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;13]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed1d358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;14]" time="0.0012102127075195312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed1de10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;15]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4bf2e97828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;16]" time="0.0004839897155761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4bf2c77518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;17]" time="0.0005650520324707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed178d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;18]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed17588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;19]" time="0.0005009174346923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed10f28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;20]" time="0.00048065185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed09f98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;21]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed54e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;22]" time="0.00049591064453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4bf4473828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;23]" time="0.001020669937133789"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beecffc88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;24]" time="0.0004899501800537109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed09080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;25]" time="0.000507354736328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed10c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;26]" time="0.00049591064453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed17860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;0]" time="0.000537872314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4bf2ea8780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;1]" time="0.00048232078552246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4bf2c77908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;2]" time="0.00048279762268066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4bf2e9ffd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;3]" time="0.0005540847778320312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed1d860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;4]" time="0.0005054473876953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed64240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;5]" time="0.0005154609680175781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4bf2c777b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;6]" time="0.0004928112030029297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4bf3311208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;7]" time="0.0004928112030029297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed17710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;8]" time="0.0005071163177490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed10eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;9]" time="0.0005269050598144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed09390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;10]" time="0.0004851818084716797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed1d860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;11]" time="0.000530242919921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed1d198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;12]" time="0.0009434223175048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed29518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;13]" time="0.00048542022705078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed1d9e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;14]" time="0.0007779598236083984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4bf2c7fc50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;15]" time="0.0004956722259521484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed105f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;16]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed178d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;17]" time="0.0004980564117431641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4bf2c77cf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;18]" time="0.0004937648773193359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed72748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;19]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed29390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;20]" time="0.0009264945983886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed29a58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;21]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4bf2c77668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;22]" time="0.0005307197570800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed17400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;23]" time="0.0005154609680175781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed105f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;24]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4bf2c7fa58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;25]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed1da58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;26]" time="0.0005846023559570312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed29ba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;0]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed290f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;1]" time="0.000865936279296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed2f0b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;2]" time="0.00047898292541503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed296a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;3]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed1d438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;4]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed09128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;5]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed10f28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;6]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed17ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;7]" time="0.0004763603210449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4bf2c77668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;8]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed2f1d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;9]" time="0.0008335113525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed2f6d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;10]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4bf3308940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;11]" time="0.0004839897155761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4bf3311208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;12]" time="0.0005192756652832031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4bf2c7f908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;13]" time="0.0004878044128417969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed090f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;14]" time="0.0004897117614746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed29780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;15]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed29198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;16]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed2f208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;17]" time="0.000885009765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed2fcf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;18]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed29390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;19]" time="0.0004754066467285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed09240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;20]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed104e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;21]" time="0.0004999637603759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed72588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;22]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4bf2c893c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;23]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed2f358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;24]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed2f470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;25]" time="0.0011739730834960938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed36358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;26]" time="0.0005795955657958984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f4beed2fa58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;0]" time="0.0005412101745605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4bf2c89710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;1]" time="0.0005116462707519531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beed178d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;2]" time="0.0005507469177246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4bf2c7f320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;3]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beed1d320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;4]" time="0.0004830360412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beed29c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;5]" time="0.0005006790161132812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beed36160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;6]" time="0.0008764266967773438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beed36978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;7]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beed29080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;8]" time="0.00046944618225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beed10898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;9]" time="0.0005507469177246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beed17978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;10]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4bf2c89320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;11]" time="0.0004942417144775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beed2fe48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;12]" time="0.0005280971527099609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beed36a58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;13]" time="0.0005855560302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beed36470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;14]" time="0.0008745193481445312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beed36f98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;15]" time="0.0004889965057373047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beed36710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;16]" time="0.00047469139099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beed2ff60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;17]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beed78ac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;18]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4bf43dac18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;19]" time="0.0004949569702148438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4bf2c7f5c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;20]" time="0.0004813671112060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beed29080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;21]" time="0.0004932880401611328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beed3b0b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;22]" time="0.0010995864868164062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beed3b5f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;23]" time="0.0006203651428222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beed106a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;24]" time="0.0006349086761474609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4bf43da828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;25]" time="0.0006148815155029297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4bf2c89470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;26]" time="0.0005750656127929688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beed2f9e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;0]" time="0.00048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beed36780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;1]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beed36438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;2]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beed3b0f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;3]" time="0.0011267662048339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beed3bc18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;4]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beed09358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;5]" time="0.0005085468292236328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4bf2c91470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;6]" time="0.0005285739898681641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beed365c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;7]" time="0.0004830360412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4bf2c89320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;8]" time="0.0004911422729492188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beed2fd30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;9]" time="0.0004870891571044922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beed29898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;10]" time="0.00047850608825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beed1dc88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;11]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4bf2c7ffd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;12]" time="0.0009377002716064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beed64550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;13]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beed29860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;14]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beed2ff60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;15]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beed36978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;16]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4bf2c91278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;17]" time="0.0004799365997314453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beed72588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;18]" time="0.0006086826324462891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4bf43d60f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;19]" time="0.0005161762237548828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beed3ba20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;20]" time="0.0008509159088134766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4bf43d6eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;21]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4bf43da4e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;22]" time="0.00048065185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4bf2c89a58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;23]" time="0.0004801750183105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beed36f98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;24]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beecff438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;25]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beed29a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;26]" time="0.0004954338073730469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beed3b6a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;0]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beecc5160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;1]" time="0.0005090236663818359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beecc56a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;2]" time="0.0005497932434082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beed3bcc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;3]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beed1db38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;4]" time="0.0004932880401611328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beed364e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;5]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4bf2c89f98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;6]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4bf440c4e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;7]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4bf43d6198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;8]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beecc5a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;9]" time="0.0008347034454345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beecc5f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;10]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beecc5160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;11]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4bf43d6ac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;12]" time="0.0004706382751464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4bf43dab70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;13]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beed36d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;14]" time="0.0004928112030029297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beed2f6d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;15]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beed3be80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;16]" time="0.0005679130554199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beeccc080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;17]" time="0.0009300708770751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beeccc5c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;18]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beed1dac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;19]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beed78860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;20]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4bf43da588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;21]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4bf440c8d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;22]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beecc5320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;23]" time="0.0005190372467041016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beecc5ac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;24]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beeccc080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;25]" time="0.0009086132049560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4beecccbe0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;26]" time="0.0004973411560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f4bf43d6d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;0]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4bf440ce10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;1]" time="0.0004780292510986328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beed36b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;2]" time="0.0005075931549072266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beed29208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;3]" time="0.0004792213439941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beed3b5c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;4]" time="0.0004894733428955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beeccc048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;5]" time="0.0004851818084716797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beeccc390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;6]" time="0.0008804798126220703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beecd1240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;7]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beeccc710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;8]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4bf44014e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;9]" time="0.0005130767822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beed29a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;10]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4bf2c899b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;11]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4bf440c198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;12]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beecc57b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;13]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beecd1048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;14]" time="0.0008788108825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beecd1860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;15]" time="0.0004878044128417969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4bf43d6198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;16]" time="0.0006299018859863281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beed36b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;17]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beed29cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;18]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beed1dc50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;19]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beeccc7f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;20]" time="0.0004737377166748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beeccc240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;21]" time="0.0004782676696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beecd1048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;22]" time="0.000946044921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beecd1e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;23]" time="0.0005006790161132812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beecd12e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;24]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beecccfd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;25]" time="0.0005066394805908203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4bf3000b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;26]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beed3beb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;0]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beed2f6d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;1]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4bf440c2e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;2]" time="0.0004851818084716797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beecc5390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;3]" time="0.0008320808410644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beecd74e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;4]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4bf43da588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;5]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4bf2ff8d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;6]" time="0.0004820823669433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4bf3000588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;7]" time="0.00046944618225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beeccc710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;8]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beecd14a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;9]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beecd1c88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;10]" time="0.0005965232849121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beecd7358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;11]" time="0.0009610652923583984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beecd7b00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;12]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beecccdd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;13]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4bf4401630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;14]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4bf2c89f98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;15]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4bf30094e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;16]" time="0.0004985332489013672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beecc5c88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;17]" time="0.00047397613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beecd77b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;18]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beecd7198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;19]" time="0.0015676021575927734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beecde160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;20]" time="0.00047516822814941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4bf30094e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;21]" time="0.0005114078521728516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4bf3000240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;22]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beecd7d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;23]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beecd7320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;24]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beecd1a58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;25]" time="0.0005228519439697266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beecd1898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;26]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beeccc780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;0]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beecc5240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;1]" time="0.0009038448333740234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beeccc390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;2]" time="0.0005009174346923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beecd1cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;3]" time="0.0005106925964355469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beecd77f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;4]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beecd7898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;5]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4bf3000198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;6]" time="0.00048279762268066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4bf30090f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;7]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beecc5c88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;8]" time="0.0005118846893310547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beed3b8d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;9]" time="0.000476837158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4bf43d6e10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;10]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beecc5470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;11]" time="0.0005052089691162109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4bf3009fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;12]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beecd7cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;13]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beecd74a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;14]" time="0.0005211830139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4bf4401240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;15]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beecccfd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;16]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beecde2e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;17]" time="0.0009517669677734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beecde828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;18]" time="0.0004892349243164062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beecd1e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;19]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4bf3011630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;20]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beecd7320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;21]" time="0.0005941390991210938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4bf3000588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;22]" time="0.0005176067352294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beed36f98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;23]" time="0.0004961490631103516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beed3b5c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;24]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beecde320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;25]" time="0.0008563995361328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beecded68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;26]" time="0.0005519390106201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f4beed36a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;0]" time="0.0004849433898925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4bf3000588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;1]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecd7898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;2]" time="0.0005156993865966797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4bf3011630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;3]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecd1e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;4]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecdea20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;5]" time="0.0004706382751464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecde588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;6]" time="0.0008864402770996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecea3c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;7]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecde320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;8]" time="0.00047087669372558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecd1048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;9]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4bf30118d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;10]" time="0.0005204677581787109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecd7898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;11]" time="0.0005242824554443359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4bf3009f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;12]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecc5c88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;13]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecea1d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;14]" time="0.0009217262268066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecea9e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;15]" time="0.0006306171417236328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4bf3009240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;16]" time="0.0005428791046142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecd7b00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;17]" time="0.0005006790161132812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4bf2b96fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;18]" time="0.0004923343658447266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecd1048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;19]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecde2e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;20]" time="0.0005018711090087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecea5c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;21]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecea438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;22]" time="0.0008592605590820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecef048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;23]" time="0.0006430149078369141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecea7f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;24]" time="0.00047898292541503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecdebe0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;25]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4bf2c7f320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;26]" time="0.0005047321319580078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4bf3011978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;0]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecd7940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;1]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecc5b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;2]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecef160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;3]" time="0.0008833408355712891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecef668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;4]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4bf3009eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;5]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecd7d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;6]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4bf2b96940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;7]" time="0.00047469139099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecde908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;8]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecea860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;9]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecea518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;10]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecef198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;11]" time="0.0008308887481689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecefc88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;12]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beeceab38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;13]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecdebe0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;14]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4bf3011ac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;15]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecd78d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;16]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4bf2b9e358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;17]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecef2e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;18]" time="0.0004754066467285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecef400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;19]" time="0.0009665489196777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecf62e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;20]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecef780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;21]" time="0.0005421638488769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4bf2b9e400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;22]" time="0.0004820823669433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4bf30006d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;23]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4bf3011978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;24]" time="0.0005016326904296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecdef28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;25]" time="0.0006456375122070312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4bf2ba8748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;26]" time="0.0005249977111816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecf60f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;0]" time="0.0011403560638427734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecf6908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;1]" time="0.0005414485931396484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecea518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;2]" time="0.0006287097930908203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecdeac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;3]" time="0.0005588531494140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecd7b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;4]" time="0.0006768703460693359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4bf2b9edd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;5]" time="0.0005321502685546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecef6d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;6]" time="0.0006268024444580078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecf6518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;7]" time="0.0005075931549072266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecf6390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;8]" time="0.0014574527740478516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecf6f28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;9]" time="0.0005517005920410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4bf2ba8d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;10]" time="0.0005524158477783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecf6b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;11]" time="0.0005197525024414062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecf64a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;12]" time="0.0007140636444091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4bf2b9e550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;13]" time="0.0007243156433105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecefe48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;14]" time="0.0007147789001464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecef080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;15]" time="0.0006778240203857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecea3c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;16]" time="0.0005204677581787109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecc54a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;17]" time="0.0011031627655029297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecff390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;18]" time="0.0006170272827148438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecef438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;19]" time="0.00047516822814941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4bf2b9edd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;20]" time="0.0004830360412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecf6518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;21]" time="0.0004780292510986328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecf6b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;22]" time="0.0005292892456054688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4bf2ba8b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;23]" time="0.0005412101745605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4bf2bb1208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;24]" time="0.0004897117614746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecd1f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;25]" time="0.0009701251983642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4beecd1f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;26]" time="0.00048804283142089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f4bf2bb1940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;0]" time="0.0006353855133056641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beecd7b00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;1]" time="0.000476837158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beecf6cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;2]" time="0.0005090236663818359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4bf2b9e550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;3]" time="0.0006887912750244141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beecef438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;4]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beecffbe0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;5]" time="0.00048661231994628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beec81470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;6]" time="0.0006880760192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beec819b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;7]" time="0.0004863739013671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beecefb00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;8]" time="0.0005071163177490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4bf2c7fe48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;9]" time="0.0004975795745849609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beecf6518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;10]" time="0.0004878044128417969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4bf2ba8b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;11]" time="0.0005145072937011719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4bf2bb1be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;12]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beec81048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;13]" time="0.00048613548278808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beec81d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;14]" time="0.0008738040924072266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beec852b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;15]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beec81208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;16]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beed3b2b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;17]" time="0.00047397613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4bf2b96a90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;18]" time="0.0005600452423095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beecf69b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;19]" time="0.000476837158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4bf31de7b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;20]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beecefe48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;21]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beec85128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;22]" time="0.0009102821350097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beec858d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;23]" time="0.00047588348388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4bf31de470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;24]" time="0.0005545616149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4bf31d3e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;25]" time="0.00047898292541503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beecf6668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;26]" time="0.0004889965057373047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4bf31caa20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;0]" time="0.0005300045013427734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beec81160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;1]" time="0.0005271434783935547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beec855c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;2]" time="0.0005235671997070312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beec85358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;3]" time="0.0009119510650634766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beec85ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;4]" time="0.0005202293395996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beec85470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;5]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beec81f28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;6]" time="0.0004925727844238281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beec81be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;7]" time="0.0005028247833251953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4bf2ba8748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;8]" time="0.0004904270172119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4bf31d3da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;9]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4bf31de5c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;10]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beecef978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;11]" time="0.0008578300476074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beec8b550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;12]" time="0.00047087669372558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4bf31def98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;13]" time="0.0004973411560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beecf6dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;14]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beed3b198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;15]" time="0.0005145072937011719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beec81f28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;16]" time="0.0004711151123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beec85b00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;17]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beec85d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;18]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beec8b400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;19]" time="0.0008864402770996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beec8bb70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;20]" time="0.0004944801330566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beec85ac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;21]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beec81f98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;22]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4bf2ba8d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;23]" time="0.0005052089691162109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beecf64a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;24]" time="0.0005011558532714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4bf31de908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;25]" time="0.0005030632019042969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beec8b240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;26]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beec8b0f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;0]" time="0.0010466575622558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beec921d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;1]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beec8b898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;2]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4bf31deef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;3]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beecf66d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;4]" time="0.0005168914794921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4bf2ba8dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;5]" time="0.0005583763122558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4bf31e6fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;6]" time="0.0004904270172119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beec85d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;7]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beec92240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;8]" time="0.0009050369262695312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beec927f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;9]" time="0.0005068778991699219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4bf31e6860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;10]" time="0.0005133152008056641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beec81588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;11]" time="0.0004868507385253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beecf64a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;12]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4bf31dea58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;13]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beec8b978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;14]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beec8b0f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;15]" time="0.00046944618225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beec92358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;16]" time="0.0008981227874755859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beec92e10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;17]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beec8b8d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;18]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beecefe80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;19]" time="0.0005373954772949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4bf2ba8dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;20]" time="0.0006337165832519531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beec81278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;21]" time="0.0004868507385253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beec855c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;22]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beec92470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;23]" time="0.0005052089691162109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beec92588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;24]" time="0.0011785030364990234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4beec99470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;25]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4bf2bb19e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;26]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f4bf31eea58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;0]" time="0.0004990100860595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beec92fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;1]" time="0.00048232078552246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beec92ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;2]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beec8b198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;3]" time="0.00048542022705078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beecefe80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;4]" time="0.00048422813415527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beec85898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;5]" time="0.00048279762268066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beec814e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;6]" time="0.0009198188781738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beec853c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;7]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beec8b588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;8]" time="0.00048279762268066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beec92860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;9]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beec92fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;10]" time="0.0005114078521728516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4bf31eec50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;11]" time="0.0004963874816894531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4bf2b96898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;12]" time="0.00048661231994628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beec81320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;13]" time="0.0005037784576416016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beeccc780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;14]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beeccc588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;15]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4bf2b96898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;16]" time="0.00047707557678222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4bf2bb19e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;17]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beec92f28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;18]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beec92e10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;19]" time="0.0004889965057373047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beec8be80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;20]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beec853c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;21]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beec99320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;22]" time="0.0008893013000488281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beec99b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;23]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beec8b9b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;24]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beec929b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;25]" time="0.0004811286926269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4bf31eea58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;26]" time="0.0004954338073730469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4bf31781d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;0]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beec81588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;1]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beec99160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;2]" time="0.00047588348388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beec99048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;3]" time="0.0008847713470458984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beeca30b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;4]" time="0.0004949569702148438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beec99c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;5]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beec816a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;6]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4bf31de710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;7]" time="0.0005140304565429688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4bf2a0c160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;8]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4bf2a15f28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;9]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4bf2a1e2b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;10]" time="0.00047850608825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beeca31d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;11]" time="0.0009055137634277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beeca36d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;12]" time="0.0004985332489013672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4bf2a1e9e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;13]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beec92f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;14]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4bf31eee48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;15]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4bf31e6da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;16]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beec99550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;17]" time="0.0004763603210449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4bf2ba8400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;18]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beeca3208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;19]" time="0.0008785724639892578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beeca3cf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;20]" time="0.0005066394805908203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beec99860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;21]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4bf31e6f98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;22]" time="0.0004906654357910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beec92400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;23]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4bf2a15e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;24]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beec8b198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;25]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beeca3358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;26]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beeca3470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;0]" time="0.0008873939514160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beecaa358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;1]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beeca3940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;2]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beed3b320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;3]" time="0.00048160552978515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4bf2a154a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;4]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4bf31eec50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;5]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beec990b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;6]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4bf2a277f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;7]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beecaa160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;8]" time="0.0008783340454101562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beecaa978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;9]" time="0.0004782676696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beec99d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;10]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beecf64a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;11]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beec929b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;12]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4bf2a1e940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;13]" time="0.0004968643188476562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beeca38d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;14]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beecaaa58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;15]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beecaa470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;16]" time="0.0008819103240966797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beecaaf98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;17]" time="0.0005259513854980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beecaa6a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;18]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beeca3a90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;19]" time="0.0004839897155761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beec8b160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;20]" time="0.00048613548278808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4bf2a1ee80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;21]" time="0.0005030632019042969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beecf64a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;22]" time="0.0004820823669433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beec99940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;23]" time="0.0005278587341308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beecb30b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;24]" time="0.0009684562683105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beecb35f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;25]" time="0.0004990100860595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beec99128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;26]" time="0.0004980564117431641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f4beecefe80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.000514984130859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec8be80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.0005173683166503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beeca39e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.0004868507385253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecaac88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.0005657672882080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecaab38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.0005006790161132812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecb30f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.0010385513305664062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecb3c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.0005335807800292969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecaa710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.0004889965057373047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beeca38d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.0005433559417724609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf2a15e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.00052642822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec811d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.0005133152008056641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf2a27c88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.0004968643188476562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecb3278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.00048279762268066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecb3390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.0012154579162597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecb7278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.00048279762268066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf3178780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.0005016326904296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf2a30400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.0005300045013427734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecb33c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.0005056858062744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecb3828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf2a27358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.0004787445068359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecaaf98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.0004851818084716797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beeca3da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.0004901885986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec99d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.0009372234344482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beeca3470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecaaf98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.0005567073822021484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf2a27e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.0004961490631103516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecb3748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf2a30748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.0004801750183105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf319b5c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf2a1ebe0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.0004942417144775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecea390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.0008878707885742188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecea390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.0005049705505371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf31ee518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf319ba58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecb39e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.0004711151123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecaacf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf31a4668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.0005118846893310547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beeca3470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.0004982948303222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecb7780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.0007102489471435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecb7cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.0007171630859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecaaa58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.0007710456848144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecb30b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.0006945133209228516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecb3710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.0005030632019042969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf319bfd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.0004711151123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecea390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecb74a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec41080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.0009114742279052734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec415c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.0004892349243164062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecb7860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.0004916191101074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec92358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.00048160552978515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf319ba58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.0004820823669433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecb39b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.0004792213439941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf31a4fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.0005013942718505859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beeca3710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec41240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.0009086132049560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec41be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.0004763603210449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecaaf60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.0004994869232177734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecb3cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.0004773139953613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf2a30748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf31ad320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.00048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecb75f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec41828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.0005002021789550781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec41400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.0009427070617675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec47240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.0005135536193847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec411d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecb7400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.00046515464782714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecea400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf2a1ee80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecb3e10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.00047850608825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf31a4cf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.0005223751068115234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec47048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.0008764266967773438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec47860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.0005044937133789062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecaacf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecb35c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.00047898292541503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf31ad860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecb7da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.00048279762268066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec41cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec41dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec47048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.0008609294891357422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec47e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec472e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec411d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecb7780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf2a15550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.0004742145538330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecb3ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.0004935264587402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf319bfd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.0004799365997314453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beeca39e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.0008368492126464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec514e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.0004942417144775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf31367b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf2a15e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.0004973411560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecdedd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.0005028247833251953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec41208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec474a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec47c88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.0005080699920654297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec51358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.0008938312530517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec51b00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecb7da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec41dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf31adda0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.0005245208740234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf3136fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf31a4908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.0004942417144775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec517b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec51198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.0008723735809326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec55160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.0005083084106445312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec51198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.0004923343658447266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec51be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf3136c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.0005161762237548828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf31adcf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec41a90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.00047516822814941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf3140128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.0005028247833251953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec55278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.0013413429260253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec55780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.00047397613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecb3cf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf3136ba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec51748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec51f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.0004906654357910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec47438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec41208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beeca3470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.0005018711090087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecb79b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.0008881092071533203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec41048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec47470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec51f98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec519b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf3136470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.0004820823669433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf3140ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecb7c88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec99b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.0004951953887939453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec99b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.0005102157592773438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf3140668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.00049591064453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecdeda0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec51320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec51dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.0004940032958984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec47470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.0005047321319580078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec41048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec55128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.0009219646453857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec55e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.00047850608825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec472e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf3136da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec51198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf31adf98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.00046944618225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecb72e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.0005180835723876953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec55978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.0004830360412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec552e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.0008723735809326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec623c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.0004782676696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec55ba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.00048613548278808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecb7a90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.0004734992980957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecb30b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.00048613548278808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec51ba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.0004801750183105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf3149c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf2a15dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.00048804283142089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec62208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.0008914470672607422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec629e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.0004928112030029297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf31499b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec51e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecdedd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.00048232078552246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecb70f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec55b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec625c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec62438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.0008490085601806641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec66048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec627f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.0004856586456298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf3154908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec55cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.0004904270172119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf31409b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec519b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.0004811286926269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf3149c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.0004966259002685547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec66160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.0009353160858154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec66668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.0004901885986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf3149470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec517f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecb7d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.0005066394805908203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf31541d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.0004761219024658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec62668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.0004734992980957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec62518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.0004944801330566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec66198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.000885009765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec66c88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.0004894733428955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf3154128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec55518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.0004892349243164062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf3140e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.0005340576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf2a15dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf315d5c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec662e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.0005867481231689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec66400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.0010251998901367188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec6f2e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.0005130767822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec66278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf315d1d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec47438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.0005018711090087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec852e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.0005016326904296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec552e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.0006146430969238281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec62d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.0005204677581787109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec6f0f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.0008788108825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec6f908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.00048661231994628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf3154c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecb7a58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.0004968643188476562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf2a15dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.0004999637603759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf315d128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.00048422813415527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec66da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec6f518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.0004754066467285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec6f390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.0008680820465087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec6ff28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec6f4e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec66f98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.0005047321319580078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec47f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.0004966259002685547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf3149860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf3140128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.00047588348388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf31657b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.0004889965057373047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec76048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.0011508464813232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec76588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beecdedd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf315dfd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.0005207061767578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec6f978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec6ff60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec66898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec625c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec92f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.0004947185516357422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec8b978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.0008561611175537109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf3140e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec62e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec66a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec6fef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec6f630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.0005066394805908203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec51048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf3165278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.0004863739013671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf3149128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.00086212158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beeca3d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf3154e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec47f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.0005035400390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec6ff60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec66fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.0005345344543457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec62390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec76630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.0004887580871582031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec76a90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.00048422813415527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec76fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.0005216598510742188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf3140128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec623c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec66278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec6fda0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf31adef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.0004966259002685547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beeca3710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.0005140304565429688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beebfe390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.0009205341339111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beebfe8d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf31adda0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec6fda0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.0004799365997314453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec66f98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf3170fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.0004775524139404297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec76080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beebfe940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beebfe208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.0008957386016845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beebfeef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beebfe710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.00047588348388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec768d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.0005393028259277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf3170908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec66240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.00046515464782714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec6ff60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.0005059242248535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf3165320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beeca3470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.0008676052093505859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec07550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.0004870891571044922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf31ad860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.0004932880401611328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec6fdd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.0004971027374267578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec62d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf31703c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.0004754066467285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beebfe748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.0004870891571044922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beebfeda0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec07400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.0009090900421142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec07b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.00046944618225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beebfe518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf3170fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.00047707557678222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf3140128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4beec6fdd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.0004849433898925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f4bf30f9860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;0]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec07240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;1]" time="0.0004940032958984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec070f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;2]" time="0.0009129047393798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec0e1d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;3]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec07898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;4]" time="0.0005199909210205078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4bf319bfd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;5]" time="0.0004870891571044922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4bf30f9b00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;6]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec623c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;7]" time="0.0005116462707519531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4bf31363c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;8]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beebfeb00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;9]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec0e240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;10]" time="0.0009419918060302734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec0e7f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;11]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4bf3102320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;12]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4bf3170a58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;13]" time="0.00046944618225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec6fc88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;14]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4bf3165e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;15]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec073c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;16]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec07198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;17]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec0e358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;18]" time="0.0008945465087890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec0ee10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;19]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec07ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;20]" time="0.00048065185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4bf30f9a58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;21]" time="0.0004780292510986328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4bf315dfd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;22]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec76748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;23]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beebfe710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;24]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec0e470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;25]" time="0.00047469139099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec0e588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;26]" time="0.0008924007415771484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec15470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;0]" time="0.0004968643188476562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec0e8d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;1]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4bf27bebe0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;2]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec66e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;3]" time="0.0004856586456298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec6fac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;4]" time="0.0005469322204589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4bf30f9860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;5]" time="0.0004978179931640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec07dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;6]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec15278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;7]" time="0.0013017654418945312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec15a90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;8]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4bf31a4f98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;9]" time="0.0004832744598388672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4bf27be898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;10]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec0e940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;11]" time="0.0004911422729492188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4bf30f99b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;12]" time="0.0004899501800537109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec07ba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;13]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beebfef98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;14]" time="0.0004901885986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec76c88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;15]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec76358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;16]" time="0.0008955001831054688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec76cf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;17]" time="0.00047516822814941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beebfeeb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;18]" time="0.0004947185516357422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec079e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;19]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec0ecc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;20]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec0ec18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;21]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec66e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;22]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4bf27c64a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;23]" time="0.0004963874816894531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4bf3170668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;24]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4bf27b7c88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;25]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4bf27c6b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;26]" time="0.0005137920379638672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4bf27be208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;0]" time="0.0004947185516357422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec0e940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;1]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec079e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;2]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec76e10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;3]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec15c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;4]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec15438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;5]" time="0.0008835792541503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec20198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;6]" time="0.00047087669372558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec15518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;7]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec76b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;8]" time="0.0004775524139404297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beebfe5f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;9]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec0e9b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;10]" time="0.0005214214324951172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4bf31a4f98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;11]" time="0.0005037784576416016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4bf27c6f28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;12]" time="0.0004978179931640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4bf27b7e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;13]" time="0.0008654594421386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec206d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;14]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4bf27be550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;15]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec0e7f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;16]" time="0.0004830360412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec070b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;17]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec76b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;18]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec155c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;19]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec15cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;20]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec20048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;21]" time="0.0008385181427001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec20cf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;22]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4bf27d0b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;23]" time="0.0004799365997314453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beebfed68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;24]" time="0.0004947185516357422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec070b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;25]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4beec0ec50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;26]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f4bf27bef28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;0]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f4beec203c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;1]" time="0.0004928112030029297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f4beec20320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;2]" time="0.0009031295776367188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f4beec25358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;3]" time="0.0004894733428955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f4beec20898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;4]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f4bf27bee80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;5]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f4beec51048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;6]" time="0.0004971027374267578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f4beec8be80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;7]" time="0.0004978179931640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f4bf27d0748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;8]" time="0.0004787445068359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f4beec15eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;9]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f4beec25160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;10]" time="0.0008847713470458984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f4beec25978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;11]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f4bf27d0940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;12]" time="0.008832693099975586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;13]" time="0.006735086441040039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;14]" time="0.008687973022460938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;15]" time="0.016854524612426758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;16]" time="0.0147552490234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;17]" time="0.01204228401184082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;18]" time="0.011854171752929688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;19]" time="0.014547586441040039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;20]" time="0.04463505744934082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;21]" time="0.10232138633728027"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;22]" time="0.005423784255981445"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;23]" time="0.004598379135131836"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;24]" time="0.0071947574615478516"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;25]" time="0.05557537078857422"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;26]" time="0.12480759620666504"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;0]" time="0.005176544189453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;1]" time="0.0042645931243896484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;2]" time="0.004915952682495117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;3]" time="0.006257057189941406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;4]" time="0.006348609924316406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;5]" time="0.0036602020263671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;6]" time="0.0033638477325439453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;7]" time="0.004554033279418945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;8]" time="0.017068147659301758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;9]" time="0.03434586524963379"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;10]" time="0.007292509078979492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;11]" time="0.008495569229125977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;12]" time="0.00825190544128418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;13]" time="0.00632023811340332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;14]" time="0.008276224136352539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;15]" time="0.011736154556274414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;16]" time="0.013368606567382812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;17]" time="0.010491371154785156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;18]" time="0.011983156204223633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;19]" time="0.014101743698120117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;20]" time="0.04342246055603027"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;21]" time="0.09478282928466797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;22]" time="0.0044956207275390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;23]" time="0.004082679748535156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;24]" time="0.0063817501068115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;25]" time="0.0568394660949707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;26]" time="0.13165736198425293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;0]" time="0.005312681198120117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;1]" time="0.004326343536376953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;2]" time="0.005055665969848633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;3]" time="0.006103992462158203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;4]" time="0.006281375885009766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;5]" time="0.0034143924713134766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;6]" time="0.0035905838012695312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;7]" time="0.004580020904541016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;8]" time="0.01749396324157715"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;9]" time="0.0344395637512207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;10]" time="0.007406711578369141"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;11]" time="0.008239507675170898"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;12]" time="0.008424997329711914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;13]" time="0.006766557693481445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;14]" time="0.008241891860961914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;15]" time="0.012126445770263672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;16]" time="0.013466119766235352"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;17]" time="0.01069021224975586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;18]" time="0.012330055236816406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;19]" time="0.01378631591796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;20]" time="0.043177127838134766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;21]" time="0.0939171314239502"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;22]" time="0.0044934749603271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;23]" time="0.003831148147583008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;24]" time="0.006513833999633789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;25]" time="0.057329416275024414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;26]" time="0.1337440013885498"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;0]" time="0.021744728088378906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;1]" time="0.02258157730102539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;2]" time="0.022242307662963867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;3]" time="0.026141881942749023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;4]" time="0.026716232299804688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;5]" time="0.017416715621948242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;6]" time="0.017319440841674805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;7]" time="0.020643949508666992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;8]" time="0.09841060638427734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;9]" time="0.17880940437316895"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;10]" time="0.0390009880065918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;11]" time="0.0401911735534668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;12]" time="0.038019657135009766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;13]" time="0.02964186668395996"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;14]" time="0.0410008430480957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;15]" time="0.05965137481689453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;16]" time="0.06373858451843262"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;17]" time="0.057630300521850586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;18]" time="0.05818915367126465"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;19]" time="0.07861089706420898"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;20]" time="0.23250031471252441"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;21]" time="0.5163595676422119"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;22]" time="0.019518375396728516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;23]" time="0.020428180694580078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;24]" time="0.03167438507080078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;25]" time="0.32779765129089355"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;26]" time="0.7180562019348145"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;0]" time="0.02181220054626465"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;1]" time="0.022800207138061523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;2]" time="0.021765470504760742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;3]" time="0.026960372924804688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;4]" time="0.025840282440185547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;5]" time="0.01803112030029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;6]" time="0.017722129821777344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;7]" time="0.02147388458251953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;8]" time="0.09802985191345215"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;9]" time="0.18207144737243652"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;10]" time="0.03756141662597656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;11]" time="0.03927326202392578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;12]" time="0.037003517150878906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;13]" time="0.03071427345275879"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;14]" time="0.04003787040710449"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;15]" time="0.060278892517089844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;16]" time="0.06267857551574707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;17]" time="0.0559544563293457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;18]" time="0.0561826229095459"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;19]" time="0.07272744178771973"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;20]" time="0.23630023002624512"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;21]" time="0.5120339393615723"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;22]" time="0.019203662872314453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;23]" time="0.019765615463256836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;24]" time="0.032928466796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;25]" time="0.36208438873291016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;26]" time="0.7695629596710205"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;0]" time="0.02454829216003418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;1]" time="0.022681236267089844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;2]" time="0.022091388702392578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;3]" time="0.026210546493530273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;4]" time="0.025506258010864258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;5]" time="0.017478466033935547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;6]" time="0.01754140853881836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;7]" time="0.020616531372070312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;8]" time="0.09836149215698242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;9]" time="0.17807221412658691"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;10]" time="0.03765439987182617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;11]" time="0.038845062255859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;12]" time="0.037750244140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;13]" time="0.02954697608947754"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;14]" time="0.04010796546936035"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;15]" time="0.058277130126953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;16]" time="0.06261563301086426"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;17]" time="0.055483102798461914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;18]" time="0.05585670471191406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;19]" time="0.06879568099975586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;20]" time="0.23038411140441895"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;21]" time="0.5009360313415527"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;22]" time="0.01955699920654297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;23]" time="0.019579410552978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;24]" time="0.0324556827545166"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;25]" time="0.3847670555114746"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;26]" time="0.8418676853179932"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.01888561248779297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.005555629730224609"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.029079914093017578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.03233003616333008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.03259420394897461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.04920196533203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.01787877082824707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.00505375862121582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.07545232772827148"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.12370085716247559"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.3135406970977783"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.05298733711242676"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.037165164947509766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.010021686553955078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.04366111755371094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.0756533145904541"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.08422493934631348"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.08651256561279297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.05167722702026367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.009229183197021484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.27733802795410156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.23089814186096191"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.6158239841461182"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.11151599884033203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.018009424209594727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.006602764129638672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.28627514839172363"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.4839174747467041"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="1.4338254928588867"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.12480640411376953"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.01987600326538086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.005906820297241211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.029593944549560547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.03261232376098633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.03301191329956055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.04637408256530762"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.01907515525817871"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.005236387252807617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.07454180717468262"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.12669658660888672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.3081784248352051"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.052396297454833984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.03682279586791992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.009883642196655273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.04367804527282715"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.0755620002746582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.08330321311950684"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.08451366424560547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.05235719680786133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.009579896926879883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.2719578742980957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.22754859924316406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.6038928031921387"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.10948514938354492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.017998218536376953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.0066356658935546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.30797338485717773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.5067319869995117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="1.5941767692565918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.128798246383667"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.02017664909362793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.0056667327880859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.029693603515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.03203845024108887"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.03316092491149902"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.05384564399719238"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.015977859497070312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.005163908004760742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.07480001449584961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.13187336921691895"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.3109879493713379"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.05207705497741699"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.03722214698791504"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.010241270065307617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.04485917091369629"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.07915067672729492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.0813443660736084"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.08432888984680176"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.052962303161621094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.009361505508422852"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.2876605987548828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.2365105152130127"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.5934410095214844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.11313438415527344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.017889022827148438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.006686210632324219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.34003520011901855"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.5652942657470703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="1.8103752136230469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.14168262481689453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.020291805267333984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.005518674850463867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.031475067138671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.0334780216217041"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.03337383270263672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.046109914779663086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.016680002212524414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.005422830581665039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.07677531242370605"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.1239163875579834"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.3150484561920166"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.05543780326843262"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.0385439395904541"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.010248661041259766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.04417014122009277"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.07805562019348145"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.0864725112915039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.08531308174133301"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.057118892669677734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.009919881820678711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.28304076194763184"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.23582005500793457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.6185431480407715"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.1132822036743164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.018675565719604492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.007105350494384766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.3844935894012451"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.6291098594665527"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="1.9633138179779053"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.147064208984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.019716262817382812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.005789518356323242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.029830217361450195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.032840728759765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.03388547897338867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.04643893241882324"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.016082286834716797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.004938840866088867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.07589340209960938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.12682676315307617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.31319379806518555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.05351614952087402"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.03702831268310547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.010195493698120117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.04433584213256836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.07755112648010254"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.08349776268005371"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.08589911460876465"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.05311107635498047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.00955343246459961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.27513885498046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.23968124389648438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.6057760715484619"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.1120307445526123"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.01807379722595215"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.007158756256103516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.4157249927520752"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.7118971347808838"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="2.1373634338378906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.15055632591247559"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.020018577575683594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.005414247512817383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.029072284698486328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.03369140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.032956838607788086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.04674506187438965"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.016180038452148438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.005014181137084961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.07555294036865234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.12804889678955078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.3114941120147705"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.053725242614746094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.038416147232055664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.009851217269897461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.043897151947021484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.07528996467590332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.08325815200805664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.086212158203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.05322742462158203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.009253263473510742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.2834451198577881"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.2449805736541748"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.8066773414611816"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.11042523384094238"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.017582416534423828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.007172822952270508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.44117045402526855"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.7289659976959229"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="2.282392740249634"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.15945172309875488"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.019269943237304688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.008672714233398438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.029209613800048828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.03176403045654297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.03318452835083008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.045771121978759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.01617741584777832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.0051195621490478516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.07483243942260742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.12534141540527344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.3136429786682129"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.05346393585205078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.03696298599243164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.009970664978027344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.045758962631225586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.07760787010192871"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.08136844635009766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.08891940116882324"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.053275346755981445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.00916910171508789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.2770578861236572"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.23520803451538086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.5968179702758789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.11025261878967285"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.0177762508392334"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.007384538650512695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.4855992794036865"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.792137861251831"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="2.500028133392334"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.16560053825378418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.020592689514160156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.005987882614135742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.031107425689697266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.031883955001831055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.03283286094665527"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.04598832130432129"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.016776323318481445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.005152463912963867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.07552886009216309"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.12466907501220703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.3137211799621582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.053118228912353516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.04047584533691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.009989023208618164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.04339122772216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.0777592658996582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.08224868774414062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.08789277076721191"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.05276226997375488"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.009301900863647461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.27669477462768555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.23995590209960938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.6037497520446777"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.1156916618347168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.017885446548461914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.0071718692779541016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.5284764766693115"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.8544774055480957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="2.7252278327941895"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.1743764877319336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.023662805557250977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.0058748722076416016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.029781341552734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.0321047306060791"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.033052682876586914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.04558253288269043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.016588687896728516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.005166769027709961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.0739586353302002"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.12488508224487305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.32146286964416504"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.05373668670654297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.037670135498046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.010257482528686523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.0439600944519043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.07619643211364746"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.08324408531188965"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.08621859550476074"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.05302739143371582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.00927877426147461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.279526948928833"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.2380082607269287"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.6244480609893799"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.11227917671203613"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.018049240112304688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.0077168941497802734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.5777714252471924"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.9244720935821533"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="2.8674302101135254"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.18028855323791504"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.056189775466918945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.14780902862548828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.11490535736083984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.13091182708740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.13785600662231445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.11229848861694336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.04386186599731445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.13351202011108398"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.317155122756958"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.6105532646179199"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="1.696721076965332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.1324174404144287"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.11050534248352051"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.3224465847015381"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.17096233367919922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.3112812042236328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.3702101707458496"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.389573335647583"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.15979242324829102"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.334195613861084"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="1.1119167804718018"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="1.0922091007232666"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="3.2090840339660645"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.2906501293182373"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.051024436950683594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.2644813060760498"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="2.6314361095428467"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="4.712126970291138"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="17.547810316085815"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.5399150848388672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.05532693862915039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.14700937271118164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.11307096481323242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.13100767135620117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.14712023735046387"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.11070585250854492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.04292607307434082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.13245439529418945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.3154118061065674"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.592573881149292"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="1.6809508800506592"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.13284730911254883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.10919809341430664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.32443666458129883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.18067646026611328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.3241705894470215"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.36545515060424805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.38616323471069336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.15506339073181152"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.32848620414733887"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="1.1453254222869873"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="1.1255018711090088"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="3.2201390266418457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.2816452980041504"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.0497431755065918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.2894096374511719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="3.099216938018799"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="5.654005527496338"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="21.188612461090088"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.5879957675933838"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.05713915824890137"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.1457197666168213"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.12885332107543945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.14745330810546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.14394760131835938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.11958432197570801"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.04558849334716797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.14710235595703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.3626532554626465"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.6663000583648682"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="1.693221092224121"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.13455772399902344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.1063685417175293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.32279229164123535"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.1729445457458496"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.3110992908477783"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.35712456703186035"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.39024949073791504"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.15555024147033691"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.3352828025817871"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="1.139751672744751"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="1.1278891563415527"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="3.1966936588287354"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.29424333572387695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.05168581008911133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.3206796646118164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="3.7563576698303223"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="6.570504188537598"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="24.325316190719604"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.6427538394927979"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.054204463958740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.1430048942565918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.11123156547546387"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.12801599502563477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.13423752784729004"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.10894775390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.04594731330871582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.1321249008178711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.316256046295166"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.6028099060058594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="1.7178995609283447"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.14213275909423828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.1078495979309082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.3344852924346924"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.17982077598571777"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.3246786594390869"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.3755965232849121"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.3918144702911377"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.16147208213806152"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.3349337577819824"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="1.1354565620422363"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="1.111372470855713"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="3.1925320625305176"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.2822690010070801"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.04880237579345703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.3306159973144531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="4.633421421051025"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="8.549386739730835"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="27.72886824607849"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.7237534523010254"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.05576181411743164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.15409135818481445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.1162571907043457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.128770112991333"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.13364076614379883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.10620403289794922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.04115653038024902"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.1264958381652832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.30292320251464844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.5690622329711914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="1.6425695419311523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.1295938491821289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.10463571548461914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.3121464252471924"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.17583823204040527"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.30509519577026367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.345630407333374"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.3689002990722656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.15018820762634277"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.3190491199493408"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="1.0951776504516602"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="1.0633935928344727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="3.0865185260772705"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.27375197410583496"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.047032833099365234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.33164167404174805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="4.7911152839660645"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="8.262757539749146"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="31.815173149108887"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.812957763671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.056058406829833984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.1511986255645752"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.11558127403259277"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.13338088989257812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.1409592628479004"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.11348843574523926"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.04326033592224121"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.13237547874450684"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.3155810832977295"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.5921463966369629"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="1.6971402168273926"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.13439273834228516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.11092495918273926"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.3212928771972656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.17560553550720215"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.3117077350616455"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.36359119415283203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.3858375549316406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.15599465370178223"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.33445310592651367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="1.1376721858978271"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="1.1047766208648682"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="3.1576480865478516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.2781803607940674"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.047730207443237305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.3693978786468506"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="5.480475664138794"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="9.3782958984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="34.756184339523315"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.8516781330108643"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.053366899490356445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.14449596405029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.10985398292541504"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.12689614295959473"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.13231897354125977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.10632801055908203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.04091191291809082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.12613272666931152"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.3010082244873047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.5991504192352295"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="1.6858298778533936"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.13245224952697754"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.10620832443237305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.32354235649108887"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.1779158115386963"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.3115057945251465"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.3660702705383301"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.3882443904876709"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.1544017791748047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.3275735378265381"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="1.1069562435150146"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="1.108095645904541"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="3.1652350425720215"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.28148341178894043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.048995018005371094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.38756871223449707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="5.973531484603882"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="10.268152952194214"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="37.504356384277344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.975989818572998"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.05418825149536133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.14397573471069336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.11189651489257812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.12985658645629883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.13392257690429688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.10746240615844727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.04123353958129883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.12719249725341797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.32117700576782227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.5933735370635986"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="1.631079912185669"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.12586450576782227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.10761380195617676"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.3147578239440918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.17295169830322266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.30670642852783203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.345320463180542"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.38558387756347656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.14726662635803223"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.3145167827606201"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="1.1058628559112549"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="1.0627892017364502"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="3.0172412395477295"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.2678720951080322"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.04666948318481445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.4086155891418457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="6.417314767837524"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="10.882024049758911"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="40.30607080459595"><system-err>no more timer available, reusing last one
</system-err></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.9605114459991455"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.05519413948059082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.14670681953430176"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.11435079574584961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.1246957778930664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.12905025482177734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.10578608512878418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.04136943817138672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.1277000904083252"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.2913072109222412"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.5577883720397949"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="1.5945186614990234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.1266016960144043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.1036674976348877"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.30600452423095703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.16971158981323242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.2973005771636963"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.33602070808410645"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.36330485343933105"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.14367246627807617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.30256223678588867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="1.0269191265106201"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.9890484809875488"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="2.8493332862854004"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.2568690776824951"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.04572558403015137"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.39937520027160645"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="6.828952074050903"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="11.877904653549194"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="40.70740580558777"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.9555087089538574"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;0]" time="0.019882678985595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;1]" time="0.02069830894470215"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;2]" time="0.03959155082702637"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;3]" time="0.04221081733703613"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;4]" time="0.04155564308166504"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;5]" time="0.016839027404785156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;6]" time="0.016756772994995117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;7]" time="0.04635167121887207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;8]" time="0.24196982383728027"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;9]" time="0.43724560737609863"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;10]" time="0.03699994087219238"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;11]" time="0.0727701187133789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;12]" time="0.0713341236114502"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;13]" time="0.06061124801635742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;14]" time="0.08391427993774414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;15]" time="0.11989641189575195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;16]" time="0.12926173210144043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;17]" time="0.05140089988708496"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;18]" time="0.052108049392700195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;19]" time="0.1533660888671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;20]" time="0.4271817207336426"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;21]" time="0.9797728061676025"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;22]" time="0.0195162296295166"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;23]" time="0.019907712936401367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;24]" time="0.19600129127502441"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;25]" time="5.111278057098389"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;26]" time="11.571605443954468"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;0]" time="0.019877195358276367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;1]" time="0.02104473114013672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;2]" time="0.04117107391357422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;3]" time="0.043222904205322266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;4]" time="0.04194164276123047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;5]" time="0.01697063446044922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;6]" time="0.016866445541381836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;7]" time="0.04183793067932129"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;8]" time="0.2305159568786621"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;9]" time="0.43297791481018066"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;10]" time="0.03582334518432617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;11]" time="0.071380615234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;12]" time="0.07134366035461426"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;13]" time="0.05805850028991699"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;14]" time="0.08205604553222656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;15]" time="0.10855364799499512"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;16]" time="0.1204826831817627"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;17]" time="0.0510861873626709"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;18]" time="0.051232337951660156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;19]" time="0.14756393432617188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;20]" time="0.4194455146789551"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;21]" time="0.9469780921936035"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;22]" time="0.017970800399780273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;23]" time="0.018303871154785156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;24]" time="0.18050479888916016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;25]" time="4.705510139465332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;26]" time="11.0335214138031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;0]" time="0.024281740188598633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;1]" time="0.02098536491394043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;2]" time="0.040940046310424805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;3]" time="0.04243731498718262"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;4]" time="0.041625261306762695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;5]" time="0.01795482635498047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;6]" time="0.017281293869018555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;7]" time="0.044057369232177734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;8]" time="0.24075984954833984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;9]" time="0.45049476623535156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;10]" time="0.03718090057373047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;11]" time="0.07361626625061035"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;12]" time="0.07262253761291504"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;13]" time="0.06034111976623535"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;14]" time="0.07746386528015137"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;15]" time="0.1083064079284668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;16]" time="0.1199800968170166"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;17]" time="0.05197930335998535"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;18]" time="0.05336260795593262"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;19]" time="0.15211105346679688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;20]" time="0.43464088439941406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;21]" time="0.961266040802002"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;22]" time="0.02245926856994629"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;23]" time="0.018364667892456055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;24]" time="0.18866753578186035"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;25]" time="4.816565036773682"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;26]" time="11.124696254730225"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.0035626888275146484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.0016684532165527344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.004398345947265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.004727363586425781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.006631612777709961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.005735874176025391"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.0026640892028808594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.001689910888671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.006230592727661133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.007780313491821289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.02250194549560547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.005817413330078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.004928112030029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.0025131702423095703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.005620479583740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.009210824966430664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.009917259216308594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.015290260314941406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.00841379165649414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.0027418136596679688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.04875445365905762"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.02275824546813965"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.07635807991027832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.008939266204833984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.0037775039672851562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.0027446746826171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.02891993522644043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.037724971771240234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.13231325149536133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.010110139846801758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.004299640655517578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.0018856525421142578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.004494667053222656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.00479888916015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.006613969802856445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.005644798278808594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.0026290416717529297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.0016601085662841797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.006285667419433594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.007939577102661133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.02325606346130371"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.006724834442138672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.004836320877075195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.002502918243408203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.0057468414306640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.009324073791503906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.009855508804321289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.015156030654907227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.007383584976196289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.002737283706665039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.04862689971923828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.026724815368652344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.07628679275512695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.009122610092163086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.0037631988525390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.0035638809204101562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.04707217216491699"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.042830467224121094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.18694329261779785"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.010716915130615234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.004141807556152344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.001760244369506836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.004412412643432617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.004718303680419922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.006640911102294922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.005480051040649414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.0025987625122070312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.0017321109771728516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.006312131881713867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.0077478885650634766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.022839069366455078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.006668806076049805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.004853487014770508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.0024297237396240234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.005627632141113281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.009171724319458008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.009921789169311523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.015163183212280273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.00762486457824707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.002841949462890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.04749751091003418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.022659778594970703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.07504034042358398"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.008984088897705078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.0038750171661376953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.0034215450286865234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.04731297492980957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.04320931434631348"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.18967509269714355"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.011219501495361328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.004213571548461914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.0018694400787353516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.0044324398040771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.004608154296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.006407499313354492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.0055539608001708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.0026962757110595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.0016620159149169922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.006148099899291992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.0078887939453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.02261495590209961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.006875276565551758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.004815578460693359"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.0024840831756591797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.005750179290771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.00933218002319336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.009791374206542969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.014942646026611328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.007437467575073242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.002676725387573242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.04715704917907715"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.023067712783813477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.08231782913208008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.009074211120605469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.0037963390350341797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.002533435821533203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.028554677963256836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.06027722358703613"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.1871941089630127"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.011120796203613281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.0040814876556396484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.001802682876586914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.004435539245605469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.004814863204956055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.006581544876098633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.005566835403442383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.0029039382934570312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.001728057861328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.0065157413482666016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.008291006088256836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.02369213104248047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.006720066070556641"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.00501704216003418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.0025606155395507812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.0058956146240234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.009439706802368164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.01002359390258789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.015605449676513672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.008464813232421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.0028455257415771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.05011248588562012"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.023168325424194336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.07657480239868164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.009341955184936523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.003990650177001953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.0037071704864501953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.048709869384765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.06516695022583008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.24025869369506836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.011470556259155273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.004088163375854492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.0017871856689453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.00446319580078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.004699230194091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.006729841232299805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.005663394927978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.002634286880493164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.0016334056854248047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.006333589553833008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.00812077522277832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.02356886863708496"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.006734609603881836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.004918098449707031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.0025522708892822266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.005658388137817383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.009143590927124023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.009869575500488281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.015354394912719727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.007361412048339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.0027878284454345703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.047072649002075195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.02346944808959961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.07783317565917969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.009399175643920898"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.0038216114044189453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.0034618377685546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.049492835998535156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.06550168991088867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.24100017547607422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.012562036514282227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.004099607467651367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.001796722412109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.004639387130737305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.004705190658569336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.006608486175537109"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.00553131103515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.002593517303466797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.001688241958618164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.006266117095947266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.008133888244628906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.022995471954345703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.006750583648681641"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.004873752593994141"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.0025014877319335938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.005982875823974609"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.009317398071289062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.009922266006469727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.015184879302978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.007281780242919922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.002718687057495117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.047202110290527344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.023308753967285156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.07578182220458984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.008900165557861328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.0039038658142089844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.002805948257446289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.029158592224121094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.060987234115600586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.18545770645141602"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.011211156845092773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.004070281982421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0018265247344970703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.004454612731933594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.004807233810424805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.006714344024658203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.005799770355224609"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.0027229785919189453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.0016748905181884766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.006437063217163086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.008126497268676758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.02340984344482422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.00667119026184082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.005121707916259766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.0035898685455322266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.005934715270996094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.009409904479980469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.01013040542602539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.015575647354125977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.008357048034667969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.0027544498443603516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.04929924011230469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.023526668548583984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.07892465591430664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.009368181228637695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.003966093063354492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.003695964813232422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.048223257064819336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.06526875495910645"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.2415907382965088"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.011940956115722656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.004046201705932617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.0018148422241210938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.004398345947265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.004826545715332031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.006739616394042969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.005607128143310547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.0028078556060791016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.0016868114471435547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.0064923763275146484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.008176565170288086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.023426532745361328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.008022069931030273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.006022453308105469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.002611398696899414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.0057373046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.009393453598022461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.010171175003051758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.015486955642700195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.00832223892211914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.0027098655700683594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.04903864860534668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.023135900497436523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.07900691032409668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.009263038635253906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.004014253616333008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.003482818603515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.04887652397155762"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.06572484970092773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.2411518096923828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.0116729736328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;0]" time="0.005755186080932617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;1]" time="0.0046880245208740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;2]" time="0.008318185806274414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;3]" time="0.009992122650146484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;4]" time="0.011889457702636719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;5]" time="0.0051822662353515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;6]" time="0.004058837890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;7]" time="0.008516311645507812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;8]" time="0.028577327728271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;9]" time="0.05528831481933594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;10]" time="0.00880742073059082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;11]" time="0.015514850616455078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;12]" time="0.015349626541137695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;13]" time="0.012101173400878906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;14]" time="0.015523672103881836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;15]" time="0.023473024368286133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;16]" time="0.02842092514038086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;17]" time="0.009926795959472656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;18]" time="0.009882688522338867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;19]" time="0.013304471969604492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;20]" time="0.0445859432220459"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;21]" time="0.09161210060119629"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;22]" time="0.0048580169677734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;23]" time="0.004133939743041992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;24]" time="0.009003162384033203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;25]" time="0.049524784088134766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;26]" time="0.10581684112548828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;0]" time="0.005596160888671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;1]" time="0.00822305679321289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;2]" time="0.00834035873413086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;3]" time="0.010226726531982422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;4]" time="0.012896060943603516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;5]" time="0.0050966739654541016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;6]" time="0.0040662288665771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;7]" time="0.008391141891479492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;8]" time="0.028717994689941406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;9]" time="0.053379058837890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;10]" time="0.008651971817016602"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;11]" time="0.015685319900512695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;12]" time="0.015262365341186523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;13]" time="0.012078523635864258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;14]" time="0.015585660934448242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;15]" time="0.02360391616821289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;16]" time="0.028165578842163086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;17]" time="0.009979009628295898"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;18]" time="0.010026693344116211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;19]" time="0.013109207153320312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;20]" time="0.043915748596191406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;21]" time="0.09220290184020996"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;22]" time="0.004838466644287109"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;23]" time="0.004090070724487305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;24]" time="0.010307788848876953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;25]" time="0.07298088073730469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;26]" time="0.15994477272033691"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;0]" time="0.0054895877838134766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;1]" time="0.004643440246582031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;2]" time="0.008103609085083008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;3]" time="0.010098695755004883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;4]" time="0.011838197708129883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;5]" time="0.0051877498626708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;6]" time="0.00410008430480957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;7]" time="0.008475542068481445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;8]" time="0.0289456844329834"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;9]" time="0.05419206619262695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;10]" time="0.008542060852050781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;11]" time="0.01568293571472168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;12]" time="0.015444040298461914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;13]" time="0.012013912200927734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;14]" time="0.015575647354125977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;15]" time="0.023876667022705078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;16]" time="0.02808237075805664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;17]" time="0.009992599487304688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;18]" time="0.010029792785644531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;19]" time="0.013129234313964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;20]" time="0.04391932487487793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;21]" time="0.09581375122070312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;22]" time="0.004891633987426758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;23]" time="0.004432201385498047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;24]" time="0.010249614715576172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;25]" time="0.07293963432312012"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;26]" time="0.1609480381011963"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.004088640213012695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.002435922622680664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.008213520050048828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.010689973831176758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.014749526977539062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.010474681854248047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.004105091094970703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.0024161338806152344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.03586316108703613"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.06946182250976562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.9867677688598633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.011209487915039062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.006197452545166016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.0037779808044433594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.010874748229980469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.015881061553955078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.021532773971557617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.03274846076965332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.008756637573242188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.0046329498291015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.09172463417053223"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.07180333137512207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.8152403831481934"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.014046430587768555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.004235267639160156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.003423452377319336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.04584455490112305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.07477140426635742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.6560506820678711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.014408588409423828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.004500389099121094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.002438068389892578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.008198261260986328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.010222196578979492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.015377521514892578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.010535001754760742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.0041921138763427734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.00240325927734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.03569483757019043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.06904482841491699"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.9741334915161133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.011409759521484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.006371021270751953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.0038361549377441406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.010896921157836914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.01696038246154785"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.021811246871948242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.03286242485046387"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.00898432731628418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.004824161529541016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.09370779991149902"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.07261252403259277"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.8031315803527832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.014183759689331055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.004302263259887695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.004247903823852539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.06553411483764648"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.08092570304870605"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.7232108116149902"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.015419244766235352"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.004385709762573242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.0022933483123779297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.00784444808959961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.010019779205322266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.014537811279296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.010720491409301758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.004153251647949219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.002313375473022461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.035366058349609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.06857800483703613"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.974881649017334"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.01136636734008789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.006450653076171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.003871440887451172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.010833978652954102"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.0171201229095459"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.02196216583251953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.03285551071166992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.008882522583007812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.004685878753662109"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.09212613105773926"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.07084321975708008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.8065142631530762"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.014250993728637695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.004092216491699219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.004250288009643555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.06642675399780273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.08066940307617188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.7163527011871338"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.015478134155273438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.004511356353759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.002341747283935547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.008170127868652344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.010174989700317383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.015156269073486328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.010624885559082031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.00417637825012207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.0023708343505859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.035451412200927734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.07010054588317871"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.9752764701843262"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.011335134506225586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.006502389907836914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.0038068294525146484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.011056184768676758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.01746344566345215"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.0219268798828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.03299880027770996"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.009084463119506836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.00499725341796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.09227252006530762"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.07255387306213379"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.8121130466461182"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.014089107513427734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.004297733306884766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.0035123825073242188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.04683947563171387"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.09818220138549805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.7200846672058105"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.015589714050292969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.00453495979309082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.002526521682739258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.00805521011352539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.010283470153808594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.014847755432128906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.010585308074951172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.004225015640258789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.002377033233642578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.03611421585083008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.06950926780700684"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.9794211387634277"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.011191129684448242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.006268739700317383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.004014492034912109"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.011216163635253906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.017575740814208984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.021656513214111328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.0328066349029541"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.009169816970825195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.004764556884765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.09338068962097168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.07257747650146484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.8167514801025391"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.014042139053344727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.0043561458587646484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.004361391067504883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.06660246849060059"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.1028895378112793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.3984231948852539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.01639246940612793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.004441022872924805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.002337217330932617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.008096933364868164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.010171890258789062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.014934539794921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.010917425155639648"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.0042266845703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.002386331558227539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.035717010498046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.06973576545715332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.9791989326477051"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.01157379150390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.006439685821533203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.0038747787475585938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.011075258255004883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.01711297035217285"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.021727561950683594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.03297162055969238"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.009111166000366211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.004827260971069336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.09297871589660645"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.07212209701538086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.8141531944274902"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.014064311981201172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.004143238067626953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.004207611083984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.0663003921508789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.10222339630126953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.7738728523254395"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.016686677932739258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.004448413848876953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.002370595932006836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.008149385452270508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.010249853134155273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.014963388442993164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.010605812072753906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.004313230514526367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.002323150634765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.035466909408569336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.06971597671508789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.9780538082122803"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.01143646240234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.006230354309082031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.003842592239379883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.0110321044921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.017571210861206055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.021700382232666016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.03305387496948242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.009207725524902344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.004766225814819336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.09322643280029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.07177925109863281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.8073039054870605"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.013998985290527344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.004275083541870117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.00342559814453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.0466005802154541"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.09797334671020508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.7184045314788818"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.015572786331176758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.004459381103515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0025069713592529297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.008102655410766602"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.010248899459838867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.014791488647460938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.01055908203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.0042417049407958984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.0023908615112304688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.036153554916381836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.06945681571960449"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.9762189388275146"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.01140904426574707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.006510019302368164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.003994464874267578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.01116180419921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.0175020694732666"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.021887779235839844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.036809682846069336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.009222269058227539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.004987955093383789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.09258770942687988"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.07160282135009766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.8110623359680176"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.014307260513305664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.004314422607421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.004490375518798828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.06621909141540527"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.10146045684814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.7699813842773438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.01642465591430664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.004547595977783203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.002344846725463867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.008111715316772461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.010013341903686523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.014840126037597656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.010474681854248047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.004177093505859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.002390623092651367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.035780906677246094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.06924653053283691"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.9785501956939697"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.01122426986694336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.006531476974487305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.004319906234741211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.011649131774902344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.017873287200927734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.021849870681762695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.033109188079833984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.008899688720703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.004659175872802734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.0944826602935791"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.07126092910766602"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.8112595081329346"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.014283895492553711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.004287004470825195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.0042798519134521484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.06549930572509766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.10212588310241699"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.7765316963195801"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.016158103942871094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;0]" time="0.00538325309753418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;1]" time="0.004209041595458984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;2]" time="0.007731199264526367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;3]" time="0.015159368515014648"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;4]" time="0.018832683563232422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;5]" time="0.005232810974121094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;6]" time="0.003731250762939453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;7]" time="0.016782522201538086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;8]" time="0.4605402946472168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;9]" time="2.3342740535736084"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;10]" time="0.007741451263427734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;11]" time="0.018455028533935547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;12]" time="0.018970727920532227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;13]" time="0.011972904205322266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;14]" time="0.01979541778564453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;15]" time="0.03289031982421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;16]" time="0.04292798042297363"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;17]" time="0.009988069534301758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;18]" time="0.00986623764038086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;19]" time="0.021134376525878906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;20]" time="0.35060620307922363"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;21]" time="1.8031957149505615"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;22]" time="0.0048024654388427734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;23]" time="0.0039052963256835938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;24]" time="0.013016939163208008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;25]" time="0.2803046703338623"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;26]" time="1.3102784156799316"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;0]" time="0.0052335262298583984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;1]" time="0.004479408264160156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;2]" time="0.008142232894897461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;3]" time="0.014942407608032227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;4]" time="0.01896500587463379"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;5]" time="0.005068540573120117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;6]" time="0.00433659553527832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;7]" time="0.016679048538208008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;8]" time="0.4542868137359619"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;9]" time="2.202608346939087"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;10]" time="0.007638216018676758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;11]" time="0.019574642181396484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;12]" time="0.018914222717285156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;13]" time="0.011869192123413086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;14]" time="0.019388914108276367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;15]" time="0.03252673149108887"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;16]" time="0.042163848876953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;17]" time="0.010050058364868164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;18]" time="0.009796857833862305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;19]" time="0.021492719650268555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;20]" time="1.6331195831298828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;21]" time="1.7941389083862305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;22]" time="0.004457712173461914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;23]" time="0.003945589065551758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;24]" time="0.014003276824951172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;25]" time="0.30189085006713867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;26]" time="1.3743293285369873"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;0]" time="0.004834890365600586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;1]" time="0.004177093505859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;2]" time="0.00786900520324707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;3]" time="0.015346288681030273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;4]" time="0.018080711364746094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;5]" time="0.005006074905395508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;6]" time="0.003834247589111328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;7]" time="0.016576290130615234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;8]" time="0.45996904373168945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;9]" time="2.2220451831817627"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;10]" time="0.007486820220947266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;11]" time="0.01842975616455078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;12]" time="0.018768787384033203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;13]" time="0.011602640151977539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;14]" time="0.019090652465820312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;15]" time="0.03215432167053223"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;16]" time="0.042083740234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;17]" time="0.009778261184692383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;18]" time="0.009840250015258789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;19]" time="0.020727872848510742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;20]" time="0.3488790988922119"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;21]" time="1.7980518341064453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;22]" time="0.00483250617980957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;23]" time="0.004195690155029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;24]" time="0.014246702194213867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;25]" time="0.299607515335083"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;26]" time="1.3826932907104492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;0]" time="0.0035080909729003906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;1]" time="0.002882719039916992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;2]" time="0.004407405853271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;3]" time="0.012292623519897461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;4]" time="0.02062082290649414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;5]" time="0.004298686981201172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;6]" time="0.0033066272735595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;7]" time="0.005539655685424805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;8]" time="0.01981377601623535"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;9]" time="0.038980960845947266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;10]" time="0.0059583187103271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;11]" time="0.009536981582641602"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;12]" time="0.008841276168823242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;13]" time="0.006215810775756836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;14]" time="0.009443998336791992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;15]" time="0.03974270820617676"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;16]" time="0.07976102828979492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;17]" time="0.009889602661132812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;18]" time="0.00999307632446289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;19]" time="0.02533698081970215"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;20]" time="0.04229283332824707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;21]" time="0.07931756973266602"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;22]" time="0.024876832962036133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;23]" time="0.02471923828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;24]" time="0.03289198875427246"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;25]" time="0.07875490188598633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;26]" time="0.13978791236877441"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;0]" time="0.0036776065826416016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;1]" time="0.0028498172760009766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;2]" time="0.004393100738525391"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;3]" time="0.012321233749389648"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;4]" time="0.020700693130493164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;5]" time="0.004246950149536133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;6]" time="0.0033876895904541016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;7]" time="0.005526542663574219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;8]" time="0.023297786712646484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;9]" time="0.03884005546569824"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;10]" time="0.005793333053588867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;11]" time="0.00967264175415039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;12]" time="0.008908987045288086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;13]" time="0.0061948299407958984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;14]" time="0.009383201599121094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;15]" time="0.039270877838134766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;16]" time="0.07937741279602051"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;17]" time="0.009627819061279297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;18]" time="0.010008096694946289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;19]" time="0.02535247802734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;20]" time="0.04279828071594238"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;21]" time="0.0790560245513916"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;22]" time="0.02512955665588379"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;23]" time="0.02546405792236328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;24]" time="0.0331418514251709"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;25]" time="0.07881879806518555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;26]" time="0.14287638664245605"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;0]" time="0.003695249557495117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;1]" time="0.002852916717529297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;2]" time="0.00440526008605957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;3]" time="0.012331008911132812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;4]" time="0.020699262619018555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;5]" time="0.004239559173583984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;6]" time="0.003226041793823242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;7]" time="0.005722522735595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;8]" time="0.019875049591064453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;9]" time="0.039342403411865234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;10]" time="0.005838871002197266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;11]" time="0.009618997573852539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;12]" time="0.008961915969848633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;13]" time="0.006199359893798828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;14]" time="0.009414196014404297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;15]" time="0.03945016860961914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;16]" time="0.07959151268005371"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;17]" time="0.010291814804077148"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;18]" time="0.008999347686767578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;19]" time="0.024456262588500977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;20]" time="0.04279351234436035"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;21]" time="0.07870769500732422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;22]" time="0.02454209327697754"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;23]" time="0.025218725204467773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;24]" time="0.03263139724731445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;25]" time="0.07899856567382812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;26]" time="0.14098215103149414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;0]" time="0.007877826690673828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;1]" time="0.007946252822875977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;2]" time="0.008721113204956055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;3]" time="0.01051187515258789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;4]" time="0.010697603225708008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;5]" time="0.009011268615722656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;6]" time="0.009207725524902344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;7]" time="0.014867067337036133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;8]" time="0.04572129249572754"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;9]" time="0.08027505874633789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;10]" time="0.016452312469482422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;11]" time="0.019711732864379883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;12]" time="0.019466161727905273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;13]" time="0.014313936233520508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;14]" time="0.021075010299682617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;15]" time="0.03018784523010254"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;16]" time="0.033504486083984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;17]" time="0.03459429740905762"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;18]" time="0.03665900230407715"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;19]" time="0.11218142509460449"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;20]" time="0.0978550910949707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;21]" time="0.1574089527130127"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;22]" time="0.12814807891845703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;23]" time="0.1288750171661377"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;24]" time="0.16106414794921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;25]" time="0.2620809078216553"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;26]" time="0.4005870819091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;0]" time="0.007905960083007812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;1]" time="0.00795888900756836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;2]" time="0.008830547332763672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;3]" time="0.010876893997192383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;4]" time="0.010673761367797852"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;5]" time="0.008935689926147461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;6]" time="0.008958816528320312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;7]" time="0.014918804168701172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;8]" time="0.045653581619262695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;9]" time="0.08197498321533203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;10]" time="0.016391515731811523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;11]" time="0.019711971282958984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;12]" time="0.019179344177246094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;13]" time="0.014388322830200195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;14]" time="0.020718812942504883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;15]" time="0.030645370483398438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;16]" time="0.03373885154724121"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;17]" time="0.03396892547607422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;18]" time="0.03632378578186035"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;19]" time="0.1141824722290039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;20]" time="0.09862470626831055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;21]" time="0.15613842010498047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;22]" time="0.12594318389892578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;23]" time="0.12598276138305664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;24]" time="0.15936017036437988"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;25]" time="0.2647557258605957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;26]" time="0.40782642364501953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;0]" time="0.007688760757446289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;1]" time="0.008147478103637695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;2]" time="0.00886392593383789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;3]" time="0.010531187057495117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;4]" time="0.010753393173217773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;5]" time="0.009048223495483398"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;6]" time="0.009206056594848633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;7]" time="0.015057086944580078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;8]" time="0.045682668685913086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;9]" time="0.08119606971740723"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;10]" time="0.01634979248046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;11]" time="0.019479990005493164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;12]" time="0.019150733947753906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;13]" time="0.014293909072875977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;14]" time="0.020684003829956055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;15]" time="0.030180931091308594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;16]" time="0.03287553787231445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;17]" time="0.034226417541503906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;18]" time="0.03665804862976074"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;19]" time="0.1110682487487793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;20]" time="0.2035229206085205"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;21]" time="0.16461682319641113"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;22]" time="0.12667560577392578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;23]" time="0.12607693672180176"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;24]" time="0.15866971015930176"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;25]" time="0.27175354957580566"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;26]" time="0.4080362319946289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;0]" time="0.003592252731323242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;1]" time="0.0028934478759765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;2]" time="0.004340171813964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;3]" time="0.005110263824462891"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;4]" time="0.005765676498413086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;5]" time="0.002337932586669922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;6]" time="0.002344369888305664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;7]" time="0.003393888473510742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;8]" time="0.004491567611694336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;9]" time="0.0052525997161865234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;10]" time="0.003066539764404297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;11]" time="0.005181550979614258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;12]" time="0.005177974700927734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;13]" time="0.004352092742919922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;14]" time="0.005280971527099609"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;15]" time="0.007233858108520508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;16]" time="0.008924722671508789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;17]" time="0.003150463104248047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;18]" time="0.003023386001586914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;19]" time="0.005324363708496094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;20]" time="0.012809276580810547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;21]" time="0.024415016174316406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;22]" time="0.0030951499938964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;23]" time="0.0023517608642578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;24]" time="0.004294633865356445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;25]" time="0.026603221893310547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;26]" time="0.057947397232055664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;0]" time="0.0035004615783691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;1]" time="0.0027565956115722656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;2]" time="0.004042387008666992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;3]" time="0.004620552062988281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;4]" time="0.005249738693237305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;5]" time="0.0024068355560302734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;6]" time="0.0023877620697021484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;7]" time="0.003437519073486328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;8]" time="0.0045511722564697266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;9]" time="0.005722522735595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;10]" time="0.003213644027709961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;11]" time="0.005353212356567383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;12]" time="0.005417585372924805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;13]" time="0.004634857177734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;14]" time="0.005395412445068359"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;15]" time="0.007450580596923828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;16]" time="0.00972890853881836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;17]" time="0.003353118896484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;18]" time="0.003025054931640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;19]" time="0.005292415618896484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;20]" time="0.013218164443969727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;21]" time="0.025374889373779297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;22]" time="0.0030472278594970703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;23]" time="0.002495288848876953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;24]" time="0.004335165023803711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;25]" time="0.02712416648864746"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;26]" time="0.05845475196838379"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;0]" time="0.0033905506134033203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;1]" time="0.002615213394165039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;2]" time="0.0038330554962158203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;3]" time="0.004589080810546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;4]" time="0.005257844924926758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;5]" time="0.0023674964904785156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;6]" time="0.0023446083068847656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;7]" time="0.003383636474609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;8]" time="0.004533052444458008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;9]" time="0.009753942489624023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;10]" time="0.0042231082916259766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;11]" time="0.005504608154296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;12]" time="0.005272388458251953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;13]" time="0.004426002502441406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;14]" time="0.005403041839599609"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;15]" time="0.007462263107299805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;16]" time="0.009488821029663086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;17]" time="0.003330707550048828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;18]" time="0.003152132034301758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;19]" time="0.005450725555419922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;20]" time="0.01314234733581543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;21]" time="0.024424076080322266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;22]" time="0.0029904842376708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;23]" time="0.002502918243408203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;24]" time="0.004285097122192383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;25]" time="0.026990413665771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;26]" time="0.05936694145202637"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;0]" time="0.006924629211425781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;1]" time="0.005918741226196289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;2]" time="0.006989955902099609"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;3]" time="0.00793600082397461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;4]" time="0.008293390274047852"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;5]" time="0.005211830139160156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;6]" time="0.00496363639831543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;7]" time="0.007761716842651367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;8]" time="0.028180599212646484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;9]" time="0.05048966407775879"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;10]" time="0.009752988815307617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;11]" time="0.011916875839233398"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;12]" time="0.011969566345214844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;13]" time="0.010019779205322266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;14]" time="0.012081384658813477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;15]" time="0.01595139503479004"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;16]" time="0.0173189640045166"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;17]" time="0.012467145919799805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;18]" time="0.012412548065185547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;19]" time="0.019171714782714844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;20]" time="0.05232954025268555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;21]" time="0.11063528060913086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;22]" time="0.005886077880859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;23]" time="0.004998922348022461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;24]" time="0.021256446838378906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;25]" time="0.41358089447021484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;26]" time="0.9480690956115723"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;0]" time="0.0068509578704833984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;1]" time="0.006041049957275391"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;2]" time="0.007008790969848633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;3]" time="0.00809168815612793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;4]" time="0.008283615112304688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;5]" time="0.00509190559387207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;6]" time="0.005060672760009766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;7]" time="0.007686138153076172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;8]" time="0.028182268142700195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;9]" time="0.0507814884185791"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;10]" time="0.009895086288452148"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;11]" time="0.011969804763793945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;12]" time="0.011928558349609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;13]" time="0.009953975677490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;14]" time="0.012075424194335938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;15]" time="0.016208887100219727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;16]" time="0.01717996597290039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;17]" time="0.012379169464111328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;18]" time="0.012369632720947266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;19]" time="0.019136428833007812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;20]" time="0.05144834518432617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;21]" time="0.10948538780212402"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;22]" time="0.006067991256713867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;23]" time="0.005070209503173828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;24]" time="0.02219867706298828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;25]" time="0.43520212173461914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;26]" time="0.995225191116333"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;0]" time="0.006692171096801758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;1]" time="0.0059299468994140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;2]" time="0.006985902786254883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;3]" time="0.007886409759521484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;4]" time="0.008185386657714844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;5]" time="0.004988193511962891"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;6]" time="0.004952192306518555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;7]" time="0.007551431655883789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;8]" time="0.02800607681274414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;9]" time="0.051169395446777344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;10]" time="0.009902715682983398"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;11]" time="0.012006044387817383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;12]" time="0.012044668197631836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;13]" time="0.009888887405395508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;14]" time="0.012204885482788086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;15]" time="0.015560626983642578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;16]" time="0.017017126083374023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;17]" time="0.01233673095703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;18]" time="0.01256561279296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;19]" time="0.019362688064575195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;20]" time="0.051604509353637695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;21]" time="0.13169336318969727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;22]" time="0.00582122802734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;23]" time="0.005232810974121094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;24]" time="0.02302694320678711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;25]" time="0.44005465507507324"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;26]" time="0.9972174167633057"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;0]" time="0.0067675113677978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;1]" time="0.0059816837310791016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;2]" time="0.007149934768676758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;3]" time="0.008319854736328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;4]" time="0.008463382720947266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;5]" time="0.005083560943603516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;6]" time="0.00493621826171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;7]" time="0.007979393005371094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;8]" time="0.028289794921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;9]" time="0.050705909729003906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;10]" time="0.009733915328979492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;11]" time="0.01190495491027832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;12]" time="0.01172637939453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;13]" time="0.00978851318359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;14]" time="0.011830568313598633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;15]" time="0.015874385833740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;16]" time="0.017024517059326172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;17]" time="0.01234745979309082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;18]" time="0.012437820434570312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;19]" time="0.022830724716186523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;20]" time="0.056381940841674805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;21]" time="0.11936664581298828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;22]" time="0.005924701690673828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;23]" time="0.005181550979614258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;24]" time="0.018331527709960938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;25]" time="0.3812098503112793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;26]" time="0.8818373680114746"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;0]" time="0.007098197937011719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;1]" time="0.006090641021728516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;2]" time="0.007563114166259766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;3]" time="0.00878453254699707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;4]" time="0.008368730545043945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;5]" time="0.004971981048583984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;6]" time="0.005025386810302734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;7]" time="0.007848739624023438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;8]" time="0.02857685089111328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;9]" time="0.05093050003051758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;10]" time="0.00998234748840332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;11]" time="0.01176309585571289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;12]" time="0.011801481246948242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;13]" time="0.009870529174804688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;14]" time="0.011780261993408203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;15]" time="0.0156705379486084"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;16]" time="0.019701242446899414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;17]" time="0.012475728988647461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;18]" time="0.012504816055297852"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;19]" time="0.02265310287475586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;20]" time="0.05571341514587402"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;21]" time="0.1168508529663086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;22]" time="0.0060825347900390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;23]" time="0.005174398422241211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;24]" time="0.018820762634277344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;25]" time="0.4018056392669678"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;26]" time="0.9382729530334473"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;0]" time="0.0070340633392333984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;1]" time="0.007303953170776367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;2]" time="0.0074138641357421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;3]" time="0.00830078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;4]" time="0.008514404296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;5]" time="0.005107402801513672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;6]" time="0.0050089359283447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;7]" time="0.007809877395629883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;8]" time="0.028378725051879883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;9]" time="0.05114316940307617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;10]" time="0.009986400604248047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;11]" time="0.01183009147644043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;12]" time="0.011509180068969727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;13]" time="0.009645938873291016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;14]" time="0.011745214462280273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;15]" time="0.015610218048095703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;16]" time="0.017279386520385742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;17]" time="0.012579679489135742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;18]" time="0.012647867202758789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;19]" time="0.022250890731811523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;20]" time="0.05998516082763672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;21]" time="0.1163489818572998"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;22]" time="0.005938291549682617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;23]" time="0.00516510009765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;24]" time="0.01857471466064453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;25]" time="0.4046671390533447"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;26]" time="0.9411988258361816"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;0]" time="0.006720542907714844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;1]" time="0.005692720413208008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;2]" time="0.007078886032104492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;3]" time="0.007898807525634766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;4]" time="0.008095502853393555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;5]" time="0.00502467155456543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;6]" time="0.005068063735961914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;7]" time="0.00785970687866211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;8]" time="0.028583765029907227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;9]" time="0.051795005798339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;10]" time="0.009734153747558594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;11]" time="0.011727094650268555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;12]" time="0.011639118194580078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;13]" time="0.009920120239257812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;14]" time="0.012013673782348633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;15]" time="0.015707969665527344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;16]" time="0.0169370174407959"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;17]" time="0.012569904327392578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;18]" time="0.01268911361694336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;19]" time="0.022761821746826172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;20]" time="0.05608987808227539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;21]" time="0.1190192699432373"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;22]" time="0.005899906158447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;23]" time="0.005283832550048828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;24]" time="0.019907474517822266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;25]" time="0.38463258743286133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;26]" time="0.8876123428344727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;0]" time="0.0069348812103271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;1]" time="0.005903005599975586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;2]" time="0.006884574890136719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;3]" time="0.00792694091796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;4]" time="0.008100271224975586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;5]" time="0.005004167556762695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;6]" time="0.0049703121185302734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;7]" time="0.008019685745239258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;8]" time="0.029085636138916016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;9]" time="0.052453041076660156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;10]" time="0.009885072708129883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;11]" time="0.011868715286254883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;12]" time="0.011682748794555664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;13]" time="0.010064363479614258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;14]" time="0.01183319091796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;15]" time="0.01578545570373535"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;16]" time="0.01711130142211914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;17]" time="0.012759923934936523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;18]" time="0.012706756591796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;19]" time="0.02223515510559082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;20]" time="0.0562283992767334"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;21]" time="0.11854290962219238"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;22]" time="0.006085395812988281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;23]" time="0.0052776336669921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;24]" time="0.018433809280395508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;25]" time="0.4074258804321289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;26]" time="0.93753981590271"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;0]" time="0.006525278091430664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;1]" time="0.005806684494018555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;2]" time="0.006922006607055664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;3]" time="0.007908105850219727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;4]" time="0.008144617080688477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;5]" time="0.005133152008056641"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;6]" time="0.004973411560058594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;7]" time="0.007797956466674805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;8]" time="0.028867244720458984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;9]" time="0.05276823043823242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;10]" time="0.009804010391235352"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;11]" time="0.011886358261108398"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;12]" time="0.011734485626220703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;13]" time="0.009972095489501953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;14]" time="0.012107133865356445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;15]" time="0.015698909759521484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;16]" time="0.01724410057067871"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;17]" time="0.012564897537231445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;18]" time="0.012342691421508789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;19]" time="0.022557497024536133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;20]" time="0.24872851371765137"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;21]" time="0.1170661449432373"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;22]" time="0.006014108657836914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;23]" time="0.005246162414550781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;24]" time="0.01953577995300293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;25]" time="0.40460705757141113"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;26]" time="0.9349901676177979"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;0]" time="0.005444765090942383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;1]" time="0.005943775177001953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;2]" time="0.006985902786254883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;3]" time="0.008104801177978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;4]" time="0.006610870361328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;5]" time="0.0043261051177978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;6]" time="0.004916191101074219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;7]" time="0.0074083805084228516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;8]" time="0.024240493774414062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;9]" time="0.026497840881347656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;10]" time="0.010245561599731445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;11]" time="0.011838436126708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;12]" time="0.009766101837158203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;13]" time="0.0102386474609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;14]" time="0.012160539627075195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;15]" time="0.016418933868408203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;16]" time="0.017531394958496094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;17]" time="0.02509307861328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;18]" time="0.025146961212158203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;19]" time="0.05233311653137207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;20]" time="0.0660243034362793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;21]" time="0.125931978225708"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;22]" time="0.00561213493347168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;23]" time="0.0054509639739990234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;24]" time="0.02033829689025879"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;25]" time="0.40131330490112305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;26]" time="0.8557963371276855"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;0]" time="0.005881071090698242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;1]" time="0.006258964538574219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;2]" time="0.0071332454681396484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;3]" time="0.008239507675170898"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;4]" time="0.0067636966705322266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;5]" time="0.0043675899505615234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;6]" time="0.0049436092376708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;7]" time="0.007466554641723633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;8]" time="0.024570226669311523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;9]" time="0.027135133743286133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;10]" time="0.010310173034667969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;11]" time="0.012233734130859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;12]" time="0.009742498397827148"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;13]" time="0.010087728500366211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;14]" time="0.012362241744995117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;15]" time="0.01643824577331543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;16]" time="0.01781606674194336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;17]" time="0.025389909744262695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;18]" time="0.026066064834594727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;19]" time="0.0521240234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;20]" time="0.06868886947631836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;21]" time="0.13243675231933594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;22]" time="0.0059969425201416016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;23]" time="0.006177186965942383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;24]" time="0.023075342178344727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;25]" time="0.4270970821380615"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;26]" time="0.8526771068572998"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;0]" time="0.005761623382568359"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;1]" time="0.0060002803802490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;2]" time="0.0071141719818115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;3]" time="0.008227825164794922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;4]" time="0.006597280502319336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;5]" time="0.004333972930908203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;6]" time="0.0049173831939697266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;7]" time="0.007358074188232422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;8]" time="0.0244443416595459"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;9]" time="0.026646137237548828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;10]" time="0.010086297988891602"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;11]" time="0.01206064224243164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;12]" time="0.009620189666748047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;13]" time="0.010201215744018555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;14]" time="0.012532949447631836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;15]" time="0.016447782516479492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;16]" time="0.01787567138671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;17]" time="0.02552318572998047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;18]" time="0.025974273681640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;19]" time="0.0526576042175293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;20]" time="0.0677340030670166"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;21]" time="0.12599706649780273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;22]" time="0.005756378173828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;23]" time="0.005756378173828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;24]" time="0.021363496780395508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;25]" time="0.42382383346557617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;26]" time="0.8919739723205566"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;0]" time="0.0029532909393310547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;1]" time="0.016358375549316406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;2]" time="0.015247821807861328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;3]" time="0.01990652084350586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;4]" time="0.005026102066040039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;5]" time="0.0018808841705322266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;6]" time="0.010453939437866211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;7]" time="0.016183853149414062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;8]" time="0.06999349594116211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;9]" time="0.017658233642578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;10]" time="0.039494991302490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;11]" time="0.04500746726989746"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;12]" time="0.004208564758300781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;13]" time="0.039063215255737305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;14]" time="0.0396881103515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;15]" time="0.04954195022583008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;16]" time="0.06018805503845215"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;17]" time="0.06390190124511719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;18]" time="0.06427383422851562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;19]" time="0.14156866073608398"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;20]" time="0.6360316276550293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;21]" time="1.37514328956604"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;22]" time="0.0027666091918945312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;23]" time="0.01266026496887207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;24]" time="0.1207265853881836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;25]" time="3.2788732051849365"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;26]" time="0.7744827270507812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;0]" time="0.0028562545776367188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;1]" time="0.01194906234741211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;2]" time="0.014118194580078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;3]" time="0.016875028610229492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;4]" time="0.0041463375091552734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;5]" time="0.0019428730010986328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;6]" time="0.01027822494506836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;7]" time="0.01571035385131836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;8]" time="0.06829166412353516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;9]" time="0.016633033752441406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;10]" time="0.033449411392211914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;11]" time="0.03968000411987305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;12]" time="0.004257917404174805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;13]" time="0.03357648849487305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;14]" time="0.03900742530822754"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;15]" time="0.049799203872680664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;16]" time="0.056436777114868164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;17]" time="0.06267642974853516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;18]" time="0.06411027908325195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;19]" time="0.13738751411437988"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;20]" time="0.6245856285095215"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;21]" time="1.3837449550628662"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;22]" time="0.002675771713256836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;23]" time="0.012540817260742188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;24]" time="0.11448812484741211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;25]" time="3.293213367462158"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;26]" time="0.7670009136199951"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;0]" time="0.002945423126220703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;1]" time="0.01233983039855957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;2]" time="0.014388084411621094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;3]" time="0.016983985900878906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;4]" time="0.0040912628173828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;5]" time="0.001920461654663086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;6]" time="0.013349533081054688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;7]" time="0.01604628562927246"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;8]" time="0.06652498245239258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;9]" time="0.016292095184326172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;10]" time="0.047098398208618164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;11]" time="0.05498647689819336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;12]" time="0.004921674728393555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;13]" time="0.052973270416259766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;14]" time="0.05417585372924805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;15]" time="0.0539093017578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;16]" time="0.05628156661987305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;17]" time="0.06268739700317383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;18]" time="0.06283116340637207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;19]" time="0.13754057884216309"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;20]" time="0.6291170120239258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;21]" time="1.367387056350708"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;22]" time="0.0027256011962890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;23]" time="0.012432098388671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;24]" time="0.11423325538635254"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;25]" time="3.2759203910827637"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;26]" time="0.7687737941741943"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;0]" time="0.004227876663208008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;1]" time="0.0035927295684814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;2]" time="0.003950834274291992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;3]" time="0.004410505294799805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;4]" time="0.005090475082397461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;5]" time="0.0033376216888427734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;6]" time="0.0033228397369384766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;7]" time="0.0039017200469970703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;8]" time="0.00471186637878418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;9]" time="0.0056192874908447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;10]" time="0.004951000213623047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;11]" time="0.005856752395629883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;12]" time="0.005795478820800781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;13]" time="0.005167245864868164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;14]" time="0.005835533142089844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;15]" time="0.00781869888305664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;16]" time="0.009691953659057617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;17]" time="0.010199546813964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;18]" time="0.009797334671020508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;19]" time="0.016179323196411133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;20]" time="0.018929004669189453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;21]" time="0.02967047691345215"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;22]" time="0.004277706146240234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;23]" time="0.0035614967346191406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;24]" time="0.005178689956665039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;25]" time="0.027862071990966797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;26]" time="0.05885648727416992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;0]" time="0.0042514801025390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;1]" time="0.003371715545654297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;2]" time="0.00403141975402832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;3]" time="0.004499912261962891"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;4]" time="0.005038261413574219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;5]" time="0.00324249267578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;6]" time="0.0033113956451416016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;7]" time="0.0038557052612304688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;8]" time="0.00485539436340332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;9]" time="0.006165266036987305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;10]" time="0.005005836486816406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;11]" time="0.006144523620605469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;12]" time="0.005843639373779297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;13]" time="0.0055048465728759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;14]" time="0.006100654602050781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;15]" time="0.008047103881835938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;16]" time="0.00973963737487793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;17]" time="0.009847164154052734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;18]" time="0.009824514389038086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;19]" time="0.015482664108276367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;20]" time="0.018979310989379883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;21]" time="0.02929854393005371"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;22]" time="0.00440669059753418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;23]" time="0.003616809844970703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;24]" time="0.006159543991088867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;25]" time="0.030179977416992188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;26]" time="0.06191587448120117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;0]" time="0.004358530044555664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;1]" time="0.0034475326538085938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;2]" time="0.00423884391784668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;3]" time="0.004433631896972656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;4]" time="0.005062580108642578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;5]" time="0.003263711929321289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;6]" time="0.0033044815063476562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;7]" time="0.003866910934448242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;8]" time="0.004798412322998047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;9]" time="0.006536722183227539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;10]" time="0.0049970149993896484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;11]" time="0.0064296722412109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;12]" time="0.0057888031005859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;13]" time="0.005197763442993164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;14]" time="0.006069660186767578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;15]" time="0.00805044174194336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;16]" time="0.009742021560668945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;17]" time="0.009851217269897461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;18]" time="0.00991511344909668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;19]" time="0.015909433364868164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;20]" time="0.018567562103271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;21]" time="0.029453277587890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;22]" time="0.004214286804199219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;23]" time="0.0037109851837158203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;24]" time="0.0062427520751953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;25]" time="0.0302579402923584"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;26]" time="0.06197762489318848"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;0]" time="0.0018296241760253906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;1]" time="0.002746105194091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;2]" time="0.006696939468383789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;3]" time="0.033368587493896484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;4]" time="0.0018630027770996094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;5]" time="0.0013554096221923828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;6]" time="0.0024847984313964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;7]" time="0.006654977798461914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;8]" time="0.03484797477722168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;9]" time="0.0024559497833251953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;10]" time="0.004583597183227539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;11]" time="0.015375852584838867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;12]" time="0.0021300315856933594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;13]" time="0.010890722274780273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;14]" time="0.01571345329284668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;15]" time="0.06822919845581055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;16]" time="0.13826441764831543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;17]" time="0.009873390197753906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;18]" time="0.010225296020507812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;19]" time="0.03051614761352539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;20]" time="0.10413026809692383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;21]" time="0.22157788276672363"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;22]" time="0.0017986297607421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;23]" time="0.0027053356170654297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;24]" time="0.009221076965332031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;25]" time="0.06834626197814941"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;26]" time="0.05415916442871094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;0]" time="0.0019009113311767578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;1]" time="0.002702951431274414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;2]" time="0.0064885616302490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;3]" time="0.03320503234863281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;4]" time="0.0019214153289794922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;5]" time="0.001355886459350586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;6]" time="0.0024492740631103516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;7]" time="0.006525754928588867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;8]" time="0.03492403030395508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;9]" time="0.0031282901763916016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;10]" time="0.0045092105865478516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;11]" time="0.01500844955444336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;12]" time="0.0022020339965820312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;13]" time="0.010417461395263672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;14]" time="0.015151262283325195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;15]" time="0.06729650497436523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;16]" time="0.1408829689025879"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;17]" time="0.010056495666503906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;18]" time="0.010324478149414062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;19]" time="0.030670881271362305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;20]" time="0.10653281211853027"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;21]" time="0.2276160717010498"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;22]" time="0.0016739368438720703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;23]" time="0.0025191307067871094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;24]" time="0.009994745254516602"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;25]" time="0.09244322776794434"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;26]" time="0.054947614669799805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;0]" time="0.0019252300262451172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;1]" time="0.0029151439666748047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;2]" time="0.007169961929321289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;3]" time="0.03379082679748535"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;4]" time="0.0018596649169921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;5]" time="0.0014235973358154297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;6]" time="0.0025191307067871094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;7]" time="0.00672149658203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;8]" time="0.03525710105895996"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;9]" time="0.003088235855102539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;10]" time="0.004472017288208008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;11]" time="0.0152740478515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;12]" time="0.002181529998779297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;13]" time="0.010761737823486328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;14]" time="0.015505552291870117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;15]" time="0.06753683090209961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;16]" time="0.1432797908782959"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;17]" time="0.01037144660949707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;18]" time="0.008658885955810547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;19]" time="0.029271602630615234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;20]" time="0.10574722290039062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;21]" time="0.22144746780395508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;22]" time="0.0019102096557617188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;23]" time="0.002755880355834961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;24]" time="0.010159015655517578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;25]" time="0.09339094161987305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;26]" time="0.0546107292175293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;0]" time="0.003429412841796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;1]" time="0.0025742053985595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;2]" time="0.002984285354614258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;3]" time="0.004889011383056641"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;4]" time="0.0052220821380615234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;5]" time="0.0023343563079833984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;6]" time="0.0022704601287841797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;7]" time="0.016659975051879883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;8]" time="0.2860567569732666"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;9]" time="1.4901618957519531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;10]" time="0.0050048828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;11]" time="0.004848003387451172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;12]" time="0.004893064498901367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;13]" time="0.003965139389038086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;14]" time="0.005104541778564453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;15]" time="0.008148670196533203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;16]" time="0.01167154312133789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;17]" time="0.002979278564453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;18]" time="0.002910614013671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;19]" time="0.018416643142700195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;20]" time="0.20770859718322754"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;21]" time="1.107668399810791"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;22]" time="0.003210306167602539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;23]" time="0.0023670196533203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;24]" time="0.01034402847290039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;25]" time="0.1687772274017334"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;26]" time="0.8310575485229492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;0]" time="0.003540515899658203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;1]" time="0.0025942325592041016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;2]" time="0.003101825714111328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;3]" time="0.0042269229888916016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;4]" time="0.005036354064941406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;5]" time="0.0024061203002929688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;6]" time="0.0023560523986816406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;7]" time="0.01693129539489746"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;8]" time="0.2893049716949463"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;9]" time="1.3896174430847168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;10]" time="0.00485539436340332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;11]" time="0.00498652458190918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;12]" time="0.004724740982055664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;13]" time="0.003954410552978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;14]" time="0.005042076110839844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;15]" time="0.008137226104736328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;16]" time="0.01183176040649414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;17]" time="0.003131389617919922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;18]" time="0.0030088424682617188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;19]" time="0.01855945587158203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;20]" time="0.2057476043701172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;21]" time="1.1050372123718262"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;22]" time="0.003132343292236328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;23]" time="0.002413034439086914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;24]" time="0.010374784469604492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;25]" time="0.16780662536621094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;26]" time="0.8261911869049072"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;0]" time="0.0034279823303222656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;1]" time="0.0025343894958496094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;2]" time="0.0029859542846679688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;3]" time="0.004426240921020508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;4]" time="0.00480961799621582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;5]" time="0.0023851394653320312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;6]" time="0.0023336410522460938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;7]" time="0.016925334930419922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;8]" time="0.2878096103668213"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;9]" time="1.4033851623535156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;10]" time="0.004904270172119141"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;11]" time="0.004997968673706055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;12]" time="0.004647493362426758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;13]" time="0.003784656524658203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;14]" time="0.004934072494506836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;15]" time="0.008144378662109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;16]" time="0.012175559997558594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;17]" time="0.0031404495239257812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;18]" time="0.002957582473754883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;19]" time="0.018131256103515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;20]" time="0.2094252109527588"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;21]" time="1.1261425018310547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;22]" time="0.003145933151245117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;23]" time="0.0024902820587158203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;24]" time="0.010601997375488281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;25]" time="0.17141151428222656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;26]" time="0.8439078330993652"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.002460002899169922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.001735687255859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.001758575439453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.0017571449279785156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.0016303062438964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.0014770030975341797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.0015704631805419922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.0015857219696044922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.0019199848175048828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.0049152374267578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.010592222213745117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.0020864009857177734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.002055644989013672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.0020766258239746094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.0020542144775390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.0023374557495117188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.0026695728302001953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.002606630325317383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.0023195743560791016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.002527952194213867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.028679370880126953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.019112586975097656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.05501246452331543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.004128456115722656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.0015130043029785156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.0024483203887939453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.024428367614746094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.12486982345581055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.3268003463745117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.010643720626831055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.0023741722106933594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.0017292499542236328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.001708984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.0018315315246582031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.0017871856689453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.0015587806701660156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.0015425682067871094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.0016071796417236328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.0021386146545410156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.0054340362548828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.01069784164428711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.002720355987548828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.0021584033966064453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.0023162364959716797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.0020318031311035156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.002440929412841797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.0028066635131835938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.002642393112182617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.0023789405822753906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.0025644302368164062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.0270998477935791"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.019881248474121094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.05473661422729492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.00421142578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.0015494823455810547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.002348184585571289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.024161100387573242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.12369132041931152"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.3282299041748047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.010475873947143555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.0023581981658935547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.00176239013671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.0018160343170166016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.001886606216430664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.002000093460083008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.0016143321990966797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.0016546249389648438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.001650094985961914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.0020847320556640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.0051784515380859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.010024785995483398"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.0026793479919433594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.0020923614501953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.002231597900390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.0020949840545654297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.0024819374084472656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.002830982208251953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.0026755332946777344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.0023195743560791016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.002519369125366211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.02628779411315918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.019565343856811523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.0544283390045166"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.004219532012939453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.0016026496887207031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.0024967193603515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.02432417869567871"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.1236112117767334"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.3284721374511719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.010060548782348633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.002373218536376953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.0016994476318359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.001936197280883789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.001764535903930664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.0016672611236572266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.0015349388122558594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.001491546630859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.001470804214477539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.0019519329071044922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.005083322525024414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.009677648544311523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.0018854141235351562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.0020596981048583984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.0021903514862060547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.0020875930786132812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.002492189407348633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.0027463436126708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.002615213394165039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.002354860305786133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.0024497509002685547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.02689051628112793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.019525766372680664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.05418753623962402"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.004180192947387695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.0015850067138671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.00244140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.02476024627685547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.12352991104125977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.33261537551879883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.01093292236328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.0024940967559814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.0018436908721923828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.001737356185913086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.0018782615661621094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.001825571060180664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.0016903877258300781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.0016291141510009766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.0016286373138427734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.0022208690643310547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.005496978759765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.011008977890014648"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.0020105838775634766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.002115488052368164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.002298116683959961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.0021593570709228516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.002660989761352539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.002794027328491211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.002577066421508789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.0023355484008789062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.0023322105407714844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.026098251342773438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.019481897354125977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.05480837821960449"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.004119157791137695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.0015461444854736328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.0025298595428466797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.024470090866088867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.12352156639099121"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.32601141929626465"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.010451555252075195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.0023756027221679688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.0017900466918945312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.0017266273498535156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.001814126968383789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.001741170883178711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.0016255378723144531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.0015594959259033203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.0016028881072998047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.0020945072174072266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.005243062973022461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.010645389556884766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.002790689468383789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.002246856689453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.002207040786743164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.0021209716796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.0024263858795166016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.0027451515197753906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.0026161670684814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.0022351741790771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.002375364303588867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.026573896408081055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.0192716121673584"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.05534529685974121"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.003993034362792969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.0016260147094726562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.002452850341796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.024223804473876953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.12359619140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.3263406753540039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.010197639465332031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.0023314952850341797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.0016832351684570312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.0017037391662597656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.0018379688262939453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.0016894340515136719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.0016117095947265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.0016608238220214844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.0017533302307128906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.0019137859344482422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.005200386047363281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.009508132934570312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.001956939697265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.002047300338745117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.0024967193603515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.0021622180938720703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.0026712417602539062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.0028662681579589844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.0026826858520507812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.0023391246795654297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.0024776458740234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.026280641555786133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.019779205322265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.0554652214050293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.0040645599365234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.0016405582427978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.0025038719177246094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.02446770668029785"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.12407588958740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.33045148849487305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.00984954833984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.0023374557495117188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.001720428466796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.0016186237335205078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.001695394515991211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.0016171932220458984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.0016188621520996094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.0014748573303222656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.001542806625366211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.002026796340942383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.005179882049560547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.009961605072021484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.0018908977508544922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.0021636486053466797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.002189159393310547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.002021312713623047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.002493143081665039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.002807140350341797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.0026476383209228516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.002260923385620117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.002416849136352539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.026613235473632812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.019884586334228516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.05463743209838867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.004168510437011719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.0016131401062011719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.002504587173461914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.024172306060791016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.12338042259216309"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.3245835304260254"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.010153532028198242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.002258777618408203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.0017502307891845703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.0016758441925048828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.0018262863159179688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.0016674995422363281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.0015408992767333984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.0015935897827148438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.0015625953674316406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.002016782760620117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.005396842956542969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.010280609130859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.0019583702087402344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.0020847320556640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.002174854278564453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.0021483898162841797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.0024836063385009766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.0027666091918945312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.002577543258666992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.0022351741790771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.0023872852325439453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.025968074798583984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.020061492919921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.05608677864074707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.004402637481689453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.0014960765838623047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.0025033950805664062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.024875879287719727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.12888836860656738"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.3279917240142822"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.010723590850830078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.002246379852294922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.0015943050384521484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.0015301704406738281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.0017018318176269531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.001611948013305664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.001432657241821289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.0014460086822509766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.001378774642944336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.0017387866973876953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.0034673213958740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.006470680236816406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.0016553401947021484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.0017399787902832031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.0018460750579833984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.0017845630645751953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.0020689964294433594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.0026123523712158203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.0021772384643554688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.0022306442260742188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.0022916793823242188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.02577519416809082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.016878604888916016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.04793047904968262"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.003980398178100586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.001451730728149414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.0023572444915771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.023087024688720703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.07786774635314941"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.22138404846191406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.008563041687011719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.0023636817932128906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.002098560333251953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.0016987323760986328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.0017669200897216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.0018033981323242188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.001558065414428711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.0018367767333984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.0014770030975341797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.001837015151977539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.003588438034057617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.007552623748779297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.0017783641815185547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.0018901824951171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.002068042755126953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.0020177364349365234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.0022745132446289062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.002470731735229492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.0023148059844970703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.002215862274169922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.002324819564819336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.0260317325592041"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.0169827938079834"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.04768633842468262"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.003904581069946289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.001493215560913086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.0023779869079589844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.023236989974975586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.07749199867248535"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.21772980690002441"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.007829666137695312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.002110719680786133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.0015251636505126953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.0015773773193359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.001687765121459961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.0016682147979736328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.0014047622680664062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.0014073848724365234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.0018129348754882812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.0018842220306396484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.003682374954223633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.006862163543701172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.0016255378723144531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.0017430782318115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.001973390579223633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.0018677711486816406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.002310037612915039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.0024051666259765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.0023369789123535156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.002198457717895508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.002271413803100586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.025762319564819336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.017025232315063477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.04884147644042969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.0038182735443115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.0016911029815673828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.002564668655395508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.023307323455810547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.07886910438537598"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.21905207633972168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.007696866989135742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.0016665458679199219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.0015327930450439453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.0015680789947509766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.0016911029815673828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.0015439987182617188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.0015552043914794922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.0014929771423339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.0017175674438476562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.0018002986907958984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.003820180892944336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.0067291259765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.0018990039825439453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.0021555423736572266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.002016305923461914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.0018630027770996094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.0021889209747314453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.002414703369140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.0023415088653564453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.002239227294921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.0025064945220947266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.02752971649169922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.018892765045166016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.049353837966918945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.003717184066772461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.0015320777893066406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.002404451370239258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.023580312728881836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.09990429878234863"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.272566556930542"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.009242057800292969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.002295255661010742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.0017206668853759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.0016014575958251953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.0016772747039794922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.0016224384307861328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.001689910888671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.0015015602111816406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.0014712810516357422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.0020880699157714844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.004068613052368164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.008060216903686523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.0018062591552734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.0019025802612304688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.002065896987915039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.002055644989013672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.002281665802001953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.002570629119873047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.0025064945220947266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.0023102760314941406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.0023729801177978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.026042461395263672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.017834901809692383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.050260305404663086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.00370025634765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.0014462471008300781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.002414226531982422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.023833513259887695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.10123634338378906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.27054929733276367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.0091552734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.0023360252380371094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.0016961097717285156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.0015783309936523438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.0017199516296386719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.0016601085662841797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.0015482902526855469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.0014846324920654297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.0015118122100830078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.001985311508178711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.0039064884185791016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.007539033889770508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.0018572807312011719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.0019326210021972656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.0020525455474853516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.0019888877868652344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.002241849899291992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.002534151077270508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.0022881031036376953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.002215862274169922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.002309083938598633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.026247739791870117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.017832040786743164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.0497136116027832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.0038433074951171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.001466989517211914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.002360105514526367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.02421879768371582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.10024642944335938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.27013301849365234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.009059429168701172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.002916574478149414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.0016372203826904297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.001703023910522461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.0017514228820800781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.001653909683227539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.0015649795532226562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.0016522407531738281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.001531362533569336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.0018720626831054688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.003952741622924805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.006713151931762695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.0018146038055419922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.0019257068634033203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.001990795135498047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.0019173622131347656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.0021936893463134766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.0024394989013671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.0022165775299072266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.002260923385620117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.0022695064544677734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.02678394317626953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.01730799674987793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.04909563064575195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.003918886184692383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.0014832019805908203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.0023856163024902344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.02363753318786621"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.09976458549499512"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.2688918113708496"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.00906515121459961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.0025255680084228516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0017545223236083984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.0017271041870117188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.0017609596252441406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.0016264915466308594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.001508474349975586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.001466512680053711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.0014743804931640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.0019822120666503906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.0039365291595458984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.007170677185058594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.0018608570098876953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.0019304752349853516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.0019490718841552734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.0018358230590820312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.0024976730346679688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.0025048255920410156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.0023920536041259766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.002470254898071289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.0023660659790039062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.026198387145996094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.017785072326660156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.05032205581665039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.003780364990234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.0014684200286865234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.0024421215057373047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.023908138275146484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.09911251068115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.27057313919067383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.009249687194824219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.0023784637451171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.0017123222351074219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.0016434192657470703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.0017459392547607422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.0016453266143798828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.0015094280242919922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.0015635490417480469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.0015025138854980469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.0018994808197021484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.003915309906005859"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.007262706756591797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.001798868179321289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.0019598007202148438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.0019965171813964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.0019073486328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.002338409423828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.0025200843811035156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.002362489700317383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.0022118091583251953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.0022742748260498047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.025852203369140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.017323017120361328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.04966592788696289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.0036695003509521484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.0014302730560302734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.0024242401123046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.02394866943359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.10001230239868164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.2699885368347168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.008890390396118164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.002248525619506836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.0016484260559082031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.0016171932220458984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.001688241958618164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.0015740394592285156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.0015690326690673828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.0014605522155761719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.00144195556640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.0019071102142333984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.005010366439819336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.009222269058227539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.00189971923828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.0019295215606689453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.0020682811737060547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.0019321441650390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.002411365509033203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.0026307106018066406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.0025255680084228516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.002160787582397461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.0023431777954101562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.026087284088134766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.01945352554321289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.05414915084838867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.004118919372558594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.0015053749084472656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.0024590492248535156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.024396896362304688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.12339472770690918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.3357408046722412"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.010180950164794922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.002345561981201172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.0017120838165283203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.0018041133880615234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.001783132553100586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.0017285346984863281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.0016093254089355469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.0015621185302734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.0016314983367919922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.0020911693572998047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.005444765090942383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.010415077209472656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.0026166439056396484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.002081632614135742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.0023365020751953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.001956462860107422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.002558469772338867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.002842426300048828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.0028443336486816406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.0022356510162353516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.0023369789123535156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.02681112289428711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.019009828567504883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.05627894401550293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.004021406173706055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.0015523433685302734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.0025370121002197266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.024396896362304688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.12250185012817383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.3266112804412842"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.010173559188842773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.0016858577728271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.0017635822296142578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.0017352104187011719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.0018706321716308594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.00176239013671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.0017673969268798828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.0014994144439697266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.0016028881072998047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.002029895782470703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.00549769401550293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.011686086654663086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.0020008087158203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.0020842552185058594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.002252817153930664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.0021262168884277344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.002633333206176758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.0027666091918945312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.002580404281616211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.002188444137573242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.0023069381713867188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.026300668716430664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.019685983657836914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.05544853210449219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.00400996208190918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.0015244483947753906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.0024700164794921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.024263858795166016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.12346506118774414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.3287630081176758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.010345220565795898"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.0025620460510253906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.0017304420471191406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.0019271373748779297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.0017976760864257812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.001699686050415039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.0015277862548828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.0015063285827636719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.0016107559204101562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.001943826675415039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.005110502243041992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.010236740112304688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.0019533634185791016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.00206756591796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.0022318363189697266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.002033233642578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.002557039260864258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.0029289722442626953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.002619028091430664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.0023353099822998047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.0024449825286865234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.026574134826660156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.01956343650817871"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.05493426322937012"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.004033327102661133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.001489877700805664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.0024514198303222656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.02470088005065918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.12442278861999512"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.32874083518981934"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.010356664657592773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.0023043155670166016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.001760244369506836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.0018301010131835938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.0018200874328613281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.0018117427825927734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.001615285873413086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.0015344619750976562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.0015826225280761719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.0020143985748291016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.005388498306274414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.010973930358886719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.002622365951538086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.002063751220703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.0023946762084960938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.002116680145263672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.0026483535766601562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.002897500991821289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.002767801284790039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.0023429393768310547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.0024025440216064453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.02605915069580078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.01935410499572754"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.05542564392089844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.004134416580200195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.001580953598022461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.0024454593658447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.024193763732910156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.12228894233703613"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.32523107528686523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.010304689407348633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.002355813980102539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.001668691635131836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.0016553401947021484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.0018095970153808594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.0018215179443359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.001897573471069336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.0015978813171386719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.0016055107116699219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.002131938934326172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.005213737487792969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.011105537414550781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.002595663070678711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.002249479293823242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.002361297607421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.002177715301513672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.002668142318725586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.0028939247131347656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.0028066635131835938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.002324819564819336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.0023543834686279297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.026144742965698242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.019813060760498047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.05867266654968262"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.0041697025299072266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.0016188621520996094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.0024940967559814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.02467799186706543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.1247413158416748"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.32985830307006836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.010249137878417969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.0017538070678710938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.0018761157989501953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.0017876625061035156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.0019214153289794922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.0017271041870117188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.0017096996307373047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.0015587806701660156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.0016546249389648438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.0020453929901123047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.0054743289947509766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.009852409362792969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.0018858909606933594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.0022182464599609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.0022351741790771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.0021185874938964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.0027167797088623047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.002818584442138672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.0026214122772216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.002329587936401367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.0023500919342041016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.02685260772705078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.02002692222595215"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.056374549865722656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.004213571548461914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.001689910888671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.002792835235595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.02549004554748535"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.12886834144592285"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.32875967025756836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.010102033615112305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.0023577213287353516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0018391609191894531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.0018680095672607422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.0018537044525146484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.0019168853759765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.0017039775848388672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.0017917156219482422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.001646280288696289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.002111673355102539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.005507230758666992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.011374711990356445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.002711772918701172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.0021202564239501953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.002323150634765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.0022749900817871094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.002635955810546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.0028738975524902344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.002769947052001953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.002340555191040039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.0025014877319335938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.026094913482666016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.01970982551574707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.05620074272155762"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.004079341888427734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.001611948013305664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.002513408660888672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.02495718002319336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.12444806098937988"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.32530760765075684"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.010000944137573242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.002456188201904297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.0017538070678710938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.0017383098602294922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.0017883777618408203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.0016722679138183594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.0015995502471923828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.0015900135040283203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.0015516281127929688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.0020868778228759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.0053026676177978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.01034855842590332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.0025839805603027344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.002234220504760742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.002339601516723633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.0022153854370117188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.002611875534057617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.0028612613677978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.0027022361755371094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.0023233890533447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.0025069713592529297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.026046037673950195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.01957249641418457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.05541062355041504"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.004155397415161133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.001714468002319336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.0025644302368164062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.02428412437438965"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.12336492538452148"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.32605910301208496"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.010117053985595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.0022606849670410156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.0016355514526367188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.001627206802368164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.0017006397247314453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.0015234947204589844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.0015785694122314453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.0014462471008300781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.001476287841796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.0019073486328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.0036258697509765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.006473064422607422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.001711130142211914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.0018506050109863281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.0019299983978271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.0018799304962158203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.0021157264709472656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.003258943557739258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.0022263526916503906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.0022258758544921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.002328157424926758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.02656841278076172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.016994476318359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.048770904541015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.0038900375366210938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.0014712810516357422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.0025856494903564453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.02352619171142578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.07749652862548828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.21774935722351074"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.007927417755126953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.0022885799407958984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.0016918182373046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.0016052722930908203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.0017848014831542969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.0016276836395263672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.0014925003051757812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.0014917850494384766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.001512289047241211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.0019044876098632812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.003597259521484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.0068111419677734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.0017707347869873047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.001964569091796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.0020067691802978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.0022089481353759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.0023076534271240234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.0025811195373535156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.0023267269134521484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.002254009246826172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.0022635459899902344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.026196956634521484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.0168914794921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.047945499420166016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.003949165344238281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.0014538764953613281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.0024094581604003906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.0226132869720459"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.0769660472869873"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.2209932804107666"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.008346319198608398"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.0022673606872558594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.0017466545104980469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.0016765594482421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.0017881393432617188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.0016503334045410156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.0014977455139160156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.0014500617980957031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.001489877700805664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.001922607421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.0036323070526123047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.006824016571044922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.0020923614501953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.001982450485229492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.0021331310272216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.0019943714141845703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.002360820770263672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.0025060176849365234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.002375364303588867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.002348184585571289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.002418994903564453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.025716781616210938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.016744613647460938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.04827404022216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.0037963390350341797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.0014290809631347656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.0023310184478759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.022975683212280273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.07735681533813477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.21776413917541504"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.007693052291870117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.002274751663208008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.0016169548034667969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.0015342235565185547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.0017158985137939453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.0015125274658203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.001466512680053711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.0014772415161132812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.0014624595642089844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.0017921924591064453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.003921031951904297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.007181644439697266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.0018019676208496094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.0019276142120361328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.0019659996032714844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.0018377304077148438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.0023794174194335938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.0025415420532226562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.0022957324981689453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.0022678375244140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.002267122268676758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.026402950286865234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.017503976821899414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.049764156341552734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.0036809444427490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.0014426708221435547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.002429485321044922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.02332592010498047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.10175371170043945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.2708771228790283"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.009013652801513672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.002808809280395508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.0017507076263427734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.0016443729400634766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.0018317699432373047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.001684427261352539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.0015711784362792969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.0014750957489013672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.0015730857849121094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.0019369125366210938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.0040819644927978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.007128238677978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.0018343925476074219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.0020570755004882812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.0020568370819091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.0021224021911621094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.002295970916748047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.0025491714477539062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.0023322105407714844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.002267599105834961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.0022699832916259766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.026195764541625977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.017252683639526367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.04946398735046387"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.0037069320678710938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.0014667510986328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.0023300647735595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.023923158645629883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.10021209716796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.2717561721801758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.00904226303100586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.002353668212890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.0016894340515136719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.0017764568328857422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.0017631053924560547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.0015933513641357422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.0015692710876464844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.001506805419921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.0015010833740234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.0019805431365966797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.003908634185791016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.00728917121887207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.0017714500427246094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.0019145011901855469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.002177715301513672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.001920461654663086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.002298116683959961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.002446889877319336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.0022788047790527344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.002154111862182617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.002216815948486328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.02568984031677246"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.01755523681640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.0519871711730957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.0039255619049072266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.0015769004821777344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.0024671554565429688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.026947736740112305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.09981822967529297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.26937413215637207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.008806228637695312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.0022003650665283203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.0016202926635742188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.0015861988067626953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.0016062259674072266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.0015406608581542969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.00139617919921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.0013790130615234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.0014019012451171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.0016770362854003906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.0037126541137695312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.006651401519775391"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.0017170906066894531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.0018019676208496094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.0019371509552001953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.0019137859344482422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.0021657943725585938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.0025124549865722656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.0022368431091308594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.0021398067474365234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.002345561981201172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.025933504104614258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.017483949661254883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.05377388000488281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.003806591033935547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.00154876708984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.00240325927734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.023528337478637695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.0992286205291748"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.2666294574737549"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.008828401565551758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.002234935760498047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0016469955444335938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.0015711784362792969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.0016965866088867188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.0015888214111328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.0014357566833496094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.00144195556640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.0015397071838378906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.001847982406616211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.003857851028442383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.006994962692260742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.0016100406646728516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.00200653076171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.002068758010864258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.0018532276153564453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.0022013187408447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.0023844242095947266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.0022401809692382812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.0021970272064208984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.002258777618408203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.025696277618408203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.017251253128051758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.04951667785644531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.006681680679321289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.0020599365234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.002461671829223633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.023403644561767578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.09868597984313965"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.27132248878479004"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.008614301681518555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.002216339111328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.0016036033630371094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.001623392105102539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.0018973350524902344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.001523733139038086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.0014340877532958984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.0014240741729736328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.0013821125030517578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.001936197280883789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.0037953853607177734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.007033586502075195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.001689910888671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.0020513534545898438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.002010345458984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.0018701553344726562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.002174854278564453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.0024454593658447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.002237081527709961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.002145051956176758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.002207517623901367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.02549004554748535"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.017283201217651367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.049429893493652344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.003897428512573242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.0014643669128417969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.0024566650390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.024962902069091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.09956574440002441"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.27300119400024414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.008571624755859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;0]" time="0.0022039413452148438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;1]" time="0.0016217231750488281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;2]" time="0.001489877700805664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;3]" time="0.001499176025390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;4]" time="0.001453399658203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;5]" time="0.0013935565948486328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;6]" time="0.0013680458068847656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;7]" time="0.001918792724609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;8]" time="0.004861116409301758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;9]" time="0.008553504943847656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;10]" time="0.001970052719116211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;11]" time="0.0019795894622802734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;12]" time="0.0018801689147949219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;13]" time="0.00164794921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;14]" time="0.0019137859344482422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;15]" time="0.002227306365966797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;16]" time="0.0020933151245117188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;17]" time="0.0019412040710449219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;18]" time="0.0019118785858154297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;19]" time="0.0032672882080078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;20]" time="0.01689934730529785"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;21]" time="0.036123037338256836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;22]" time="0.001984119415283203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;23]" time="0.001445770263671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;24]" time="0.005171060562133789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;25]" time="0.11607861518859863"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;26]" time="0.27151036262512207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;0]" time="0.002247333526611328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;1]" time="0.0016341209411621094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;2]" time="0.001592397689819336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;3]" time="0.0015807151794433594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;4]" time="0.001504659652709961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;5]" time="0.0014538764953613281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;6]" time="0.001445770263671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;7]" time="0.001550436019897461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;8]" time="0.004944324493408203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;9]" time="0.008783578872680664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;10]" time="0.0018851757049560547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;11]" time="0.0019719600677490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;12]" time="0.001949310302734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;13]" time="0.0017733573913574219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;14]" time="0.0019278526306152344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;15]" time="0.0021882057189941406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;16]" time="0.00197601318359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;17]" time="0.0018856525421142578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;18]" time="0.001851797103881836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;19]" time="0.0031473636627197266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;20]" time="0.016379356384277344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;21]" time="0.03584170341491699"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;22]" time="0.00206756591796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;23]" time="0.001409292221069336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;24]" time="0.0052890777587890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;25]" time="0.11499619483947754"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;26]" time="0.27135634422302246"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;0]" time="0.002296924591064453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;1]" time="0.001621246337890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;2]" time="0.0016222000122070312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;3]" time="0.0016019344329833984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;4]" time="0.0014998912811279297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;5]" time="0.0014767646789550781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;6]" time="0.001434326171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;7]" time="0.0015816688537597656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;8]" time="0.004831552505493164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;9]" time="0.008922100067138672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;10]" time="0.0019130706787109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;11]" time="0.002060413360595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;12]" time="0.001999378204345703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;13]" time="0.0017948150634765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;14]" time="0.0019910335540771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;15]" time="0.0021424293518066406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;16]" time="0.002063274383544922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;17]" time="0.0019352436065673828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;18]" time="0.001804351806640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;19]" time="0.0032732486724853516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;20]" time="0.01638197898864746"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;21]" time="0.03628206253051758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;22]" time="0.002135038375854492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;23]" time="0.0015039443969726562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;24]" time="0.005174398422241211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;25]" time="0.11555147171020508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;26]" time="0.2706296443939209"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;0]" time="0.002954244613647461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;1]" time="0.002166271209716797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;2]" time="0.002124786376953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;3]" time="0.0025675296783447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;4]" time="0.0020537376403808594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;5]" time="0.001806020736694336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;6]" time="0.0018379688262939453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;7]" time="0.0023424625396728516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;8]" time="0.016043663024902344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;9]" time="0.03300285339355469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;10]" time="0.0042073726654052734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;11]" time="0.0036704540252685547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;12]" time="0.0035190582275390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;13]" time="0.0029006004333496094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;14]" time="0.003718852996826172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;15]" time="0.004708528518676758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;16]" time="0.004343748092651367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;17]" time="0.002452850341796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;18]" time="0.0023679733276367188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;19]" time="0.004606008529663086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;20]" time="0.03913140296936035"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;21]" time="0.09584593772888184"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;22]" time="0.0025086402893066406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;23]" time="0.0018315315246582031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;24]" time="0.014848709106445312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;25]" time="0.48752450942993164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;26]" time="1.147080659866333"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;0]" time="0.0030646324157714844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;1]" time="0.0022912025451660156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;2]" time="0.0023488998413085938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;3]" time="0.002360820770263672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;4]" time="0.002217531204223633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;5]" time="0.001882314682006836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;6]" time="0.0018150806427001953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;7]" time="0.002401590347290039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;8]" time="0.016483545303344727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;9]" time="0.033831119537353516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;10]" time="0.004197835922241211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;11]" time="0.003904581069946289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;12]" time="0.0037975311279296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;13]" time="0.003036975860595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;14]" time="0.0038046836853027344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;15]" time="0.0048105716705322266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;16]" time="0.004437923431396484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;17]" time="0.002492189407348633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;18]" time="0.0026776790618896484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;19]" time="0.004884004592895508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;20]" time="0.03916025161743164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;21]" time="0.095062255859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;22]" time="0.0027365684509277344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;23]" time="0.0019409656524658203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;24]" time="0.015702486038208008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;25]" time="0.4902365207672119"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;26]" time="1.1530976295471191"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;0]" time="0.0031833648681640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;1]" time="0.002165079116821289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;2]" time="0.00215911865234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;3]" time="0.002351045608520508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;4]" time="0.0020678043365478516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;5]" time="0.0019271373748779297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;6]" time="0.001954317092895508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;7]" time="0.002573251724243164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;8]" time="0.016380786895751953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;9]" time="0.033991336822509766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;10]" time="0.004280567169189453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;11]" time="0.0037920475006103516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;12]" time="0.0036857128143310547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;13]" time="0.002950429916381836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;14]" time="0.0037336349487304688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;15]" time="0.004617929458618164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;16]" time="0.004453897476196289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;17]" time="0.0025911331176757812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;18]" time="0.0025224685668945312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;19]" time="0.0050220489501953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;20]" time="0.03935718536376953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;21]" time="0.0937795639038086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;22]" time="0.0027742385864257812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;23]" time="0.0018801689147949219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;24]" time="0.015477418899536133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;25]" time="0.4924166202545166"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;26]" time="1.1568548679351807"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;0]" time="0.0020759105682373047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;1]" time="0.001417398452758789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;2]" time="0.0013093948364257812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;3]" time="0.0013306140899658203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;4]" time="0.0012848377227783203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;5]" time="0.0012674331665039062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;6]" time="0.0012753009796142578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;7]" time="0.0013318061828613281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;8]" time="0.0017096996307373047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;9]" time="0.0020856857299804688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;10]" time="0.0014376640319824219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;11]" time="0.001436471939086914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;12]" time="0.0016238689422607422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;13]" time="0.0014503002166748047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;14]" time="0.0014967918395996094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;15]" time="0.0015306472778320312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;16]" time="0.0015213489532470703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;17]" time="0.0017881393432617188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;18]" time="0.0017590522766113281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;19]" time="0.0028214454650878906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;20]" time="0.009979486465454102"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;21]" time="0.021207332611083984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;22]" time="0.0019178390502929688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;23]" time="0.0014367103576660156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;24]" time="0.0024809837341308594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;25]" time="0.024270296096801758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;26]" time="0.0552525520324707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;0]" time="0.0020265579223632812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;1]" time="0.0014846324920654297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;2]" time="0.0014464855194091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;3]" time="0.0013589859008789062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;4]" time="0.0013480186462402344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;5]" time="0.0013544559478759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;6]" time="0.0013115406036376953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;7]" time="0.0013091564178466797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;8]" time="0.0017628669738769531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;9]" time="0.0024673938751220703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;10]" time="0.001558065414428711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;11]" time="0.0015187263488769531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;12]" time="0.0015022754669189453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;13]" time="0.0014889240264892578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;14]" time="0.001678466796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;15]" time="0.001638174057006836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;16]" time="0.0016238689422607422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;17]" time="0.001714944839477539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;18]" time="0.0017490386962890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;19]" time="0.002969503402709961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;20]" time="0.01211237907409668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;21]" time="0.02122044563293457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;22]" time="0.001917123794555664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;23]" time="0.001352548599243164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;24]" time="0.0023622512817382812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;25]" time="0.024176597595214844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;26]" time="0.058568716049194336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;0]" time="0.0019221305847167969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;1]" time="0.0016813278198242188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;2]" time="0.0014142990112304688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;3]" time="0.0013687610626220703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;4]" time="0.0013904571533203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;5]" time="0.0013225078582763672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;6]" time="0.001308441162109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;7]" time="0.0013530254364013672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;8]" time="0.0017066001892089844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;9]" time="0.0028138160705566406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;10]" time="0.001485586166381836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;11]" time="0.0015091896057128906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;12]" time="0.0014324188232421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;13]" time="0.0014204978942871094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;14]" time="0.0014538764953613281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;15]" time="0.0015099048614501953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;16]" time="0.0015301704406738281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;17]" time="0.0017011165618896484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;18]" time="0.0016412734985351562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;19]" time="0.002639293670654297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;20]" time="0.009954452514648438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;21]" time="0.021073102951049805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;22]" time="0.0018956661224365234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;23]" time="0.0013587474822998047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;24]" time="0.0023326873779296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;25]" time="0.02448558807373047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;26]" time="0.05571746826171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;0]" time="0.0030257701873779297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;1]" time="0.002172708511352539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;2]" time="0.002228975296020508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;3]" time="0.0024085044860839844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;4]" time="0.0021584033966064453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;5]" time="0.001943826675415039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;6]" time="0.0018801689147949219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;7]" time="0.0025246143341064453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;8]" time="0.01612257957458496"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;9]" time="0.033399343490600586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;10]" time="0.004152536392211914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;11]" time="0.0037462711334228516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;12]" time="0.003626108169555664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;13]" time="0.0029802322387695312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;14]" time="0.0037407875061035156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;15]" time="0.004889488220214844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;16]" time="0.00447392463684082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;17]" time="0.002615690231323242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;18]" time="0.0024526119232177734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;19]" time="0.004796743392944336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;20]" time="0.038970232009887695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;21]" time="0.09229302406311035"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;22]" time="0.0025811195373535156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;23]" time="0.0019998550415039062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;24]" time="0.015491962432861328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;25]" time="0.49335789680480957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;26]" time="1.1582005023956299"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;0]" time="0.003163576126098633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;1]" time="0.0022788047790527344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;2]" time="0.0023386478424072266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;3]" time="0.0025370121002197266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;4]" time="0.0022640228271484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;5]" time="0.0019485950469970703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;6]" time="0.001995086669921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;7]" time="0.0024793148040771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;8]" time="0.016669511795043945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;9]" time="0.033777713775634766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;10]" time="0.004327058792114258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;11]" time="0.0038878917694091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;12]" time="0.003670215606689453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;13]" time="0.002973318099975586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;14]" time="0.003782033920288086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;15]" time="0.004754543304443359"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;16]" time="0.004547119140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;17]" time="0.0026667118072509766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;18]" time="0.002605915069580078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;19]" time="0.0049130916595458984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;20]" time="0.039426326751708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;21]" time="0.10588598251342773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;22]" time="0.0025904178619384766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;23]" time="0.002015352249145508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;24]" time="0.01555180549621582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;25]" time="0.4903888702392578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;26]" time="1.1603665351867676"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;0]" time="0.003004789352416992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;1]" time="0.0026252269744873047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;2]" time="0.0022804737091064453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;3]" time="0.002376556396484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;4]" time="0.0022165775299072266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;5]" time="0.0019092559814453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;6]" time="0.0019366741180419922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;7]" time="0.0024633407592773438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;8]" time="0.016440153121948242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;9]" time="0.033126115798950195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;10]" time="0.004126548767089844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;11]" time="0.0036733150482177734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;12]" time="0.0036346912384033203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;13]" time="0.0030045509338378906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;14]" time="0.0036547183990478516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;15]" time="0.004525184631347656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;16]" time="0.00440216064453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;17]" time="0.002532958984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;18]" time="0.002476215362548828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;19]" time="0.004936933517456055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;20]" time="0.04003453254699707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;21]" time="0.09278249740600586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;22]" time="0.0026900768280029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;23]" time="0.0019659996032714844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;24]" time="0.015390872955322266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;25]" time="0.49099230766296387"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;26]" time="1.1533770561218262"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;0]" time="0.0026597976684570312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;1]" time="0.0018336772918701172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;2]" time="0.002019643783569336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;3]" time="0.0020017623901367188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;4]" time="0.0018467903137207031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;5]" time="0.001590728759765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;6]" time="0.001588582992553711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;7]" time="0.0020029544830322266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;8]" time="0.010969400405883789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;9]" time="0.021126747131347656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;10]" time="0.003711700439453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;11]" time="0.0028085708618164062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;12]" time="0.002806425094604492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;13]" time="0.0023839473724365234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;14]" time="0.002772808074951172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;15]" time="0.003484010696411133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;16]" time="0.0031232833862304688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;17]" time="0.002226591110229492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;18]" time="0.0021238327026367188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;19]" time="0.004038333892822266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;20]" time="0.030974626541137695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;21]" time="0.07295489311218262"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;22]" time="0.0023720264434814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;23]" time="0.0016586780548095703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;24]" time="0.011941909790039062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;25]" time="0.37074708938598633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;26]" time="0.8757123947143555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;0]" time="0.0028121471405029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;1]" time="0.0020241737365722656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;2]" time="0.001950979232788086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;3]" time="0.0020067691802978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;4]" time="0.0018978118896484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;5]" time="0.0017423629760742188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;6]" time="0.001638174057006836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;7]" time="0.002080202102661133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;8]" time="0.011173009872436523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;9]" time="0.021731138229370117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;10]" time="0.003538370132446289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;11]" time="0.0029265880584716797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;12]" time="0.0027985572814941406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;13]" time="0.0024194717407226562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;14]" time="0.0029146671295166016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;15]" time="0.003660440444946289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;16]" time="0.0034143924713134766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;17]" time="0.002395153045654297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;18]" time="0.002206087112426758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;19]" time="0.004276275634765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;20]" time="0.031625986099243164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;21]" time="0.07375407218933105"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;22]" time="0.002348184585571289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;23]" time="0.0018742084503173828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;24]" time="0.011897563934326172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;25]" time="0.37346529960632324"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;26]" time="0.8822271823883057"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;0]" time="0.0026640892028808594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;1]" time="0.002002716064453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;2]" time="0.001947641372680664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;3]" time="0.0021016597747802734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;4]" time="0.0019309520721435547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;5]" time="0.0016942024230957031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;6]" time="0.0017201900482177734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;7]" time="0.0021657943725585938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;8]" time="0.011183500289916992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;9]" time="0.02123713493347168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;10]" time="0.003566265106201172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;11]" time="0.003071308135986328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;12]" time="0.0028853416442871094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;13]" time="0.0025076866149902344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;14]" time="0.002965688705444336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;15]" time="0.0035581588745117188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;16]" time="0.0033109188079833984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;17]" time="0.002269744873046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;18]" time="0.0023126602172851562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;19]" time="0.004162788391113281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;20]" time="0.03512287139892578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;21]" time="0.07364058494567871"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;22]" time="0.002387523651123047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;23]" time="0.0017619132995605469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;24]" time="0.012125730514526367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;25]" time="0.3706040382385254"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;26]" time="0.8808605670928955"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;0]" time="0.0020148754119873047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;1]" time="0.0015766620635986328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;2]" time="0.0014719963073730469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;3]" time="0.0013289451599121094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;4]" time="0.0013434886932373047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;5]" time="0.0014328956604003906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;6]" time="0.0013175010681152344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;7]" time="0.0013582706451416016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;8]" time="0.0014722347259521484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;9]" time="0.0016567707061767578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;10]" time="0.0015113353729248047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;11]" time="0.001422882080078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;12]" time="0.001466989517211914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;13]" time="0.0014803409576416016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;14]" time="0.0014374256134033203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;15]" time="0.0014414787292480469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;16]" time="0.0014672279357910156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;17]" time="0.0017216205596923828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;18]" time="0.0016362667083740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;19]" time="0.0026595592498779297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;20]" time="0.00963449478149414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;21]" time="0.021432876586914062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;22]" time="0.0018391609191894531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;23]" time="0.0013306140899658203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;24]" time="0.0022492408752441406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;25]" time="0.023960590362548828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;26]" time="0.05473661422729492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;0]" time="0.0020351409912109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;1]" time="0.0014262199401855469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;2]" time="0.0013434886932373047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;3]" time="0.0013587474822998047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;4]" time="0.0013256072998046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;5]" time="0.0013036727905273438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;6]" time="0.0014104843139648438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;7]" time="0.0012814998626708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;8]" time="0.0016336441040039062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;9]" time="0.0021665096282958984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;10]" time="0.0015575885772705078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;11]" time="0.0015027523040771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;12]" time="0.0015246868133544922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;13]" time="0.0014989376068115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;14]" time="0.0015044212341308594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;15]" time="0.001581430435180664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;16]" time="0.0016484260559082031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;17]" time="0.0018129348754882812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;18]" time="0.001771688461303711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;19]" time="0.0028471946716308594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;20]" time="0.009977340698242188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;21]" time="0.020795583724975586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;22]" time="0.0018877983093261719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;23]" time="0.0013802051544189453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;24]" time="0.002225160598754883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;25]" time="0.024082183837890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;26]" time="0.055024147033691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;0]" time="0.0019330978393554688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;1]" time="0.0013394355773925781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;2]" time="0.0013031959533691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;3]" time="0.0012993812561035156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;4]" time="0.001308441162109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;5]" time="0.0013644695281982422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;6]" time="0.0013127326965332031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;7]" time="0.001302957534790039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;8]" time="0.0016269683837890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;9]" time="0.002285480499267578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;10]" time="0.0014810562133789062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;11]" time="0.001463174819946289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;12]" time="0.0014865398406982422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;13]" time="0.0014500617980957031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;14]" time="0.0014612674713134766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;15]" time="0.001500844955444336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;16]" time="0.0014989376068115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;17]" time="0.0017185211181640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;18]" time="0.0017101764678955078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;19]" time="0.0026798248291015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;20]" time="0.009729623794555664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;21]" time="0.02061629295349121"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;22]" time="0.0018339157104492188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;23]" time="0.0013713836669921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;24]" time="0.002295970916748047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;25]" time="0.024087190628051758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;26]" time="0.05509495735168457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;0]" time="0.0018427371978759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;1]" time="0.0013985633850097656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;2]" time="0.0012969970703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;3]" time="0.0012912750244140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;4]" time="0.001230001449584961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;5]" time="0.0012555122375488281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;6]" time="0.0012607574462890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;7]" time="0.0012660026550292969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;8]" time="0.001986980438232422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;9]" time="0.0030024051666259766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;10]" time="0.0016045570373535156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;11]" time="0.0014958381652832031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;12]" time="0.00162506103515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;13]" time="0.0016188621520996094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;14]" time="0.0015981197357177734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;15]" time="0.002005338668823242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;16]" time="0.0022096633911132812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;17]" time="0.0023021697998046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;18]" time="0.03533625602722168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;19]" time="0.023975372314453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;20]" time="0.004819393157958984"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;21]" time="0.0038487911224365234"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;22]" time="0.002970457077026367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;23]" time="0.03076934814453125"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;24]" time="0.0696709156036377"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;0]" time="0.0036661624908447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;1]" time="0.0015282630920410156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;2]" time="0.005272388458251953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;3]" time="0.0046291351318359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;4]" time="0.0048596858978271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;5]" time="0.002936124801635742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;6]" time="0.0015399456024169922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;7]" time="0.005890607833862305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;8]" time="0.01123952865600586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;9]" time="0.019940853118896484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;10]" time="0.00543665885925293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;11]" time="0.0019004344940185547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;12]" time="0.010331153869628906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;13]" time="0.007672548294067383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;14]" time="0.009628534317016602"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;15]" time="0.0038902759552001953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;16]" time="0.0025238990783691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;17]" time="0.0073986053466796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;18]" time="0.03966689109802246"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;19]" time="0.0410764217376709"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;20]" time="0.0035581588745117188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;21]" time="0.0025212764739990234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;22]" time="0.0076520442962646484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;23]" time="0.03914976119995117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;24]" time="0.07737517356872559"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;0]" time="0.0024406909942626953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;1]" time="0.0013575553894042969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;2]" time="0.0024518966674804688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;3]" time="0.0023195743560791016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;4]" time="0.002315521240234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;5]" time="0.0021326541900634766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;6]" time="0.001621246337890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;7]" time="0.002744436264038086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;8]" time="0.004114627838134766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;9]" time="0.006386995315551758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;10]" time="0.0023603439331054688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;11]" time="0.001527547836303711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;12]" time="0.00398564338684082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;13]" time="0.0033152103424072266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;14]" time="0.003782987594604492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;15]" time="0.002747774124145508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;16]" time="0.002225160598754883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;17]" time="0.0035905838012695312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;18]" time="0.03215432167053223"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;19]" time="0.02738356590270996"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;20]" time="0.002325296401977539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;21]" time="0.0022454261779785156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;22]" time="0.00406646728515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;23]" time="0.03094625473022461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;24]" time="0.06456804275512695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;0]" time="0.002384185791015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;1]" time="0.0013096332550048828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;2]" time="0.0024073123931884766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;3]" time="0.002218961715698242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;4]" time="0.002307891845703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;5]" time="0.0017130374908447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;6]" time="0.0013532638549804688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;7]" time="0.002527952194213867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;8]" time="0.004044771194458008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;9]" time="0.006398677825927734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;10]" time="0.0023276805877685547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;11]" time="0.0015869140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;12]" time="0.00708770751953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;13]" time="0.0034215450286865234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;14]" time="0.0038483142852783203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;15]" time="0.0024476051330566406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;16]" time="0.002161264419555664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;17]" time="0.0038394927978515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;18]" time="0.032486915588378906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;19]" time="0.027736425399780273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;20]" time="0.002173185348510742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;21]" time="0.002285003662109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;22]" time="0.004230499267578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;23]" time="0.03117966651916504"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;24]" time="0.06483078002929688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;0]" time="0.001767873764038086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;1]" time="0.0012657642364501953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;2]" time="0.0011763572692871094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;3]" time="0.001232147216796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;4]" time="0.0010976791381835938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;5]" time="0.0012812614440917969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;6]" time="0.0011696815490722656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;7]" time="0.001180887222290039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;8]" time="0.0015156269073486328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;9]" time="0.002034425735473633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;10]" time="0.0014472007751464844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;11]" time="0.001329183578491211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;12]" time="0.0014095306396484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;13]" time="0.001405477523803711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;14]" time="0.0014078617095947266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;15]" time="0.0018143653869628906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;16]" time="0.001963376998901367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;17]" time="0.002176523208618164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;18]" time="0.030049562454223633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;19]" time="0.023146390914916992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;20]" time="0.0017528533935546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;21]" time="0.002237081527709961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;22]" time="0.002785921096801758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;23]" time="0.028211593627929688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;24]" time="0.05996298789978027"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;0]" time="0.0017130374908447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;1]" time="0.0014255046844482422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;2]" time="0.001196146011352539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;3]" time="0.0012631416320800781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;4]" time="0.0013432502746582031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;5]" time="0.001306295394897461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;6]" time="0.0012478828430175781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;7]" time="0.0011925697326660156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;8]" time="0.0014197826385498047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;9]" time="0.0016427040100097656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;10]" time="0.0015215873718261719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;11]" time="0.001459360122680664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;12]" time="0.001550436019897461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;13]" time="0.0014758110046386719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;14]" time="0.0015664100646972656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;15]" time="0.001981973648071289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;16]" time="0.002107858657836914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;17]" time="0.0020978450775146484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;18]" time="0.0292510986328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;19]" time="0.023217201232910156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;20]" time="0.0017688274383544922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;21]" time="0.002276897430419922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;22]" time="0.0030417442321777344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;23]" time="0.029155254364013672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;24]" time="0.05938982963562012"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;0]" time="0.0017313957214355469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;1]" time="0.001247406005859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;2]" time="0.0011892318725585938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;3]" time="0.0012683868408203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;4]" time="0.0011911392211914062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;5]" time="0.001268625259399414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;6]" time="0.0012302398681640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;7]" time="0.0012345314025878906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;8]" time="0.001619577407836914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;9]" time="0.0022156238555908203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;10]" time="0.0014662742614746094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;11]" time="0.0014600753784179688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;12]" time="0.0015370845794677734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;13]" time="0.0015065670013427734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;14]" time="0.001573801040649414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;15]" time="0.002017974853515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;16]" time="0.002145051956176758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;17]" time="0.002274036407470703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;18]" time="0.029791593551635742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;19]" time="0.02312159538269043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;20]" time="0.0016908645629882812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;21]" time="0.0022478103637695312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;22]" time="0.0029582977294921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;23]" time="0.028450965881347656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;24]" time="0.05991649627685547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;0]" time="0.0017087459564208984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;1]" time="0.0012395381927490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;2]" time="0.0011417865753173828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;3]" time="0.001180410385131836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;4]" time="0.0011425018310546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;5]" time="0.0011990070343017578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;6]" time="0.0011897087097167969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;7]" time="0.0012285709381103516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;8]" time="0.0015401840209960938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;9]" time="0.0015914440155029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;10]" time="0.0014925003051757812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;11]" time="0.0013828277587890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;12]" time="0.0014812946319580078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;13]" time="0.001608133316040039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;14]" time="0.001523733139038086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;15]" time="0.0019211769104003906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;16]" time="0.002131223678588867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;17]" time="0.0022597312927246094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;18]" time="0.029522418975830078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;19]" time="0.023035526275634766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;20]" time="0.0016596317291259766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;21]" time="0.0021216869354248047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;22]" time="0.0029637813568115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;23]" time="0.0281832218170166"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;24]" time="0.059644460678100586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;0]" time="0.00264739990234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;1]" time="0.0016243457794189453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;2]" time="0.0016374588012695312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;3]" time="0.0017969608306884766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;4]" time="0.0016367435455322266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;5]" time="0.0015940666198730469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;6]" time="0.0016040802001953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;7]" time="0.0016739368438720703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;8]" time="0.0018591880798339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;9]" time="0.0020525455474853516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;10]" time="0.0018799304962158203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;11]" time="0.001851797103881836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;12]" time="0.0018239021301269531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;13]" time="0.0018274784088134766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;14]" time="0.001867532730102539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;15]" time="0.0019483566284179688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;16]" time="0.0019159317016601562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;17]" time="0.0020837783813476562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;18]" time="0.0020589828491210938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;19]" time="0.0030438899993896484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;20]" time="0.010216474533081055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;21]" time="0.020916223526000977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;22]" time="0.0022385120391845703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;23]" time="0.0016431808471679688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;24]" time="0.002574443817138672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;25]" time="0.02845478057861328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;26]" time="0.055002689361572266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;0]" time="0.0023660659790039062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;1]" time="0.0017752647399902344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;2]" time="0.0017573833465576172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;3]" time="0.001798391342163086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;4]" time="0.0016353130340576172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;5]" time="0.0016009807586669922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;6]" time="0.001604318618774414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;7]" time="0.0016751289367675781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;8]" time="0.0019919872283935547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;9]" time="0.0028705596923828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;10]" time="0.0019445419311523438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;11]" time="0.0019333362579345703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;12]" time="0.0019385814666748047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;13]" time="0.0018601417541503906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;14]" time="0.0018758773803710938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;15]" time="0.0020203590393066406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;16]" time="0.0019712448120117188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;17]" time="0.0022199153900146484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;18]" time="0.002156496047973633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;19]" time="0.003218412399291992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;20]" time="0.010466814041137695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;21]" time="0.021725893020629883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;22]" time="0.002340555191040039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;23]" time="0.0017080307006835938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;24]" time="0.002670764923095703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;25]" time="0.024919509887695312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;26]" time="0.05575752258300781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;0]" time="0.002464771270751953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;1]" time="0.0017652511596679688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;2]" time="0.001630544662475586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;3]" time="0.001682281494140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;4]" time="0.0016818046569824219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;5]" time="0.0016474723815917969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;6]" time="0.001634836196899414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;7]" time="0.0015790462493896484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;8]" time="0.0019752979278564453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;9]" time="0.0024881362915039062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;10]" time="0.0018794536590576172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;11]" time="0.0018687248229980469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;12]" time="0.001966238021850586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;13]" time="0.0018892288208007812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;14]" time="0.0020246505737304688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;15]" time="0.0019538402557373047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;16]" time="0.001905202865600586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;17]" time="0.0021140575408935547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;18]" time="0.0020940303802490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;19]" time="0.003134489059448242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;20]" time="0.010211944580078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;21]" time="0.021275758743286133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;22]" time="0.002310514450073242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;23]" time="0.0018053054809570312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;24]" time="0.0026264190673828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;25]" time="0.024529695510864258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;26]" time="0.055698394775390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;0]" time="0.0024094581604003906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;1]" time="0.0016558170318603516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;2]" time="0.0016331672668457031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;3]" time="0.001626729965209961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;4]" time="0.0016582012176513672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;5]" time="0.0015976428985595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;6]" time="0.001546621322631836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;7]" time="0.001649618148803711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;8]" time="0.0028111934661865234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;9]" time="0.004644632339477539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;10]" time="0.0019080638885498047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;11]" time="0.0019083023071289062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;12]" time="0.0019283294677734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;13]" time="0.0017852783203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;14]" time="0.001878499984741211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;15]" time="0.0019865036010742188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;16]" time="0.002000570297241211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;17]" time="0.002123117446899414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;18]" time="0.002075672149658203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;19]" time="0.0035610198974609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;20]" time="0.011216163635253906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;21]" time="0.023339033126831055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;22]" time="0.0022225379943847656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;23]" time="0.0016238689422607422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;24]" time="0.002735614776611328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;25]" time="0.025779247283935547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;26]" time="0.05733346939086914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;0]" time="0.002384185791015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;1]" time="0.0017821788787841797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;2]" time="0.0017008781433105469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;3]" time="0.0016903877258300781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;4]" time="0.0017485618591308594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;5]" time="0.0016591548919677734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;6]" time="0.0019083023071289062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;7]" time="0.0016803741455078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;8]" time="0.002899169921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;9]" time="0.005449533462524414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;10]" time="0.002128124237060547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;11]" time="0.0021240711212158203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;12]" time="0.002000093460083008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;13]" time="0.0019221305847167969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;14]" time="0.002103090286254883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;15]" time="0.0021317005157470703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;16]" time="0.0020513534545898438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;17]" time="0.0021295547485351562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;18]" time="0.002177715301513672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;19]" time="0.0030832290649414062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;20]" time="0.011157512664794922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;21]" time="0.023835420608520508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;22]" time="0.002212047576904297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;23]" time="0.001642465591430664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;24]" time="0.002676725387573242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;25]" time="0.025361299514770508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;26]" time="0.06166887283325195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;0]" time="0.0024635791778564453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;1]" time="0.0017075538635253906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;2]" time="0.0016286373138427734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;3]" time="0.0016689300537109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;4]" time="0.001705169677734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;5]" time="0.001600503921508789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;6]" time="0.0017306804656982422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;7]" time="0.0016391277313232422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;8]" time="0.002914905548095703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;9]" time="0.004782438278198242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;10]" time="0.0020492076873779297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;11]" time="0.002026081085205078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;12]" time="0.0019769668579101562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;13]" time="0.001840353012084961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;14]" time="0.0019457340240478516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;15]" time="0.002014636993408203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;16]" time="0.0020503997802734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;17]" time="0.002132892608642578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;18]" time="0.0021440982818603516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;19]" time="0.0031592845916748047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;20]" time="0.011311769485473633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;21]" time="0.023525238037109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;22]" time="0.0022192001342773438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;23]" time="0.00168609619140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;24]" time="0.002663850784301758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;25]" time="0.02568674087524414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;26]" time="0.05778241157531738"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;0]" time="0.0034148693084716797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;1]" time="0.0027425289154052734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;2]" time="0.0025200843811035156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;3]" time="0.002648591995239258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;4]" time="0.0026023387908935547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;5]" time="0.002391815185546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;6]" time="0.002421140670776367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;7]" time="0.002568483352661133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;8]" time="0.00649714469909668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;9]" time="0.011861324310302734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;10]" time="0.0034613609313964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;11]" time="0.0033392906188964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;12]" time="0.003357410430908203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;13]" time="0.003113269805908203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;14]" time="0.0032939910888671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;15]" time="0.003488302230834961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;16]" time="0.0035982131958007812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;17]" time="0.0029320716857910156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;18]" time="0.0028553009033203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;19]" time="0.004027128219604492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;20]" time="0.014575958251953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;21]" time="0.031218528747558594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;22]" time="0.0031423568725585938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;23]" time="0.0024433135986328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;24]" time="0.0035054683685302734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;25]" time="0.029050827026367188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;26]" time="0.06503820419311523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;0]" time="0.003329038619995117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;1]" time="0.0025777816772460938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;2]" time="0.00247955322265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;3]" time="0.0026056766510009766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;4]" time="0.002631664276123047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;5]" time="0.002405405044555664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;6]" time="0.0024144649505615234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;7]" time="0.002879619598388672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;8]" time="0.00655817985534668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;9]" time="0.012157678604125977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;10]" time="0.0035390853881835938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;11]" time="0.0034608840942382812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;12]" time="0.003511667251586914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;13]" time="0.0031981468200683594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;14]" time="0.0034706592559814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;15]" time="0.003782987594604492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;16]" time="0.0037000179290771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;17]" time="0.002971649169921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;18]" time="0.002893209457397461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;19]" time="0.003949403762817383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;20]" time="0.015557050704956055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;21]" time="0.03168535232543945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;22]" time="0.0030333995819091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;23]" time="0.0025222301483154297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;24]" time="0.0036115646362304688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;25]" time="0.028962373733520508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;26]" time="0.06467247009277344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;0]" time="0.0033440589904785156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;1]" time="0.0026252269744873047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;2]" time="0.0025568008422851562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;3]" time="0.0026280879974365234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;4]" time="0.0025289058685302734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;5]" time="0.0024232864379882812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;6]" time="0.0024499893188476562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;7]" time="0.002579927444458008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;8]" time="0.0065386295318603516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;9]" time="0.012476921081542969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;10]" time="0.003466367721557617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;11]" time="0.0034711360931396484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;12]" time="0.0034635066986083984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;13]" time="0.0032231807708740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;14]" time="0.003360271453857422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;15]" time="0.003589630126953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;16]" time="0.0036013126373291016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;17]" time="0.002960205078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;18]" time="0.0028879642486572266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;19]" time="0.00400996208190918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;20]" time="0.015145063400268555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;21]" time="0.03175783157348633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;22]" time="0.003048419952392578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;23]" time="0.002414226531982422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;24]" time="0.0035369396209716797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;25]" time="0.02912735939025879"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;26]" time="0.06547331809997559"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;0]" time="0.003082275390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;1]" time="0.0021691322326660156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;2]" time="0.0033211708068847656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;3]" time="0.004376411437988281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;4]" time="0.0052700042724609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;5]" time="0.0021185874938964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;6]" time="0.002124309539794922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;7]" time="0.0033960342407226562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;8]" time="0.004541635513305664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;9]" time="0.005996227264404297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;10]" time="0.002434968948364258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;11]" time="0.004674673080444336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;12]" time="0.004460334777832031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;13]" time="0.0040094852447509766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;14]" time="0.004441022872924805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;15]" time="0.006215810775756836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;16]" time="0.008024930953979492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;17]" time="0.002792835235595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;18]" time="0.0025992393493652344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;19]" time="0.004736900329589844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;20]" time="0.012759685516357422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;21]" time="0.027933597564697266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;22]" time="0.0026760101318359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;23]" time="0.001997232437133789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;24]" time="0.004027843475341797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;25]" time="0.026973962783813477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;26]" time="0.0583646297454834"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;0]" time="0.0030150413513183594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;1]" time="0.0020837783813476562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;2]" time="0.0032625198364257812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;3]" time="0.004241466522216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;4]" time="0.005345821380615234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;5]" time="0.0021233558654785156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;6]" time="0.0020210742950439453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;7]" time="0.0033740997314453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;8]" time="0.004771709442138672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;9]" time="0.00643467903137207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;10]" time="0.0025033950805664062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;11]" time="0.004549741744995117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;12]" time="0.004445791244506836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;13]" time="0.003864765167236328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;14]" time="0.004608869552612305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;15]" time="0.00632786750793457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;16]" time="0.008023738861083984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;17]" time="0.002650737762451172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;18]" time="0.0025734901428222656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;19]" time="0.0047686100006103516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;20]" time="0.013266324996948242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;21]" time="0.025027751922607422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;22]" time="0.0026950836181640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;23]" time="0.002119779586791992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;24]" time="0.0043218135833740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;25]" time="0.02729940414428711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;26]" time="0.05944323539733887"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;0]" time="0.0028607845306396484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;1]" time="0.0021522045135498047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;2]" time="0.0032825469970703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;3]" time="0.004464149475097656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;4]" time="0.005213499069213867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;5]" time="0.002135038375854492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;6]" time="0.0021042823791503906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;7]" time="0.003495931625366211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;8]" time="0.0048291683197021484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;9]" time="0.006595134735107422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;10]" time="0.002600431442260742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;11]" time="0.0046999454498291016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;12]" time="0.004554271697998047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;13]" time="0.00377655029296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;14]" time="0.004629850387573242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;15]" time="0.0064203739166259766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;16]" time="0.008090019226074219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;17]" time="0.002659320831298828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;18]" time="0.002576589584350586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;19]" time="0.0047719478607177734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;20]" time="0.01300954818725586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;21]" time="0.025181055068969727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;22]" time="0.002727985382080078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;23]" time="0.0020935535430908203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;24]" time="0.004672527313232422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;25]" time="0.027370691299438477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;26]" time="0.058950185775756836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.004217863082885742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.003860950469970703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.01061391830444336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.01456904411315918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.02027273178100586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.009786605834960938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.0043163299560546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.00408625602722168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.026936769485473633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.04512786865234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.14030814170837402"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.010445833206176758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.0061702728271484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.01217961311340332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.01222848892211914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.02077960968017578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.03006124496459961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.039130210876464844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.004931211471557617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.005058765411376953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.05241036415100098"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.055830955505371094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.18234562873840332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.011736869812011719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.0043218135833740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.005043983459472656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.04818248748779297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.07305622100830078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.24671721458435059"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.013389110565185547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.004524946212768555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.00400853157043457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.01063680648803711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.01475071907043457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.02074408531188965"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.00972604751586914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.004447221755981445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.00407719612121582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.02718043327331543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.04578709602355957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.14369893074035645"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.010655403137207031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.006253480911254883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.012261390686035156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.012704133987426758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.02212214469909668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.03030228614807129"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.03928661346435547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.00495147705078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.005010128021240234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.05238151550292969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.05656266212463379"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.18055391311645508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.011687040328979492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.004166603088378906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.004878997802734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.04737567901611328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.07231783866882324"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.24791979789733887"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.013478755950927734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.004476070404052734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.00397038459777832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.010777950286865234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.014443635940551758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.02027750015258789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.009761571884155273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.0044155120849609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.004161834716796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.0276639461517334"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.04561042785644531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.140763521194458"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.01039266586303711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.005450725555419922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.011832475662231445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.012674093246459961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.022002458572387695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.030802011489868164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.03967881202697754"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.004870176315307617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.004967212677001953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.05209827423095703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.05606412887573242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.1796715259552002"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.011971235275268555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.004536151885986328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.004945516586303711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.047391414642333984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.07321381568908691"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.24782228469848633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.013146638870239258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.004649639129638672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.004029750823974609"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.010561227798461914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.014589071273803711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.020181894302368164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.009766578674316406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.0044062137603759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.004062652587890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.026978731155395508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.045568227767944336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.1410822868347168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.01058340072631836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.006224155426025391"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.012093782424926758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.012373685836791992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.021095991134643555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.030371904373168945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.03940844535827637"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.004991054534912109"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.0049245357513427734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.052008628845214844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.05646085739135742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.1810762882232666"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.011944055557250977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.0044097900390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.005072593688964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.0475921630859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.07378339767456055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.24618244171142578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.013292074203491211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.004540443420410156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.004113435745239258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.010733366012573242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.014569520950317383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.020284652709960938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.009793519973754883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.004393577575683594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.00402379035949707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.027205944061279297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.04510188102722168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.14100193977355957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.010553359985351562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.006281852722167969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.012279272079467773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.012689828872680664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.02231597900390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.030416011810302734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.04002118110656738"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.0049512386322021484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.004990339279174805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.05192971229553223"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.05671381950378418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.1820385456085205"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.012016057968139648"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.004243373870849609"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.0049381256103515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.04736614227294922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.07309818267822266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.24869847297668457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.01331329345703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.004553318023681641"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.004067420959472656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.010783672332763672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.014802217483520508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.02051854133605957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.009880304336547852"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.00450897216796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.004159212112426758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.027408599853515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.04543328285217285"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.1427607536315918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.010657072067260742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.006370067596435547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.012603759765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.01250004768371582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.022467613220214844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.0306551456451416"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.03918004035949707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.004988908767700195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.004935741424560547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.051856279373168945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.056632041931152344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.1813218593597412"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.011855363845825195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.004352092742919922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.00500178337097168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.0473175048828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.07251095771789551"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.24719738960266113"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.013246297836303711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.004457950592041016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.0038847923278808594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.010566949844360352"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.014371156692504883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.020026206970214844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.009601354598999023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.00441431999206543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.004026651382446289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.026644468307495117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.04536271095275879"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.14072299003601074"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.010449409484863281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.006303071975708008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.012261390686035156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.012576818466186523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.022285938262939453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.030454158782958984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.039012908935546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.004995584487915039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.004969120025634766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.05211591720581055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.05654597282409668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.18135666847229004"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.011798620223999023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.004176616668701172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.00484013557434082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.04713296890258789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.07320237159729004"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.25039005279541016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.013183355331420898"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.00454258918762207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.004088163375854492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.010673046112060547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.014593839645385742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.020228147506713867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.009760618209838867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.004380941390991211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.004061222076416016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.027031660079956055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.045075178146362305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.14069747924804688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.010642051696777344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.006385087966918945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.012149810791015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.012740850448608398"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.022405147552490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.030422449111938477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.03945469856262207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.004854440689086914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.004949808120727539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.052336692810058594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.056154489517211914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.18130850791931152"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.011836051940917969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.004275083541870117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.0048940181732177734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.047612905502319336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.07293534278869629"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.2523307800292969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.013192415237426758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.004558563232421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.0040242671966552734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.010728120803833008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.0151824951171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.02019524574279785"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.009723424911499023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.0045604705810546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.004080295562744141"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.02693963050842285"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.0458681583404541"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.14195537567138672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.010411739349365234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.006225109100341797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.012152910232543945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.01267385482788086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.020867586135864258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.0305483341217041"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.03979301452636719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.0049936771392822266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.004983425140380859"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.05138134956359863"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.05603790283203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.18333125114440918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.011990785598754883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.004318952560424805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.0049724578857421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.047751426696777344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.07360506057739258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.250018835067749"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.013072729110717773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.0027022361755371094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.0015587806701660156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.00356292724609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.004027605056762695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.006556987762451172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.004605770111083984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.002044200897216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.0016024112701416016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.004016876220703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.00461125373840332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.00846409797668457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.004933357238769531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.0025093555450439453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.0018777847290039062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.004158973693847656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.005308389663696289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.006424903869628906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.011231184005737305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.002920866012573242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.002838134765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.029545307159423828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.016210079193115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.04537773132324219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.007231235504150391"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.0027441978454589844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.002398252487182617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.024138450622558594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.032897233963012695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.11288213729858398"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.008698701858520508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.0028510093688964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.0015592575073242188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.0035521984100341797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.0039479732513427734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.006386756896972656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.004626035690307617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.0020627975463867188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.0016100406646728516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.003960371017456055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.004404306411743164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.008175373077392578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.004932403564453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.0025148391723632812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.0018374919891357422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.004027605056762695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.005339145660400391"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.006245136260986328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.011859416961669922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.0028679370880126953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.0022590160369873047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.02835392951965332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.01563405990600586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.046651363372802734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.007244586944580078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.002746105194091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.0024881362915039062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.02404618263244629"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.03270077705383301"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.11737346649169922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.008322715759277344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.002859830856323242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.0015795230865478516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.0035567283630371094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.0038967132568359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.0063364505767822266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.004527091979980469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.0019817352294921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.0015137195587158203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.005021095275878906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.0044744014739990234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.008080244064331055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.0046825408935546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.002525806427001953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.0018699169158935547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.004128694534301758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.005443096160888672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.006222248077392578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.011118650436401367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.002855539321899414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.0023818016052246094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.028339624404907227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.015665292739868164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.04604816436767578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.007214784622192383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.0027065277099609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.0024738311767578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.024021387100219727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.03271365165710449"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.11261105537414551"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.008349418640136719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.0027115345001220703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.0014882087707519531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.003529071807861328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.003893613815307617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.006167411804199219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.004482746124267578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.0019414424896240234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.0014908313751220703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.0037817955017089844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.004332780838012695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.008129119873046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.004803657531738281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.0024552345275878906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.0018815994262695312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.004106044769287109"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.005258083343505859"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.006215572357177734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.011130094528198242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.002907991409301758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.0022945404052734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.027973651885986328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.015849590301513672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.046189308166503906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.007349252700805664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.002824068069458008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.0025637149810791016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.02402949333190918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.03276777267456055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.11266660690307617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.008680343627929688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.0028607845306396484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.0015857219696044922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.0035851001739501953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.004003286361694336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.0063974857330322266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.004567146301269531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.0020492076873779297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.0015773773193359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.0040547847747802734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.004678249359130859"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.008518457412719727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.005063295364379883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.0025153160095214844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.0019605159759521484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.004067182540893555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.005242586135864258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.006637096405029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.011130332946777344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.0029850006103515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.002425670623779297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.02853703498840332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.015836000442504883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.046079397201538086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.007489681243896484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.002756357192993164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.0024204254150390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.02415013313293457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.032700300216674805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.11287260055541992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.008431196212768555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.002851247787475586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.001581430435180664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.0037508010864257812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.004648685455322266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.006402730941772461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.0047838687896728516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.0020148754119873047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.0014939308166503906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.00399017333984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.004584789276123047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.008605480194091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.0048067569732666016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.002523183822631836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.00200653076171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.0041239261627197266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.005331277847290039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.00633692741394043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.011116504669189453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.0029332637786865234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.002357006072998047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.028384685516357422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.016274690628051758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.04642534255981445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.007302284240722656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.002837657928466797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.0025238990783691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.024148225784301758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.033309221267700195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.11321401596069336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.008640527725219727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.002843141555786133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.0016121864318847656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.0036780834197998047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.004047870635986328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.0063593387603759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.00465083122253418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.0020105838775634766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.0015039443969726562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.0038712024688720703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.004485607147216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.007936477661132812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.004709720611572266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.002458333969116211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.0018317699432373047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.003907442092895508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.005193471908569336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.006262302398681641"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.011056661605834961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.002938508987426758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.002463102340698242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.02806830406188965"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.016077518463134766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.045644283294677734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.007314205169677734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.002359151840209961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.0025267601013183594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.024701833724975586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.0327143669128418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.11289548873901367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.008445262908935547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.002791881561279297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0015807151794433594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.0037865638732910156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.003897428512573242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.006287097930908203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.004568338394165039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.0020558834075927734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.0015110969543457031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.004025459289550781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.004457235336303711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.008581161499023438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.004830360412597656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.00258636474609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.002028942108154297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.0041866302490234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.005246639251708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.006273984909057617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.011187553405761719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.0028905868530273438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.002240896224975586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.027992725372314453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.01587367057800293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.048015594482421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.007436037063598633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.002691984176635742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.002431154251098633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.024468660354614258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.03296470642089844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.11323022842407227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.008420467376708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.0027937889099121094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.001550912857055664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.0035958290100097656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.003995656967163086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.0064029693603515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.004637956619262695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.0020668506622314453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.001590728759765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.004187107086181641"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.004639148712158203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.008417844772338867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.0048198699951171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.002470254898071289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.0019333362579345703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.004008293151855469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.005280494689941406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.0062525272369384766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.011272192001342773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.002945423126220703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.002443552017211914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.02837347984313965"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.015999317169189453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.046018362045288086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.007378578186035156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.002883434295654297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.0025587081909179688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.02414107322692871"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.03298068046569824"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.11240935325622559"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.008608341217041016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.0037164688110351562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.003628253936767578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.0056607723236083984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.006527423858642578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.00797891616821289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.0059070587158203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.0025501251220703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.0035774707794189453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.013266563415527344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.018918991088867188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.05770540237426758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.007545948028564453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.003595590591430664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.006478071212768555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.008156538009643555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.010318517684936523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.013216733932495117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.0169527530670166"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.00419163703918457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.00449371337890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.037641048431396484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.030099153518676758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.31452226638793945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.008931398391723633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.003446340560913086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.004708290100097656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.03339815139770508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.047135114669799805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.16183733940124512"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.010295629501342773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.0036687850952148438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.0037505626678466797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.005805253982543945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.006700754165649414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.008022308349609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.005891561508178711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.002608060836791992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.003675699234008789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.01709771156311035"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.01979970932006836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.05845046043395996"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.007570981979370117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.0037994384765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.0064470767974853516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.008214473724365234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.010451555252075195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.013209819793701172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.017031431198120117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.004259347915649414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.004708290100097656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.03784036636352539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.030440330505371094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.09646773338317871"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.008918285369873047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.0034215450286865234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.004503965377807617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.03414320945739746"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.04767036437988281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.16301631927490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.01040959358215332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.0036978721618652344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.0037603378295898438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.005816936492919922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.006734609603881836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.008061885833740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.005964517593383789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.002774477005004883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.0036079883575439453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.013753414154052734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.019948959350585938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.05828595161437988"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.007517576217651367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.003833770751953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.006652355194091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.008373498916625977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.01417231559753418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.014241456985473633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.0169525146484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.0041844844818115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.004653215408325195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.03854203224182129"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.03064441680908203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.0962686538696289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.008878946304321289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.003577709197998047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.004689693450927734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.033689022064208984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.04688453674316406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.16258740425109863"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.010542631149291992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.003601551055908203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.0036034584045410156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.005806684494018555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.006880521774291992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.008054971694946289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.005957126617431641"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.0026311874389648438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.0036690235137939453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.013666391372680664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.020021677017211914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.058976173400878906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.007609844207763672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.0037627220153808594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.006464481353759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.008381128311157227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.010606527328491211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.013129949569702148"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.016882896423339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.004173994064331055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.004646778106689453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.038602352142333984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.030322790145874023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.09548759460449219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.008794546127319336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.0036182403564453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.004698991775512695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.03392481803894043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.04726719856262207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.16334223747253418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.010392427444458008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.0036339759826660156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.0037331581115722656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.0058629512786865234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.006676197052001953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.007938861846923828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.005964994430541992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.0026307106018066406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.0036346912384033203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.013509273529052734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.019046545028686523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.058335304260253906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.0077402591705322266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.0048754215240478516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.006519317626953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.00833892822265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.011004924774169922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.014439582824707031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.016833066940307617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.004204273223876953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.0046138763427734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.038275718688964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.03028559684753418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.09656691551208496"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.009154319763183594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.003626108169555664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.004879474639892578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.033477783203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.04739069938659668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.16278600692749023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.010586023330688477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.0036520957946777344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.0036687850952148438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.005855560302734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.006618499755859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.007992029190063477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.005875110626220703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.0026035308837890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.003685474395751953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.013703584671020508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.02338385581970215"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.059595346450805664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.007861137390136719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.004969596862792969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.0071103572845458984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.008286237716674805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.0115203857421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.014404296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.017266511917114258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.004256725311279297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.0045206546783447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.03796267509460449"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.03030848503112793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.09601759910583496"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.008970260620117188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.0034837722778320312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.004682302474975586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.03368639945983887"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.04765152931213379"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.16351079940795898"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.010711669921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.003808259963989258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.0037202835083007812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.005832195281982422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.0068547725677490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.00797128677368164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.005917787551879883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.002578258514404297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.0035953521728515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.013763189315795898"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.019868850708007812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.05860328674316406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.007575511932373047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.003759622573852539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.006396770477294922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.00832366943359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.010725021362304688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.013015031814575195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.017201662063598633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.0043010711669921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.004752159118652344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.03850507736206055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.03038930892944336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.09572339057922363"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.009098529815673828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.003477334976196289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.0047681331634521484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.033539772033691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.0480043888092041"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.16597509384155273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.010720491409301758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.003935813903808594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.003787994384765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.005871772766113281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.006857156753540039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.008064985275268555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.005822420120239258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.002660036087036133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.0036923885345458984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.01373291015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.020259857177734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.05886387825012207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.007608890533447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.004938364028930664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.00645136833190918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.008164644241333008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.010979652404785156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.014738082885742188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.01698613166809082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.0042650699615478516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.004580259323120117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.03859877586364746"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.03063225746154785"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.09532761573791504"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.009282588958740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.003729104995727539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.004663705825805664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.03368377685546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.04707479476928711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.16619873046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.010720252990722656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.0036802291870117188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.0037457942962646484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.005841255187988281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.0070226192474365234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.008057117462158203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.005884647369384766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.002614736557006836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.0037088394165039062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.013958454132080078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.02019500732421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.058957576751708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.00768589973449707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.004812955856323242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.006680965423583984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.008180618286132812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.010808467864990234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.014338016510009766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.016863107681274414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.0042340755462646484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.00461578369140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.03777289390563965"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.030474185943603516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.10076570510864258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.009007453918457031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.0034847259521484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.004774570465087891"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.03368782997131348"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.04871511459350586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.16437292098999023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.010789871215820312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;0]" time="0.01605987548828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;1]" time="0.002462148666381836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;2]" time="0.0017845630645751953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;3]" time="0.0017621517181396484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;4]" time="0.0016369819641113281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;5]" time="0.0021271705627441406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;6]" time="0.0014705657958984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;7]" time="0.0019283294677734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;8]" time="0.0046117305755615234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;9]" time="0.009603738784790039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;10]" time="0.00554966926574707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;11]" time="0.0021393299102783203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;12]" time="0.002091646194458008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;13]" time="0.001926422119140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;14]" time="0.002065420150756836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;15]" time="0.002236604690551758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;16]" time="0.0022237300872802734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;0]" time="0.0016362667083740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;1]" time="0.0016644001007080078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;2]" time="0.0016019344329833984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;3]" time="0.0017499923706054688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;4]" time="0.001641988754272461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;5]" time="0.0019290447235107422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;6]" time="0.0014989376068115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;7]" time="0.0017063617706298828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;8]" time="0.005912303924560547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;9]" time="0.014190435409545898"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;10]" time="0.003162860870361328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;11]" time="0.0022935867309570312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;12]" time="0.0021758079528808594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;13]" time="0.002040863037109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;14]" time="0.002151966094970703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;15]" time="0.002565145492553711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;16]" time="0.002457141876220703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;0]" time="0.0017418861389160156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;1]" time="0.0017554759979248047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;2]" time="0.0016930103302001953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;3]" time="0.001775979995727539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;4]" time="0.0017075538635253906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;5]" time="0.00148773193359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;6]" time="0.0016717910766601562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;7]" time="0.0018665790557861328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;8]" time="0.006711006164550781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;9]" time="0.014117956161499023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;10]" time="0.002292156219482422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;11]" time="0.002244710922241211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;12]" time="0.00222015380859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;13]" time="0.002149343490600586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;14]" time="0.002164602279663086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;15]" time="0.0024938583374023438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;16]" time="0.002668619155883789"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.008944034576416016"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.003571748733520508"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.023557186126708984"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.02657604217529297"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.03511190414428711"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.03490424156188965"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.009233236312866211"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.004605770111083984"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.03523540496826172"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.0478060245513916"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.14672493934631348"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.039061784744262695"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.024617910385131836"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.007544517517089844"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.033325910568237305"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.05476951599121094"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.060018301010131836"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.08466124534606934"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.033522844314575195"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.0077288150787353516"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.20006966590881348"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.11327862739562988"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.38068366050720215"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.09545731544494629"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.010358333587646484"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.006545066833496094"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.3879878520965576"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.6472945213317871"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="3.2596957683563232"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.21856403350830078"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.010459423065185547"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.005134105682373047"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.024045228958129883"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.028919458389282227"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.03520369529724121"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.038033485412597656"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.009904861450195312"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.004914999008178711"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.03671145439147949"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.0498960018157959"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.1513516902923584"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.0405731201171875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.025373220443725586"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.00740361213684082"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.03432869911193848"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.05312156677246094"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.059110403060913086"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.08202648162841797"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.03360939025878906"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.0072176456451416016"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.19140934944152832"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.11102175712585449"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.37513208389282227"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.09482717514038086"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.010617733001708984"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.007147312164306641"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.41280436515808105"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.6582338809967041"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="3.224889039993286"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.19542598724365234"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.009604215621948242"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.004457950592041016"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.02219390869140625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.024980545043945312"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.03334808349609375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.03284192085266113"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.00890970230102539"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.004317760467529297"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.03339219093322754"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.044826507568359375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.1358630657196045"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.036509037017822266"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.023337841033935547"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.006819248199462891"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.03119373321533203"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.04977989196777344"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.056389570236206055"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.07824349403381348"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.031339168548583984"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.00699615478515625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.1856827735900879"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.1041860580444336"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.35014891624450684"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.08738160133361816"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.009438037872314453"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.006240129470825195"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.36935949325561523"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.588892936706543"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="3.078328847885132"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.19063305854797363"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.009559392929077148"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.0044748783111572266"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.02187347412109375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.025053977966308594"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.03275942802429199"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.03285670280456543"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.008911609649658203"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.004215240478515625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.0329740047454834"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.044740915298461914"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.13965392112731934"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.0362093448638916"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.022556781768798828"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.006782054901123047"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.031598806381225586"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.04996776580810547"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.055274009704589844"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.07772254943847656"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.03193807601928711"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.006788015365600586"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.18274974822998047"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.1025853157043457"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.3810725212097168"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.0879979133605957"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.009622573852539062"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.005303144454956055"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.3527553081512451"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.6063132286071777"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="3.078808069229126"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.19438838958740234"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.009369373321533203"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.004593372344970703"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.022284984588623047"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.024737834930419922"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.03267335891723633"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.03344321250915527"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.008878231048583984"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.0043680667877197266"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.03356480598449707"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.046038150787353516"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.14227557182312012"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.036295175552368164"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.022922039031982422"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.007010459899902344"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.03180742263793945"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.05360531806945801"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.055542707443237305"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.07866072654724121"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.031117916107177734"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.007162809371948242"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.18622255325317383"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.1037752628326416"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.3565788269042969"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.08796548843383789"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.009422540664672852"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.0061855316162109375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.3710594177246094"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.606736421585083"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="3.132685899734497"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.194122314453125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.009510040283203125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.00457763671875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.022150516510009766"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.024653196334838867"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.03308844566345215"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.03381633758544922"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.00900888442993164"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.004370689392089844"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.033689022064208984"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.045191287994384766"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.13829994201660156"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.0362856388092041"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.022752761840820312"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.0068781375885009766"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.03152799606323242"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.05019426345825195"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.05664229393005371"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.07919931411743164"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.03174996376037598"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.006914615631103516"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.18364167213439941"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.10418438911437988"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.35080647468566895"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.08666396141052246"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.009419441223144531"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.006035804748535156"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.37595057487487793"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.606081485748291"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="3.146843433380127"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.1933603286743164"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.009451627731323242"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.004492521286010742"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.021953821182250977"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.024721384048461914"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.03267693519592285"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.03222846984863281"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.008664846420288086"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.00426173210144043"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.033232688903808594"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.04499959945678711"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.13738536834716797"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.03639650344848633"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.022478342056274414"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.006863832473754883"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.03165125846862793"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.05025291442871094"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.055672645568847656"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.07834863662719727"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.03156685829162598"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.007021427154541016"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.1813039779663086"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.10604238510131836"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.3496968746185303"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.0875086784362793"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.009571075439453125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.0052204132080078125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.35633420944213867"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.610278844833374"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="3.108010768890381"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.19220376014709473"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.009418487548828125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.004650115966796875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.02196359634399414"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.02456355094909668"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.03288531303405762"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.03304123878479004"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.008722066879272461"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.004232168197631836"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.03349423408508301"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.044823646545410156"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.1377718448638916"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.03630256652832031"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.022681474685668945"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.006867408752441406"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.03122234344482422"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.05131220817565918"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.05621027946472168"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.07915329933166504"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.03199934959411621"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.007163524627685547"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.18555974960327148"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.10605072975158691"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.35834312438964844"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.08925771713256836"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.009776592254638672"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.006144285202026367"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.37546801567077637"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.6151754856109619"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="3.1422417163848877"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.19349956512451172"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.00946950912475586"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.004456281661987305"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.02182459831237793"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.02453446388244629"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.03232383728027344"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.032178640365600586"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.008667707443237305"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.004303455352783203"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.033159494400024414"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.044892072677612305"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.13988423347473145"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.036212921142578125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.022655487060546875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.006842851638793945"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.03139948844909668"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.051409006118774414"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.05633664131164551"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.07892751693725586"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.03218269348144531"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.007103443145751953"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.18192148208618164"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.10256791114807129"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.3421337604522705"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.08864855766296387"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.00926065444946289"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.006184816360473633"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.3723909854888916"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.6104717254638672"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="3.141932964324951"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.19455766677856445"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;0]" time="0.10623502731323242"><system-err>14:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:58 DiffusionOperatorP1: Determine global dofs ...
14:58 DiffusionOperatorP1: Boundary treatment ...
14:58 DiffusionOperatorP1: Assemble system matrix ...
14:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:58 DiffusionOperatorP1: Determine global dofs ...
14:58 DiffusionOperatorP1: Boundary treatment ...
14:58 DiffusionOperatorP1: Assemble system matrix ...
14:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:58 DiffusionOperatorP1: Determine global dofs ...
14:58 DiffusionOperatorP1: Boundary treatment ...
14:58 DiffusionOperatorP1: Assemble system matrix ...
14:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:58 DiffusionOperatorP1: Determine global dofs ...
14:58 DiffusionOperatorP1: Boundary treatment ...
14:58 DiffusionOperatorP1: Assemble system matrix ...
14:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:58 DiffusionOperatorP1: Determine global dofs ...
14:58 DiffusionOperatorP1: Boundary treatment ...
14:58 DiffusionOperatorP1: Assemble system matrix ...
14:58 L2ProductP1: Integrate the products of the shape functions on each element
14:58 L2ProductP1: Determine global dofs ...
14:58 L2ProductP1: Boundary treatment ...
14:58 L2ProductP1: Assemble system matrix ...
14:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:58 DiffusionOperatorP1: Determine global dofs ...
14:58 DiffusionOperatorP1: Boundary treatment ...
14:58 DiffusionOperatorP1: Assemble system matrix ...
14:58 L2ProductP1: Integrate the products of the shape functions on each element
14:58 L2ProductP1: Determine global dofs ...
14:58 L2ProductP1: Boundary treatment ...
14:58 L2ProductP1: Assemble system matrix ...
14:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:58 DiffusionOperatorP1: Determine global dofs ...
14:58 DiffusionOperatorP1: Boundary treatment ...
14:58 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;1]" time="0.07300519943237305"><system-err>14:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:58 DiffusionOperatorP1: Determine global dofs ...
14:58 DiffusionOperatorP1: Boundary treatment ...
14:58 DiffusionOperatorP1: Assemble system matrix ...
14:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:58 DiffusionOperatorP1: Determine global dofs ...
14:58 DiffusionOperatorP1: Boundary treatment ...
14:58 DiffusionOperatorP1: Assemble system matrix ...
14:58 L2ProductP1: Integrate the products of the shape functions on each element
14:58 L2ProductP1: Determine global dofs ...
14:58 L2ProductP1: Boundary treatment ...
14:58 L2ProductP1: Assemble system matrix ...
14:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:58 DiffusionOperatorP1: Determine global dofs ...
14:58 DiffusionOperatorP1: Boundary treatment ...
14:58 DiffusionOperatorP1: Assemble system matrix ...
14:58 L2ProductP1: Integrate the products of the shape functions on each element
14:58 L2ProductP1: Determine global dofs ...
14:58 L2ProductP1: Boundary treatment ...
14:58 L2ProductP1: Assemble system matrix ...
14:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:58 DiffusionOperatorP1: Determine global dofs ...
14:58 DiffusionOperatorP1: Boundary treatment ...
14:58 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;2]" time="0.07919526100158691"><system-err>14:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:58 DiffusionOperatorP1: Determine global dofs ...
14:58 DiffusionOperatorP1: Boundary treatment ...
14:58 DiffusionOperatorP1: Assemble system matrix ...
14:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:58 DiffusionOperatorP1: Determine global dofs ...
14:58 DiffusionOperatorP1: Boundary treatment ...
14:58 DiffusionOperatorP1: Assemble system matrix ...
14:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:58 DiffusionOperatorP1: Determine global dofs ...
14:58 DiffusionOperatorP1: Boundary treatment ...
14:58 DiffusionOperatorP1: Assemble system matrix ...
14:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:58 DiffusionOperatorP1: Determine global dofs ...
14:58 DiffusionOperatorP1: Boundary treatment ...
14:58 DiffusionOperatorP1: Assemble system matrix ...
14:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:58 DiffusionOperatorP1: Determine global dofs ...
14:58 DiffusionOperatorP1: Boundary treatment ...
14:58 DiffusionOperatorP1: Assemble system matrix ...
14:58 L2ProductP1: Integrate the products of the shape functions on each element
14:58 L2ProductP1: Determine global dofs ...
14:58 L2ProductP1: Boundary treatment ...
14:58 L2ProductP1: Assemble system matrix ...
14:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:58 DiffusionOperatorP1: Determine global dofs ...
14:58 DiffusionOperatorP1: Boundary treatment ...
14:58 DiffusionOperatorP1: Assemble system matrix ...
14:58 L2ProductP1: Integrate the products of the shape functions on each element
14:58 L2ProductP1: Determine global dofs ...
14:58 L2ProductP1: Boundary treatment ...
14:58 L2ProductP1: Assemble system matrix ...
14:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:58 DiffusionOperatorP1: Determine global dofs ...
14:58 DiffusionOperatorP1: Boundary treatment ...
14:58 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;3]" time="0.07526063919067383"><system-err>14:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:58 DiffusionOperatorP1: Determine global dofs ...
14:58 DiffusionOperatorP1: Boundary treatment ...
14:58 DiffusionOperatorP1: Assemble system matrix ...
14:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:58 DiffusionOperatorP1: Determine global dofs ...
14:58 DiffusionOperatorP1: Boundary treatment ...
14:58 DiffusionOperatorP1: Assemble system matrix ...
14:58 L2ProductP1: Integrate the products of the shape functions on each element
14:58 L2ProductP1: Determine global dofs ...
14:58 L2ProductP1: Boundary treatment ...
14:58 L2ProductP1: Assemble system matrix ...
14:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:58 DiffusionOperatorP1: Determine global dofs ...
14:58 DiffusionOperatorP1: Boundary treatment ...
14:58 DiffusionOperatorP1: Assemble system matrix ...
14:58 L2ProductP1: Integrate the products of the shape functions on each element
14:58 L2ProductP1: Determine global dofs ...
14:58 L2ProductP1: Boundary treatment ...
14:58 L2ProductP1: Assemble system matrix ...
14:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:58 DiffusionOperatorP1: Determine global dofs ...
14:58 DiffusionOperatorP1: Boundary treatment ...
14:58 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;4]" time="0.08296871185302734"><system-err>14:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:58 DiffusionOperatorP1: Determine global dofs ...
14:58 DiffusionOperatorP1: Boundary treatment ...
14:58 DiffusionOperatorP1: Assemble system matrix ...
14:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:58 DiffusionOperatorP1: Determine global dofs ...
14:58 DiffusionOperatorP1: Boundary treatment ...
14:58 DiffusionOperatorP1: Assemble system matrix ...
14:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:58 DiffusionOperatorP1: Determine global dofs ...
14:58 DiffusionOperatorP1: Boundary treatment ...
14:58 DiffusionOperatorP1: Assemble system matrix ...
14:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:58 DiffusionOperatorP1: Determine global dofs ...
14:58 DiffusionOperatorP1: Boundary treatment ...
14:58 DiffusionOperatorP1: Assemble system matrix ...
14:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:58 DiffusionOperatorP1: Determine global dofs ...
14:58 DiffusionOperatorP1: Boundary treatment ...
14:58 DiffusionOperatorP1: Assemble system matrix ...
14:58 L2ProductP1: Integrate the products of the shape functions on each element
14:58 L2ProductP1: Determine global dofs ...
14:58 L2ProductP1: Boundary treatment ...
14:58 L2ProductP1: Assemble system matrix ...
14:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:58 DiffusionOperatorP1: Determine global dofs ...
14:58 DiffusionOperatorP1: Boundary treatment ...
14:58 DiffusionOperatorP1: Assemble system matrix ...
14:58 L2ProductP1: Integrate the products of the shape functions on each element
14:58 L2ProductP1: Determine global dofs ...
14:58 L2ProductP1: Boundary treatment ...
14:58 L2ProductP1: Assemble system matrix ...
14:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:58 DiffusionOperatorP1: Determine global dofs ...
14:58 DiffusionOperatorP1: Boundary treatment ...
14:58 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;5]" time="0.07417154312133789"><system-err>14:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:58 DiffusionOperatorP1: Determine global dofs ...
14:58 DiffusionOperatorP1: Boundary treatment ...
14:58 DiffusionOperatorP1: Assemble system matrix ...
14:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:58 DiffusionOperatorP1: Determine global dofs ...
14:58 DiffusionOperatorP1: Boundary treatment ...
14:58 DiffusionOperatorP1: Assemble system matrix ...
14:58 L2ProductP1: Integrate the products of the shape functions on each element
14:58 L2ProductP1: Determine global dofs ...
14:58 L2ProductP1: Boundary treatment ...
14:58 L2ProductP1: Assemble system matrix ...
14:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:58 DiffusionOperatorP1: Determine global dofs ...
14:58 DiffusionOperatorP1: Boundary treatment ...
14:58 DiffusionOperatorP1: Assemble system matrix ...
14:58 L2ProductP1: Integrate the products of the shape functions on each element
14:58 L2ProductP1: Determine global dofs ...
14:58 L2ProductP1: Boundary treatment ...
14:58 L2ProductP1: Assemble system matrix ...
14:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:58 DiffusionOperatorP1: Determine global dofs ...
14:58 DiffusionOperatorP1: Boundary treatment ...
14:58 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;6]" time="0.0799095630645752"><system-err>14:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:58 DiffusionOperatorP1: Determine global dofs ...
14:58 DiffusionOperatorP1: Boundary treatment ...
14:58 DiffusionOperatorP1: Assemble system matrix ...
14:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:58 DiffusionOperatorP1: Determine global dofs ...
14:58 DiffusionOperatorP1: Boundary treatment ...
14:58 DiffusionOperatorP1: Assemble system matrix ...
14:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:58 DiffusionOperatorP1: Determine global dofs ...
14:58 DiffusionOperatorP1: Boundary treatment ...
14:58 DiffusionOperatorP1: Assemble system matrix ...
14:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:58 DiffusionOperatorP1: Determine global dofs ...
14:58 DiffusionOperatorP1: Boundary treatment ...
14:58 DiffusionOperatorP1: Assemble system matrix ...
14:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:58 DiffusionOperatorP1: Determine global dofs ...
14:58 DiffusionOperatorP1: Boundary treatment ...
14:58 DiffusionOperatorP1: Assemble system matrix ...
14:58 L2ProductP1: Integrate the products of the shape functions on each element
14:58 L2ProductP1: Determine global dofs ...
14:58 L2ProductP1: Boundary treatment ...
14:58 L2ProductP1: Assemble system matrix ...
14:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:58 DiffusionOperatorP1: Determine global dofs ...
14:58 DiffusionOperatorP1: Boundary treatment ...
14:58 DiffusionOperatorP1: Assemble system matrix ...
14:58 L2ProductP1: Integrate the products of the shape functions on each element
14:58 L2ProductP1: Determine global dofs ...
14:58 L2ProductP1: Boundary treatment ...
14:58 L2ProductP1: Assemble system matrix ...
14:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:58 DiffusionOperatorP1: Determine global dofs ...
14:58 DiffusionOperatorP1: Boundary treatment ...
14:58 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;7]" time="0.07325053215026855"><system-err>14:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:58 DiffusionOperatorP1: Determine global dofs ...
14:58 DiffusionOperatorP1: Boundary treatment ...
14:58 DiffusionOperatorP1: Assemble system matrix ...
14:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:58 DiffusionOperatorP1: Determine global dofs ...
14:58 DiffusionOperatorP1: Boundary treatment ...
14:58 DiffusionOperatorP1: Assemble system matrix ...
14:58 L2ProductP1: Integrate the products of the shape functions on each element
14:58 L2ProductP1: Determine global dofs ...
14:58 L2ProductP1: Boundary treatment ...
14:58 L2ProductP1: Assemble system matrix ...
14:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:58 DiffusionOperatorP1: Determine global dofs ...
14:58 DiffusionOperatorP1: Boundary treatment ...
14:58 DiffusionOperatorP1: Assemble system matrix ...
14:58 L2ProductP1: Integrate the products of the shape functions on each element
14:58 L2ProductP1: Determine global dofs ...
14:58 L2ProductP1: Boundary treatment ...
14:58 L2ProductP1: Assemble system matrix ...
14:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:58 DiffusionOperatorP1: Determine global dofs ...
14:58 DiffusionOperatorP1: Boundary treatment ...
14:58 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;8]" time="0.07704567909240723"><system-err>14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 L2ProductP1: Integrate the products of the shape functions on each element
14:59 L2ProductP1: Determine global dofs ...
14:59 L2ProductP1: Boundary treatment ...
14:59 L2ProductP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 L2ProductP1: Integrate the products of the shape functions on each element
14:59 L2ProductP1: Determine global dofs ...
14:59 L2ProductP1: Boundary treatment ...
14:59 L2ProductP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;9]" time="0.07536005973815918"><system-err>14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 L2ProductP1: Integrate the products of the shape functions on each element
14:59 L2ProductP1: Determine global dofs ...
14:59 L2ProductP1: Boundary treatment ...
14:59 L2ProductP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 L2ProductP1: Integrate the products of the shape functions on each element
14:59 L2ProductP1: Determine global dofs ...
14:59 L2ProductP1: Boundary treatment ...
14:59 L2ProductP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;10]" time="0.07748794555664062"><system-err>14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 L2ProductP1: Integrate the products of the shape functions on each element
14:59 L2ProductP1: Determine global dofs ...
14:59 L2ProductP1: Boundary treatment ...
14:59 L2ProductP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 L2ProductP1: Integrate the products of the shape functions on each element
14:59 L2ProductP1: Determine global dofs ...
14:59 L2ProductP1: Boundary treatment ...
14:59 L2ProductP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;11]" time="0.07539534568786621"><system-err>14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 L2ProductP1: Integrate the products of the shape functions on each element
14:59 L2ProductP1: Determine global dofs ...
14:59 L2ProductP1: Boundary treatment ...
14:59 L2ProductP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 L2ProductP1: Integrate the products of the shape functions on each element
14:59 L2ProductP1: Determine global dofs ...
14:59 L2ProductP1: Boundary treatment ...
14:59 L2ProductP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;12]" time="0.07128524780273438"><system-err>14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 L2ProductP1: Integrate the products of the shape functions on each element
14:59 L2ProductP1: Determine global dofs ...
14:59 L2ProductP1: Boundary treatment ...
14:59 L2ProductP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 L2ProductP1: Integrate the products of the shape functions on each element
14:59 L2ProductP1: Determine global dofs ...
14:59 L2ProductP1: Boundary treatment ...
14:59 L2ProductP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;13]" time="0.06726789474487305"><system-err>14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 L2ProductP1: Integrate the products of the shape functions on each element
14:59 L2ProductP1: Determine global dofs ...
14:59 L2ProductP1: Boundary treatment ...
14:59 L2ProductP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 L2ProductP1: Integrate the products of the shape functions on each element
14:59 L2ProductP1: Determine global dofs ...
14:59 L2ProductP1: Boundary treatment ...
14:59 L2ProductP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;14]" time="0.07921218872070312"><system-err>14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 L2ProductP1: Integrate the products of the shape functions on each element
14:59 L2ProductP1: Determine global dofs ...
14:59 L2ProductP1: Boundary treatment ...
14:59 L2ProductP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 L2ProductP1: Integrate the products of the shape functions on each element
14:59 L2ProductP1: Determine global dofs ...
14:59 L2ProductP1: Boundary treatment ...
14:59 L2ProductP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;15]" time="0.07350826263427734"><system-err>14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 L2ProductP1: Integrate the products of the shape functions on each element
14:59 L2ProductP1: Determine global dofs ...
14:59 L2ProductP1: Boundary treatment ...
14:59 L2ProductP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 L2ProductP1: Integrate the products of the shape functions on each element
14:59 L2ProductP1: Determine global dofs ...
14:59 L2ProductP1: Boundary treatment ...
14:59 L2ProductP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;16]" time="0.07127261161804199"><system-err>14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 L2ProductP1: Integrate the products of the shape functions on each element
14:59 L2ProductP1: Determine global dofs ...
14:59 L2ProductP1: Boundary treatment ...
14:59 L2ProductP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 L2ProductP1: Integrate the products of the shape functions on each element
14:59 L2ProductP1: Determine global dofs ...
14:59 L2ProductP1: Boundary treatment ...
14:59 L2ProductP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;17]" time="0.06667137145996094"><system-err>14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 L2ProductP1: Integrate the products of the shape functions on each element
14:59 L2ProductP1: Determine global dofs ...
14:59 L2ProductP1: Boundary treatment ...
14:59 L2ProductP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 L2ProductP1: Integrate the products of the shape functions on each element
14:59 L2ProductP1: Determine global dofs ...
14:59 L2ProductP1: Boundary treatment ...
14:59 L2ProductP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;18]" time="0.07687926292419434"><system-err>14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 L2ProductP1: Integrate the products of the shape functions on each element
14:59 L2ProductP1: Determine global dofs ...
14:59 L2ProductP1: Boundary treatment ...
14:59 L2ProductP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 L2ProductP1: Integrate the products of the shape functions on each element
14:59 L2ProductP1: Determine global dofs ...
14:59 L2ProductP1: Boundary treatment ...
14:59 L2ProductP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;19]" time="0.0766749382019043"><system-err>14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 L2ProductP1: Integrate the products of the shape functions on each element
14:59 L2ProductP1: Determine global dofs ...
14:59 L2ProductP1: Boundary treatment ...
14:59 L2ProductP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 L2ProductP1: Integrate the products of the shape functions on each element
14:59 L2ProductP1: Determine global dofs ...
14:59 L2ProductP1: Boundary treatment ...
14:59 L2ProductP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;20]" time="0.07663893699645996"><system-err>14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 L2ProductP1: Integrate the products of the shape functions on each element
14:59 L2ProductP1: Determine global dofs ...
14:59 L2ProductP1: Boundary treatment ...
14:59 L2ProductP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
14:59 L2ProductP1: Integrate the products of the shape functions on each element
14:59 L2ProductP1: Determine global dofs ...
14:59 L2ProductP1: Boundary treatment ...
14:59 L2ProductP1: Assemble system matrix ...
14:59 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
14:59 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
14:59 DiffusionOperatorP1: Determine global dofs ...
14:59 DiffusionOperatorP1: Boundary treatment ...
14:59 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;21]" time="0.0740816593170166"><system-err>15:00 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
15:00 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
15:00 DiffusionOperatorP1: Determine global dofs ...
15:00 DiffusionOperatorP1: Boundary treatment ...
15:00 DiffusionOperatorP1: Assemble system matrix ...
15:00 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
15:00 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
15:00 DiffusionOperatorP1: Determine global dofs ...
15:00 DiffusionOperatorP1: Boundary treatment ...
15:00 DiffusionOperatorP1: Assemble system matrix ...
15:00 L2ProductP1: Integrate the products of the shape functions on each element
15:00 L2ProductP1: Determine global dofs ...
15:00 L2ProductP1: Boundary treatment ...
15:00 L2ProductP1: Assemble system matrix ...
15:00 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
15:00 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
15:00 DiffusionOperatorP1: Determine global dofs ...
15:00 DiffusionOperatorP1: Boundary treatment ...
15:00 DiffusionOperatorP1: Assemble system matrix ...
15:00 L2ProductP1: Integrate the products of the shape functions on each element
15:00 L2ProductP1: Determine global dofs ...
15:00 L2ProductP1: Boundary treatment ...
15:00 L2ProductP1: Assemble system matrix ...
15:00 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
15:00 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
15:00 DiffusionOperatorP1: Determine global dofs ...
15:00 DiffusionOperatorP1: Boundary treatment ...
15:00 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;22]" time="0.07675743103027344"><system-err>15:00 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
15:00 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
15:00 DiffusionOperatorP1: Determine global dofs ...
15:00 DiffusionOperatorP1: Boundary treatment ...
15:00 DiffusionOperatorP1: Assemble system matrix ...
15:00 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
15:00 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
15:00 DiffusionOperatorP1: Determine global dofs ...
15:00 DiffusionOperatorP1: Boundary treatment ...
15:00 DiffusionOperatorP1: Assemble system matrix ...
15:00 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
15:00 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
15:00 DiffusionOperatorP1: Determine global dofs ...
15:00 DiffusionOperatorP1: Boundary treatment ...
15:00 DiffusionOperatorP1: Assemble system matrix ...
15:00 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
15:00 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
15:00 DiffusionOperatorP1: Determine global dofs ...
15:00 DiffusionOperatorP1: Boundary treatment ...
15:00 DiffusionOperatorP1: Assemble system matrix ...
15:00 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
15:00 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
15:00 DiffusionOperatorP1: Determine global dofs ...
15:00 DiffusionOperatorP1: Boundary treatment ...
15:00 DiffusionOperatorP1: Assemble system matrix ...
15:00 L2ProductP1: Integrate the products of the shape functions on each element
15:00 L2ProductP1: Determine global dofs ...
15:00 L2ProductP1: Boundary treatment ...
15:00 L2ProductP1: Assemble system matrix ...
15:00 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
15:00 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
15:00 DiffusionOperatorP1: Determine global dofs ...
15:00 DiffusionOperatorP1: Boundary treatment ...
15:00 DiffusionOperatorP1: Assemble system matrix ...
15:00 L2ProductP1: Integrate the products of the shape functions on each element
15:00 L2ProductP1: Determine global dofs ...
15:00 L2ProductP1: Boundary treatment ...
15:00 L2ProductP1: Assemble system matrix ...
15:00 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
15:00 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
15:00 DiffusionOperatorP1: Determine global dofs ...
15:00 DiffusionOperatorP1: Boundary treatment ...
15:00 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;23]" time="0.0740048885345459"><system-err>15:00 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
15:00 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
15:00 DiffusionOperatorP1: Determine global dofs ...
15:00 DiffusionOperatorP1: Boundary treatment ...
15:00 DiffusionOperatorP1: Assemble system matrix ...
15:00 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
15:00 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
15:00 DiffusionOperatorP1: Determine global dofs ...
15:00 DiffusionOperatorP1: Boundary treatment ...
15:00 DiffusionOperatorP1: Assemble system matrix ...
15:00 L2ProductP1: Integrate the products of the shape functions on each element
15:00 L2ProductP1: Determine global dofs ...
15:00 L2ProductP1: Boundary treatment ...
15:00 L2ProductP1: Assemble system matrix ...
15:00 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
15:00 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
15:00 DiffusionOperatorP1: Determine global dofs ...
15:00 DiffusionOperatorP1: Boundary treatment ...
15:00 DiffusionOperatorP1: Assemble system matrix ...
15:00 L2ProductP1: Integrate the products of the shape functions on each element
15:00 L2ProductP1: Determine global dofs ...
15:00 L2ProductP1: Boundary treatment ...
15:00 L2ProductP1: Assemble system matrix ...
15:00 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
15:00 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
15:00 DiffusionOperatorP1: Determine global dofs ...
15:00 DiffusionOperatorP1: Boundary treatment ...
15:00 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;24]" time="0.05271172523498535"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;25]" time="0.05359077453613281"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;26]" time="0.05266070365905762"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;27]" time="0.04726576805114746"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;28]" time="0.04814434051513672"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;29]" time="0.04764246940612793"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;30]" time="0.04668426513671875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;31]" time="0.048140764236450195"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;32]" time="0.1611924171447754"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;33]" time="0.12003970146179199"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;34]" time="0.04966592788696289"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;35]" time="0.11901712417602539"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;36]" time="0.051256418228149414"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;0]" time="0.017742633819580078"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;1]" time="0.018950700759887695"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;2]" time="0.13960599899291992"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;3]" time="0.2187509536743164"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;4]" time="0.03912949562072754"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;5]" time="0.015597820281982422"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;6]" time="0.01575160026550293"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;7]" time="0.23833131790161133"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;8]" time="1.546994686126709"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;9]" time="0.2581052780151367"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;10]" time="0.03468656539916992"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;11]" time="0.40448832511901855"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;12]" time="0.06116437911987305"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;13]" time="0.23097443580627441"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;14]" time="0.40566229820251465"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;15]" time="0.6901297569274902"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;16]" time="0.772350549697876"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;17]" time="0.05128359794616699"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;18]" time="0.05185747146606445"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;19]" time="1.5620415210723877"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;20]" time="4.696244478225708"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;21]" time="10.66115689277649"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;22]" time="0.016672372817993164"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;23]" time="0.016828536987304688"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;24]" time="3.7259676456451416"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;25]" time="51.69525933265686"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;26]" time="7.63101053237915"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;0]" time="0.016592741012573242"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;1]" time="0.01768350601196289"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;2]" time="0.13622808456420898"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;3]" time="0.21881341934204102"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;4]" time="0.04123044013977051"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;5]" time="0.014886856079101562"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;6]" time="0.014575958251953125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;7]" time="0.23582983016967773"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;8]" time="1.5621092319488525"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;9]" time="0.273761510848999"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;10]" time="0.03628802299499512"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;11]" time="0.4315962791442871"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;12]" time="0.06345105171203613"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;13]" time="0.23526430130004883"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;14]" time="0.4040951728820801"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;15]" time="0.6983985900878906"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;16]" time="0.7938399314880371"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;17]" time="0.05357170104980469"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;18]" time="0.0491480827331543"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;19]" time="1.5405259132385254"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;20]" time="4.793616056442261"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;21]" time="11.00487732887268"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;22]" time="0.01666879653930664"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;23]" time="0.016873836517333984"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;24]" time="3.7771992683410645"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;25]" time="51.89821124076843"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;26]" time="7.433490753173828"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;0]" time="0.01780080795288086"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;1]" time="0.01927351951599121"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;2]" time="0.1439218521118164"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;3]" time="0.2236616611480713"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;4]" time="0.03946423530578613"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;5]" time="0.015997648239135742"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;6]" time="0.015413045883178711"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;7]" time="0.23134446144104004"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;8]" time="1.5555896759033203"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;9]" time="0.25949835777282715"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;10]" time="0.03534436225891113"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;11]" time="0.39785051345825195"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;12]" time="0.05866527557373047"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;13]" time="0.21914887428283691"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;14]" time="0.38762402534484863"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;15]" time="0.6528809070587158"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;16]" time="0.7333121299743652"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;17]" time="0.047363996505737305"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;18]" time="0.047736406326293945"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;19]" time="1.4545526504516602"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;20]" time="4.622508764266968"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;21]" time="11.058030366897583"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;22]" time="0.016815185546875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;23]" time="0.017333030700683594"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;24]" time="3.819978952407837"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;25]" time="51.96104598045349"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;26]" time="7.6772942543029785"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;0]" time="0.3291606903076172"><system-err>19:18 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:18 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:18 DiffusionOperatorP1: Determine global dofs ...
19:18 DiffusionOperatorP1: Boundary treatment ...
19:18 DiffusionOperatorP1: Assemble system matrix ...
19:18 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:18 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:18 DiffusionOperatorP1: Determine global dofs ...
19:18 DiffusionOperatorP1: Boundary treatment ...
19:18 DiffusionOperatorP1: Assemble system matrix ...
19:18 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:18 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:18 DiffusionOperatorP1: Determine global dofs ...
19:18 DiffusionOperatorP1: Boundary treatment ...
19:18 DiffusionOperatorP1: Assemble system matrix ...
19:18 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:18 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:18 DiffusionOperatorP1: Determine global dofs ...
19:18 DiffusionOperatorP1: Boundary treatment ...
19:18 DiffusionOperatorP1: Assemble system matrix ...
19:18 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:18 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:18 DiffusionOperatorP1: Determine global dofs ...
19:18 DiffusionOperatorP1: Boundary treatment ...
19:18 DiffusionOperatorP1: Assemble system matrix ...
19:18 L2ProductP1: Integrate the products of the shape functions on each element
19:18 L2ProductP1: Determine global dofs ...
19:18 L2ProductP1: Boundary treatment ...
19:18 L2ProductP1: Assemble system matrix ...
19:18 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:18 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:18 DiffusionOperatorP1: Determine global dofs ...
19:18 DiffusionOperatorP1: Boundary treatment ...
19:18 DiffusionOperatorP1: Assemble system matrix ...
19:18 L2ProductP1: Integrate the products of the shape functions on each element
19:18 L2ProductP1: Determine global dofs ...
19:18 L2ProductP1: Boundary treatment ...
19:18 L2ProductP1: Assemble system matrix ...
19:18 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:18 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:18 DiffusionOperatorP1: Determine global dofs ...
19:18 DiffusionOperatorP1: Boundary treatment ...
19:18 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;1]" time="0.3310713768005371"><system-err>19:18 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:18 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:18 DiffusionOperatorP1: Determine global dofs ...
19:18 DiffusionOperatorP1: Boundary treatment ...
19:18 DiffusionOperatorP1: Assemble system matrix ...
19:18 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:18 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:18 DiffusionOperatorP1: Determine global dofs ...
19:18 DiffusionOperatorP1: Boundary treatment ...
19:18 DiffusionOperatorP1: Assemble system matrix ...
19:18 L2ProductP1: Integrate the products of the shape functions on each element
19:18 L2ProductP1: Determine global dofs ...
19:18 L2ProductP1: Boundary treatment ...
19:18 L2ProductP1: Assemble system matrix ...
19:18 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:18 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:18 DiffusionOperatorP1: Determine global dofs ...
19:18 DiffusionOperatorP1: Boundary treatment ...
19:18 DiffusionOperatorP1: Assemble system matrix ...
19:18 L2ProductP1: Integrate the products of the shape functions on each element
19:18 L2ProductP1: Determine global dofs ...
19:18 L2ProductP1: Boundary treatment ...
19:18 L2ProductP1: Assemble system matrix ...
19:18 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:18 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:18 DiffusionOperatorP1: Determine global dofs ...
19:18 DiffusionOperatorP1: Boundary treatment ...
19:18 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;2]" time="0.3324105739593506"><system-err>19:18 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:18 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:18 DiffusionOperatorP1: Determine global dofs ...
19:18 DiffusionOperatorP1: Boundary treatment ...
19:18 DiffusionOperatorP1: Assemble system matrix ...
19:18 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:18 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:18 DiffusionOperatorP1: Determine global dofs ...
19:18 DiffusionOperatorP1: Boundary treatment ...
19:18 DiffusionOperatorP1: Assemble system matrix ...
19:18 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:18 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:18 DiffusionOperatorP1: Determine global dofs ...
19:18 DiffusionOperatorP1: Boundary treatment ...
19:18 DiffusionOperatorP1: Assemble system matrix ...
19:18 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:18 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:18 DiffusionOperatorP1: Determine global dofs ...
19:18 DiffusionOperatorP1: Boundary treatment ...
19:18 DiffusionOperatorP1: Assemble system matrix ...
19:18 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:18 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:18 DiffusionOperatorP1: Determine global dofs ...
19:18 DiffusionOperatorP1: Boundary treatment ...
19:18 DiffusionOperatorP1: Assemble system matrix ...
19:18 L2ProductP1: Integrate the products of the shape functions on each element
19:18 L2ProductP1: Determine global dofs ...
19:18 L2ProductP1: Boundary treatment ...
19:18 L2ProductP1: Assemble system matrix ...
19:18 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:18 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:18 DiffusionOperatorP1: Determine global dofs ...
19:18 DiffusionOperatorP1: Boundary treatment ...
19:18 DiffusionOperatorP1: Assemble system matrix ...
19:18 L2ProductP1: Integrate the products of the shape functions on each element
19:18 L2ProductP1: Determine global dofs ...
19:18 L2ProductP1: Boundary treatment ...
19:18 L2ProductP1: Assemble system matrix ...
19:18 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:18 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:18 DiffusionOperatorP1: Determine global dofs ...
19:18 DiffusionOperatorP1: Boundary treatment ...
19:18 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;3]" time="0.3290393352508545"><system-err>19:19 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:19 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:19 DiffusionOperatorP1: Determine global dofs ...
19:19 DiffusionOperatorP1: Boundary treatment ...
19:19 DiffusionOperatorP1: Assemble system matrix ...
19:19 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:19 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:19 DiffusionOperatorP1: Determine global dofs ...
19:19 DiffusionOperatorP1: Boundary treatment ...
19:19 DiffusionOperatorP1: Assemble system matrix ...
19:19 L2ProductP1: Integrate the products of the shape functions on each element
19:19 L2ProductP1: Determine global dofs ...
19:19 L2ProductP1: Boundary treatment ...
19:19 L2ProductP1: Assemble system matrix ...
19:19 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:19 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:19 DiffusionOperatorP1: Determine global dofs ...
19:19 DiffusionOperatorP1: Boundary treatment ...
19:19 DiffusionOperatorP1: Assemble system matrix ...
19:19 L2ProductP1: Integrate the products of the shape functions on each element
19:19 L2ProductP1: Determine global dofs ...
19:19 L2ProductP1: Boundary treatment ...
19:19 L2ProductP1: Assemble system matrix ...
19:19 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:19 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:19 DiffusionOperatorP1: Determine global dofs ...
19:19 DiffusionOperatorP1: Boundary treatment ...
19:19 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;4]" time="0.32903027534484863"><system-err>19:19 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:19 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:19 DiffusionOperatorP1: Determine global dofs ...
19:19 DiffusionOperatorP1: Boundary treatment ...
19:19 DiffusionOperatorP1: Assemble system matrix ...
19:19 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:19 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:19 DiffusionOperatorP1: Determine global dofs ...
19:19 DiffusionOperatorP1: Boundary treatment ...
19:19 DiffusionOperatorP1: Assemble system matrix ...
19:19 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:19 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:19 DiffusionOperatorP1: Determine global dofs ...
19:19 DiffusionOperatorP1: Boundary treatment ...
19:19 DiffusionOperatorP1: Assemble system matrix ...
19:19 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:19 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:19 DiffusionOperatorP1: Determine global dofs ...
19:19 DiffusionOperatorP1: Boundary treatment ...
19:19 DiffusionOperatorP1: Assemble system matrix ...
19:19 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:19 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:19 DiffusionOperatorP1: Determine global dofs ...
19:19 DiffusionOperatorP1: Boundary treatment ...
19:19 DiffusionOperatorP1: Assemble system matrix ...
19:19 L2ProductP1: Integrate the products of the shape functions on each element
19:19 L2ProductP1: Determine global dofs ...
19:19 L2ProductP1: Boundary treatment ...
19:19 L2ProductP1: Assemble system matrix ...
19:19 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:19 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:19 DiffusionOperatorP1: Determine global dofs ...
19:19 DiffusionOperatorP1: Boundary treatment ...
19:19 DiffusionOperatorP1: Assemble system matrix ...
19:19 L2ProductP1: Integrate the products of the shape functions on each element
19:19 L2ProductP1: Determine global dofs ...
19:19 L2ProductP1: Boundary treatment ...
19:19 L2ProductP1: Assemble system matrix ...
19:19 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:19 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:19 DiffusionOperatorP1: Determine global dofs ...
19:19 DiffusionOperatorP1: Boundary treatment ...
19:19 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;5]" time="0.33522987365722656"><system-err>19:19 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:19 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:19 DiffusionOperatorP1: Determine global dofs ...
19:19 DiffusionOperatorP1: Boundary treatment ...
19:19 DiffusionOperatorP1: Assemble system matrix ...
19:19 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:19 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:19 DiffusionOperatorP1: Determine global dofs ...
19:19 DiffusionOperatorP1: Boundary treatment ...
19:19 DiffusionOperatorP1: Assemble system matrix ...
19:19 L2ProductP1: Integrate the products of the shape functions on each element
19:19 L2ProductP1: Determine global dofs ...
19:19 L2ProductP1: Boundary treatment ...
19:19 L2ProductP1: Assemble system matrix ...
19:19 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:19 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:19 DiffusionOperatorP1: Determine global dofs ...
19:19 DiffusionOperatorP1: Boundary treatment ...
19:19 DiffusionOperatorP1: Assemble system matrix ...
19:19 L2ProductP1: Integrate the products of the shape functions on each element
19:19 L2ProductP1: Determine global dofs ...
19:19 L2ProductP1: Boundary treatment ...
19:19 L2ProductP1: Assemble system matrix ...
19:19 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:19 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:19 DiffusionOperatorP1: Determine global dofs ...
19:19 DiffusionOperatorP1: Boundary treatment ...
19:19 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;6]" time="0.3133699893951416"><system-err>19:20 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:20 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:20 DiffusionOperatorP1: Determine global dofs ...
19:20 DiffusionOperatorP1: Boundary treatment ...
19:20 DiffusionOperatorP1: Assemble system matrix ...
19:20 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:20 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:20 DiffusionOperatorP1: Determine global dofs ...
19:20 DiffusionOperatorP1: Boundary treatment ...
19:20 DiffusionOperatorP1: Assemble system matrix ...
19:20 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:20 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:20 DiffusionOperatorP1: Determine global dofs ...
19:20 DiffusionOperatorP1: Boundary treatment ...
19:20 DiffusionOperatorP1: Assemble system matrix ...
19:20 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:20 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:20 DiffusionOperatorP1: Determine global dofs ...
19:20 DiffusionOperatorP1: Boundary treatment ...
19:20 DiffusionOperatorP1: Assemble system matrix ...
19:20 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:20 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:20 DiffusionOperatorP1: Determine global dofs ...
19:20 DiffusionOperatorP1: Boundary treatment ...
19:20 DiffusionOperatorP1: Assemble system matrix ...
19:20 L2ProductP1: Integrate the products of the shape functions on each element
19:20 L2ProductP1: Determine global dofs ...
19:20 L2ProductP1: Boundary treatment ...
19:20 L2ProductP1: Assemble system matrix ...
19:20 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:20 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:20 DiffusionOperatorP1: Determine global dofs ...
19:20 DiffusionOperatorP1: Boundary treatment ...
19:20 DiffusionOperatorP1: Assemble system matrix ...
19:20 L2ProductP1: Integrate the products of the shape functions on each element
19:20 L2ProductP1: Determine global dofs ...
19:20 L2ProductP1: Boundary treatment ...
19:20 L2ProductP1: Assemble system matrix ...
19:20 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:20 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:20 DiffusionOperatorP1: Determine global dofs ...
19:20 DiffusionOperatorP1: Boundary treatment ...
19:20 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;7]" time="0.31779026985168457"><system-err>19:20 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:20 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:20 DiffusionOperatorP1: Determine global dofs ...
19:20 DiffusionOperatorP1: Boundary treatment ...
19:20 DiffusionOperatorP1: Assemble system matrix ...
19:20 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:20 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:20 DiffusionOperatorP1: Determine global dofs ...
19:20 DiffusionOperatorP1: Boundary treatment ...
19:20 DiffusionOperatorP1: Assemble system matrix ...
19:20 L2ProductP1: Integrate the products of the shape functions on each element
19:20 L2ProductP1: Determine global dofs ...
19:20 L2ProductP1: Boundary treatment ...
19:20 L2ProductP1: Assemble system matrix ...
19:20 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:20 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:20 DiffusionOperatorP1: Determine global dofs ...
19:20 DiffusionOperatorP1: Boundary treatment ...
19:20 DiffusionOperatorP1: Assemble system matrix ...
19:20 L2ProductP1: Integrate the products of the shape functions on each element
19:20 L2ProductP1: Determine global dofs ...
19:20 L2ProductP1: Boundary treatment ...
19:20 L2ProductP1: Assemble system matrix ...
19:20 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:20 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:20 DiffusionOperatorP1: Determine global dofs ...
19:20 DiffusionOperatorP1: Boundary treatment ...
19:20 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;8]" time="0.3197367191314697"><system-err>19:20 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:20 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:20 DiffusionOperatorP1: Determine global dofs ...
19:20 DiffusionOperatorP1: Boundary treatment ...
19:20 DiffusionOperatorP1: Assemble system matrix ...
19:20 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:20 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:20 DiffusionOperatorP1: Determine global dofs ...
19:20 DiffusionOperatorP1: Boundary treatment ...
19:20 DiffusionOperatorP1: Assemble system matrix ...
19:20 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:20 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:20 DiffusionOperatorP1: Determine global dofs ...
19:20 DiffusionOperatorP1: Boundary treatment ...
19:20 DiffusionOperatorP1: Assemble system matrix ...
19:20 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:20 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:20 DiffusionOperatorP1: Determine global dofs ...
19:20 DiffusionOperatorP1: Boundary treatment ...
19:20 DiffusionOperatorP1: Assemble system matrix ...
19:20 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:20 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:20 DiffusionOperatorP1: Determine global dofs ...
19:20 DiffusionOperatorP1: Boundary treatment ...
19:20 DiffusionOperatorP1: Assemble system matrix ...
19:20 L2ProductP1: Integrate the products of the shape functions on each element
19:20 L2ProductP1: Determine global dofs ...
19:20 L2ProductP1: Boundary treatment ...
19:20 L2ProductP1: Assemble system matrix ...
19:20 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:20 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:20 DiffusionOperatorP1: Determine global dofs ...
19:20 DiffusionOperatorP1: Boundary treatment ...
19:20 DiffusionOperatorP1: Assemble system matrix ...
19:20 L2ProductP1: Integrate the products of the shape functions on each element
19:20 L2ProductP1: Determine global dofs ...
19:20 L2ProductP1: Boundary treatment ...
19:20 L2ProductP1: Assemble system matrix ...
19:20 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:20 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:20 DiffusionOperatorP1: Determine global dofs ...
19:20 DiffusionOperatorP1: Boundary treatment ...
19:20 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;9]" time="0.32361865043640137"><system-err>19:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:21 DiffusionOperatorP1: Determine global dofs ...
19:21 DiffusionOperatorP1: Boundary treatment ...
19:21 DiffusionOperatorP1: Assemble system matrix ...
19:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:21 DiffusionOperatorP1: Determine global dofs ...
19:21 DiffusionOperatorP1: Boundary treatment ...
19:21 DiffusionOperatorP1: Assemble system matrix ...
19:21 L2ProductP1: Integrate the products of the shape functions on each element
19:21 L2ProductP1: Determine global dofs ...
19:21 L2ProductP1: Boundary treatment ...
19:21 L2ProductP1: Assemble system matrix ...
19:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:21 DiffusionOperatorP1: Determine global dofs ...
19:21 DiffusionOperatorP1: Boundary treatment ...
19:21 DiffusionOperatorP1: Assemble system matrix ...
19:21 L2ProductP1: Integrate the products of the shape functions on each element
19:21 L2ProductP1: Determine global dofs ...
19:21 L2ProductP1: Boundary treatment ...
19:21 L2ProductP1: Assemble system matrix ...
19:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:21 DiffusionOperatorP1: Determine global dofs ...
19:21 DiffusionOperatorP1: Boundary treatment ...
19:21 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;10]" time="0.32249879837036133"><system-err>19:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:21 DiffusionOperatorP1: Determine global dofs ...
19:21 DiffusionOperatorP1: Boundary treatment ...
19:21 DiffusionOperatorP1: Assemble system matrix ...
19:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:21 DiffusionOperatorP1: Determine global dofs ...
19:21 DiffusionOperatorP1: Boundary treatment ...
19:21 DiffusionOperatorP1: Assemble system matrix ...
19:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:21 DiffusionOperatorP1: Determine global dofs ...
19:21 DiffusionOperatorP1: Boundary treatment ...
19:21 DiffusionOperatorP1: Assemble system matrix ...
19:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:21 DiffusionOperatorP1: Determine global dofs ...
19:21 DiffusionOperatorP1: Boundary treatment ...
19:21 DiffusionOperatorP1: Assemble system matrix ...
19:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:21 DiffusionOperatorP1: Determine global dofs ...
19:21 DiffusionOperatorP1: Boundary treatment ...
19:21 DiffusionOperatorP1: Assemble system matrix ...
19:21 L2ProductP1: Integrate the products of the shape functions on each element
19:21 L2ProductP1: Determine global dofs ...
19:21 L2ProductP1: Boundary treatment ...
19:21 L2ProductP1: Assemble system matrix ...
19:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:21 DiffusionOperatorP1: Determine global dofs ...
19:21 DiffusionOperatorP1: Boundary treatment ...
19:21 DiffusionOperatorP1: Assemble system matrix ...
19:21 L2ProductP1: Integrate the products of the shape functions on each element
19:21 L2ProductP1: Determine global dofs ...
19:21 L2ProductP1: Boundary treatment ...
19:21 L2ProductP1: Assemble system matrix ...
19:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:21 DiffusionOperatorP1: Determine global dofs ...
19:21 DiffusionOperatorP1: Boundary treatment ...
19:21 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;11]" time="0.3299992084503174"><system-err>19:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:21 DiffusionOperatorP1: Determine global dofs ...
19:21 DiffusionOperatorP1: Boundary treatment ...
19:21 DiffusionOperatorP1: Assemble system matrix ...
19:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:21 DiffusionOperatorP1: Determine global dofs ...
19:21 DiffusionOperatorP1: Boundary treatment ...
19:21 DiffusionOperatorP1: Assemble system matrix ...
19:21 L2ProductP1: Integrate the products of the shape functions on each element
19:21 L2ProductP1: Determine global dofs ...
19:21 L2ProductP1: Boundary treatment ...
19:21 L2ProductP1: Assemble system matrix ...
19:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:21 DiffusionOperatorP1: Determine global dofs ...
19:21 DiffusionOperatorP1: Boundary treatment ...
19:21 DiffusionOperatorP1: Assemble system matrix ...
19:21 L2ProductP1: Integrate the products of the shape functions on each element
19:21 L2ProductP1: Determine global dofs ...
19:21 L2ProductP1: Boundary treatment ...
19:21 L2ProductP1: Assemble system matrix ...
19:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:21 DiffusionOperatorP1: Determine global dofs ...
19:21 DiffusionOperatorP1: Boundary treatment ...
19:21 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;12]" time="0.30794668197631836"><system-err>19:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:22 DiffusionOperatorP1: Determine global dofs ...
19:22 DiffusionOperatorP1: Boundary treatment ...
19:22 DiffusionOperatorP1: Assemble system matrix ...
19:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:22 DiffusionOperatorP1: Determine global dofs ...
19:22 DiffusionOperatorP1: Boundary treatment ...
19:22 DiffusionOperatorP1: Assemble system matrix ...
19:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:22 DiffusionOperatorP1: Determine global dofs ...
19:22 DiffusionOperatorP1: Boundary treatment ...
19:22 DiffusionOperatorP1: Assemble system matrix ...
19:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:22 DiffusionOperatorP1: Determine global dofs ...
19:22 DiffusionOperatorP1: Boundary treatment ...
19:22 DiffusionOperatorP1: Assemble system matrix ...
19:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:22 DiffusionOperatorP1: Determine global dofs ...
19:22 DiffusionOperatorP1: Boundary treatment ...
19:22 DiffusionOperatorP1: Assemble system matrix ...
19:22 L2ProductP1: Integrate the products of the shape functions on each element
19:22 L2ProductP1: Determine global dofs ...
19:22 L2ProductP1: Boundary treatment ...
19:22 L2ProductP1: Assemble system matrix ...
19:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:22 DiffusionOperatorP1: Determine global dofs ...
19:22 DiffusionOperatorP1: Boundary treatment ...
19:22 DiffusionOperatorP1: Assemble system matrix ...
19:22 L2ProductP1: Integrate the products of the shape functions on each element
19:22 L2ProductP1: Determine global dofs ...
19:22 L2ProductP1: Boundary treatment ...
19:22 L2ProductP1: Assemble system matrix ...
19:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:22 DiffusionOperatorP1: Determine global dofs ...
19:22 DiffusionOperatorP1: Boundary treatment ...
19:22 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;13]" time="0.30717992782592773"><system-err>19:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:22 DiffusionOperatorP1: Determine global dofs ...
19:22 DiffusionOperatorP1: Boundary treatment ...
19:22 DiffusionOperatorP1: Assemble system matrix ...
19:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:22 DiffusionOperatorP1: Determine global dofs ...
19:22 DiffusionOperatorP1: Boundary treatment ...
19:22 DiffusionOperatorP1: Assemble system matrix ...
19:22 L2ProductP1: Integrate the products of the shape functions on each element
19:22 L2ProductP1: Determine global dofs ...
19:22 L2ProductP1: Boundary treatment ...
19:22 L2ProductP1: Assemble system matrix ...
19:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:22 DiffusionOperatorP1: Determine global dofs ...
19:22 DiffusionOperatorP1: Boundary treatment ...
19:22 DiffusionOperatorP1: Assemble system matrix ...
19:22 L2ProductP1: Integrate the products of the shape functions on each element
19:22 L2ProductP1: Determine global dofs ...
19:22 L2ProductP1: Boundary treatment ...
19:22 L2ProductP1: Assemble system matrix ...
19:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:22 DiffusionOperatorP1: Determine global dofs ...
19:22 DiffusionOperatorP1: Boundary treatment ...
19:22 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;14]" time="0.3340790271759033"><system-err>19:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:22 DiffusionOperatorP1: Determine global dofs ...
19:22 DiffusionOperatorP1: Boundary treatment ...
19:22 DiffusionOperatorP1: Assemble system matrix ...
19:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:22 DiffusionOperatorP1: Determine global dofs ...
19:22 DiffusionOperatorP1: Boundary treatment ...
19:22 DiffusionOperatorP1: Assemble system matrix ...
19:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:22 DiffusionOperatorP1: Determine global dofs ...
19:22 DiffusionOperatorP1: Boundary treatment ...
19:22 DiffusionOperatorP1: Assemble system matrix ...
19:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:22 DiffusionOperatorP1: Determine global dofs ...
19:22 DiffusionOperatorP1: Boundary treatment ...
19:22 DiffusionOperatorP1: Assemble system matrix ...
19:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:22 DiffusionOperatorP1: Determine global dofs ...
19:22 DiffusionOperatorP1: Boundary treatment ...
19:22 DiffusionOperatorP1: Assemble system matrix ...
19:22 L2ProductP1: Integrate the products of the shape functions on each element
19:22 L2ProductP1: Determine global dofs ...
19:22 L2ProductP1: Boundary treatment ...
19:22 L2ProductP1: Assemble system matrix ...
19:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:22 DiffusionOperatorP1: Determine global dofs ...
19:22 DiffusionOperatorP1: Boundary treatment ...
19:22 DiffusionOperatorP1: Assemble system matrix ...
19:22 L2ProductP1: Integrate the products of the shape functions on each element
19:22 L2ProductP1: Determine global dofs ...
19:22 L2ProductP1: Boundary treatment ...
19:22 L2ProductP1: Assemble system matrix ...
19:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:22 DiffusionOperatorP1: Determine global dofs ...
19:22 DiffusionOperatorP1: Boundary treatment ...
19:22 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;15]" time="0.33084726333618164"><system-err>19:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:22 DiffusionOperatorP1: Determine global dofs ...
19:22 DiffusionOperatorP1: Boundary treatment ...
19:22 DiffusionOperatorP1: Assemble system matrix ...
19:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:22 DiffusionOperatorP1: Determine global dofs ...
19:22 DiffusionOperatorP1: Boundary treatment ...
19:22 DiffusionOperatorP1: Assemble system matrix ...
19:23 L2ProductP1: Integrate the products of the shape functions on each element
19:23 L2ProductP1: Determine global dofs ...
19:23 L2ProductP1: Boundary treatment ...
19:23 L2ProductP1: Assemble system matrix ...
19:23 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:23 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:23 DiffusionOperatorP1: Determine global dofs ...
19:23 DiffusionOperatorP1: Boundary treatment ...
19:23 DiffusionOperatorP1: Assemble system matrix ...
19:23 L2ProductP1: Integrate the products of the shape functions on each element
19:23 L2ProductP1: Determine global dofs ...
19:23 L2ProductP1: Boundary treatment ...
19:23 L2ProductP1: Assemble system matrix ...
19:23 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:23 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:23 DiffusionOperatorP1: Determine global dofs ...
19:23 DiffusionOperatorP1: Boundary treatment ...
19:23 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;16]" time="0.28436756134033203"><system-err>19:23 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:23 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:23 DiffusionOperatorP1: Determine global dofs ...
19:23 DiffusionOperatorP1: Boundary treatment ...
19:23 DiffusionOperatorP1: Assemble system matrix ...
19:23 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:23 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:23 DiffusionOperatorP1: Determine global dofs ...
19:23 DiffusionOperatorP1: Boundary treatment ...
19:23 DiffusionOperatorP1: Assemble system matrix ...
19:23 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:23 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:23 DiffusionOperatorP1: Determine global dofs ...
19:23 DiffusionOperatorP1: Boundary treatment ...
19:23 DiffusionOperatorP1: Assemble system matrix ...
19:23 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:23 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:23 DiffusionOperatorP1: Determine global dofs ...
19:23 DiffusionOperatorP1: Boundary treatment ...
19:23 DiffusionOperatorP1: Assemble system matrix ...
19:23 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:23 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:23 DiffusionOperatorP1: Determine global dofs ...
19:23 DiffusionOperatorP1: Boundary treatment ...
19:23 DiffusionOperatorP1: Assemble system matrix ...
19:23 L2ProductP1: Integrate the products of the shape functions on each element
19:23 L2ProductP1: Determine global dofs ...
19:23 L2ProductP1: Boundary treatment ...
19:23 L2ProductP1: Assemble system matrix ...
19:23 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:23 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:23 DiffusionOperatorP1: Determine global dofs ...
19:23 DiffusionOperatorP1: Boundary treatment ...
19:23 DiffusionOperatorP1: Assemble system matrix ...
19:23 L2ProductP1: Integrate the products of the shape functions on each element
19:23 L2ProductP1: Determine global dofs ...
19:23 L2ProductP1: Boundary treatment ...
19:23 L2ProductP1: Assemble system matrix ...
19:23 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:23 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:23 DiffusionOperatorP1: Determine global dofs ...
19:23 DiffusionOperatorP1: Boundary treatment ...
19:23 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;17]" time="0.27860140800476074"><system-err>19:23 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:23 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:23 DiffusionOperatorP1: Determine global dofs ...
19:23 DiffusionOperatorP1: Boundary treatment ...
19:23 DiffusionOperatorP1: Assemble system matrix ...
19:23 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:23 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:23 DiffusionOperatorP1: Determine global dofs ...
19:23 DiffusionOperatorP1: Boundary treatment ...
19:23 DiffusionOperatorP1: Assemble system matrix ...
19:23 L2ProductP1: Integrate the products of the shape functions on each element
19:23 L2ProductP1: Determine global dofs ...
19:23 L2ProductP1: Boundary treatment ...
19:23 L2ProductP1: Assemble system matrix ...
19:23 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:23 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:23 DiffusionOperatorP1: Determine global dofs ...
19:23 DiffusionOperatorP1: Boundary treatment ...
19:23 DiffusionOperatorP1: Assemble system matrix ...
19:23 L2ProductP1: Integrate the products of the shape functions on each element
19:23 L2ProductP1: Determine global dofs ...
19:23 L2ProductP1: Boundary treatment ...
19:23 L2ProductP1: Assemble system matrix ...
19:23 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:23 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:23 DiffusionOperatorP1: Determine global dofs ...
19:23 DiffusionOperatorP1: Boundary treatment ...
19:23 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;18]" time="0.3139231204986572"><system-err>19:23 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:23 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:23 DiffusionOperatorP1: Determine global dofs ...
19:23 DiffusionOperatorP1: Boundary treatment ...
19:23 DiffusionOperatorP1: Assemble system matrix ...
19:23 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:23 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:23 DiffusionOperatorP1: Determine global dofs ...
19:23 DiffusionOperatorP1: Boundary treatment ...
19:23 DiffusionOperatorP1: Assemble system matrix ...
19:23 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:23 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:23 DiffusionOperatorP1: Determine global dofs ...
19:23 DiffusionOperatorP1: Boundary treatment ...
19:23 DiffusionOperatorP1: Assemble system matrix ...
19:23 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:23 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:23 DiffusionOperatorP1: Determine global dofs ...
19:23 DiffusionOperatorP1: Boundary treatment ...
19:23 DiffusionOperatorP1: Assemble system matrix ...
19:23 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:23 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:23 DiffusionOperatorP1: Determine global dofs ...
19:23 DiffusionOperatorP1: Boundary treatment ...
19:23 DiffusionOperatorP1: Assemble system matrix ...
19:23 L2ProductP1: Integrate the products of the shape functions on each element
19:23 L2ProductP1: Determine global dofs ...
19:23 L2ProductP1: Boundary treatment ...
19:23 L2ProductP1: Assemble system matrix ...
19:23 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:23 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:23 DiffusionOperatorP1: Determine global dofs ...
19:23 DiffusionOperatorP1: Boundary treatment ...
19:23 DiffusionOperatorP1: Assemble system matrix ...
19:23 L2ProductP1: Integrate the products of the shape functions on each element
19:23 L2ProductP1: Determine global dofs ...
19:23 L2ProductP1: Boundary treatment ...
19:23 L2ProductP1: Assemble system matrix ...
19:23 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:23 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:23 DiffusionOperatorP1: Determine global dofs ...
19:23 DiffusionOperatorP1: Boundary treatment ...
19:23 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;19]" time="0.31548285484313965"><system-err>19:24 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:24 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:24 DiffusionOperatorP1: Determine global dofs ...
19:24 DiffusionOperatorP1: Boundary treatment ...
19:24 DiffusionOperatorP1: Assemble system matrix ...
19:24 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:24 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:24 DiffusionOperatorP1: Determine global dofs ...
19:24 DiffusionOperatorP1: Boundary treatment ...
19:24 DiffusionOperatorP1: Assemble system matrix ...
19:24 L2ProductP1: Integrate the products of the shape functions on each element
19:24 L2ProductP1: Determine global dofs ...
19:24 L2ProductP1: Boundary treatment ...
19:24 L2ProductP1: Assemble system matrix ...
19:24 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:24 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:24 DiffusionOperatorP1: Determine global dofs ...
19:24 DiffusionOperatorP1: Boundary treatment ...
19:24 DiffusionOperatorP1: Assemble system matrix ...
19:24 L2ProductP1: Integrate the products of the shape functions on each element
19:24 L2ProductP1: Determine global dofs ...
19:24 L2ProductP1: Boundary treatment ...
19:24 L2ProductP1: Assemble system matrix ...
19:24 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:24 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:24 DiffusionOperatorP1: Determine global dofs ...
19:24 DiffusionOperatorP1: Boundary treatment ...
19:24 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;20]" time="0.32693028450012207"><system-err>19:24 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:24 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:24 DiffusionOperatorP1: Determine global dofs ...
19:24 DiffusionOperatorP1: Boundary treatment ...
19:24 DiffusionOperatorP1: Assemble system matrix ...
19:24 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:24 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:24 DiffusionOperatorP1: Determine global dofs ...
19:24 DiffusionOperatorP1: Boundary treatment ...
19:24 DiffusionOperatorP1: Assemble system matrix ...
19:24 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:24 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:24 DiffusionOperatorP1: Determine global dofs ...
19:24 DiffusionOperatorP1: Boundary treatment ...
19:24 DiffusionOperatorP1: Assemble system matrix ...
19:24 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:24 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:24 DiffusionOperatorP1: Determine global dofs ...
19:24 DiffusionOperatorP1: Boundary treatment ...
19:24 DiffusionOperatorP1: Assemble system matrix ...
19:24 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:24 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:24 DiffusionOperatorP1: Determine global dofs ...
19:24 DiffusionOperatorP1: Boundary treatment ...
19:24 DiffusionOperatorP1: Assemble system matrix ...
19:24 L2ProductP1: Integrate the products of the shape functions on each element
19:24 L2ProductP1: Determine global dofs ...
19:24 L2ProductP1: Boundary treatment ...
19:24 L2ProductP1: Assemble system matrix ...
19:24 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:24 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:24 DiffusionOperatorP1: Determine global dofs ...
19:24 DiffusionOperatorP1: Boundary treatment ...
19:24 DiffusionOperatorP1: Assemble system matrix ...
19:24 L2ProductP1: Integrate the products of the shape functions on each element
19:24 L2ProductP1: Determine global dofs ...
19:24 L2ProductP1: Boundary treatment ...
19:24 L2ProductP1: Assemble system matrix ...
19:24 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:24 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:24 DiffusionOperatorP1: Determine global dofs ...
19:24 DiffusionOperatorP1: Boundary treatment ...
19:24 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;21]" time="0.3460404872894287"><system-err>19:24 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:24 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:24 DiffusionOperatorP1: Determine global dofs ...
19:24 DiffusionOperatorP1: Boundary treatment ...
19:24 DiffusionOperatorP1: Assemble system matrix ...
19:24 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:24 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:24 DiffusionOperatorP1: Determine global dofs ...
19:24 DiffusionOperatorP1: Boundary treatment ...
19:24 DiffusionOperatorP1: Assemble system matrix ...
19:24 L2ProductP1: Integrate the products of the shape functions on each element
19:24 L2ProductP1: Determine global dofs ...
19:24 L2ProductP1: Boundary treatment ...
19:24 L2ProductP1: Assemble system matrix ...
19:24 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:24 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:24 DiffusionOperatorP1: Determine global dofs ...
19:24 DiffusionOperatorP1: Boundary treatment ...
19:24 DiffusionOperatorP1: Assemble system matrix ...
19:24 L2ProductP1: Integrate the products of the shape functions on each element
19:24 L2ProductP1: Determine global dofs ...
19:24 L2ProductP1: Boundary treatment ...
19:24 L2ProductP1: Assemble system matrix ...
19:24 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:24 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:24 DiffusionOperatorP1: Determine global dofs ...
19:24 DiffusionOperatorP1: Boundary treatment ...
19:24 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;22]" time="0.33197665214538574"><system-err>19:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:25 DiffusionOperatorP1: Determine global dofs ...
19:25 DiffusionOperatorP1: Boundary treatment ...
19:25 DiffusionOperatorP1: Assemble system matrix ...
19:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:25 DiffusionOperatorP1: Determine global dofs ...
19:25 DiffusionOperatorP1: Boundary treatment ...
19:25 DiffusionOperatorP1: Assemble system matrix ...
19:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:25 DiffusionOperatorP1: Determine global dofs ...
19:25 DiffusionOperatorP1: Boundary treatment ...
19:25 DiffusionOperatorP1: Assemble system matrix ...
19:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:25 DiffusionOperatorP1: Determine global dofs ...
19:25 DiffusionOperatorP1: Boundary treatment ...
19:25 DiffusionOperatorP1: Assemble system matrix ...
19:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:25 DiffusionOperatorP1: Determine global dofs ...
19:25 DiffusionOperatorP1: Boundary treatment ...
19:25 DiffusionOperatorP1: Assemble system matrix ...
19:25 L2ProductP1: Integrate the products of the shape functions on each element
19:25 L2ProductP1: Determine global dofs ...
19:25 L2ProductP1: Boundary treatment ...
19:25 L2ProductP1: Assemble system matrix ...
19:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:25 DiffusionOperatorP1: Determine global dofs ...
19:25 DiffusionOperatorP1: Boundary treatment ...
19:25 DiffusionOperatorP1: Assemble system matrix ...
19:25 L2ProductP1: Integrate the products of the shape functions on each element
19:25 L2ProductP1: Determine global dofs ...
19:25 L2ProductP1: Boundary treatment ...
19:25 L2ProductP1: Assemble system matrix ...
19:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:25 DiffusionOperatorP1: Determine global dofs ...
19:25 DiffusionOperatorP1: Boundary treatment ...
19:25 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;23]" time="0.3284444808959961"><system-err>19:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:25 DiffusionOperatorP1: Determine global dofs ...
19:25 DiffusionOperatorP1: Boundary treatment ...
19:25 DiffusionOperatorP1: Assemble system matrix ...
19:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:25 DiffusionOperatorP1: Determine global dofs ...
19:25 DiffusionOperatorP1: Boundary treatment ...
19:25 DiffusionOperatorP1: Assemble system matrix ...
19:25 L2ProductP1: Integrate the products of the shape functions on each element
19:25 L2ProductP1: Determine global dofs ...
19:25 L2ProductP1: Boundary treatment ...
19:25 L2ProductP1: Assemble system matrix ...
19:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:25 DiffusionOperatorP1: Determine global dofs ...
19:25 DiffusionOperatorP1: Boundary treatment ...
19:25 DiffusionOperatorP1: Assemble system matrix ...
19:25 L2ProductP1: Integrate the products of the shape functions on each element
19:25 L2ProductP1: Determine global dofs ...
19:25 L2ProductP1: Boundary treatment ...
19:25 L2ProductP1: Assemble system matrix ...
19:25 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:25 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:25 DiffusionOperatorP1: Determine global dofs ...
19:25 DiffusionOperatorP1: Boundary treatment ...
19:25 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;24]" time="0.342498779296875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;25]" time="0.34317612648010254"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;26]" time="0.3395054340362549"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;27]" time="0.2573573589324951"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;28]" time="0.23962044715881348"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;29]" time="0.24735021591186523"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;30]" time="0.2571537494659424"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;31]" time="0.2564220428466797"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;32]" time="0.8550510406494141"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;33]" time="0.6315658092498779"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;34]" time="0.2557351589202881"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;35]" time="0.6326878070831299"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;36]" time="0.3015906810760498"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;0]" time="0.004809379577636719"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;1]" time="0.0016875267028808594"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;2]" time="0.00677800178527832"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;3]" time="0.005547046661376953"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;4]" time="0.005959987640380859"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;5]" time="0.003163576126098633"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;6]" time="0.0016448497772216797"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;7]" time="0.006546735763549805"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;8]" time="0.01264190673828125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;9]" time="0.020463228225708008"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;10]" time="0.007264852523803711"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;11]" time="0.0021686553955078125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;12]" time="0.015531063079833984"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;13]" time="0.011338233947753906"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;14]" time="0.014755964279174805"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;15]" time="0.007432460784912109"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;16]" time="0.002645254135131836"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;17]" time="0.01147007942199707"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;18]" time="0.04863095283508301"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;19]" time="0.05055975914001465"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;20]" time="0.0038421154022216797"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;21]" time="0.0028400421142578125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;22]" time="0.01657843589782715"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;23]" time="0.1247258186340332"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;24]" time="0.23796963691711426"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.0049822330474853516"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.0038661956787109375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.0059850215911865234"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.008700370788574219"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.008676290512084961"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.0064661502838134766"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.0037689208984375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.003784656524658203"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.01770639419555664"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.03581881523132324"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.11692643165588379"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.008740901947021484"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.006985187530517578"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.010386943817138672"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.008494138717651367"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.009807348251342773"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.01835036277770996"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.0165712833404541"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.005871295928955078"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.005281686782836914"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.04312849044799805"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.048111915588378906"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.1615610122680664"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.009808540344238281"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.0047686100006103516"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.004762411117553711"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.03759264945983887"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.06370377540588379"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.2228987216949463"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.0113983154296875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.005173921585083008"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.0037615299224853516"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.0059337615966796875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.008488893508911133"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.008707523345947266"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.006498098373413086"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.003926992416381836"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.003898143768310547"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.017856597900390625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.03598356246948242"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.12017941474914551"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.008828878402709961"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.0071561336517333984"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.010448932647705078"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.008662223815917969"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.010104656219482422"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.015148639678955078"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.01607680320739746"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.0053021907806396484"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.004787921905517578"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.04249405860900879"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.04644656181335449"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.1556844711303711"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.009943723678588867"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.004965543746948242"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.004763603210449219"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.0384221076965332"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.0638737678527832"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.22343182563781738"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.011404752731323242"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.005238056182861328"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.0038573741912841797"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.0062558650970458984"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.008712291717529297"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.008701562881469727"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.006535768508911133"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.0038137435913085938"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.0038628578186035156"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.017776966094970703"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.03580117225646973"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.11650276184082031"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.008769035339355469"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.006968975067138672"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.010519981384277344"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.008661985397338867"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.009955167770385742"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.015054702758789062"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.0160372257232666"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.005497932434082031"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.004721641540527344"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.0425872802734375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.046958208084106445"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.15568017959594727"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.009872674942016602"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.004940509796142578"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.004868507385253906"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.03856611251831055"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.06413054466247559"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.22287201881408691"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.011330366134643555"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.005357027053833008"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.0038099288940429688"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.0060577392578125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.008811712265014648"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.00872349739074707"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.006789207458496094"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.003938198089599609"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.004262685775756836"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.017702817916870117"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.036458492279052734"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.11675214767456055"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.00871586799621582"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.006991863250732422"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.014235734939575195"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.00876474380493164"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.010099172592163086"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.015201330184936523"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.016164064407348633"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.005649566650390625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.004819393157958984"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.04201102256774902"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.0466611385345459"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.15599465370178223"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.010344743728637695"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.004843235015869141"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.004808902740478516"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.038202762603759766"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.06395983695983887"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.22974610328674316"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.011274576187133789"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.00517582893371582"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.00391077995300293"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.006203174591064453"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.008629322052001953"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.008738517761230469"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.006699800491333008"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.0038831233978271484"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.003877401351928711"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.017821788787841797"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.036411285400390625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.11670684814453125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.00864410400390625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.007330656051635742"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.010772466659545898"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.008792400360107422"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.010161876678466797"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.015333414077758789"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.016261577606201172"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.005580902099609375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.005080223083496094"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.0423429012298584"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.051674842834472656"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.15502190589904785"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.009826898574829102"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.004880666732788086"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.0049059391021728516"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.03840231895446777"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.06417560577392578"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.22263002395629883"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.011462211608886719"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.005234241485595703"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.003849506378173828"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.006076812744140625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.008661508560180664"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.00865030288696289"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.006439924240112305"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.0037393569946289062"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.003875255584716797"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.017888784408569336"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.036561012268066406"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.11665630340576172"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.008675336837768555"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.00711822509765625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.010625839233398438"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.008713483810424805"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.010224342346191406"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.015188932418823242"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.016261816024780273"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.005641937255859375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.004775285720825195"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.04297685623168945"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.04725217819213867"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.15518832206726074"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.009882688522338867"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.004871845245361328"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.005060672760009766"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.038175106048583984"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.06410717964172363"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.22275996208190918"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.011371135711669922"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.005182027816772461"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.003923654556274414"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.006134748458862305"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.008739233016967773"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.009198427200317383"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.006711006164550781"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.0038285255432128906"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.0038878917694091797"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.017676830291748047"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.03644895553588867"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.11751914024353027"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.008706331253051758"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.007036447525024414"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.01063394546508789"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.008836507797241211"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.01021122932434082"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.015264749526977539"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.016195297241210938"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.005513191223144531"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.0048427581787109375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.0418705940246582"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.047415733337402344"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.3882460594177246"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.009894371032714844"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.004836559295654297"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.004946708679199219"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.037603139877319336"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.06445860862731934"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.2323601245880127"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.011118173599243164"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.005043983459472656"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0037996768951416016"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.0061342716217041016"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.00863790512084961"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.00876307487487793"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.006490230560302734"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.003740072250366211"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.003833293914794922"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.017258882522583008"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.03546142578125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.11676692962646484"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.008732795715332031"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.007027149200439453"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.010523557662963867"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.008903264999389648"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.010415315628051758"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.015124320983886719"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.016007423400878906"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.0055043697357177734"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.004900932312011719"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.04209709167480469"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.04705500602722168"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.15632414817810059"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.010222434997558594"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.004979372024536133"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.004834651947021484"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.03880620002746582"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.06352353096008301"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.22321486473083496"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.01134037971496582"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.005137443542480469"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.003792285919189453"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.006032705307006836"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.008476734161376953"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.008812189102172852"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.006619453430175781"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.0038840770721435547"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.004016876220703125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.01798558235168457"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.03666424751281738"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.11660885810852051"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.008753538131713867"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.007063627243041992"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.010538578033447266"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.008796930313110352"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.010228395462036133"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.015142440795898438"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.016378164291381836"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.005524873733520508"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.004742860794067383"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.0466761589050293"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.0470881462097168"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.15884113311767578"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.010114431381225586"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.0049114227294921875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.004925251007080078"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.03807497024536133"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.06470417976379395"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.22386860847473145"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.011565923690795898"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="178" name="test_project_array" time="0.0030553340911865234"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="188" name="test_project_array_with_product" time="0.0028159618377685547"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;0]" time="0.0029239654541015625"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;1]" time="0.0020956993103027344"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;2]" time="0.0022554397583007812"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;3]" time="0.11415791511535645"><system-err>19:40 gram_schmidt: Orthonormalizing vector 31 again
19:40 gram_schmidt: Removing linear dependent vector 32
19:40 gram_schmidt: Removing linear dependent vector 33
19:40 gram_schmidt: Removing linear dependent vector 34
19:40 gram_schmidt: Removing linear dependent vector 35
19:40 gram_schmidt: Removing linear dependent vector 36
19:40 gram_schmidt: Removing linear dependent vector 37
19:40 gram_schmidt: Removing linear dependent vector 38
19:40 gram_schmidt: Removing linear dependent vector 39
19:40 gram_schmidt: Removing linear dependent vector 40
19:40 gram_schmidt: Removing linear dependent vector 41
19:40 gram_schmidt: Removing linear dependent vector 42
19:40 gram_schmidt: Orthonormalizing vector 31 again
19:40 gram_schmidt: Removing linear dependent vector 32
19:40 gram_schmidt: Removing linear dependent vector 33
19:40 gram_schmidt: Removing linear dependent vector 34
19:40 gram_schmidt: Removing linear dependent vector 35
19:40 gram_schmidt: Removing linear dependent vector 36
19:40 gram_schmidt: Removing linear dependent vector 37
19:40 gram_schmidt: Removing linear dependent vector 38
19:40 gram_schmidt: Removing linear dependent vector 39
19:40 gram_schmidt: Removing linear dependent vector 40
19:40 gram_schmidt: Removing linear dependent vector 41
19:40 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;4]" time="0.02218151092529297"><system-err>19:40 gram_schmidt: Removing vector 0 of norm 0.0
19:40 gram_schmidt: Removing vector 1 of norm 0.0
19:40 gram_schmidt: Removing vector 2 of norm 0.0
19:40 gram_schmidt: Removing vector 3 of norm 0.0
19:40 gram_schmidt: Removing vector 4 of norm 0.0
19:40 gram_schmidt: Removing vector 5 of norm 0.0
19:40 gram_schmidt: Removing vector 6 of norm 0.0
19:40 gram_schmidt: Removing vector 7 of norm 0.0
19:40 gram_schmidt: Removing vector 8 of norm 0.0
19:40 gram_schmidt: Removing vector 9 of norm 0.0
19:40 gram_schmidt: Removing vector 10 of norm 0.0
19:40 gram_schmidt: Removing vector 11 of norm 0.0
19:40 gram_schmidt: Removing vector 12 of norm 0.0
19:40 gram_schmidt: Removing vector 13 of norm 0.0
19:40 gram_schmidt: Removing vector 14 of norm 0.0
19:40 gram_schmidt: Removing vector 15 of norm 0.0
19:40 gram_schmidt: Removing vector 16 of norm 0.0
19:40 gram_schmidt: Removing vector 17 of norm 0.0
19:40 gram_schmidt: Removing vector 18 of norm 0.0
19:40 gram_schmidt: Removing vector 19 of norm 0.0
19:40 gram_schmidt: Removing vector 20 of norm 0.0
19:40 gram_schmidt: Removing vector 21 of norm 0.0
19:40 gram_schmidt: Removing vector 22 of norm 0.0
19:40 gram_schmidt: Removing vector 23 of norm 0.0
19:40 gram_schmidt: Removing vector 24 of norm 0.0
19:40 gram_schmidt: Removing vector 25 of norm 0.0
19:40 gram_schmidt: Removing vector 26 of norm 0.0
19:40 gram_schmidt: Removing vector 27 of norm 0.0
19:40 gram_schmidt: Removing vector 28 of norm 0.0
19:40 gram_schmidt: Removing vector 29 of norm 0.0
19:40 gram_schmidt: Removing vector 30 of norm 0.0
19:40 gram_schmidt: Removing vector 31 of norm 0.0
19:40 gram_schmidt: Removing vector 32 of norm 0.0
19:40 gram_schmidt: Removing vector 33 of norm 0.0
19:40 gram_schmidt: Removing vector 34 of norm 0.0
19:40 gram_schmidt: Removing vector 35 of norm 0.0
19:40 gram_schmidt: Removing vector 36 of norm 0.0
19:40 gram_schmidt: Removing vector 37 of norm 0.0
19:40 gram_schmidt: Removing vector 38 of norm 0.0
19:40 gram_schmidt: Removing vector 39 of norm 0.0
19:40 gram_schmidt: Removing vector 40 of norm 0.0
19:40 gram_schmidt: Removing vector 41 of norm 0.0
19:40 gram_schmidt: Removing vector 42 of norm 0.0
19:40 gram_schmidt: Removing vector 43 of norm 0.0
19:40 gram_schmidt: Removing vector 44 of norm 0.0
19:40 gram_schmidt: Removing vector 45 of norm 0.0
19:40 gram_schmidt: Removing vector 46 of norm 0.0
19:40 gram_schmidt: Removing vector 47 of norm 0.0
19:40 gram_schmidt: Removing vector 48 of norm 0.0
19:40 gram_schmidt: Removing vector 49 of norm 0.0
19:40 gram_schmidt: Removing vector 50 of norm 0.0
19:40 gram_schmidt: Removing vector 51 of norm 0.0
19:40 gram_schmidt: Removing vector 52 of norm 0.0
19:40 gram_schmidt: Removing vector 53 of norm 0.0
19:40 gram_schmidt: Removing vector 54 of norm 0.0
19:40 gram_schmidt: Removing vector 55 of norm 0.0
19:40 gram_schmidt: Removing vector 56 of norm 0.0
19:40 gram_schmidt: Removing vector 57 of norm 0.0
19:40 gram_schmidt: Removing vector 58 of norm 0.0
19:40 gram_schmidt: Removing vector 59 of norm 0.0
19:40 gram_schmidt: Removing vector 60 of norm 0.0
19:40 gram_schmidt: Removing vector 61 of norm 0.0
19:40 gram_schmidt: Removing vector 62 of norm 0.0
19:40 gram_schmidt: Removing vector 63 of norm 0.0
19:40 gram_schmidt: Removing vector 64 of norm 0.0
19:40 gram_schmidt: Removing vector 65 of norm 0.0
19:40 gram_schmidt: Removing vector 66 of norm 0.0
19:40 gram_schmidt: Removing vector 67 of norm 0.0
19:40 gram_schmidt: Removing vector 68 of norm 0.0
19:40 gram_schmidt: Removing vector 69 of norm 0.0
19:40 gram_schmidt: Removing vector 70 of norm 0.0
19:40 gram_schmidt: Removing vector 71 of norm 0.0
19:40 gram_schmidt: Removing vector 72 of norm 0.0
19:40 gram_schmidt: Removing vector 73 of norm 0.0
19:40 gram_schmidt: Removing vector 74 of norm 0.0
19:40 gram_schmidt: Removing vector 75 of norm 0.0
19:40 gram_schmidt: Removing vector 76 of norm 0.0
19:40 gram_schmidt: Removing vector 77 of norm 0.0
19:40 gram_schmidt: Removing vector 78 of norm 0.0
19:40 gram_schmidt: Removing vector 79 of norm 0.0
19:40 gram_schmidt: Removing vector 80 of norm 0.0
19:40 gram_schmidt: Removing vector 81 of norm 0.0
19:40 gram_schmidt: Removing vector 82 of norm 0.0
19:40 gram_schmidt: Removing vector 83 of norm 0.0
19:40 gram_schmidt: Removing vector 84 of norm 0.0
19:40 gram_schmidt: Removing vector 85 of norm 0.0
19:40 gram_schmidt: Removing vector 86 of norm 0.0
19:40 gram_schmidt: Removing vector 87 of norm 0.0
19:40 gram_schmidt: Removing vector 88 of norm 0.0
19:40 gram_schmidt: Removing vector 89 of norm 0.0
19:40 gram_schmidt: Removing vector 90 of norm 0.0
19:40 gram_schmidt: Removing vector 91 of norm 0.0
19:40 gram_schmidt: Removing vector 92 of norm 0.0
19:40 gram_schmidt: Removing vector 93 of norm 0.0
19:40 gram_schmidt: Removing vector 94 of norm 0.0
19:40 gram_schmidt: Removing vector 95 of norm 0.0
19:40 gram_schmidt: Removing vector 96 of norm 0.0
19:40 gram_schmidt: Removing vector 97 of norm 0.0
19:40 gram_schmidt: Removing vector 98 of norm 0.0
19:40 gram_schmidt: Removing vector 99 of norm 0.0
19:40 gram_schmidt: Removing vector 100 of norm 0.0
19:40 gram_schmidt: Removing vector 101 of norm 0.0
19:40 gram_schmidt: Removing vector 0 of norm 0.0
19:40 gram_schmidt: Removing vector 1 of norm 0.0
19:40 gram_schmidt: Removing vector 2 of norm 0.0
19:40 gram_schmidt: Removing vector 3 of norm 0.0
19:40 gram_schmidt: Removing vector 4 of norm 0.0
19:40 gram_schmidt: Removing vector 5 of norm 0.0
19:40 gram_schmidt: Removing vector 6 of norm 0.0
19:40 gram_schmidt: Removing vector 7 of norm 0.0
19:40 gram_schmidt: Removing vector 8 of norm 0.0
19:40 gram_schmidt: Removing vector 9 of norm 0.0
19:40 gram_schmidt: Removing vector 10 of norm 0.0
19:40 gram_schmidt: Removing vector 11 of norm 0.0
19:40 gram_schmidt: Removing vector 12 of norm 0.0
19:40 gram_schmidt: Removing vector 13 of norm 0.0
19:40 gram_schmidt: Removing vector 14 of norm 0.0
19:40 gram_schmidt: Removing vector 15 of norm 0.0
19:40 gram_schmidt: Removing vector 16 of norm 0.0
19:40 gram_schmidt: Removing vector 17 of norm 0.0
19:40 gram_schmidt: Removing vector 18 of norm 0.0
19:40 gram_schmidt: Removing vector 19 of norm 0.0
19:40 gram_schmidt: Removing vector 20 of norm 0.0
19:40 gram_schmidt: Removing vector 21 of norm 0.0
19:40 gram_schmidt: Removing vector 22 of norm 0.0
19:40 gram_schmidt: Removing vector 23 of norm 0.0
19:40 gram_schmidt: Removing vector 24 of norm 0.0
19:40 gram_schmidt: Removing vector 25 of norm 0.0
19:40 gram_schmidt: Removing vector 26 of norm 0.0
19:40 gram_schmidt: Removing vector 27 of norm 0.0
19:40 gram_schmidt: Removing vector 28 of norm 0.0
19:40 gram_schmidt: Removing vector 29 of norm 0.0
19:40 gram_schmidt: Removing vector 30 of norm 0.0
19:40 gram_schmidt: Removing vector 31 of norm 0.0
19:40 gram_schmidt: Removing vector 32 of norm 0.0
19:40 gram_schmidt: Removing vector 33 of norm 0.0
19:40 gram_schmidt: Removing vector 34 of norm 0.0
19:40 gram_schmidt: Removing vector 35 of norm 0.0
19:40 gram_schmidt: Removing vector 36 of norm 0.0
19:40 gram_schmidt: Removing vector 37 of norm 0.0
19:40 gram_schmidt: Removing vector 38 of norm 0.0
19:40 gram_schmidt: Removing vector 39 of norm 0.0
19:40 gram_schmidt: Removing vector 40 of norm 0.0
19:40 gram_schmidt: Removing vector 41 of norm 0.0
19:40 gram_schmidt: Removing vector 42 of norm 0.0
19:40 gram_schmidt: Removing vector 43 of norm 0.0
19:40 gram_schmidt: Removing vector 44 of norm 0.0
19:40 gram_schmidt: Removing vector 45 of norm 0.0
19:40 gram_schmidt: Removing vector 46 of norm 0.0
19:40 gram_schmidt: Removing vector 47 of norm 0.0
19:40 gram_schmidt: Removing vector 48 of norm 0.0
19:40 gram_schmidt: Removing vector 49 of norm 0.0
19:40 gram_schmidt: Removing vector 50 of norm 0.0
19:40 gram_schmidt: Removing vector 51 of norm 0.0
19:40 gram_schmidt: Removing vector 52 of norm 0.0
19:40 gram_schmidt: Removing vector 53 of norm 0.0
19:40 gram_schmidt: Removing vector 54 of norm 0.0
19:40 gram_schmidt: Removing vector 55 of norm 0.0
19:40 gram_schmidt: Removing vector 56 of norm 0.0
19:40 gram_schmidt: Removing vector 57 of norm 0.0
19:40 gram_schmidt: Removing vector 58 of norm 0.0
19:40 gram_schmidt: Removing vector 59 of norm 0.0
19:40 gram_schmidt: Removing vector 60 of norm 0.0
19:40 gram_schmidt: Removing vector 61 of norm 0.0
19:40 gram_schmidt: Removing vector 62 of norm 0.0
19:40 gram_schmidt: Removing vector 63 of norm 0.0
19:40 gram_schmidt: Removing vector 64 of norm 0.0
19:40 gram_schmidt: Removing vector 65 of norm 0.0
19:40 gram_schmidt: Removing vector 66 of norm 0.0
19:40 gram_schmidt: Removing vector 67 of norm 0.0
19:40 gram_schmidt: Removing vector 68 of norm 0.0
19:40 gram_schmidt: Removing vector 69 of norm 0.0
19:40 gram_schmidt: Removing vector 70 of norm 0.0
19:40 gram_schmidt: Removing vector 71 of norm 0.0
19:40 gram_schmidt: Removing vector 72 of norm 0.0
19:40 gram_schmidt: Removing vector 73 of norm 0.0
19:40 gram_schmidt: Removing vector 74 of norm 0.0
19:40 gram_schmidt: Removing vector 75 of norm 0.0
19:40 gram_schmidt: Removing vector 76 of norm 0.0
19:40 gram_schmidt: Removing vector 77 of norm 0.0
19:40 gram_schmidt: Removing vector 78 of norm 0.0
19:40 gram_schmidt: Removing vector 79 of norm 0.0
19:40 gram_schmidt: Removing vector 80 of norm 0.0
19:40 gram_schmidt: Removing vector 81 of norm 0.0
19:40 gram_schmidt: Removing vector 82 of norm 0.0
19:40 gram_schmidt: Removing vector 83 of norm 0.0
19:40 gram_schmidt: Removing vector 84 of norm 0.0
19:40 gram_schmidt: Removing vector 85 of norm 0.0
19:40 gram_schmidt: Removing vector 86 of norm 0.0
19:40 gram_schmidt: Removing vector 87 of norm 0.0
19:40 gram_schmidt: Removing vector 88 of norm 0.0
19:40 gram_schmidt: Removing vector 89 of norm 0.0
19:40 gram_schmidt: Removing vector 90 of norm 0.0
19:40 gram_schmidt: Removing vector 91 of norm 0.0
19:40 gram_schmidt: Removing vector 92 of norm 0.0
19:40 gram_schmidt: Removing vector 93 of norm 0.0
19:40 gram_schmidt: Removing vector 94 of norm 0.0
19:40 gram_schmidt: Removing vector 95 of norm 0.0
19:40 gram_schmidt: Removing vector 96 of norm 0.0
19:40 gram_schmidt: Removing vector 97 of norm 0.0
19:40 gram_schmidt: Removing vector 98 of norm 0.0
19:40 gram_schmidt: Removing vector 99 of norm 0.0
19:40 gram_schmidt: Removing vector 100 of norm 0.0
19:40 gram_schmidt: Removing vector 101 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;5]" time="0.0037386417388916016"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;6]" time="0.0020647048950195312"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;7]" time="0.0024657249450683594"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;8]" time="0.21606945991516113"><system-err>19:40 gram_schmidt: Orthonormalizing vector 31 again
19:40 gram_schmidt: Removing linear dependent vector 32
19:40 gram_schmidt: Removing linear dependent vector 33
19:40 gram_schmidt: Removing linear dependent vector 34
19:40 gram_schmidt: Removing linear dependent vector 35
19:40 gram_schmidt: Removing linear dependent vector 36
19:40 gram_schmidt: Removing linear dependent vector 37
19:40 gram_schmidt: Removing linear dependent vector 38
19:40 gram_schmidt: Removing linear dependent vector 39
19:40 gram_schmidt: Removing linear dependent vector 40
19:40 gram_schmidt: Removing linear dependent vector 41
19:40 gram_schmidt: Removing linear dependent vector 42
19:40 gram_schmidt: Orthonormalizing vector 31 again
19:40 gram_schmidt: Removing linear dependent vector 32
19:40 gram_schmidt: Removing linear dependent vector 33
19:40 gram_schmidt: Removing linear dependent vector 34
19:40 gram_schmidt: Removing linear dependent vector 35
19:40 gram_schmidt: Removing linear dependent vector 36
19:40 gram_schmidt: Removing linear dependent vector 37
19:40 gram_schmidt: Removing linear dependent vector 38
19:40 gram_schmidt: Removing linear dependent vector 39
19:40 gram_schmidt: Removing linear dependent vector 40
19:40 gram_schmidt: Removing linear dependent vector 41
19:40 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;9]" time="0.029307842254638672"><system-err>19:40 gram_schmidt: Removing vector 0 of norm 0.0
19:40 gram_schmidt: Removing vector 1 of norm 0.0
19:40 gram_schmidt: Removing vector 2 of norm 0.0
19:40 gram_schmidt: Removing vector 3 of norm 0.0
19:40 gram_schmidt: Removing vector 4 of norm 0.0
19:40 gram_schmidt: Removing vector 5 of norm 0.0
19:40 gram_schmidt: Removing vector 6 of norm 0.0
19:40 gram_schmidt: Removing vector 7 of norm 0.0
19:40 gram_schmidt: Removing vector 8 of norm 0.0
19:40 gram_schmidt: Removing vector 9 of norm 0.0
19:40 gram_schmidt: Removing vector 10 of norm 0.0
19:40 gram_schmidt: Removing vector 11 of norm 0.0
19:40 gram_schmidt: Removing vector 12 of norm 0.0
19:40 gram_schmidt: Removing vector 13 of norm 0.0
19:40 gram_schmidt: Removing vector 14 of norm 0.0
19:40 gram_schmidt: Removing vector 15 of norm 0.0
19:40 gram_schmidt: Removing vector 16 of norm 0.0
19:40 gram_schmidt: Removing vector 17 of norm 0.0
19:40 gram_schmidt: Removing vector 18 of norm 0.0
19:40 gram_schmidt: Removing vector 19 of norm 0.0
19:40 gram_schmidt: Removing vector 20 of norm 0.0
19:40 gram_schmidt: Removing vector 21 of norm 0.0
19:40 gram_schmidt: Removing vector 22 of norm 0.0
19:40 gram_schmidt: Removing vector 23 of norm 0.0
19:40 gram_schmidt: Removing vector 24 of norm 0.0
19:40 gram_schmidt: Removing vector 25 of norm 0.0
19:40 gram_schmidt: Removing vector 26 of norm 0.0
19:40 gram_schmidt: Removing vector 27 of norm 0.0
19:40 gram_schmidt: Removing vector 28 of norm 0.0
19:40 gram_schmidt: Removing vector 29 of norm 0.0
19:40 gram_schmidt: Removing vector 30 of norm 0.0
19:40 gram_schmidt: Removing vector 31 of norm 0.0
19:40 gram_schmidt: Removing vector 32 of norm 0.0
19:40 gram_schmidt: Removing vector 33 of norm 0.0
19:40 gram_schmidt: Removing vector 34 of norm 0.0
19:40 gram_schmidt: Removing vector 35 of norm 0.0
19:40 gram_schmidt: Removing vector 36 of norm 0.0
19:40 gram_schmidt: Removing vector 37 of norm 0.0
19:40 gram_schmidt: Removing vector 38 of norm 0.0
19:40 gram_schmidt: Removing vector 39 of norm 0.0
19:40 gram_schmidt: Removing vector 40 of norm 0.0
19:40 gram_schmidt: Removing vector 41 of norm 0.0
19:40 gram_schmidt: Removing vector 42 of norm 0.0
19:40 gram_schmidt: Removing vector 43 of norm 0.0
19:40 gram_schmidt: Removing vector 44 of norm 0.0
19:40 gram_schmidt: Removing vector 45 of norm 0.0
19:40 gram_schmidt: Removing vector 46 of norm 0.0
19:40 gram_schmidt: Removing vector 47 of norm 0.0
19:40 gram_schmidt: Removing vector 48 of norm 0.0
19:40 gram_schmidt: Removing vector 49 of norm 0.0
19:40 gram_schmidt: Removing vector 50 of norm 0.0
19:40 gram_schmidt: Removing vector 51 of norm 0.0
19:40 gram_schmidt: Removing vector 52 of norm 0.0
19:40 gram_schmidt: Removing vector 53 of norm 0.0
19:40 gram_schmidt: Removing vector 54 of norm 0.0
19:40 gram_schmidt: Removing vector 55 of norm 0.0
19:40 gram_schmidt: Removing vector 56 of norm 0.0
19:40 gram_schmidt: Removing vector 57 of norm 0.0
19:40 gram_schmidt: Removing vector 58 of norm 0.0
19:40 gram_schmidt: Removing vector 59 of norm 0.0
19:40 gram_schmidt: Removing vector 60 of norm 0.0
19:40 gram_schmidt: Removing vector 61 of norm 0.0
19:40 gram_schmidt: Removing vector 62 of norm 0.0
19:40 gram_schmidt: Removing vector 63 of norm 0.0
19:40 gram_schmidt: Removing vector 64 of norm 0.0
19:40 gram_schmidt: Removing vector 65 of norm 0.0
19:40 gram_schmidt: Removing vector 66 of norm 0.0
19:40 gram_schmidt: Removing vector 67 of norm 0.0
19:40 gram_schmidt: Removing vector 68 of norm 0.0
19:40 gram_schmidt: Removing vector 69 of norm 0.0
19:40 gram_schmidt: Removing vector 70 of norm 0.0
19:40 gram_schmidt: Removing vector 71 of norm 0.0
19:40 gram_schmidt: Removing vector 72 of norm 0.0
19:40 gram_schmidt: Removing vector 73 of norm 0.0
19:40 gram_schmidt: Removing vector 74 of norm 0.0
19:40 gram_schmidt: Removing vector 75 of norm 0.0
19:40 gram_schmidt: Removing vector 76 of norm 0.0
19:40 gram_schmidt: Removing vector 77 of norm 0.0
19:40 gram_schmidt: Removing vector 78 of norm 0.0
19:40 gram_schmidt: Removing vector 79 of norm 0.0
19:40 gram_schmidt: Removing vector 80 of norm 0.0
19:40 gram_schmidt: Removing vector 81 of norm 0.0
19:40 gram_schmidt: Removing vector 82 of norm 0.0
19:40 gram_schmidt: Removing vector 83 of norm 0.0
19:40 gram_schmidt: Removing vector 84 of norm 0.0
19:40 gram_schmidt: Removing vector 85 of norm 0.0
19:40 gram_schmidt: Removing vector 86 of norm 0.0
19:40 gram_schmidt: Removing vector 87 of norm 0.0
19:40 gram_schmidt: Removing vector 88 of norm 0.0
19:40 gram_schmidt: Removing vector 89 of norm 0.0
19:40 gram_schmidt: Removing vector 90 of norm 0.0
19:40 gram_schmidt: Removing vector 91 of norm 0.0
19:40 gram_schmidt: Removing vector 92 of norm 0.0
19:40 gram_schmidt: Removing vector 93 of norm 0.0
19:40 gram_schmidt: Removing vector 94 of norm 0.0
19:40 gram_schmidt: Removing vector 95 of norm 0.0
19:40 gram_schmidt: Removing vector 96 of norm 0.0
19:40 gram_schmidt: Removing vector 97 of norm 0.0
19:40 gram_schmidt: Removing vector 98 of norm 0.0
19:40 gram_schmidt: Removing vector 99 of norm 0.0
19:40 gram_schmidt: Removing vector 100 of norm 0.0
19:40 gram_schmidt: Removing vector 101 of norm 0.0
19:40 gram_schmidt: Removing vector 0 of norm 0.0
19:40 gram_schmidt: Removing vector 1 of norm 0.0
19:40 gram_schmidt: Removing vector 2 of norm 0.0
19:40 gram_schmidt: Removing vector 3 of norm 0.0
19:40 gram_schmidt: Removing vector 4 of norm 0.0
19:40 gram_schmidt: Removing vector 5 of norm 0.0
19:40 gram_schmidt: Removing vector 6 of norm 0.0
19:40 gram_schmidt: Removing vector 7 of norm 0.0
19:40 gram_schmidt: Removing vector 8 of norm 0.0
19:40 gram_schmidt: Removing vector 9 of norm 0.0
19:40 gram_schmidt: Removing vector 10 of norm 0.0
19:40 gram_schmidt: Removing vector 11 of norm 0.0
19:40 gram_schmidt: Removing vector 12 of norm 0.0
19:40 gram_schmidt: Removing vector 13 of norm 0.0
19:40 gram_schmidt: Removing vector 14 of norm 0.0
19:40 gram_schmidt: Removing vector 15 of norm 0.0
19:40 gram_schmidt: Removing vector 16 of norm 0.0
19:40 gram_schmidt: Removing vector 17 of norm 0.0
19:40 gram_schmidt: Removing vector 18 of norm 0.0
19:40 gram_schmidt: Removing vector 19 of norm 0.0
19:40 gram_schmidt: Removing vector 20 of norm 0.0
19:40 gram_schmidt: Removing vector 21 of norm 0.0
19:40 gram_schmidt: Removing vector 22 of norm 0.0
19:40 gram_schmidt: Removing vector 23 of norm 0.0
19:40 gram_schmidt: Removing vector 24 of norm 0.0
19:40 gram_schmidt: Removing vector 25 of norm 0.0
19:40 gram_schmidt: Removing vector 26 of norm 0.0
19:40 gram_schmidt: Removing vector 27 of norm 0.0
19:40 gram_schmidt: Removing vector 28 of norm 0.0
19:40 gram_schmidt: Removing vector 29 of norm 0.0
19:40 gram_schmidt: Removing vector 30 of norm 0.0
19:40 gram_schmidt: Removing vector 31 of norm 0.0
19:40 gram_schmidt: Removing vector 32 of norm 0.0
19:40 gram_schmidt: Removing vector 33 of norm 0.0
19:40 gram_schmidt: Removing vector 34 of norm 0.0
19:40 gram_schmidt: Removing vector 35 of norm 0.0
19:40 gram_schmidt: Removing vector 36 of norm 0.0
19:40 gram_schmidt: Removing vector 37 of norm 0.0
19:40 gram_schmidt: Removing vector 38 of norm 0.0
19:40 gram_schmidt: Removing vector 39 of norm 0.0
19:40 gram_schmidt: Removing vector 40 of norm 0.0
19:40 gram_schmidt: Removing vector 41 of norm 0.0
19:40 gram_schmidt: Removing vector 42 of norm 0.0
19:40 gram_schmidt: Removing vector 43 of norm 0.0
19:40 gram_schmidt: Removing vector 44 of norm 0.0
19:40 gram_schmidt: Removing vector 45 of norm 0.0
19:40 gram_schmidt: Removing vector 46 of norm 0.0
19:40 gram_schmidt: Removing vector 47 of norm 0.0
19:40 gram_schmidt: Removing vector 48 of norm 0.0
19:40 gram_schmidt: Removing vector 49 of norm 0.0
19:40 gram_schmidt: Removing vector 50 of norm 0.0
19:40 gram_schmidt: Removing vector 51 of norm 0.0
19:40 gram_schmidt: Removing vector 52 of norm 0.0
19:40 gram_schmidt: Removing vector 53 of norm 0.0
19:40 gram_schmidt: Removing vector 54 of norm 0.0
19:40 gram_schmidt: Removing vector 55 of norm 0.0
19:40 gram_schmidt: Removing vector 56 of norm 0.0
19:40 gram_schmidt: Removing vector 57 of norm 0.0
19:40 gram_schmidt: Removing vector 58 of norm 0.0
19:40 gram_schmidt: Removing vector 59 of norm 0.0
19:40 gram_schmidt: Removing vector 60 of norm 0.0
19:40 gram_schmidt: Removing vector 61 of norm 0.0
19:40 gram_schmidt: Removing vector 62 of norm 0.0
19:40 gram_schmidt: Removing vector 63 of norm 0.0
19:40 gram_schmidt: Removing vector 64 of norm 0.0
19:40 gram_schmidt: Removing vector 65 of norm 0.0
19:40 gram_schmidt: Removing vector 66 of norm 0.0
19:40 gram_schmidt: Removing vector 67 of norm 0.0
19:40 gram_schmidt: Removing vector 68 of norm 0.0
19:40 gram_schmidt: Removing vector 69 of norm 0.0
19:40 gram_schmidt: Removing vector 70 of norm 0.0
19:40 gram_schmidt: Removing vector 71 of norm 0.0
19:40 gram_schmidt: Removing vector 72 of norm 0.0
19:40 gram_schmidt: Removing vector 73 of norm 0.0
19:40 gram_schmidt: Removing vector 74 of norm 0.0
19:40 gram_schmidt: Removing vector 75 of norm 0.0
19:40 gram_schmidt: Removing vector 76 of norm 0.0
19:40 gram_schmidt: Removing vector 77 of norm 0.0
19:40 gram_schmidt: Removing vector 78 of norm 0.0
19:40 gram_schmidt: Removing vector 79 of norm 0.0
19:40 gram_schmidt: Removing vector 80 of norm 0.0
19:40 gram_schmidt: Removing vector 81 of norm 0.0
19:40 gram_schmidt: Removing vector 82 of norm 0.0
19:40 gram_schmidt: Removing vector 83 of norm 0.0
19:40 gram_schmidt: Removing vector 84 of norm 0.0
19:40 gram_schmidt: Removing vector 85 of norm 0.0
19:40 gram_schmidt: Removing vector 86 of norm 0.0
19:40 gram_schmidt: Removing vector 87 of norm 0.0
19:40 gram_schmidt: Removing vector 88 of norm 0.0
19:40 gram_schmidt: Removing vector 89 of norm 0.0
19:40 gram_schmidt: Removing vector 90 of norm 0.0
19:40 gram_schmidt: Removing vector 91 of norm 0.0
19:40 gram_schmidt: Removing vector 92 of norm 0.0
19:40 gram_schmidt: Removing vector 93 of norm 0.0
19:40 gram_schmidt: Removing vector 94 of norm 0.0
19:40 gram_schmidt: Removing vector 95 of norm 0.0
19:40 gram_schmidt: Removing vector 96 of norm 0.0
19:40 gram_schmidt: Removing vector 97 of norm 0.0
19:40 gram_schmidt: Removing vector 98 of norm 0.0
19:40 gram_schmidt: Removing vector 99 of norm 0.0
19:40 gram_schmidt: Removing vector 100 of norm 0.0
19:40 gram_schmidt: Removing vector 101 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;10]" time="0.0035240650177001953"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;11]" time="0.007196187973022461"><system-err>19:40 gram_schmidt: Removing linear dependent vector 3
19:40 gram_schmidt: Removing linear dependent vector 3
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;12]" time="0.004095554351806641"><system-err>19:40 gram_schmidt: Removing vector 0 of norm 0.0
19:40 gram_schmidt: Removing vector 1 of norm 0.0
19:40 gram_schmidt: Removing vector 2 of norm 0.0
19:40 gram_schmidt: Removing vector 0 of norm 0.0
19:40 gram_schmidt: Removing vector 1 of norm 0.0
19:40 gram_schmidt: Removing vector 2 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;13]" time="0.0028231143951416016"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;14]" time="0.0050601959228515625"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;15]" time="0.42614150047302246"><system-err>19:41 gram_schmidt: Removing linear dependent vector 36
19:41 gram_schmidt: Removing linear dependent vector 37
19:41 gram_schmidt: Removing linear dependent vector 38
19:41 gram_schmidt: Removing linear dependent vector 39
19:41 gram_schmidt: Removing linear dependent vector 40
19:41 gram_schmidt: Removing linear dependent vector 41
19:41 gram_schmidt: Removing linear dependent vector 42
19:41 gram_schmidt: Removing linear dependent vector 36
19:41 gram_schmidt: Removing linear dependent vector 37
19:41 gram_schmidt: Removing linear dependent vector 38
19:41 gram_schmidt: Removing linear dependent vector 39
19:41 gram_schmidt: Removing linear dependent vector 40
19:41 gram_schmidt: Removing linear dependent vector 41
19:41 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;16]" time="0.22067546844482422"><system-err>19:41 gram_schmidt: Removing linear dependent vector 3
19:41 gram_schmidt: Removing linear dependent vector 4
19:41 gram_schmidt: Removing linear dependent vector 5
19:41 gram_schmidt: Removing linear dependent vector 6
19:41 gram_schmidt: Removing linear dependent vector 7
19:41 gram_schmidt: Removing linear dependent vector 8
19:41 gram_schmidt: Removing linear dependent vector 9
19:41 gram_schmidt: Removing linear dependent vector 10
19:41 gram_schmidt: Removing linear dependent vector 11
19:41 gram_schmidt: Removing linear dependent vector 12
19:41 gram_schmidt: Removing linear dependent vector 13
19:41 gram_schmidt: Removing linear dependent vector 14
19:41 gram_schmidt: Removing linear dependent vector 15
19:41 gram_schmidt: Removing linear dependent vector 16
19:41 gram_schmidt: Removing linear dependent vector 17
19:41 gram_schmidt: Removing linear dependent vector 18
19:41 gram_schmidt: Removing linear dependent vector 19
19:41 gram_schmidt: Removing linear dependent vector 20
19:41 gram_schmidt: Removing linear dependent vector 21
19:41 gram_schmidt: Removing linear dependent vector 22
19:41 gram_schmidt: Removing linear dependent vector 23
19:41 gram_schmidt: Removing linear dependent vector 24
19:41 gram_schmidt: Removing linear dependent vector 25
19:41 gram_schmidt: Removing linear dependent vector 26
19:41 gram_schmidt: Removing linear dependent vector 27
19:41 gram_schmidt: Removing linear dependent vector 28
19:41 gram_schmidt: Removing linear dependent vector 29
19:41 gram_schmidt: Removing linear dependent vector 30
19:41 gram_schmidt: Removing linear dependent vector 31
19:41 gram_schmidt: Removing linear dependent vector 32
19:41 gram_schmidt: Removing linear dependent vector 33
19:41 gram_schmidt: Removing linear dependent vector 34
19:41 gram_schmidt: Removing linear dependent vector 35
19:41 gram_schmidt: Removing linear dependent vector 36
19:41 gram_schmidt: Removing linear dependent vector 37
19:41 gram_schmidt: Removing linear dependent vector 38
19:41 gram_schmidt: Removing linear dependent vector 39
19:41 gram_schmidt: Removing linear dependent vector 40
19:41 gram_schmidt: Removing linear dependent vector 41
19:41 gram_schmidt: Removing linear dependent vector 42
19:41 gram_schmidt: Removing linear dependent vector 43
19:41 gram_schmidt: Removing linear dependent vector 44
19:41 gram_schmidt: Removing linear dependent vector 45
19:41 gram_schmidt: Removing linear dependent vector 46
19:41 gram_schmidt: Removing linear dependent vector 47
19:41 gram_schmidt: Removing linear dependent vector 48
19:41 gram_schmidt: Removing linear dependent vector 49
19:41 gram_schmidt: Removing linear dependent vector 50
19:41 gram_schmidt: Removing linear dependent vector 51
19:41 gram_schmidt: Removing linear dependent vector 52
19:41 gram_schmidt: Removing linear dependent vector 53
19:41 gram_schmidt: Removing linear dependent vector 54
19:41 gram_schmidt: Removing linear dependent vector 55
19:41 gram_schmidt: Removing linear dependent vector 56
19:41 gram_schmidt: Removing linear dependent vector 57
19:41 gram_schmidt: Removing linear dependent vector 58
19:41 gram_schmidt: Removing linear dependent vector 59
19:41 gram_schmidt: Removing linear dependent vector 60
19:41 gram_schmidt: Removing linear dependent vector 61
19:41 gram_schmidt: Removing linear dependent vector 62
19:41 gram_schmidt: Removing linear dependent vector 63
19:41 gram_schmidt: Removing linear dependent vector 64
19:41 gram_schmidt: Removing linear dependent vector 65
19:41 gram_schmidt: Removing linear dependent vector 66
19:41 gram_schmidt: Removing linear dependent vector 67
19:41 gram_schmidt: Removing linear dependent vector 68
19:41 gram_schmidt: Removing linear dependent vector 69
19:41 gram_schmidt: Removing linear dependent vector 70
19:41 gram_schmidt: Removing linear dependent vector 71
19:41 gram_schmidt: Removing linear dependent vector 72
19:41 gram_schmidt: Removing linear dependent vector 73
19:41 gram_schmidt: Removing linear dependent vector 74
19:41 gram_schmidt: Removing linear dependent vector 75
19:41 gram_schmidt: Removing linear dependent vector 76
19:41 gram_schmidt: Removing linear dependent vector 77
19:41 gram_schmidt: Removing linear dependent vector 78
19:41 gram_schmidt: Removing linear dependent vector 79
19:41 gram_schmidt: Removing linear dependent vector 80
19:41 gram_schmidt: Removing linear dependent vector 81
19:41 gram_schmidt: Removing linear dependent vector 82
19:41 gram_schmidt: Removing linear dependent vector 83
19:41 gram_schmidt: Removing linear dependent vector 84
19:41 gram_schmidt: Removing linear dependent vector 85
19:41 gram_schmidt: Removing linear dependent vector 86
19:41 gram_schmidt: Removing linear dependent vector 87
19:41 gram_schmidt: Removing linear dependent vector 88
19:41 gram_schmidt: Removing linear dependent vector 89
19:41 gram_schmidt: Removing linear dependent vector 90
19:41 gram_schmidt: Removing linear dependent vector 91
19:41 gram_schmidt: Removing linear dependent vector 92
19:41 gram_schmidt: Removing linear dependent vector 93
19:41 gram_schmidt: Removing linear dependent vector 94
19:41 gram_schmidt: Removing linear dependent vector 95
19:41 gram_schmidt: Removing linear dependent vector 96
19:41 gram_schmidt: Removing linear dependent vector 97
19:41 gram_schmidt: Removing linear dependent vector 98
19:41 gram_schmidt: Removing linear dependent vector 99
19:41 gram_schmidt: Removing linear dependent vector 100
19:41 gram_schmidt: Removing linear dependent vector 101
19:41 gram_schmidt: Removing linear dependent vector 3
19:41 gram_schmidt: Removing linear dependent vector 4
19:41 gram_schmidt: Removing linear dependent vector 5
19:41 gram_schmidt: Removing linear dependent vector 6
19:41 gram_schmidt: Removing linear dependent vector 7
19:41 gram_schmidt: Removing linear dependent vector 8
19:41 gram_schmidt: Removing linear dependent vector 9
19:41 gram_schmidt: Removing linear dependent vector 10
19:41 gram_schmidt: Removing linear dependent vector 11
19:41 gram_schmidt: Removing linear dependent vector 12
19:41 gram_schmidt: Removing linear dependent vector 13
19:41 gram_schmidt: Removing linear dependent vector 14
19:41 gram_schmidt: Removing linear dependent vector 15
19:41 gram_schmidt: Removing linear dependent vector 16
19:41 gram_schmidt: Removing linear dependent vector 17
19:41 gram_schmidt: Removing linear dependent vector 18
19:41 gram_schmidt: Removing linear dependent vector 19
19:41 gram_schmidt: Removing linear dependent vector 20
19:41 gram_schmidt: Removing linear dependent vector 21
19:41 gram_schmidt: Removing linear dependent vector 22
19:41 gram_schmidt: Removing linear dependent vector 23
19:41 gram_schmidt: Removing linear dependent vector 24
19:41 gram_schmidt: Removing linear dependent vector 25
19:41 gram_schmidt: Removing linear dependent vector 26
19:41 gram_schmidt: Removing linear dependent vector 27
19:41 gram_schmidt: Removing linear dependent vector 28
19:41 gram_schmidt: Removing linear dependent vector 29
19:41 gram_schmidt: Removing linear dependent vector 30
19:41 gram_schmidt: Removing linear dependent vector 31
19:41 gram_schmidt: Removing linear dependent vector 32
19:41 gram_schmidt: Removing linear dependent vector 33
19:41 gram_schmidt: Removing linear dependent vector 34
19:41 gram_schmidt: Removing linear dependent vector 35
19:41 gram_schmidt: Removing linear dependent vector 36
19:41 gram_schmidt: Removing linear dependent vector 37
19:41 gram_schmidt: Removing linear dependent vector 38
19:41 gram_schmidt: Removing linear dependent vector 39
19:41 gram_schmidt: Removing linear dependent vector 40
19:41 gram_schmidt: Removing linear dependent vector 41
19:41 gram_schmidt: Removing linear dependent vector 42
19:41 gram_schmidt: Removing linear dependent vector 43
19:41 gram_schmidt: Removing linear dependent vector 44
19:41 gram_schmidt: Removing linear dependent vector 45
19:41 gram_schmidt: Removing linear dependent vector 46
19:41 gram_schmidt: Removing linear dependent vector 47
19:41 gram_schmidt: Removing linear dependent vector 48
19:41 gram_schmidt: Removing linear dependent vector 49
19:41 gram_schmidt: Removing linear dependent vector 50
19:41 gram_schmidt: Removing linear dependent vector 51
19:41 gram_schmidt: Removing linear dependent vector 52
19:41 gram_schmidt: Removing linear dependent vector 53
19:41 gram_schmidt: Removing linear dependent vector 54
19:41 gram_schmidt: Removing linear dependent vector 55
19:41 gram_schmidt: Removing linear dependent vector 56
19:41 gram_schmidt: Removing linear dependent vector 57
19:41 gram_schmidt: Removing linear dependent vector 58
19:41 gram_schmidt: Removing linear dependent vector 59
19:41 gram_schmidt: Removing linear dependent vector 60
19:41 gram_schmidt: Removing linear dependent vector 61
19:41 gram_schmidt: Removing linear dependent vector 62
19:41 gram_schmidt: Removing linear dependent vector 63
19:41 gram_schmidt: Removing linear dependent vector 64
19:41 gram_schmidt: Removing linear dependent vector 65
19:41 gram_schmidt: Removing linear dependent vector 66
19:41 gram_schmidt: Removing linear dependent vector 67
19:41 gram_schmidt: Removing linear dependent vector 68
19:41 gram_schmidt: Removing linear dependent vector 69
19:41 gram_schmidt: Removing linear dependent vector 70
19:41 gram_schmidt: Removing linear dependent vector 71
19:41 gram_schmidt: Removing linear dependent vector 72
19:41 gram_schmidt: Removing linear dependent vector 73
19:41 gram_schmidt: Removing linear dependent vector 74
19:41 gram_schmidt: Removing linear dependent vector 75
19:41 gram_schmidt: Removing linear dependent vector 76
19:41 gram_schmidt: Removing linear dependent vector 77
19:41 gram_schmidt: Removing linear dependent vector 78
19:41 gram_schmidt: Removing linear dependent vector 79
19:41 gram_schmidt: Removing linear dependent vector 80
19:41 gram_schmidt: Removing linear dependent vector 81
19:41 gram_schmidt: Removing linear dependent vector 82
19:41 gram_schmidt: Removing linear dependent vector 83
19:41 gram_schmidt: Removing linear dependent vector 84
19:41 gram_schmidt: Removing linear dependent vector 85
19:41 gram_schmidt: Removing linear dependent vector 86
19:41 gram_schmidt: Removing linear dependent vector 87
19:41 gram_schmidt: Removing linear dependent vector 88
19:41 gram_schmidt: Removing linear dependent vector 89
19:41 gram_schmidt: Removing linear dependent vector 90
19:41 gram_schmidt: Removing linear dependent vector 91
19:41 gram_schmidt: Removing linear dependent vector 92
19:41 gram_schmidt: Removing linear dependent vector 93
19:41 gram_schmidt: Removing linear dependent vector 94
19:41 gram_schmidt: Removing linear dependent vector 95
19:41 gram_schmidt: Removing linear dependent vector 96
19:41 gram_schmidt: Removing linear dependent vector 97
19:41 gram_schmidt: Removing linear dependent vector 98
19:41 gram_schmidt: Removing linear dependent vector 99
19:41 gram_schmidt: Removing linear dependent vector 100
19:41 gram_schmidt: Removing linear dependent vector 101
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;17]" time="0.003462076187133789"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;18]" time="0.0024385452270507812"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;19]" time="0.005181550979614258"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;20]" time="0.29859375953674316"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;21]" time="1.5832645893096924"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;22]" time="0.0027923583984375"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;23]" time="0.002113819122314453"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;24]" time="0.008896112442016602"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;25]" time="0.43851709365844727"><system-err>19:43 gram_schmidt: Orthonormalizing vector 31 again
19:43 gram_schmidt: Removing linear dependent vector 32
19:43 gram_schmidt: Removing linear dependent vector 33
19:43 gram_schmidt: Removing linear dependent vector 34
19:43 gram_schmidt: Removing linear dependent vector 35
19:43 gram_schmidt: Removing linear dependent vector 36
19:43 gram_schmidt: Removing linear dependent vector 37
19:43 gram_schmidt: Removing linear dependent vector 38
19:43 gram_schmidt: Removing linear dependent vector 39
19:43 gram_schmidt: Removing linear dependent vector 40
19:43 gram_schmidt: Removing linear dependent vector 41
19:43 gram_schmidt: Removing linear dependent vector 42
19:43 gram_schmidt: Orthonormalizing vector 31 again
19:43 gram_schmidt: Removing linear dependent vector 32
19:43 gram_schmidt: Removing linear dependent vector 33
19:43 gram_schmidt: Removing linear dependent vector 34
19:43 gram_schmidt: Removing linear dependent vector 35
19:43 gram_schmidt: Removing linear dependent vector 36
19:43 gram_schmidt: Removing linear dependent vector 37
19:43 gram_schmidt: Removing linear dependent vector 38
19:43 gram_schmidt: Removing linear dependent vector 39
19:43 gram_schmidt: Removing linear dependent vector 40
19:43 gram_schmidt: Removing linear dependent vector 41
19:43 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;26]" time="0.24142050743103027"><system-err>19:43 gram_schmidt: Removing vector 0 of norm 0.0
19:43 gram_schmidt: Removing vector 1 of norm 0.0
19:43 gram_schmidt: Removing vector 2 of norm 0.0
19:43 gram_schmidt: Removing vector 3 of norm 0.0
19:43 gram_schmidt: Removing vector 4 of norm 0.0
19:43 gram_schmidt: Removing vector 5 of norm 0.0
19:43 gram_schmidt: Removing vector 6 of norm 0.0
19:43 gram_schmidt: Removing vector 7 of norm 0.0
19:43 gram_schmidt: Removing vector 8 of norm 0.0
19:43 gram_schmidt: Removing vector 9 of norm 0.0
19:43 gram_schmidt: Removing vector 10 of norm 0.0
19:43 gram_schmidt: Removing vector 11 of norm 0.0
19:43 gram_schmidt: Removing vector 12 of norm 0.0
19:43 gram_schmidt: Removing vector 13 of norm 0.0
19:43 gram_schmidt: Removing vector 14 of norm 0.0
19:43 gram_schmidt: Removing vector 15 of norm 0.0
19:43 gram_schmidt: Removing vector 16 of norm 0.0
19:43 gram_schmidt: Removing vector 17 of norm 0.0
19:43 gram_schmidt: Removing vector 18 of norm 0.0
19:43 gram_schmidt: Removing vector 19 of norm 0.0
19:43 gram_schmidt: Removing vector 20 of norm 0.0
19:43 gram_schmidt: Removing vector 21 of norm 0.0
19:43 gram_schmidt: Removing vector 22 of norm 0.0
19:43 gram_schmidt: Removing vector 23 of norm 0.0
19:43 gram_schmidt: Removing vector 24 of norm 0.0
19:43 gram_schmidt: Removing vector 25 of norm 0.0
19:43 gram_schmidt: Removing vector 26 of norm 0.0
19:43 gram_schmidt: Removing vector 27 of norm 0.0
19:43 gram_schmidt: Removing vector 28 of norm 0.0
19:43 gram_schmidt: Removing vector 29 of norm 0.0
19:43 gram_schmidt: Removing vector 30 of norm 0.0
19:43 gram_schmidt: Removing vector 31 of norm 0.0
19:43 gram_schmidt: Removing vector 32 of norm 0.0
19:43 gram_schmidt: Removing vector 33 of norm 0.0
19:43 gram_schmidt: Removing vector 34 of norm 0.0
19:43 gram_schmidt: Removing vector 35 of norm 0.0
19:43 gram_schmidt: Removing vector 36 of norm 0.0
19:43 gram_schmidt: Removing vector 37 of norm 0.0
19:43 gram_schmidt: Removing vector 38 of norm 0.0
19:43 gram_schmidt: Removing vector 39 of norm 0.0
19:43 gram_schmidt: Removing vector 40 of norm 0.0
19:43 gram_schmidt: Removing vector 41 of norm 0.0
19:43 gram_schmidt: Removing vector 42 of norm 0.0
19:43 gram_schmidt: Removing vector 43 of norm 0.0
19:43 gram_schmidt: Removing vector 44 of norm 0.0
19:43 gram_schmidt: Removing vector 45 of norm 0.0
19:43 gram_schmidt: Removing vector 46 of norm 0.0
19:43 gram_schmidt: Removing vector 47 of norm 0.0
19:43 gram_schmidt: Removing vector 48 of norm 0.0
19:43 gram_schmidt: Removing vector 49 of norm 0.0
19:43 gram_schmidt: Removing vector 50 of norm 0.0
19:43 gram_schmidt: Removing vector 51 of norm 0.0
19:43 gram_schmidt: Removing vector 52 of norm 0.0
19:43 gram_schmidt: Removing vector 53 of norm 0.0
19:43 gram_schmidt: Removing vector 54 of norm 0.0
19:43 gram_schmidt: Removing vector 55 of norm 0.0
19:43 gram_schmidt: Removing vector 56 of norm 0.0
19:43 gram_schmidt: Removing vector 57 of norm 0.0
19:43 gram_schmidt: Removing vector 58 of norm 0.0
19:43 gram_schmidt: Removing vector 59 of norm 0.0
19:43 gram_schmidt: Removing vector 60 of norm 0.0
19:43 gram_schmidt: Removing vector 61 of norm 0.0
19:43 gram_schmidt: Removing vector 62 of norm 0.0
19:43 gram_schmidt: Removing vector 63 of norm 0.0
19:43 gram_schmidt: Removing vector 64 of norm 0.0
19:43 gram_schmidt: Removing vector 65 of norm 0.0
19:43 gram_schmidt: Removing vector 66 of norm 0.0
19:43 gram_schmidt: Removing vector 67 of norm 0.0
19:43 gram_schmidt: Removing vector 68 of norm 0.0
19:43 gram_schmidt: Removing vector 69 of norm 0.0
19:43 gram_schmidt: Removing vector 70 of norm 0.0
19:43 gram_schmidt: Removing vector 71 of norm 0.0
19:43 gram_schmidt: Removing vector 72 of norm 0.0
19:43 gram_schmidt: Removing vector 73 of norm 0.0
19:43 gram_schmidt: Removing vector 74 of norm 0.0
19:43 gram_schmidt: Removing vector 75 of norm 0.0
19:43 gram_schmidt: Removing vector 76 of norm 0.0
19:43 gram_schmidt: Removing vector 77 of norm 0.0
19:43 gram_schmidt: Removing vector 78 of norm 0.0
19:43 gram_schmidt: Removing vector 79 of norm 0.0
19:43 gram_schmidt: Removing vector 80 of norm 0.0
19:43 gram_schmidt: Removing vector 81 of norm 0.0
19:43 gram_schmidt: Removing vector 82 of norm 0.0
19:43 gram_schmidt: Removing vector 83 of norm 0.0
19:43 gram_schmidt: Removing vector 84 of norm 0.0
19:43 gram_schmidt: Removing vector 85 of norm 0.0
19:43 gram_schmidt: Removing vector 86 of norm 0.0
19:43 gram_schmidt: Removing vector 87 of norm 0.0
19:43 gram_schmidt: Removing vector 88 of norm 0.0
19:43 gram_schmidt: Removing vector 89 of norm 0.0
19:43 gram_schmidt: Removing vector 90 of norm 0.0
19:43 gram_schmidt: Removing vector 91 of norm 0.0
19:43 gram_schmidt: Removing vector 92 of norm 0.0
19:43 gram_schmidt: Removing vector 93 of norm 0.0
19:43 gram_schmidt: Removing vector 94 of norm 0.0
19:43 gram_schmidt: Removing vector 95 of norm 0.0
19:43 gram_schmidt: Removing vector 96 of norm 0.0
19:43 gram_schmidt: Removing vector 97 of norm 0.0
19:43 gram_schmidt: Removing vector 98 of norm 0.0
19:43 gram_schmidt: Removing vector 99 of norm 0.0
19:43 gram_schmidt: Removing vector 100 of norm 0.0
19:43 gram_schmidt: Removing vector 101 of norm 0.0
19:44 gram_schmidt: Removing vector 0 of norm 0.0
19:44 gram_schmidt: Removing vector 1 of norm 0.0
19:44 gram_schmidt: Removing vector 2 of norm 0.0
19:44 gram_schmidt: Removing vector 3 of norm 0.0
19:44 gram_schmidt: Removing vector 4 of norm 0.0
19:44 gram_schmidt: Removing vector 5 of norm 0.0
19:44 gram_schmidt: Removing vector 6 of norm 0.0
19:44 gram_schmidt: Removing vector 7 of norm 0.0
19:44 gram_schmidt: Removing vector 8 of norm 0.0
19:44 gram_schmidt: Removing vector 9 of norm 0.0
19:44 gram_schmidt: Removing vector 10 of norm 0.0
19:44 gram_schmidt: Removing vector 11 of norm 0.0
19:44 gram_schmidt: Removing vector 12 of norm 0.0
19:44 gram_schmidt: Removing vector 13 of norm 0.0
19:44 gram_schmidt: Removing vector 14 of norm 0.0
19:44 gram_schmidt: Removing vector 15 of norm 0.0
19:44 gram_schmidt: Removing vector 16 of norm 0.0
19:44 gram_schmidt: Removing vector 17 of norm 0.0
19:44 gram_schmidt: Removing vector 18 of norm 0.0
19:44 gram_schmidt: Removing vector 19 of norm 0.0
19:44 gram_schmidt: Removing vector 20 of norm 0.0
19:44 gram_schmidt: Removing vector 21 of norm 0.0
19:44 gram_schmidt: Removing vector 22 of norm 0.0
19:44 gram_schmidt: Removing vector 23 of norm 0.0
19:44 gram_schmidt: Removing vector 24 of norm 0.0
19:44 gram_schmidt: Removing vector 25 of norm 0.0
19:44 gram_schmidt: Removing vector 26 of norm 0.0
19:44 gram_schmidt: Removing vector 27 of norm 0.0
19:44 gram_schmidt: Removing vector 28 of norm 0.0
19:44 gram_schmidt: Removing vector 29 of norm 0.0
19:44 gram_schmidt: Removing vector 30 of norm 0.0
19:44 gram_schmidt: Removing vector 31 of norm 0.0
19:44 gram_schmidt: Removing vector 32 of norm 0.0
19:44 gram_schmidt: Removing vector 33 of norm 0.0
19:44 gram_schmidt: Removing vector 34 of norm 0.0
19:44 gram_schmidt: Removing vector 35 of norm 0.0
19:44 gram_schmidt: Removing vector 36 of norm 0.0
19:44 gram_schmidt: Removing vector 37 of norm 0.0
19:44 gram_schmidt: Removing vector 38 of norm 0.0
19:44 gram_schmidt: Removing vector 39 of norm 0.0
19:44 gram_schmidt: Removing vector 40 of norm 0.0
19:44 gram_schmidt: Removing vector 41 of norm 0.0
19:44 gram_schmidt: Removing vector 42 of norm 0.0
19:44 gram_schmidt: Removing vector 43 of norm 0.0
19:44 gram_schmidt: Removing vector 44 of norm 0.0
19:44 gram_schmidt: Removing vector 45 of norm 0.0
19:44 gram_schmidt: Removing vector 46 of norm 0.0
19:44 gram_schmidt: Removing vector 47 of norm 0.0
19:44 gram_schmidt: Removing vector 48 of norm 0.0
19:44 gram_schmidt: Removing vector 49 of norm 0.0
19:44 gram_schmidt: Removing vector 50 of norm 0.0
19:44 gram_schmidt: Removing vector 51 of norm 0.0
19:44 gram_schmidt: Removing vector 52 of norm 0.0
19:44 gram_schmidt: Removing vector 53 of norm 0.0
19:44 gram_schmidt: Removing vector 54 of norm 0.0
19:44 gram_schmidt: Removing vector 55 of norm 0.0
19:44 gram_schmidt: Removing vector 56 of norm 0.0
19:44 gram_schmidt: Removing vector 57 of norm 0.0
19:44 gram_schmidt: Removing vector 58 of norm 0.0
19:44 gram_schmidt: Removing vector 59 of norm 0.0
19:44 gram_schmidt: Removing vector 60 of norm 0.0
19:44 gram_schmidt: Removing vector 61 of norm 0.0
19:44 gram_schmidt: Removing vector 62 of norm 0.0
19:44 gram_schmidt: Removing vector 63 of norm 0.0
19:44 gram_schmidt: Removing vector 64 of norm 0.0
19:44 gram_schmidt: Removing vector 65 of norm 0.0
19:44 gram_schmidt: Removing vector 66 of norm 0.0
19:44 gram_schmidt: Removing vector 67 of norm 0.0
19:44 gram_schmidt: Removing vector 68 of norm 0.0
19:44 gram_schmidt: Removing vector 69 of norm 0.0
19:44 gram_schmidt: Removing vector 70 of norm 0.0
19:44 gram_schmidt: Removing vector 71 of norm 0.0
19:44 gram_schmidt: Removing vector 72 of norm 0.0
19:44 gram_schmidt: Removing vector 73 of norm 0.0
19:44 gram_schmidt: Removing vector 74 of norm 0.0
19:44 gram_schmidt: Removing vector 75 of norm 0.0
19:44 gram_schmidt: Removing vector 76 of norm 0.0
19:44 gram_schmidt: Removing vector 77 of norm 0.0
19:44 gram_schmidt: Removing vector 78 of norm 0.0
19:44 gram_schmidt: Removing vector 79 of norm 0.0
19:44 gram_schmidt: Removing vector 80 of norm 0.0
19:44 gram_schmidt: Removing vector 81 of norm 0.0
19:44 gram_schmidt: Removing vector 82 of norm 0.0
19:44 gram_schmidt: Removing vector 83 of norm 0.0
19:44 gram_schmidt: Removing vector 84 of norm 0.0
19:44 gram_schmidt: Removing vector 85 of norm 0.0
19:44 gram_schmidt: Removing vector 86 of norm 0.0
19:44 gram_schmidt: Removing vector 87 of norm 0.0
19:44 gram_schmidt: Removing vector 88 of norm 0.0
19:44 gram_schmidt: Removing vector 89 of norm 0.0
19:44 gram_schmidt: Removing vector 90 of norm 0.0
19:44 gram_schmidt: Removing vector 91 of norm 0.0
19:44 gram_schmidt: Removing vector 92 of norm 0.0
19:44 gram_schmidt: Removing vector 93 of norm 0.0
19:44 gram_schmidt: Removing vector 94 of norm 0.0
19:44 gram_schmidt: Removing vector 95 of norm 0.0
19:44 gram_schmidt: Removing vector 96 of norm 0.0
19:44 gram_schmidt: Removing vector 97 of norm 0.0
19:44 gram_schmidt: Removing vector 98 of norm 0.0
19:44 gram_schmidt: Removing vector 99 of norm 0.0
19:44 gram_schmidt: Removing vector 100 of norm 0.0
19:44 gram_schmidt: Removing vector 101 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;0]" time="0.0029211044311523438"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;1]" time="0.002191781997680664"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;2]" time="0.0023317337036132812"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;3]" time="0.11534571647644043"><system-err>19:44 gram_schmidt: Orthonormalizing vector 31 again
19:44 gram_schmidt: Removing linear dependent vector 32
19:44 gram_schmidt: Removing linear dependent vector 33
19:44 gram_schmidt: Removing linear dependent vector 34
19:44 gram_schmidt: Removing linear dependent vector 35
19:44 gram_schmidt: Removing linear dependent vector 36
19:44 gram_schmidt: Removing linear dependent vector 37
19:44 gram_schmidt: Removing linear dependent vector 38
19:44 gram_schmidt: Removing linear dependent vector 39
19:44 gram_schmidt: Removing linear dependent vector 40
19:44 gram_schmidt: Removing linear dependent vector 41
19:44 gram_schmidt: Removing linear dependent vector 42
19:44 gram_schmidt: Orthonormalizing vector 31 again
19:44 gram_schmidt: Removing linear dependent vector 32
19:44 gram_schmidt: Removing linear dependent vector 33
19:44 gram_schmidt: Removing linear dependent vector 34
19:44 gram_schmidt: Removing linear dependent vector 35
19:44 gram_schmidt: Removing linear dependent vector 36
19:44 gram_schmidt: Removing linear dependent vector 37
19:44 gram_schmidt: Removing linear dependent vector 38
19:44 gram_schmidt: Removing linear dependent vector 39
19:44 gram_schmidt: Removing linear dependent vector 40
19:44 gram_schmidt: Removing linear dependent vector 41
19:44 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;4]" time="0.02205491065979004"><system-err>19:44 gram_schmidt: Removing vector 0 of norm 0.0
19:44 gram_schmidt: Removing vector 1 of norm 0.0
19:44 gram_schmidt: Removing vector 2 of norm 0.0
19:44 gram_schmidt: Removing vector 3 of norm 0.0
19:44 gram_schmidt: Removing vector 4 of norm 0.0
19:44 gram_schmidt: Removing vector 5 of norm 0.0
19:44 gram_schmidt: Removing vector 6 of norm 0.0
19:44 gram_schmidt: Removing vector 7 of norm 0.0
19:44 gram_schmidt: Removing vector 8 of norm 0.0
19:44 gram_schmidt: Removing vector 9 of norm 0.0
19:44 gram_schmidt: Removing vector 10 of norm 0.0
19:44 gram_schmidt: Removing vector 11 of norm 0.0
19:44 gram_schmidt: Removing vector 12 of norm 0.0
19:44 gram_schmidt: Removing vector 13 of norm 0.0
19:44 gram_schmidt: Removing vector 14 of norm 0.0
19:44 gram_schmidt: Removing vector 15 of norm 0.0
19:44 gram_schmidt: Removing vector 16 of norm 0.0
19:44 gram_schmidt: Removing vector 17 of norm 0.0
19:44 gram_schmidt: Removing vector 18 of norm 0.0
19:44 gram_schmidt: Removing vector 19 of norm 0.0
19:44 gram_schmidt: Removing vector 20 of norm 0.0
19:44 gram_schmidt: Removing vector 21 of norm 0.0
19:44 gram_schmidt: Removing vector 22 of norm 0.0
19:44 gram_schmidt: Removing vector 23 of norm 0.0
19:44 gram_schmidt: Removing vector 24 of norm 0.0
19:44 gram_schmidt: Removing vector 25 of norm 0.0
19:44 gram_schmidt: Removing vector 26 of norm 0.0
19:44 gram_schmidt: Removing vector 27 of norm 0.0
19:44 gram_schmidt: Removing vector 28 of norm 0.0
19:44 gram_schmidt: Removing vector 29 of norm 0.0
19:44 gram_schmidt: Removing vector 30 of norm 0.0
19:44 gram_schmidt: Removing vector 31 of norm 0.0
19:44 gram_schmidt: Removing vector 32 of norm 0.0
19:44 gram_schmidt: Removing vector 33 of norm 0.0
19:44 gram_schmidt: Removing vector 34 of norm 0.0
19:44 gram_schmidt: Removing vector 35 of norm 0.0
19:44 gram_schmidt: Removing vector 36 of norm 0.0
19:44 gram_schmidt: Removing vector 37 of norm 0.0
19:44 gram_schmidt: Removing vector 38 of norm 0.0
19:44 gram_schmidt: Removing vector 39 of norm 0.0
19:44 gram_schmidt: Removing vector 40 of norm 0.0
19:44 gram_schmidt: Removing vector 41 of norm 0.0
19:44 gram_schmidt: Removing vector 42 of norm 0.0
19:44 gram_schmidt: Removing vector 43 of norm 0.0
19:44 gram_schmidt: Removing vector 44 of norm 0.0
19:44 gram_schmidt: Removing vector 45 of norm 0.0
19:44 gram_schmidt: Removing vector 46 of norm 0.0
19:44 gram_schmidt: Removing vector 47 of norm 0.0
19:44 gram_schmidt: Removing vector 48 of norm 0.0
19:44 gram_schmidt: Removing vector 49 of norm 0.0
19:44 gram_schmidt: Removing vector 50 of norm 0.0
19:44 gram_schmidt: Removing vector 51 of norm 0.0
19:44 gram_schmidt: Removing vector 52 of norm 0.0
19:44 gram_schmidt: Removing vector 53 of norm 0.0
19:44 gram_schmidt: Removing vector 54 of norm 0.0
19:44 gram_schmidt: Removing vector 55 of norm 0.0
19:44 gram_schmidt: Removing vector 56 of norm 0.0
19:44 gram_schmidt: Removing vector 57 of norm 0.0
19:44 gram_schmidt: Removing vector 58 of norm 0.0
19:44 gram_schmidt: Removing vector 59 of norm 0.0
19:44 gram_schmidt: Removing vector 60 of norm 0.0
19:44 gram_schmidt: Removing vector 61 of norm 0.0
19:44 gram_schmidt: Removing vector 62 of norm 0.0
19:44 gram_schmidt: Removing vector 63 of norm 0.0
19:44 gram_schmidt: Removing vector 64 of norm 0.0
19:44 gram_schmidt: Removing vector 65 of norm 0.0
19:44 gram_schmidt: Removing vector 66 of norm 0.0
19:44 gram_schmidt: Removing vector 67 of norm 0.0
19:44 gram_schmidt: Removing vector 68 of norm 0.0
19:44 gram_schmidt: Removing vector 69 of norm 0.0
19:44 gram_schmidt: Removing vector 70 of norm 0.0
19:44 gram_schmidt: Removing vector 71 of norm 0.0
19:44 gram_schmidt: Removing vector 72 of norm 0.0
19:44 gram_schmidt: Removing vector 73 of norm 0.0
19:44 gram_schmidt: Removing vector 74 of norm 0.0
19:44 gram_schmidt: Removing vector 75 of norm 0.0
19:44 gram_schmidt: Removing vector 76 of norm 0.0
19:44 gram_schmidt: Removing vector 77 of norm 0.0
19:44 gram_schmidt: Removing vector 78 of norm 0.0
19:44 gram_schmidt: Removing vector 79 of norm 0.0
19:44 gram_schmidt: Removing vector 80 of norm 0.0
19:44 gram_schmidt: Removing vector 81 of norm 0.0
19:44 gram_schmidt: Removing vector 82 of norm 0.0
19:44 gram_schmidt: Removing vector 83 of norm 0.0
19:44 gram_schmidt: Removing vector 84 of norm 0.0
19:44 gram_schmidt: Removing vector 85 of norm 0.0
19:44 gram_schmidt: Removing vector 86 of norm 0.0
19:44 gram_schmidt: Removing vector 87 of norm 0.0
19:44 gram_schmidt: Removing vector 88 of norm 0.0
19:44 gram_schmidt: Removing vector 89 of norm 0.0
19:44 gram_schmidt: Removing vector 90 of norm 0.0
19:44 gram_schmidt: Removing vector 91 of norm 0.0
19:44 gram_schmidt: Removing vector 92 of norm 0.0
19:44 gram_schmidt: Removing vector 93 of norm 0.0
19:44 gram_schmidt: Removing vector 94 of norm 0.0
19:44 gram_schmidt: Removing vector 95 of norm 0.0
19:44 gram_schmidt: Removing vector 96 of norm 0.0
19:44 gram_schmidt: Removing vector 97 of norm 0.0
19:44 gram_schmidt: Removing vector 98 of norm 0.0
19:44 gram_schmidt: Removing vector 99 of norm 0.0
19:44 gram_schmidt: Removing vector 100 of norm 0.0
19:44 gram_schmidt: Removing vector 101 of norm 0.0
19:44 gram_schmidt: Removing vector 0 of norm 0.0
19:44 gram_schmidt: Removing vector 1 of norm 0.0
19:44 gram_schmidt: Removing vector 2 of norm 0.0
19:44 gram_schmidt: Removing vector 3 of norm 0.0
19:44 gram_schmidt: Removing vector 4 of norm 0.0
19:44 gram_schmidt: Removing vector 5 of norm 0.0
19:44 gram_schmidt: Removing vector 6 of norm 0.0
19:44 gram_schmidt: Removing vector 7 of norm 0.0
19:44 gram_schmidt: Removing vector 8 of norm 0.0
19:44 gram_schmidt: Removing vector 9 of norm 0.0
19:44 gram_schmidt: Removing vector 10 of norm 0.0
19:44 gram_schmidt: Removing vector 11 of norm 0.0
19:44 gram_schmidt: Removing vector 12 of norm 0.0
19:44 gram_schmidt: Removing vector 13 of norm 0.0
19:44 gram_schmidt: Removing vector 14 of norm 0.0
19:44 gram_schmidt: Removing vector 15 of norm 0.0
19:44 gram_schmidt: Removing vector 16 of norm 0.0
19:44 gram_schmidt: Removing vector 17 of norm 0.0
19:44 gram_schmidt: Removing vector 18 of norm 0.0
19:44 gram_schmidt: Removing vector 19 of norm 0.0
19:44 gram_schmidt: Removing vector 20 of norm 0.0
19:44 gram_schmidt: Removing vector 21 of norm 0.0
19:44 gram_schmidt: Removing vector 22 of norm 0.0
19:44 gram_schmidt: Removing vector 23 of norm 0.0
19:44 gram_schmidt: Removing vector 24 of norm 0.0
19:44 gram_schmidt: Removing vector 25 of norm 0.0
19:44 gram_schmidt: Removing vector 26 of norm 0.0
19:44 gram_schmidt: Removing vector 27 of norm 0.0
19:44 gram_schmidt: Removing vector 28 of norm 0.0
19:44 gram_schmidt: Removing vector 29 of norm 0.0
19:44 gram_schmidt: Removing vector 30 of norm 0.0
19:44 gram_schmidt: Removing vector 31 of norm 0.0
19:44 gram_schmidt: Removing vector 32 of norm 0.0
19:44 gram_schmidt: Removing vector 33 of norm 0.0
19:44 gram_schmidt: Removing vector 34 of norm 0.0
19:44 gram_schmidt: Removing vector 35 of norm 0.0
19:44 gram_schmidt: Removing vector 36 of norm 0.0
19:44 gram_schmidt: Removing vector 37 of norm 0.0
19:44 gram_schmidt: Removing vector 38 of norm 0.0
19:44 gram_schmidt: Removing vector 39 of norm 0.0
19:44 gram_schmidt: Removing vector 40 of norm 0.0
19:44 gram_schmidt: Removing vector 41 of norm 0.0
19:44 gram_schmidt: Removing vector 42 of norm 0.0
19:44 gram_schmidt: Removing vector 43 of norm 0.0
19:44 gram_schmidt: Removing vector 44 of norm 0.0
19:44 gram_schmidt: Removing vector 45 of norm 0.0
19:44 gram_schmidt: Removing vector 46 of norm 0.0
19:44 gram_schmidt: Removing vector 47 of norm 0.0
19:44 gram_schmidt: Removing vector 48 of norm 0.0
19:44 gram_schmidt: Removing vector 49 of norm 0.0
19:44 gram_schmidt: Removing vector 50 of norm 0.0
19:44 gram_schmidt: Removing vector 51 of norm 0.0
19:44 gram_schmidt: Removing vector 52 of norm 0.0
19:44 gram_schmidt: Removing vector 53 of norm 0.0
19:44 gram_schmidt: Removing vector 54 of norm 0.0
19:44 gram_schmidt: Removing vector 55 of norm 0.0
19:44 gram_schmidt: Removing vector 56 of norm 0.0
19:44 gram_schmidt: Removing vector 57 of norm 0.0
19:44 gram_schmidt: Removing vector 58 of norm 0.0
19:44 gram_schmidt: Removing vector 59 of norm 0.0
19:44 gram_schmidt: Removing vector 60 of norm 0.0
19:44 gram_schmidt: Removing vector 61 of norm 0.0
19:44 gram_schmidt: Removing vector 62 of norm 0.0
19:44 gram_schmidt: Removing vector 63 of norm 0.0
19:44 gram_schmidt: Removing vector 64 of norm 0.0
19:44 gram_schmidt: Removing vector 65 of norm 0.0
19:44 gram_schmidt: Removing vector 66 of norm 0.0
19:44 gram_schmidt: Removing vector 67 of norm 0.0
19:44 gram_schmidt: Removing vector 68 of norm 0.0
19:44 gram_schmidt: Removing vector 69 of norm 0.0
19:44 gram_schmidt: Removing vector 70 of norm 0.0
19:44 gram_schmidt: Removing vector 71 of norm 0.0
19:44 gram_schmidt: Removing vector 72 of norm 0.0
19:44 gram_schmidt: Removing vector 73 of norm 0.0
19:44 gram_schmidt: Removing vector 74 of norm 0.0
19:44 gram_schmidt: Removing vector 75 of norm 0.0
19:44 gram_schmidt: Removing vector 76 of norm 0.0
19:44 gram_schmidt: Removing vector 77 of norm 0.0
19:44 gram_schmidt: Removing vector 78 of norm 0.0
19:44 gram_schmidt: Removing vector 79 of norm 0.0
19:44 gram_schmidt: Removing vector 80 of norm 0.0
19:44 gram_schmidt: Removing vector 81 of norm 0.0
19:44 gram_schmidt: Removing vector 82 of norm 0.0
19:44 gram_schmidt: Removing vector 83 of norm 0.0
19:44 gram_schmidt: Removing vector 84 of norm 0.0
19:44 gram_schmidt: Removing vector 85 of norm 0.0
19:44 gram_schmidt: Removing vector 86 of norm 0.0
19:44 gram_schmidt: Removing vector 87 of norm 0.0
19:44 gram_schmidt: Removing vector 88 of norm 0.0
19:44 gram_schmidt: Removing vector 89 of norm 0.0
19:44 gram_schmidt: Removing vector 90 of norm 0.0
19:44 gram_schmidt: Removing vector 91 of norm 0.0
19:44 gram_schmidt: Removing vector 92 of norm 0.0
19:44 gram_schmidt: Removing vector 93 of norm 0.0
19:44 gram_schmidt: Removing vector 94 of norm 0.0
19:44 gram_schmidt: Removing vector 95 of norm 0.0
19:44 gram_schmidt: Removing vector 96 of norm 0.0
19:44 gram_schmidt: Removing vector 97 of norm 0.0
19:44 gram_schmidt: Removing vector 98 of norm 0.0
19:44 gram_schmidt: Removing vector 99 of norm 0.0
19:44 gram_schmidt: Removing vector 100 of norm 0.0
19:44 gram_schmidt: Removing vector 101 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;5]" time="0.002855062484741211"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;6]" time="0.002097606658935547"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;7]" time="0.0024225711822509766"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;8]" time="0.2160794734954834"><system-err>19:44 gram_schmidt: Orthonormalizing vector 31 again
19:44 gram_schmidt: Removing linear dependent vector 32
19:44 gram_schmidt: Removing linear dependent vector 33
19:44 gram_schmidt: Removing linear dependent vector 34
19:44 gram_schmidt: Removing linear dependent vector 35
19:44 gram_schmidt: Removing linear dependent vector 36
19:44 gram_schmidt: Removing linear dependent vector 37
19:44 gram_schmidt: Removing linear dependent vector 38
19:44 gram_schmidt: Removing linear dependent vector 39
19:44 gram_schmidt: Removing linear dependent vector 40
19:44 gram_schmidt: Removing linear dependent vector 41
19:44 gram_schmidt: Removing linear dependent vector 42
19:44 gram_schmidt: Orthonormalizing vector 31 again
19:44 gram_schmidt: Removing linear dependent vector 32
19:44 gram_schmidt: Removing linear dependent vector 33
19:44 gram_schmidt: Removing linear dependent vector 34
19:44 gram_schmidt: Removing linear dependent vector 35
19:44 gram_schmidt: Removing linear dependent vector 36
19:44 gram_schmidt: Removing linear dependent vector 37
19:44 gram_schmidt: Removing linear dependent vector 38
19:44 gram_schmidt: Removing linear dependent vector 39
19:44 gram_schmidt: Removing linear dependent vector 40
19:44 gram_schmidt: Removing linear dependent vector 41
19:44 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;9]" time="0.028976917266845703"><system-err>19:44 gram_schmidt: Removing vector 0 of norm 0.0
19:44 gram_schmidt: Removing vector 1 of norm 0.0
19:44 gram_schmidt: Removing vector 2 of norm 0.0
19:44 gram_schmidt: Removing vector 3 of norm 0.0
19:44 gram_schmidt: Removing vector 4 of norm 0.0
19:44 gram_schmidt: Removing vector 5 of norm 0.0
19:44 gram_schmidt: Removing vector 6 of norm 0.0
19:44 gram_schmidt: Removing vector 7 of norm 0.0
19:44 gram_schmidt: Removing vector 8 of norm 0.0
19:44 gram_schmidt: Removing vector 9 of norm 0.0
19:44 gram_schmidt: Removing vector 10 of norm 0.0
19:44 gram_schmidt: Removing vector 11 of norm 0.0
19:44 gram_schmidt: Removing vector 12 of norm 0.0
19:44 gram_schmidt: Removing vector 13 of norm 0.0
19:44 gram_schmidt: Removing vector 14 of norm 0.0
19:44 gram_schmidt: Removing vector 15 of norm 0.0
19:44 gram_schmidt: Removing vector 16 of norm 0.0
19:44 gram_schmidt: Removing vector 17 of norm 0.0
19:44 gram_schmidt: Removing vector 18 of norm 0.0
19:44 gram_schmidt: Removing vector 19 of norm 0.0
19:44 gram_schmidt: Removing vector 20 of norm 0.0
19:44 gram_schmidt: Removing vector 21 of norm 0.0
19:44 gram_schmidt: Removing vector 22 of norm 0.0
19:44 gram_schmidt: Removing vector 23 of norm 0.0
19:44 gram_schmidt: Removing vector 24 of norm 0.0
19:44 gram_schmidt: Removing vector 25 of norm 0.0
19:44 gram_schmidt: Removing vector 26 of norm 0.0
19:44 gram_schmidt: Removing vector 27 of norm 0.0
19:44 gram_schmidt: Removing vector 28 of norm 0.0
19:44 gram_schmidt: Removing vector 29 of norm 0.0
19:44 gram_schmidt: Removing vector 30 of norm 0.0
19:44 gram_schmidt: Removing vector 31 of norm 0.0
19:44 gram_schmidt: Removing vector 32 of norm 0.0
19:44 gram_schmidt: Removing vector 33 of norm 0.0
19:44 gram_schmidt: Removing vector 34 of norm 0.0
19:44 gram_schmidt: Removing vector 35 of norm 0.0
19:44 gram_schmidt: Removing vector 36 of norm 0.0
19:44 gram_schmidt: Removing vector 37 of norm 0.0
19:44 gram_schmidt: Removing vector 38 of norm 0.0
19:44 gram_schmidt: Removing vector 39 of norm 0.0
19:44 gram_schmidt: Removing vector 40 of norm 0.0
19:44 gram_schmidt: Removing vector 41 of norm 0.0
19:44 gram_schmidt: Removing vector 42 of norm 0.0
19:44 gram_schmidt: Removing vector 43 of norm 0.0
19:44 gram_schmidt: Removing vector 44 of norm 0.0
19:44 gram_schmidt: Removing vector 45 of norm 0.0
19:44 gram_schmidt: Removing vector 46 of norm 0.0
19:44 gram_schmidt: Removing vector 47 of norm 0.0
19:44 gram_schmidt: Removing vector 48 of norm 0.0
19:44 gram_schmidt: Removing vector 49 of norm 0.0
19:44 gram_schmidt: Removing vector 50 of norm 0.0
19:44 gram_schmidt: Removing vector 51 of norm 0.0
19:44 gram_schmidt: Removing vector 52 of norm 0.0
19:44 gram_schmidt: Removing vector 53 of norm 0.0
19:44 gram_schmidt: Removing vector 54 of norm 0.0
19:44 gram_schmidt: Removing vector 55 of norm 0.0
19:44 gram_schmidt: Removing vector 56 of norm 0.0
19:44 gram_schmidt: Removing vector 57 of norm 0.0
19:44 gram_schmidt: Removing vector 58 of norm 0.0
19:44 gram_schmidt: Removing vector 59 of norm 0.0
19:44 gram_schmidt: Removing vector 60 of norm 0.0
19:44 gram_schmidt: Removing vector 61 of norm 0.0
19:44 gram_schmidt: Removing vector 62 of norm 0.0
19:44 gram_schmidt: Removing vector 63 of norm 0.0
19:44 gram_schmidt: Removing vector 64 of norm 0.0
19:44 gram_schmidt: Removing vector 65 of norm 0.0
19:44 gram_schmidt: Removing vector 66 of norm 0.0
19:44 gram_schmidt: Removing vector 67 of norm 0.0
19:44 gram_schmidt: Removing vector 68 of norm 0.0
19:44 gram_schmidt: Removing vector 69 of norm 0.0
19:44 gram_schmidt: Removing vector 70 of norm 0.0
19:44 gram_schmidt: Removing vector 71 of norm 0.0
19:44 gram_schmidt: Removing vector 72 of norm 0.0
19:44 gram_schmidt: Removing vector 73 of norm 0.0
19:44 gram_schmidt: Removing vector 74 of norm 0.0
19:44 gram_schmidt: Removing vector 75 of norm 0.0
19:44 gram_schmidt: Removing vector 76 of norm 0.0
19:44 gram_schmidt: Removing vector 77 of norm 0.0
19:44 gram_schmidt: Removing vector 78 of norm 0.0
19:44 gram_schmidt: Removing vector 79 of norm 0.0
19:44 gram_schmidt: Removing vector 80 of norm 0.0
19:44 gram_schmidt: Removing vector 81 of norm 0.0
19:44 gram_schmidt: Removing vector 82 of norm 0.0
19:44 gram_schmidt: Removing vector 83 of norm 0.0
19:44 gram_schmidt: Removing vector 84 of norm 0.0
19:44 gram_schmidt: Removing vector 85 of norm 0.0
19:44 gram_schmidt: Removing vector 86 of norm 0.0
19:44 gram_schmidt: Removing vector 87 of norm 0.0
19:44 gram_schmidt: Removing vector 88 of norm 0.0
19:44 gram_schmidt: Removing vector 89 of norm 0.0
19:44 gram_schmidt: Removing vector 90 of norm 0.0
19:44 gram_schmidt: Removing vector 91 of norm 0.0
19:44 gram_schmidt: Removing vector 92 of norm 0.0
19:44 gram_schmidt: Removing vector 93 of norm 0.0
19:44 gram_schmidt: Removing vector 94 of norm 0.0
19:44 gram_schmidt: Removing vector 95 of norm 0.0
19:44 gram_schmidt: Removing vector 96 of norm 0.0
19:44 gram_schmidt: Removing vector 97 of norm 0.0
19:44 gram_schmidt: Removing vector 98 of norm 0.0
19:44 gram_schmidt: Removing vector 99 of norm 0.0
19:44 gram_schmidt: Removing vector 100 of norm 0.0
19:44 gram_schmidt: Removing vector 101 of norm 0.0
19:44 gram_schmidt: Removing vector 0 of norm 0.0
19:44 gram_schmidt: Removing vector 1 of norm 0.0
19:44 gram_schmidt: Removing vector 2 of norm 0.0
19:44 gram_schmidt: Removing vector 3 of norm 0.0
19:44 gram_schmidt: Removing vector 4 of norm 0.0
19:44 gram_schmidt: Removing vector 5 of norm 0.0
19:44 gram_schmidt: Removing vector 6 of norm 0.0
19:44 gram_schmidt: Removing vector 7 of norm 0.0
19:44 gram_schmidt: Removing vector 8 of norm 0.0
19:44 gram_schmidt: Removing vector 9 of norm 0.0
19:44 gram_schmidt: Removing vector 10 of norm 0.0
19:44 gram_schmidt: Removing vector 11 of norm 0.0
19:44 gram_schmidt: Removing vector 12 of norm 0.0
19:44 gram_schmidt: Removing vector 13 of norm 0.0
19:44 gram_schmidt: Removing vector 14 of norm 0.0
19:44 gram_schmidt: Removing vector 15 of norm 0.0
19:44 gram_schmidt: Removing vector 16 of norm 0.0
19:44 gram_schmidt: Removing vector 17 of norm 0.0
19:44 gram_schmidt: Removing vector 18 of norm 0.0
19:44 gram_schmidt: Removing vector 19 of norm 0.0
19:44 gram_schmidt: Removing vector 20 of norm 0.0
19:44 gram_schmidt: Removing vector 21 of norm 0.0
19:44 gram_schmidt: Removing vector 22 of norm 0.0
19:44 gram_schmidt: Removing vector 23 of norm 0.0
19:44 gram_schmidt: Removing vector 24 of norm 0.0
19:44 gram_schmidt: Removing vector 25 of norm 0.0
19:44 gram_schmidt: Removing vector 26 of norm 0.0
19:44 gram_schmidt: Removing vector 27 of norm 0.0
19:44 gram_schmidt: Removing vector 28 of norm 0.0
19:44 gram_schmidt: Removing vector 29 of norm 0.0
19:44 gram_schmidt: Removing vector 30 of norm 0.0
19:44 gram_schmidt: Removing vector 31 of norm 0.0
19:44 gram_schmidt: Removing vector 32 of norm 0.0
19:44 gram_schmidt: Removing vector 33 of norm 0.0
19:44 gram_schmidt: Removing vector 34 of norm 0.0
19:44 gram_schmidt: Removing vector 35 of norm 0.0
19:44 gram_schmidt: Removing vector 36 of norm 0.0
19:44 gram_schmidt: Removing vector 37 of norm 0.0
19:44 gram_schmidt: Removing vector 38 of norm 0.0
19:44 gram_schmidt: Removing vector 39 of norm 0.0
19:44 gram_schmidt: Removing vector 40 of norm 0.0
19:44 gram_schmidt: Removing vector 41 of norm 0.0
19:44 gram_schmidt: Removing vector 42 of norm 0.0
19:44 gram_schmidt: Removing vector 43 of norm 0.0
19:44 gram_schmidt: Removing vector 44 of norm 0.0
19:44 gram_schmidt: Removing vector 45 of norm 0.0
19:44 gram_schmidt: Removing vector 46 of norm 0.0
19:44 gram_schmidt: Removing vector 47 of norm 0.0
19:44 gram_schmidt: Removing vector 48 of norm 0.0
19:44 gram_schmidt: Removing vector 49 of norm 0.0
19:44 gram_schmidt: Removing vector 50 of norm 0.0
19:44 gram_schmidt: Removing vector 51 of norm 0.0
19:44 gram_schmidt: Removing vector 52 of norm 0.0
19:44 gram_schmidt: Removing vector 53 of norm 0.0
19:44 gram_schmidt: Removing vector 54 of norm 0.0
19:44 gram_schmidt: Removing vector 55 of norm 0.0
19:44 gram_schmidt: Removing vector 56 of norm 0.0
19:44 gram_schmidt: Removing vector 57 of norm 0.0
19:44 gram_schmidt: Removing vector 58 of norm 0.0
19:44 gram_schmidt: Removing vector 59 of norm 0.0
19:44 gram_schmidt: Removing vector 60 of norm 0.0
19:44 gram_schmidt: Removing vector 61 of norm 0.0
19:44 gram_schmidt: Removing vector 62 of norm 0.0
19:44 gram_schmidt: Removing vector 63 of norm 0.0
19:44 gram_schmidt: Removing vector 64 of norm 0.0
19:44 gram_schmidt: Removing vector 65 of norm 0.0
19:44 gram_schmidt: Removing vector 66 of norm 0.0
19:44 gram_schmidt: Removing vector 67 of norm 0.0
19:44 gram_schmidt: Removing vector 68 of norm 0.0
19:44 gram_schmidt: Removing vector 69 of norm 0.0
19:44 gram_schmidt: Removing vector 70 of norm 0.0
19:44 gram_schmidt: Removing vector 71 of norm 0.0
19:44 gram_schmidt: Removing vector 72 of norm 0.0
19:44 gram_schmidt: Removing vector 73 of norm 0.0
19:44 gram_schmidt: Removing vector 74 of norm 0.0
19:44 gram_schmidt: Removing vector 75 of norm 0.0
19:44 gram_schmidt: Removing vector 76 of norm 0.0
19:44 gram_schmidt: Removing vector 77 of norm 0.0
19:44 gram_schmidt: Removing vector 78 of norm 0.0
19:44 gram_schmidt: Removing vector 79 of norm 0.0
19:44 gram_schmidt: Removing vector 80 of norm 0.0
19:44 gram_schmidt: Removing vector 81 of norm 0.0
19:44 gram_schmidt: Removing vector 82 of norm 0.0
19:44 gram_schmidt: Removing vector 83 of norm 0.0
19:44 gram_schmidt: Removing vector 84 of norm 0.0
19:44 gram_schmidt: Removing vector 85 of norm 0.0
19:44 gram_schmidt: Removing vector 86 of norm 0.0
19:44 gram_schmidt: Removing vector 87 of norm 0.0
19:44 gram_schmidt: Removing vector 88 of norm 0.0
19:44 gram_schmidt: Removing vector 89 of norm 0.0
19:44 gram_schmidt: Removing vector 90 of norm 0.0
19:44 gram_schmidt: Removing vector 91 of norm 0.0
19:44 gram_schmidt: Removing vector 92 of norm 0.0
19:44 gram_schmidt: Removing vector 93 of norm 0.0
19:44 gram_schmidt: Removing vector 94 of norm 0.0
19:44 gram_schmidt: Removing vector 95 of norm 0.0
19:44 gram_schmidt: Removing vector 96 of norm 0.0
19:44 gram_schmidt: Removing vector 97 of norm 0.0
19:44 gram_schmidt: Removing vector 98 of norm 0.0
19:44 gram_schmidt: Removing vector 99 of norm 0.0
19:44 gram_schmidt: Removing vector 100 of norm 0.0
19:44 gram_schmidt: Removing vector 101 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;10]" time="0.003793954849243164"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;11]" time="0.007447004318237305"><system-err>19:44 gram_schmidt: Removing linear dependent vector 3
19:44 gram_schmidt: Removing linear dependent vector 3
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;12]" time="0.004244327545166016"><system-err>19:44 gram_schmidt: Removing vector 0 of norm 0.0
19:44 gram_schmidt: Removing vector 1 of norm 0.0
19:44 gram_schmidt: Removing vector 2 of norm 0.0
19:44 gram_schmidt: Removing vector 0 of norm 0.0
19:44 gram_schmidt: Removing vector 1 of norm 0.0
19:44 gram_schmidt: Removing vector 2 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;13]" time="0.0029637813568115234"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;14]" time="0.005178928375244141"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;15]" time="0.42864108085632324"><system-err>19:44 gram_schmidt: Removing linear dependent vector 36
19:44 gram_schmidt: Removing linear dependent vector 37
19:44 gram_schmidt: Removing linear dependent vector 38
19:44 gram_schmidt: Removing linear dependent vector 39
19:44 gram_schmidt: Removing linear dependent vector 40
19:44 gram_schmidt: Removing linear dependent vector 41
19:44 gram_schmidt: Removing linear dependent vector 42
19:44 gram_schmidt: Removing linear dependent vector 36
19:44 gram_schmidt: Removing linear dependent vector 37
19:45 gram_schmidt: Removing linear dependent vector 38
19:45 gram_schmidt: Removing linear dependent vector 39
19:45 gram_schmidt: Removing linear dependent vector 40
19:45 gram_schmidt: Removing linear dependent vector 41
19:45 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;16]" time="0.22800993919372559"><system-err>19:45 gram_schmidt: Removing linear dependent vector 3
19:45 gram_schmidt: Removing linear dependent vector 4
19:45 gram_schmidt: Removing linear dependent vector 5
19:45 gram_schmidt: Removing linear dependent vector 6
19:45 gram_schmidt: Removing linear dependent vector 7
19:45 gram_schmidt: Removing linear dependent vector 8
19:45 gram_schmidt: Removing linear dependent vector 9
19:45 gram_schmidt: Removing linear dependent vector 10
19:45 gram_schmidt: Removing linear dependent vector 11
19:45 gram_schmidt: Removing linear dependent vector 12
19:45 gram_schmidt: Removing linear dependent vector 13
19:45 gram_schmidt: Removing linear dependent vector 14
19:45 gram_schmidt: Removing linear dependent vector 15
19:45 gram_schmidt: Removing linear dependent vector 16
19:45 gram_schmidt: Removing linear dependent vector 17
19:45 gram_schmidt: Removing linear dependent vector 18
19:45 gram_schmidt: Removing linear dependent vector 19
19:45 gram_schmidt: Removing linear dependent vector 20
19:45 gram_schmidt: Removing linear dependent vector 21
19:45 gram_schmidt: Removing linear dependent vector 22
19:45 gram_schmidt: Removing linear dependent vector 23
19:45 gram_schmidt: Removing linear dependent vector 24
19:45 gram_schmidt: Removing linear dependent vector 25
19:45 gram_schmidt: Removing linear dependent vector 26
19:45 gram_schmidt: Removing linear dependent vector 27
19:45 gram_schmidt: Removing linear dependent vector 28
19:45 gram_schmidt: Removing linear dependent vector 29
19:45 gram_schmidt: Removing linear dependent vector 30
19:45 gram_schmidt: Removing linear dependent vector 31
19:45 gram_schmidt: Removing linear dependent vector 32
19:45 gram_schmidt: Removing linear dependent vector 33
19:45 gram_schmidt: Removing linear dependent vector 34
19:45 gram_schmidt: Removing linear dependent vector 35
19:45 gram_schmidt: Removing linear dependent vector 36
19:45 gram_schmidt: Removing linear dependent vector 37
19:45 gram_schmidt: Removing linear dependent vector 38
19:45 gram_schmidt: Removing linear dependent vector 39
19:45 gram_schmidt: Removing linear dependent vector 40
19:45 gram_schmidt: Removing linear dependent vector 41
19:45 gram_schmidt: Removing linear dependent vector 42
19:45 gram_schmidt: Removing linear dependent vector 43
19:45 gram_schmidt: Removing linear dependent vector 44
19:45 gram_schmidt: Removing linear dependent vector 45
19:45 gram_schmidt: Removing linear dependent vector 46
19:45 gram_schmidt: Removing linear dependent vector 47
19:45 gram_schmidt: Removing linear dependent vector 48
19:45 gram_schmidt: Removing linear dependent vector 49
19:45 gram_schmidt: Removing linear dependent vector 50
19:45 gram_schmidt: Removing linear dependent vector 51
19:45 gram_schmidt: Removing linear dependent vector 52
19:45 gram_schmidt: Removing linear dependent vector 53
19:45 gram_schmidt: Removing linear dependent vector 54
19:45 gram_schmidt: Removing linear dependent vector 55
19:45 gram_schmidt: Removing linear dependent vector 56
19:45 gram_schmidt: Removing linear dependent vector 57
19:45 gram_schmidt: Removing linear dependent vector 58
19:45 gram_schmidt: Removing linear dependent vector 59
19:45 gram_schmidt: Removing linear dependent vector 60
19:45 gram_schmidt: Removing linear dependent vector 61
19:45 gram_schmidt: Removing linear dependent vector 62
19:45 gram_schmidt: Removing linear dependent vector 63
19:45 gram_schmidt: Removing linear dependent vector 64
19:45 gram_schmidt: Removing linear dependent vector 65
19:45 gram_schmidt: Removing linear dependent vector 66
19:45 gram_schmidt: Removing linear dependent vector 67
19:45 gram_schmidt: Removing linear dependent vector 68
19:45 gram_schmidt: Removing linear dependent vector 69
19:45 gram_schmidt: Removing linear dependent vector 70
19:45 gram_schmidt: Removing linear dependent vector 71
19:45 gram_schmidt: Removing linear dependent vector 72
19:45 gram_schmidt: Removing linear dependent vector 73
19:45 gram_schmidt: Removing linear dependent vector 74
19:45 gram_schmidt: Removing linear dependent vector 75
19:45 gram_schmidt: Removing linear dependent vector 76
19:45 gram_schmidt: Removing linear dependent vector 77
19:45 gram_schmidt: Removing linear dependent vector 78
19:45 gram_schmidt: Removing linear dependent vector 79
19:45 gram_schmidt: Removing linear dependent vector 80
19:45 gram_schmidt: Removing linear dependent vector 81
19:45 gram_schmidt: Removing linear dependent vector 82
19:45 gram_schmidt: Removing linear dependent vector 83
19:45 gram_schmidt: Removing linear dependent vector 84
19:45 gram_schmidt: Removing linear dependent vector 85
19:45 gram_schmidt: Removing linear dependent vector 86
19:45 gram_schmidt: Removing linear dependent vector 87
19:45 gram_schmidt: Removing linear dependent vector 88
19:45 gram_schmidt: Removing linear dependent vector 89
19:45 gram_schmidt: Removing linear dependent vector 90
19:45 gram_schmidt: Removing linear dependent vector 91
19:45 gram_schmidt: Removing linear dependent vector 92
19:45 gram_schmidt: Removing linear dependent vector 93
19:45 gram_schmidt: Removing linear dependent vector 94
19:45 gram_schmidt: Removing linear dependent vector 95
19:45 gram_schmidt: Removing linear dependent vector 96
19:45 gram_schmidt: Removing linear dependent vector 97
19:45 gram_schmidt: Removing linear dependent vector 98
19:45 gram_schmidt: Removing linear dependent vector 99
19:45 gram_schmidt: Removing linear dependent vector 100
19:45 gram_schmidt: Removing linear dependent vector 101
19:45 gram_schmidt: Removing linear dependent vector 3
19:45 gram_schmidt: Removing linear dependent vector 4
19:45 gram_schmidt: Removing linear dependent vector 5
19:45 gram_schmidt: Removing linear dependent vector 6
19:45 gram_schmidt: Removing linear dependent vector 7
19:45 gram_schmidt: Removing linear dependent vector 8
19:45 gram_schmidt: Removing linear dependent vector 9
19:45 gram_schmidt: Removing linear dependent vector 10
19:45 gram_schmidt: Removing linear dependent vector 11
19:45 gram_schmidt: Removing linear dependent vector 12
19:45 gram_schmidt: Removing linear dependent vector 13
19:45 gram_schmidt: Removing linear dependent vector 14
19:45 gram_schmidt: Removing linear dependent vector 15
19:45 gram_schmidt: Removing linear dependent vector 16
19:45 gram_schmidt: Removing linear dependent vector 17
19:45 gram_schmidt: Removing linear dependent vector 18
19:45 gram_schmidt: Removing linear dependent vector 19
19:45 gram_schmidt: Removing linear dependent vector 20
19:45 gram_schmidt: Removing linear dependent vector 21
19:45 gram_schmidt: Removing linear dependent vector 22
19:45 gram_schmidt: Removing linear dependent vector 23
19:45 gram_schmidt: Removing linear dependent vector 24
19:45 gram_schmidt: Removing linear dependent vector 25
19:45 gram_schmidt: Removing linear dependent vector 26
19:45 gram_schmidt: Removing linear dependent vector 27
19:45 gram_schmidt: Removing linear dependent vector 28
19:45 gram_schmidt: Removing linear dependent vector 29
19:45 gram_schmidt: Removing linear dependent vector 30
19:45 gram_schmidt: Removing linear dependent vector 31
19:45 gram_schmidt: Removing linear dependent vector 32
19:45 gram_schmidt: Removing linear dependent vector 33
19:45 gram_schmidt: Removing linear dependent vector 34
19:45 gram_schmidt: Removing linear dependent vector 35
19:45 gram_schmidt: Removing linear dependent vector 36
19:45 gram_schmidt: Removing linear dependent vector 37
19:45 gram_schmidt: Removing linear dependent vector 38
19:45 gram_schmidt: Removing linear dependent vector 39
19:45 gram_schmidt: Removing linear dependent vector 40
19:45 gram_schmidt: Removing linear dependent vector 41
19:45 gram_schmidt: Removing linear dependent vector 42
19:45 gram_schmidt: Removing linear dependent vector 43
19:45 gram_schmidt: Removing linear dependent vector 44
19:45 gram_schmidt: Removing linear dependent vector 45
19:45 gram_schmidt: Removing linear dependent vector 46
19:45 gram_schmidt: Removing linear dependent vector 47
19:45 gram_schmidt: Removing linear dependent vector 48
19:45 gram_schmidt: Removing linear dependent vector 49
19:45 gram_schmidt: Removing linear dependent vector 50
19:45 gram_schmidt: Removing linear dependent vector 51
19:45 gram_schmidt: Removing linear dependent vector 52
19:45 gram_schmidt: Removing linear dependent vector 53
19:45 gram_schmidt: Removing linear dependent vector 54
19:45 gram_schmidt: Removing linear dependent vector 55
19:45 gram_schmidt: Removing linear dependent vector 56
19:45 gram_schmidt: Removing linear dependent vector 57
19:45 gram_schmidt: Removing linear dependent vector 58
19:45 gram_schmidt: Removing linear dependent vector 59
19:45 gram_schmidt: Removing linear dependent vector 60
19:45 gram_schmidt: Removing linear dependent vector 61
19:45 gram_schmidt: Removing linear dependent vector 62
19:45 gram_schmidt: Removing linear dependent vector 63
19:45 gram_schmidt: Removing linear dependent vector 64
19:45 gram_schmidt: Removing linear dependent vector 65
19:45 gram_schmidt: Removing linear dependent vector 66
19:45 gram_schmidt: Removing linear dependent vector 67
19:45 gram_schmidt: Removing linear dependent vector 68
19:45 gram_schmidt: Removing linear dependent vector 69
19:45 gram_schmidt: Removing linear dependent vector 70
19:45 gram_schmidt: Removing linear dependent vector 71
19:45 gram_schmidt: Removing linear dependent vector 72
19:45 gram_schmidt: Removing linear dependent vector 73
19:45 gram_schmidt: Removing linear dependent vector 74
19:45 gram_schmidt: Removing linear dependent vector 75
19:45 gram_schmidt: Removing linear dependent vector 76
19:45 gram_schmidt: Removing linear dependent vector 77
19:45 gram_schmidt: Removing linear dependent vector 78
19:45 gram_schmidt: Removing linear dependent vector 79
19:45 gram_schmidt: Removing linear dependent vector 80
19:45 gram_schmidt: Removing linear dependent vector 81
19:45 gram_schmidt: Removing linear dependent vector 82
19:45 gram_schmidt: Removing linear dependent vector 83
19:45 gram_schmidt: Removing linear dependent vector 84
19:45 gram_schmidt: Removing linear dependent vector 85
19:45 gram_schmidt: Removing linear dependent vector 86
19:45 gram_schmidt: Removing linear dependent vector 87
19:45 gram_schmidt: Removing linear dependent vector 88
19:45 gram_schmidt: Removing linear dependent vector 89
19:45 gram_schmidt: Removing linear dependent vector 90
19:45 gram_schmidt: Removing linear dependent vector 91
19:45 gram_schmidt: Removing linear dependent vector 92
19:45 gram_schmidt: Removing linear dependent vector 93
19:45 gram_schmidt: Removing linear dependent vector 94
19:45 gram_schmidt: Removing linear dependent vector 95
19:45 gram_schmidt: Removing linear dependent vector 96
19:45 gram_schmidt: Removing linear dependent vector 97
19:45 gram_schmidt: Removing linear dependent vector 98
19:45 gram_schmidt: Removing linear dependent vector 99
19:45 gram_schmidt: Removing linear dependent vector 100
19:45 gram_schmidt: Removing linear dependent vector 101
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;17]" time="0.003355264663696289"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;18]" time="0.002734661102294922"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;19]" time="0.005268096923828125"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;20]" time="0.29877805709838867"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;21]" time="1.5760278701782227"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;22]" time="0.00261688232421875"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;23]" time="0.0020682811737060547"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;24]" time="0.008594512939453125"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;25]" time="0.4363858699798584"><system-err>19:47 gram_schmidt: Orthonormalizing vector 31 again
19:47 gram_schmidt: Removing linear dependent vector 32
19:47 gram_schmidt: Removing linear dependent vector 33
19:47 gram_schmidt: Removing linear dependent vector 34
19:47 gram_schmidt: Removing linear dependent vector 35
19:47 gram_schmidt: Removing linear dependent vector 36
19:47 gram_schmidt: Removing linear dependent vector 37
19:47 gram_schmidt: Removing linear dependent vector 38
19:47 gram_schmidt: Removing linear dependent vector 39
19:47 gram_schmidt: Removing linear dependent vector 40
19:47 gram_schmidt: Removing linear dependent vector 41
19:47 gram_schmidt: Removing linear dependent vector 42
19:47 gram_schmidt: Orthonormalizing vector 31 again
19:47 gram_schmidt: Removing linear dependent vector 32
19:47 gram_schmidt: Removing linear dependent vector 33
19:47 gram_schmidt: Removing linear dependent vector 34
19:47 gram_schmidt: Removing linear dependent vector 35
19:47 gram_schmidt: Removing linear dependent vector 36
19:47 gram_schmidt: Removing linear dependent vector 37
19:47 gram_schmidt: Removing linear dependent vector 38
19:47 gram_schmidt: Removing linear dependent vector 39
19:47 gram_schmidt: Removing linear dependent vector 40
19:47 gram_schmidt: Removing linear dependent vector 41
19:47 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;26]" time="0.24109482765197754"><system-err>19:47 gram_schmidt: Removing vector 0 of norm 0.0
19:47 gram_schmidt: Removing vector 1 of norm 0.0
19:47 gram_schmidt: Removing vector 2 of norm 0.0
19:47 gram_schmidt: Removing vector 3 of norm 0.0
19:47 gram_schmidt: Removing vector 4 of norm 0.0
19:47 gram_schmidt: Removing vector 5 of norm 0.0
19:47 gram_schmidt: Removing vector 6 of norm 0.0
19:47 gram_schmidt: Removing vector 7 of norm 0.0
19:47 gram_schmidt: Removing vector 8 of norm 0.0
19:47 gram_schmidt: Removing vector 9 of norm 0.0
19:47 gram_schmidt: Removing vector 10 of norm 0.0
19:47 gram_schmidt: Removing vector 11 of norm 0.0
19:47 gram_schmidt: Removing vector 12 of norm 0.0
19:47 gram_schmidt: Removing vector 13 of norm 0.0
19:47 gram_schmidt: Removing vector 14 of norm 0.0
19:47 gram_schmidt: Removing vector 15 of norm 0.0
19:47 gram_schmidt: Removing vector 16 of norm 0.0
19:47 gram_schmidt: Removing vector 17 of norm 0.0
19:47 gram_schmidt: Removing vector 18 of norm 0.0
19:47 gram_schmidt: Removing vector 19 of norm 0.0
19:47 gram_schmidt: Removing vector 20 of norm 0.0
19:47 gram_schmidt: Removing vector 21 of norm 0.0
19:47 gram_schmidt: Removing vector 22 of norm 0.0
19:47 gram_schmidt: Removing vector 23 of norm 0.0
19:47 gram_schmidt: Removing vector 24 of norm 0.0
19:47 gram_schmidt: Removing vector 25 of norm 0.0
19:47 gram_schmidt: Removing vector 26 of norm 0.0
19:47 gram_schmidt: Removing vector 27 of norm 0.0
19:47 gram_schmidt: Removing vector 28 of norm 0.0
19:47 gram_schmidt: Removing vector 29 of norm 0.0
19:47 gram_schmidt: Removing vector 30 of norm 0.0
19:47 gram_schmidt: Removing vector 31 of norm 0.0
19:47 gram_schmidt: Removing vector 32 of norm 0.0
19:47 gram_schmidt: Removing vector 33 of norm 0.0
19:47 gram_schmidt: Removing vector 34 of norm 0.0
19:47 gram_schmidt: Removing vector 35 of norm 0.0
19:47 gram_schmidt: Removing vector 36 of norm 0.0
19:47 gram_schmidt: Removing vector 37 of norm 0.0
19:47 gram_schmidt: Removing vector 38 of norm 0.0
19:47 gram_schmidt: Removing vector 39 of norm 0.0
19:47 gram_schmidt: Removing vector 40 of norm 0.0
19:47 gram_schmidt: Removing vector 41 of norm 0.0
19:47 gram_schmidt: Removing vector 42 of norm 0.0
19:47 gram_schmidt: Removing vector 43 of norm 0.0
19:47 gram_schmidt: Removing vector 44 of norm 0.0
19:47 gram_schmidt: Removing vector 45 of norm 0.0
19:47 gram_schmidt: Removing vector 46 of norm 0.0
19:47 gram_schmidt: Removing vector 47 of norm 0.0
19:47 gram_schmidt: Removing vector 48 of norm 0.0
19:47 gram_schmidt: Removing vector 49 of norm 0.0
19:47 gram_schmidt: Removing vector 50 of norm 0.0
19:47 gram_schmidt: Removing vector 51 of norm 0.0
19:47 gram_schmidt: Removing vector 52 of norm 0.0
19:47 gram_schmidt: Removing vector 53 of norm 0.0
19:47 gram_schmidt: Removing vector 54 of norm 0.0
19:47 gram_schmidt: Removing vector 55 of norm 0.0
19:47 gram_schmidt: Removing vector 56 of norm 0.0
19:47 gram_schmidt: Removing vector 57 of norm 0.0
19:47 gram_schmidt: Removing vector 58 of norm 0.0
19:47 gram_schmidt: Removing vector 59 of norm 0.0
19:47 gram_schmidt: Removing vector 60 of norm 0.0
19:47 gram_schmidt: Removing vector 61 of norm 0.0
19:47 gram_schmidt: Removing vector 62 of norm 0.0
19:47 gram_schmidt: Removing vector 63 of norm 0.0
19:47 gram_schmidt: Removing vector 64 of norm 0.0
19:47 gram_schmidt: Removing vector 65 of norm 0.0
19:47 gram_schmidt: Removing vector 66 of norm 0.0
19:47 gram_schmidt: Removing vector 67 of norm 0.0
19:47 gram_schmidt: Removing vector 68 of norm 0.0
19:47 gram_schmidt: Removing vector 69 of norm 0.0
19:47 gram_schmidt: Removing vector 70 of norm 0.0
19:47 gram_schmidt: Removing vector 71 of norm 0.0
19:47 gram_schmidt: Removing vector 72 of norm 0.0
19:47 gram_schmidt: Removing vector 73 of norm 0.0
19:47 gram_schmidt: Removing vector 74 of norm 0.0
19:47 gram_schmidt: Removing vector 75 of norm 0.0
19:47 gram_schmidt: Removing vector 76 of norm 0.0
19:47 gram_schmidt: Removing vector 77 of norm 0.0
19:47 gram_schmidt: Removing vector 78 of norm 0.0
19:47 gram_schmidt: Removing vector 79 of norm 0.0
19:47 gram_schmidt: Removing vector 80 of norm 0.0
19:47 gram_schmidt: Removing vector 81 of norm 0.0
19:47 gram_schmidt: Removing vector 82 of norm 0.0
19:47 gram_schmidt: Removing vector 83 of norm 0.0
19:47 gram_schmidt: Removing vector 84 of norm 0.0
19:47 gram_schmidt: Removing vector 85 of norm 0.0
19:47 gram_schmidt: Removing vector 86 of norm 0.0
19:47 gram_schmidt: Removing vector 87 of norm 0.0
19:47 gram_schmidt: Removing vector 88 of norm 0.0
19:47 gram_schmidt: Removing vector 89 of norm 0.0
19:47 gram_schmidt: Removing vector 90 of norm 0.0
19:47 gram_schmidt: Removing vector 91 of norm 0.0
19:47 gram_schmidt: Removing vector 92 of norm 0.0
19:47 gram_schmidt: Removing vector 93 of norm 0.0
19:47 gram_schmidt: Removing vector 94 of norm 0.0
19:47 gram_schmidt: Removing vector 95 of norm 0.0
19:47 gram_schmidt: Removing vector 96 of norm 0.0
19:47 gram_schmidt: Removing vector 97 of norm 0.0
19:47 gram_schmidt: Removing vector 98 of norm 0.0
19:47 gram_schmidt: Removing vector 99 of norm 0.0
19:47 gram_schmidt: Removing vector 100 of norm 0.0
19:47 gram_schmidt: Removing vector 101 of norm 0.0
19:47 gram_schmidt: Removing vector 0 of norm 0.0
19:47 gram_schmidt: Removing vector 1 of norm 0.0
19:47 gram_schmidt: Removing vector 2 of norm 0.0
19:47 gram_schmidt: Removing vector 3 of norm 0.0
19:47 gram_schmidt: Removing vector 4 of norm 0.0
19:47 gram_schmidt: Removing vector 5 of norm 0.0
19:47 gram_schmidt: Removing vector 6 of norm 0.0
19:47 gram_schmidt: Removing vector 7 of norm 0.0
19:47 gram_schmidt: Removing vector 8 of norm 0.0
19:47 gram_schmidt: Removing vector 9 of norm 0.0
19:47 gram_schmidt: Removing vector 10 of norm 0.0
19:47 gram_schmidt: Removing vector 11 of norm 0.0
19:47 gram_schmidt: Removing vector 12 of norm 0.0
19:47 gram_schmidt: Removing vector 13 of norm 0.0
19:47 gram_schmidt: Removing vector 14 of norm 0.0
19:47 gram_schmidt: Removing vector 15 of norm 0.0
19:47 gram_schmidt: Removing vector 16 of norm 0.0
19:47 gram_schmidt: Removing vector 17 of norm 0.0
19:47 gram_schmidt: Removing vector 18 of norm 0.0
19:47 gram_schmidt: Removing vector 19 of norm 0.0
19:47 gram_schmidt: Removing vector 20 of norm 0.0
19:47 gram_schmidt: Removing vector 21 of norm 0.0
19:47 gram_schmidt: Removing vector 22 of norm 0.0
19:47 gram_schmidt: Removing vector 23 of norm 0.0
19:47 gram_schmidt: Removing vector 24 of norm 0.0
19:47 gram_schmidt: Removing vector 25 of norm 0.0
19:47 gram_schmidt: Removing vector 26 of norm 0.0
19:47 gram_schmidt: Removing vector 27 of norm 0.0
19:47 gram_schmidt: Removing vector 28 of norm 0.0
19:47 gram_schmidt: Removing vector 29 of norm 0.0
19:47 gram_schmidt: Removing vector 30 of norm 0.0
19:47 gram_schmidt: Removing vector 31 of norm 0.0
19:47 gram_schmidt: Removing vector 32 of norm 0.0
19:47 gram_schmidt: Removing vector 33 of norm 0.0
19:47 gram_schmidt: Removing vector 34 of norm 0.0
19:47 gram_schmidt: Removing vector 35 of norm 0.0
19:47 gram_schmidt: Removing vector 36 of norm 0.0
19:47 gram_schmidt: Removing vector 37 of norm 0.0
19:47 gram_schmidt: Removing vector 38 of norm 0.0
19:47 gram_schmidt: Removing vector 39 of norm 0.0
19:47 gram_schmidt: Removing vector 40 of norm 0.0
19:47 gram_schmidt: Removing vector 41 of norm 0.0
19:47 gram_schmidt: Removing vector 42 of norm 0.0
19:47 gram_schmidt: Removing vector 43 of norm 0.0
19:47 gram_schmidt: Removing vector 44 of norm 0.0
19:47 gram_schmidt: Removing vector 45 of norm 0.0
19:47 gram_schmidt: Removing vector 46 of norm 0.0
19:47 gram_schmidt: Removing vector 47 of norm 0.0
19:47 gram_schmidt: Removing vector 48 of norm 0.0
19:47 gram_schmidt: Removing vector 49 of norm 0.0
19:47 gram_schmidt: Removing vector 50 of norm 0.0
19:47 gram_schmidt: Removing vector 51 of norm 0.0
19:47 gram_schmidt: Removing vector 52 of norm 0.0
19:47 gram_schmidt: Removing vector 53 of norm 0.0
19:47 gram_schmidt: Removing vector 54 of norm 0.0
19:47 gram_schmidt: Removing vector 55 of norm 0.0
19:47 gram_schmidt: Removing vector 56 of norm 0.0
19:47 gram_schmidt: Removing vector 57 of norm 0.0
19:47 gram_schmidt: Removing vector 58 of norm 0.0
19:47 gram_schmidt: Removing vector 59 of norm 0.0
19:47 gram_schmidt: Removing vector 60 of norm 0.0
19:47 gram_schmidt: Removing vector 61 of norm 0.0
19:47 gram_schmidt: Removing vector 62 of norm 0.0
19:47 gram_schmidt: Removing vector 63 of norm 0.0
19:47 gram_schmidt: Removing vector 64 of norm 0.0
19:47 gram_schmidt: Removing vector 65 of norm 0.0
19:47 gram_schmidt: Removing vector 66 of norm 0.0
19:47 gram_schmidt: Removing vector 67 of norm 0.0
19:47 gram_schmidt: Removing vector 68 of norm 0.0
19:47 gram_schmidt: Removing vector 69 of norm 0.0
19:47 gram_schmidt: Removing vector 70 of norm 0.0
19:47 gram_schmidt: Removing vector 71 of norm 0.0
19:47 gram_schmidt: Removing vector 72 of norm 0.0
19:47 gram_schmidt: Removing vector 73 of norm 0.0
19:47 gram_schmidt: Removing vector 74 of norm 0.0
19:47 gram_schmidt: Removing vector 75 of norm 0.0
19:47 gram_schmidt: Removing vector 76 of norm 0.0
19:47 gram_schmidt: Removing vector 77 of norm 0.0
19:47 gram_schmidt: Removing vector 78 of norm 0.0
19:47 gram_schmidt: Removing vector 79 of norm 0.0
19:47 gram_schmidt: Removing vector 80 of norm 0.0
19:47 gram_schmidt: Removing vector 81 of norm 0.0
19:47 gram_schmidt: Removing vector 82 of norm 0.0
19:47 gram_schmidt: Removing vector 83 of norm 0.0
19:47 gram_schmidt: Removing vector 84 of norm 0.0
19:47 gram_schmidt: Removing vector 85 of norm 0.0
19:47 gram_schmidt: Removing vector 86 of norm 0.0
19:47 gram_schmidt: Removing vector 87 of norm 0.0
19:47 gram_schmidt: Removing vector 88 of norm 0.0
19:47 gram_schmidt: Removing vector 89 of norm 0.0
19:47 gram_schmidt: Removing vector 90 of norm 0.0
19:47 gram_schmidt: Removing vector 91 of norm 0.0
19:47 gram_schmidt: Removing vector 92 of norm 0.0
19:47 gram_schmidt: Removing vector 93 of norm 0.0
19:47 gram_schmidt: Removing vector 94 of norm 0.0
19:47 gram_schmidt: Removing vector 95 of norm 0.0
19:47 gram_schmidt: Removing vector 96 of norm 0.0
19:47 gram_schmidt: Removing vector 97 of norm 0.0
19:47 gram_schmidt: Removing vector 98 of norm 0.0
19:47 gram_schmidt: Removing vector 99 of norm 0.0
19:47 gram_schmidt: Removing vector 100 of norm 0.0
19:47 gram_schmidt: Removing vector 101 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;0]" time="0.0027618408203125"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;1]" time="0.0021719932556152344"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;2]" time="0.002381563186645508"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;3]" time="0.11502742767333984"><system-err>19:47 gram_schmidt: Orthonormalizing vector 31 again
19:47 gram_schmidt: Removing linear dependent vector 32
19:47 gram_schmidt: Removing linear dependent vector 33
19:47 gram_schmidt: Removing linear dependent vector 34
19:47 gram_schmidt: Removing linear dependent vector 35
19:47 gram_schmidt: Removing linear dependent vector 36
19:47 gram_schmidt: Removing linear dependent vector 37
19:47 gram_schmidt: Removing linear dependent vector 38
19:47 gram_schmidt: Removing linear dependent vector 39
19:47 gram_schmidt: Removing linear dependent vector 40
19:47 gram_schmidt: Removing linear dependent vector 41
19:47 gram_schmidt: Removing linear dependent vector 42
19:47 gram_schmidt: Orthonormalizing vector 31 again
19:47 gram_schmidt: Removing linear dependent vector 32
19:47 gram_schmidt: Removing linear dependent vector 33
19:47 gram_schmidt: Removing linear dependent vector 34
19:47 gram_schmidt: Removing linear dependent vector 35
19:47 gram_schmidt: Removing linear dependent vector 36
19:47 gram_schmidt: Removing linear dependent vector 37
19:47 gram_schmidt: Removing linear dependent vector 38
19:47 gram_schmidt: Removing linear dependent vector 39
19:47 gram_schmidt: Removing linear dependent vector 40
19:47 gram_schmidt: Removing linear dependent vector 41
19:47 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;4]" time="0.02220630645751953"><system-err>19:47 gram_schmidt: Removing vector 0 of norm 0.0
19:47 gram_schmidt: Removing vector 1 of norm 0.0
19:47 gram_schmidt: Removing vector 2 of norm 0.0
19:47 gram_schmidt: Removing vector 3 of norm 0.0
19:47 gram_schmidt: Removing vector 4 of norm 0.0
19:47 gram_schmidt: Removing vector 5 of norm 0.0
19:47 gram_schmidt: Removing vector 6 of norm 0.0
19:47 gram_schmidt: Removing vector 7 of norm 0.0
19:47 gram_schmidt: Removing vector 8 of norm 0.0
19:48 gram_schmidt: Removing vector 9 of norm 0.0
19:48 gram_schmidt: Removing vector 10 of norm 0.0
19:48 gram_schmidt: Removing vector 11 of norm 0.0
19:48 gram_schmidt: Removing vector 12 of norm 0.0
19:48 gram_schmidt: Removing vector 13 of norm 0.0
19:48 gram_schmidt: Removing vector 14 of norm 0.0
19:48 gram_schmidt: Removing vector 15 of norm 0.0
19:48 gram_schmidt: Removing vector 16 of norm 0.0
19:48 gram_schmidt: Removing vector 17 of norm 0.0
19:48 gram_schmidt: Removing vector 18 of norm 0.0
19:48 gram_schmidt: Removing vector 19 of norm 0.0
19:48 gram_schmidt: Removing vector 20 of norm 0.0
19:48 gram_schmidt: Removing vector 21 of norm 0.0
19:48 gram_schmidt: Removing vector 22 of norm 0.0
19:48 gram_schmidt: Removing vector 23 of norm 0.0
19:48 gram_schmidt: Removing vector 24 of norm 0.0
19:48 gram_schmidt: Removing vector 25 of norm 0.0
19:48 gram_schmidt: Removing vector 26 of norm 0.0
19:48 gram_schmidt: Removing vector 27 of norm 0.0
19:48 gram_schmidt: Removing vector 28 of norm 0.0
19:48 gram_schmidt: Removing vector 29 of norm 0.0
19:48 gram_schmidt: Removing vector 30 of norm 0.0
19:48 gram_schmidt: Removing vector 31 of norm 0.0
19:48 gram_schmidt: Removing vector 32 of norm 0.0
19:48 gram_schmidt: Removing vector 33 of norm 0.0
19:48 gram_schmidt: Removing vector 34 of norm 0.0
19:48 gram_schmidt: Removing vector 35 of norm 0.0
19:48 gram_schmidt: Removing vector 36 of norm 0.0
19:48 gram_schmidt: Removing vector 37 of norm 0.0
19:48 gram_schmidt: Removing vector 38 of norm 0.0
19:48 gram_schmidt: Removing vector 39 of norm 0.0
19:48 gram_schmidt: Removing vector 40 of norm 0.0
19:48 gram_schmidt: Removing vector 41 of norm 0.0
19:48 gram_schmidt: Removing vector 42 of norm 0.0
19:48 gram_schmidt: Removing vector 43 of norm 0.0
19:48 gram_schmidt: Removing vector 44 of norm 0.0
19:48 gram_schmidt: Removing vector 45 of norm 0.0
19:48 gram_schmidt: Removing vector 46 of norm 0.0
19:48 gram_schmidt: Removing vector 47 of norm 0.0
19:48 gram_schmidt: Removing vector 48 of norm 0.0
19:48 gram_schmidt: Removing vector 49 of norm 0.0
19:48 gram_schmidt: Removing vector 50 of norm 0.0
19:48 gram_schmidt: Removing vector 51 of norm 0.0
19:48 gram_schmidt: Removing vector 52 of norm 0.0
19:48 gram_schmidt: Removing vector 53 of norm 0.0
19:48 gram_schmidt: Removing vector 54 of norm 0.0
19:48 gram_schmidt: Removing vector 55 of norm 0.0
19:48 gram_schmidt: Removing vector 56 of norm 0.0
19:48 gram_schmidt: Removing vector 57 of norm 0.0
19:48 gram_schmidt: Removing vector 58 of norm 0.0
19:48 gram_schmidt: Removing vector 59 of norm 0.0
19:48 gram_schmidt: Removing vector 60 of norm 0.0
19:48 gram_schmidt: Removing vector 61 of norm 0.0
19:48 gram_schmidt: Removing vector 62 of norm 0.0
19:48 gram_schmidt: Removing vector 63 of norm 0.0
19:48 gram_schmidt: Removing vector 64 of norm 0.0
19:48 gram_schmidt: Removing vector 65 of norm 0.0
19:48 gram_schmidt: Removing vector 66 of norm 0.0
19:48 gram_schmidt: Removing vector 67 of norm 0.0
19:48 gram_schmidt: Removing vector 68 of norm 0.0
19:48 gram_schmidt: Removing vector 69 of norm 0.0
19:48 gram_schmidt: Removing vector 70 of norm 0.0
19:48 gram_schmidt: Removing vector 71 of norm 0.0
19:48 gram_schmidt: Removing vector 72 of norm 0.0
19:48 gram_schmidt: Removing vector 73 of norm 0.0
19:48 gram_schmidt: Removing vector 74 of norm 0.0
19:48 gram_schmidt: Removing vector 75 of norm 0.0
19:48 gram_schmidt: Removing vector 76 of norm 0.0
19:48 gram_schmidt: Removing vector 77 of norm 0.0
19:48 gram_schmidt: Removing vector 78 of norm 0.0
19:48 gram_schmidt: Removing vector 79 of norm 0.0
19:48 gram_schmidt: Removing vector 80 of norm 0.0
19:48 gram_schmidt: Removing vector 81 of norm 0.0
19:48 gram_schmidt: Removing vector 82 of norm 0.0
19:48 gram_schmidt: Removing vector 83 of norm 0.0
19:48 gram_schmidt: Removing vector 84 of norm 0.0
19:48 gram_schmidt: Removing vector 85 of norm 0.0
19:48 gram_schmidt: Removing vector 86 of norm 0.0
19:48 gram_schmidt: Removing vector 87 of norm 0.0
19:48 gram_schmidt: Removing vector 88 of norm 0.0
19:48 gram_schmidt: Removing vector 89 of norm 0.0
19:48 gram_schmidt: Removing vector 90 of norm 0.0
19:48 gram_schmidt: Removing vector 91 of norm 0.0
19:48 gram_schmidt: Removing vector 92 of norm 0.0
19:48 gram_schmidt: Removing vector 93 of norm 0.0
19:48 gram_schmidt: Removing vector 94 of norm 0.0
19:48 gram_schmidt: Removing vector 95 of norm 0.0
19:48 gram_schmidt: Removing vector 96 of norm 0.0
19:48 gram_schmidt: Removing vector 97 of norm 0.0
19:48 gram_schmidt: Removing vector 98 of norm 0.0
19:48 gram_schmidt: Removing vector 99 of norm 0.0
19:48 gram_schmidt: Removing vector 100 of norm 0.0
19:48 gram_schmidt: Removing vector 101 of norm 0.0
19:48 gram_schmidt: Removing vector 0 of norm 0.0
19:48 gram_schmidt: Removing vector 1 of norm 0.0
19:48 gram_schmidt: Removing vector 2 of norm 0.0
19:48 gram_schmidt: Removing vector 3 of norm 0.0
19:48 gram_schmidt: Removing vector 4 of norm 0.0
19:48 gram_schmidt: Removing vector 5 of norm 0.0
19:48 gram_schmidt: Removing vector 6 of norm 0.0
19:48 gram_schmidt: Removing vector 7 of norm 0.0
19:48 gram_schmidt: Removing vector 8 of norm 0.0
19:48 gram_schmidt: Removing vector 9 of norm 0.0
19:48 gram_schmidt: Removing vector 10 of norm 0.0
19:48 gram_schmidt: Removing vector 11 of norm 0.0
19:48 gram_schmidt: Removing vector 12 of norm 0.0
19:48 gram_schmidt: Removing vector 13 of norm 0.0
19:48 gram_schmidt: Removing vector 14 of norm 0.0
19:48 gram_schmidt: Removing vector 15 of norm 0.0
19:48 gram_schmidt: Removing vector 16 of norm 0.0
19:48 gram_schmidt: Removing vector 17 of norm 0.0
19:48 gram_schmidt: Removing vector 18 of norm 0.0
19:48 gram_schmidt: Removing vector 19 of norm 0.0
19:48 gram_schmidt: Removing vector 20 of norm 0.0
19:48 gram_schmidt: Removing vector 21 of norm 0.0
19:48 gram_schmidt: Removing vector 22 of norm 0.0
19:48 gram_schmidt: Removing vector 23 of norm 0.0
19:48 gram_schmidt: Removing vector 24 of norm 0.0
19:48 gram_schmidt: Removing vector 25 of norm 0.0
19:48 gram_schmidt: Removing vector 26 of norm 0.0
19:48 gram_schmidt: Removing vector 27 of norm 0.0
19:48 gram_schmidt: Removing vector 28 of norm 0.0
19:48 gram_schmidt: Removing vector 29 of norm 0.0
19:48 gram_schmidt: Removing vector 30 of norm 0.0
19:48 gram_schmidt: Removing vector 31 of norm 0.0
19:48 gram_schmidt: Removing vector 32 of norm 0.0
19:48 gram_schmidt: Removing vector 33 of norm 0.0
19:48 gram_schmidt: Removing vector 34 of norm 0.0
19:48 gram_schmidt: Removing vector 35 of norm 0.0
19:48 gram_schmidt: Removing vector 36 of norm 0.0
19:48 gram_schmidt: Removing vector 37 of norm 0.0
19:48 gram_schmidt: Removing vector 38 of norm 0.0
19:48 gram_schmidt: Removing vector 39 of norm 0.0
19:48 gram_schmidt: Removing vector 40 of norm 0.0
19:48 gram_schmidt: Removing vector 41 of norm 0.0
19:48 gram_schmidt: Removing vector 42 of norm 0.0
19:48 gram_schmidt: Removing vector 43 of norm 0.0
19:48 gram_schmidt: Removing vector 44 of norm 0.0
19:48 gram_schmidt: Removing vector 45 of norm 0.0
19:48 gram_schmidt: Removing vector 46 of norm 0.0
19:48 gram_schmidt: Removing vector 47 of norm 0.0
19:48 gram_schmidt: Removing vector 48 of norm 0.0
19:48 gram_schmidt: Removing vector 49 of norm 0.0
19:48 gram_schmidt: Removing vector 50 of norm 0.0
19:48 gram_schmidt: Removing vector 51 of norm 0.0
19:48 gram_schmidt: Removing vector 52 of norm 0.0
19:48 gram_schmidt: Removing vector 53 of norm 0.0
19:48 gram_schmidt: Removing vector 54 of norm 0.0
19:48 gram_schmidt: Removing vector 55 of norm 0.0
19:48 gram_schmidt: Removing vector 56 of norm 0.0
19:48 gram_schmidt: Removing vector 57 of norm 0.0
19:48 gram_schmidt: Removing vector 58 of norm 0.0
19:48 gram_schmidt: Removing vector 59 of norm 0.0
19:48 gram_schmidt: Removing vector 60 of norm 0.0
19:48 gram_schmidt: Removing vector 61 of norm 0.0
19:48 gram_schmidt: Removing vector 62 of norm 0.0
19:48 gram_schmidt: Removing vector 63 of norm 0.0
19:48 gram_schmidt: Removing vector 64 of norm 0.0
19:48 gram_schmidt: Removing vector 65 of norm 0.0
19:48 gram_schmidt: Removing vector 66 of norm 0.0
19:48 gram_schmidt: Removing vector 67 of norm 0.0
19:48 gram_schmidt: Removing vector 68 of norm 0.0
19:48 gram_schmidt: Removing vector 69 of norm 0.0
19:48 gram_schmidt: Removing vector 70 of norm 0.0
19:48 gram_schmidt: Removing vector 71 of norm 0.0
19:48 gram_schmidt: Removing vector 72 of norm 0.0
19:48 gram_schmidt: Removing vector 73 of norm 0.0
19:48 gram_schmidt: Removing vector 74 of norm 0.0
19:48 gram_schmidt: Removing vector 75 of norm 0.0
19:48 gram_schmidt: Removing vector 76 of norm 0.0
19:48 gram_schmidt: Removing vector 77 of norm 0.0
19:48 gram_schmidt: Removing vector 78 of norm 0.0
19:48 gram_schmidt: Removing vector 79 of norm 0.0
19:48 gram_schmidt: Removing vector 80 of norm 0.0
19:48 gram_schmidt: Removing vector 81 of norm 0.0
19:48 gram_schmidt: Removing vector 82 of norm 0.0
19:48 gram_schmidt: Removing vector 83 of norm 0.0
19:48 gram_schmidt: Removing vector 84 of norm 0.0
19:48 gram_schmidt: Removing vector 85 of norm 0.0
19:48 gram_schmidt: Removing vector 86 of norm 0.0
19:48 gram_schmidt: Removing vector 87 of norm 0.0
19:48 gram_schmidt: Removing vector 88 of norm 0.0
19:48 gram_schmidt: Removing vector 89 of norm 0.0
19:48 gram_schmidt: Removing vector 90 of norm 0.0
19:48 gram_schmidt: Removing vector 91 of norm 0.0
19:48 gram_schmidt: Removing vector 92 of norm 0.0
19:48 gram_schmidt: Removing vector 93 of norm 0.0
19:48 gram_schmidt: Removing vector 94 of norm 0.0
19:48 gram_schmidt: Removing vector 95 of norm 0.0
19:48 gram_schmidt: Removing vector 96 of norm 0.0
19:48 gram_schmidt: Removing vector 97 of norm 0.0
19:48 gram_schmidt: Removing vector 98 of norm 0.0
19:48 gram_schmidt: Removing vector 99 of norm 0.0
19:48 gram_schmidt: Removing vector 100 of norm 0.0
19:48 gram_schmidt: Removing vector 101 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;5]" time="0.002872943878173828"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;6]" time="0.002019166946411133"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;7]" time="0.002516508102416992"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;8]" time="0.21602344512939453"><system-err>19:48 gram_schmidt: Orthonormalizing vector 31 again
19:48 gram_schmidt: Removing linear dependent vector 32
19:48 gram_schmidt: Removing linear dependent vector 33
19:48 gram_schmidt: Removing linear dependent vector 34
19:48 gram_schmidt: Removing linear dependent vector 35
19:48 gram_schmidt: Removing linear dependent vector 36
19:48 gram_schmidt: Removing linear dependent vector 37
19:48 gram_schmidt: Removing linear dependent vector 38
19:48 gram_schmidt: Removing linear dependent vector 39
19:48 gram_schmidt: Removing linear dependent vector 40
19:48 gram_schmidt: Removing linear dependent vector 41
19:48 gram_schmidt: Removing linear dependent vector 42
19:48 gram_schmidt: Orthonormalizing vector 31 again
19:48 gram_schmidt: Removing linear dependent vector 32
19:48 gram_schmidt: Removing linear dependent vector 33
19:48 gram_schmidt: Removing linear dependent vector 34
19:48 gram_schmidt: Removing linear dependent vector 35
19:48 gram_schmidt: Removing linear dependent vector 36
19:48 gram_schmidt: Removing linear dependent vector 37
19:48 gram_schmidt: Removing linear dependent vector 38
19:48 gram_schmidt: Removing linear dependent vector 39
19:48 gram_schmidt: Removing linear dependent vector 40
19:48 gram_schmidt: Removing linear dependent vector 41
19:48 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;9]" time="0.02863478660583496"><system-err>19:48 gram_schmidt: Removing vector 0 of norm 0.0
19:48 gram_schmidt: Removing vector 1 of norm 0.0
19:48 gram_schmidt: Removing vector 2 of norm 0.0
19:48 gram_schmidt: Removing vector 3 of norm 0.0
19:48 gram_schmidt: Removing vector 4 of norm 0.0
19:48 gram_schmidt: Removing vector 5 of norm 0.0
19:48 gram_schmidt: Removing vector 6 of norm 0.0
19:48 gram_schmidt: Removing vector 7 of norm 0.0
19:48 gram_schmidt: Removing vector 8 of norm 0.0
19:48 gram_schmidt: Removing vector 9 of norm 0.0
19:48 gram_schmidt: Removing vector 10 of norm 0.0
19:48 gram_schmidt: Removing vector 11 of norm 0.0
19:48 gram_schmidt: Removing vector 12 of norm 0.0
19:48 gram_schmidt: Removing vector 13 of norm 0.0
19:48 gram_schmidt: Removing vector 14 of norm 0.0
19:48 gram_schmidt: Removing vector 15 of norm 0.0
19:48 gram_schmidt: Removing vector 16 of norm 0.0
19:48 gram_schmidt: Removing vector 17 of norm 0.0
19:48 gram_schmidt: Removing vector 18 of norm 0.0
19:48 gram_schmidt: Removing vector 19 of norm 0.0
19:48 gram_schmidt: Removing vector 20 of norm 0.0
19:48 gram_schmidt: Removing vector 21 of norm 0.0
19:48 gram_schmidt: Removing vector 22 of norm 0.0
19:48 gram_schmidt: Removing vector 23 of norm 0.0
19:48 gram_schmidt: Removing vector 24 of norm 0.0
19:48 gram_schmidt: Removing vector 25 of norm 0.0
19:48 gram_schmidt: Removing vector 26 of norm 0.0
19:48 gram_schmidt: Removing vector 27 of norm 0.0
19:48 gram_schmidt: Removing vector 28 of norm 0.0
19:48 gram_schmidt: Removing vector 29 of norm 0.0
19:48 gram_schmidt: Removing vector 30 of norm 0.0
19:48 gram_schmidt: Removing vector 31 of norm 0.0
19:48 gram_schmidt: Removing vector 32 of norm 0.0
19:48 gram_schmidt: Removing vector 33 of norm 0.0
19:48 gram_schmidt: Removing vector 34 of norm 0.0
19:48 gram_schmidt: Removing vector 35 of norm 0.0
19:48 gram_schmidt: Removing vector 36 of norm 0.0
19:48 gram_schmidt: Removing vector 37 of norm 0.0
19:48 gram_schmidt: Removing vector 38 of norm 0.0
19:48 gram_schmidt: Removing vector 39 of norm 0.0
19:48 gram_schmidt: Removing vector 40 of norm 0.0
19:48 gram_schmidt: Removing vector 41 of norm 0.0
19:48 gram_schmidt: Removing vector 42 of norm 0.0
19:48 gram_schmidt: Removing vector 43 of norm 0.0
19:48 gram_schmidt: Removing vector 44 of norm 0.0
19:48 gram_schmidt: Removing vector 45 of norm 0.0
19:48 gram_schmidt: Removing vector 46 of norm 0.0
19:48 gram_schmidt: Removing vector 47 of norm 0.0
19:48 gram_schmidt: Removing vector 48 of norm 0.0
19:48 gram_schmidt: Removing vector 49 of norm 0.0
19:48 gram_schmidt: Removing vector 50 of norm 0.0
19:48 gram_schmidt: Removing vector 51 of norm 0.0
19:48 gram_schmidt: Removing vector 52 of norm 0.0
19:48 gram_schmidt: Removing vector 53 of norm 0.0
19:48 gram_schmidt: Removing vector 54 of norm 0.0
19:48 gram_schmidt: Removing vector 55 of norm 0.0
19:48 gram_schmidt: Removing vector 56 of norm 0.0
19:48 gram_schmidt: Removing vector 57 of norm 0.0
19:48 gram_schmidt: Removing vector 58 of norm 0.0
19:48 gram_schmidt: Removing vector 59 of norm 0.0
19:48 gram_schmidt: Removing vector 60 of norm 0.0
19:48 gram_schmidt: Removing vector 61 of norm 0.0
19:48 gram_schmidt: Removing vector 62 of norm 0.0
19:48 gram_schmidt: Removing vector 63 of norm 0.0
19:48 gram_schmidt: Removing vector 64 of norm 0.0
19:48 gram_schmidt: Removing vector 65 of norm 0.0
19:48 gram_schmidt: Removing vector 66 of norm 0.0
19:48 gram_schmidt: Removing vector 67 of norm 0.0
19:48 gram_schmidt: Removing vector 68 of norm 0.0
19:48 gram_schmidt: Removing vector 69 of norm 0.0
19:48 gram_schmidt: Removing vector 70 of norm 0.0
19:48 gram_schmidt: Removing vector 71 of norm 0.0
19:48 gram_schmidt: Removing vector 72 of norm 0.0
19:48 gram_schmidt: Removing vector 73 of norm 0.0
19:48 gram_schmidt: Removing vector 74 of norm 0.0
19:48 gram_schmidt: Removing vector 75 of norm 0.0
19:48 gram_schmidt: Removing vector 76 of norm 0.0
19:48 gram_schmidt: Removing vector 77 of norm 0.0
19:48 gram_schmidt: Removing vector 78 of norm 0.0
19:48 gram_schmidt: Removing vector 79 of norm 0.0
19:48 gram_schmidt: Removing vector 80 of norm 0.0
19:48 gram_schmidt: Removing vector 81 of norm 0.0
19:48 gram_schmidt: Removing vector 82 of norm 0.0
19:48 gram_schmidt: Removing vector 83 of norm 0.0
19:48 gram_schmidt: Removing vector 84 of norm 0.0
19:48 gram_schmidt: Removing vector 85 of norm 0.0
19:48 gram_schmidt: Removing vector 86 of norm 0.0
19:48 gram_schmidt: Removing vector 87 of norm 0.0
19:48 gram_schmidt: Removing vector 88 of norm 0.0
19:48 gram_schmidt: Removing vector 89 of norm 0.0
19:48 gram_schmidt: Removing vector 90 of norm 0.0
19:48 gram_schmidt: Removing vector 91 of norm 0.0
19:48 gram_schmidt: Removing vector 92 of norm 0.0
19:48 gram_schmidt: Removing vector 93 of norm 0.0
19:48 gram_schmidt: Removing vector 94 of norm 0.0
19:48 gram_schmidt: Removing vector 95 of norm 0.0
19:48 gram_schmidt: Removing vector 96 of norm 0.0
19:48 gram_schmidt: Removing vector 97 of norm 0.0
19:48 gram_schmidt: Removing vector 98 of norm 0.0
19:48 gram_schmidt: Removing vector 99 of norm 0.0
19:48 gram_schmidt: Removing vector 100 of norm 0.0
19:48 gram_schmidt: Removing vector 101 of norm 0.0
19:48 gram_schmidt: Removing vector 0 of norm 0.0
19:48 gram_schmidt: Removing vector 1 of norm 0.0
19:48 gram_schmidt: Removing vector 2 of norm 0.0
19:48 gram_schmidt: Removing vector 3 of norm 0.0
19:48 gram_schmidt: Removing vector 4 of norm 0.0
19:48 gram_schmidt: Removing vector 5 of norm 0.0
19:48 gram_schmidt: Removing vector 6 of norm 0.0
19:48 gram_schmidt: Removing vector 7 of norm 0.0
19:48 gram_schmidt: Removing vector 8 of norm 0.0
19:48 gram_schmidt: Removing vector 9 of norm 0.0
19:48 gram_schmidt: Removing vector 10 of norm 0.0
19:48 gram_schmidt: Removing vector 11 of norm 0.0
19:48 gram_schmidt: Removing vector 12 of norm 0.0
19:48 gram_schmidt: Removing vector 13 of norm 0.0
19:48 gram_schmidt: Removing vector 14 of norm 0.0
19:48 gram_schmidt: Removing vector 15 of norm 0.0
19:48 gram_schmidt: Removing vector 16 of norm 0.0
19:48 gram_schmidt: Removing vector 17 of norm 0.0
19:48 gram_schmidt: Removing vector 18 of norm 0.0
19:48 gram_schmidt: Removing vector 19 of norm 0.0
19:48 gram_schmidt: Removing vector 20 of norm 0.0
19:48 gram_schmidt: Removing vector 21 of norm 0.0
19:48 gram_schmidt: Removing vector 22 of norm 0.0
19:48 gram_schmidt: Removing vector 23 of norm 0.0
19:48 gram_schmidt: Removing vector 24 of norm 0.0
19:48 gram_schmidt: Removing vector 25 of norm 0.0
19:48 gram_schmidt: Removing vector 26 of norm 0.0
19:48 gram_schmidt: Removing vector 27 of norm 0.0
19:48 gram_schmidt: Removing vector 28 of norm 0.0
19:48 gram_schmidt: Removing vector 29 of norm 0.0
19:48 gram_schmidt: Removing vector 30 of norm 0.0
19:48 gram_schmidt: Removing vector 31 of norm 0.0
19:48 gram_schmidt: Removing vector 32 of norm 0.0
19:48 gram_schmidt: Removing vector 33 of norm 0.0
19:48 gram_schmidt: Removing vector 34 of norm 0.0
19:48 gram_schmidt: Removing vector 35 of norm 0.0
19:48 gram_schmidt: Removing vector 36 of norm 0.0
19:48 gram_schmidt: Removing vector 37 of norm 0.0
19:48 gram_schmidt: Removing vector 38 of norm 0.0
19:48 gram_schmidt: Removing vector 39 of norm 0.0
19:48 gram_schmidt: Removing vector 40 of norm 0.0
19:48 gram_schmidt: Removing vector 41 of norm 0.0
19:48 gram_schmidt: Removing vector 42 of norm 0.0
19:48 gram_schmidt: Removing vector 43 of norm 0.0
19:48 gram_schmidt: Removing vector 44 of norm 0.0
19:48 gram_schmidt: Removing vector 45 of norm 0.0
19:48 gram_schmidt: Removing vector 46 of norm 0.0
19:48 gram_schmidt: Removing vector 47 of norm 0.0
19:48 gram_schmidt: Removing vector 48 of norm 0.0
19:48 gram_schmidt: Removing vector 49 of norm 0.0
19:48 gram_schmidt: Removing vector 50 of norm 0.0
19:48 gram_schmidt: Removing vector 51 of norm 0.0
19:48 gram_schmidt: Removing vector 52 of norm 0.0
19:48 gram_schmidt: Removing vector 53 of norm 0.0
19:48 gram_schmidt: Removing vector 54 of norm 0.0
19:48 gram_schmidt: Removing vector 55 of norm 0.0
19:48 gram_schmidt: Removing vector 56 of norm 0.0
19:48 gram_schmidt: Removing vector 57 of norm 0.0
19:48 gram_schmidt: Removing vector 58 of norm 0.0
19:48 gram_schmidt: Removing vector 59 of norm 0.0
19:48 gram_schmidt: Removing vector 60 of norm 0.0
19:48 gram_schmidt: Removing vector 61 of norm 0.0
19:48 gram_schmidt: Removing vector 62 of norm 0.0
19:48 gram_schmidt: Removing vector 63 of norm 0.0
19:48 gram_schmidt: Removing vector 64 of norm 0.0
19:48 gram_schmidt: Removing vector 65 of norm 0.0
19:48 gram_schmidt: Removing vector 66 of norm 0.0
19:48 gram_schmidt: Removing vector 67 of norm 0.0
19:48 gram_schmidt: Removing vector 68 of norm 0.0
19:48 gram_schmidt: Removing vector 69 of norm 0.0
19:48 gram_schmidt: Removing vector 70 of norm 0.0
19:48 gram_schmidt: Removing vector 71 of norm 0.0
19:48 gram_schmidt: Removing vector 72 of norm 0.0
19:48 gram_schmidt: Removing vector 73 of norm 0.0
19:48 gram_schmidt: Removing vector 74 of norm 0.0
19:48 gram_schmidt: Removing vector 75 of norm 0.0
19:48 gram_schmidt: Removing vector 76 of norm 0.0
19:48 gram_schmidt: Removing vector 77 of norm 0.0
19:48 gram_schmidt: Removing vector 78 of norm 0.0
19:48 gram_schmidt: Removing vector 79 of norm 0.0
19:48 gram_schmidt: Removing vector 80 of norm 0.0
19:48 gram_schmidt: Removing vector 81 of norm 0.0
19:48 gram_schmidt: Removing vector 82 of norm 0.0
19:48 gram_schmidt: Removing vector 83 of norm 0.0
19:48 gram_schmidt: Removing vector 84 of norm 0.0
19:48 gram_schmidt: Removing vector 85 of norm 0.0
19:48 gram_schmidt: Removing vector 86 of norm 0.0
19:48 gram_schmidt: Removing vector 87 of norm 0.0
19:48 gram_schmidt: Removing vector 88 of norm 0.0
19:48 gram_schmidt: Removing vector 89 of norm 0.0
19:48 gram_schmidt: Removing vector 90 of norm 0.0
19:48 gram_schmidt: Removing vector 91 of norm 0.0
19:48 gram_schmidt: Removing vector 92 of norm 0.0
19:48 gram_schmidt: Removing vector 93 of norm 0.0
19:48 gram_schmidt: Removing vector 94 of norm 0.0
19:48 gram_schmidt: Removing vector 95 of norm 0.0
19:48 gram_schmidt: Removing vector 96 of norm 0.0
19:48 gram_schmidt: Removing vector 97 of norm 0.0
19:48 gram_schmidt: Removing vector 98 of norm 0.0
19:48 gram_schmidt: Removing vector 99 of norm 0.0
19:48 gram_schmidt: Removing vector 100 of norm 0.0
19:48 gram_schmidt: Removing vector 101 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;10]" time="0.00360107421875"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;11]" time="0.007191181182861328"><system-err>19:48 gram_schmidt: Removing linear dependent vector 3
19:48 gram_schmidt: Removing linear dependent vector 3
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;12]" time="0.004096031188964844"><system-err>19:48 gram_schmidt: Removing vector 0 of norm 0.0
19:48 gram_schmidt: Removing vector 1 of norm 0.0
19:48 gram_schmidt: Removing vector 2 of norm 0.0
19:48 gram_schmidt: Removing vector 0 of norm 0.0
19:48 gram_schmidt: Removing vector 1 of norm 0.0
19:48 gram_schmidt: Removing vector 2 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;13]" time="0.002772808074951172"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;14]" time="0.005120277404785156"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;15]" time="0.430753231048584"><system-err>19:48 gram_schmidt: Removing linear dependent vector 36
19:48 gram_schmidt: Removing linear dependent vector 37
19:48 gram_schmidt: Removing linear dependent vector 38
19:48 gram_schmidt: Removing linear dependent vector 39
19:48 gram_schmidt: Removing linear dependent vector 40
19:48 gram_schmidt: Removing linear dependent vector 41
19:48 gram_schmidt: Removing linear dependent vector 42
19:48 gram_schmidt: Removing linear dependent vector 36
19:48 gram_schmidt: Removing linear dependent vector 37
19:48 gram_schmidt: Removing linear dependent vector 38
19:48 gram_schmidt: Removing linear dependent vector 39
19:48 gram_schmidt: Removing linear dependent vector 40
19:48 gram_schmidt: Removing linear dependent vector 41
19:48 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;16]" time="0.2186574935913086"><system-err>19:48 gram_schmidt: Removing linear dependent vector 3
19:48 gram_schmidt: Removing linear dependent vector 4
19:48 gram_schmidt: Removing linear dependent vector 5
19:48 gram_schmidt: Removing linear dependent vector 6
19:48 gram_schmidt: Removing linear dependent vector 7
19:48 gram_schmidt: Removing linear dependent vector 8
19:48 gram_schmidt: Removing linear dependent vector 9
19:48 gram_schmidt: Removing linear dependent vector 10
19:48 gram_schmidt: Removing linear dependent vector 11
19:48 gram_schmidt: Removing linear dependent vector 12
19:48 gram_schmidt: Removing linear dependent vector 13
19:48 gram_schmidt: Removing linear dependent vector 14
19:48 gram_schmidt: Removing linear dependent vector 15
19:48 gram_schmidt: Removing linear dependent vector 16
19:48 gram_schmidt: Removing linear dependent vector 17
19:48 gram_schmidt: Removing linear dependent vector 18
19:48 gram_schmidt: Removing linear dependent vector 19
19:48 gram_schmidt: Removing linear dependent vector 20
19:48 gram_schmidt: Removing linear dependent vector 21
19:48 gram_schmidt: Removing linear dependent vector 22
19:48 gram_schmidt: Removing linear dependent vector 23
19:48 gram_schmidt: Removing linear dependent vector 24
19:48 gram_schmidt: Removing linear dependent vector 25
19:48 gram_schmidt: Removing linear dependent vector 26
19:48 gram_schmidt: Removing linear dependent vector 27
19:48 gram_schmidt: Removing linear dependent vector 28
19:48 gram_schmidt: Removing linear dependent vector 29
19:48 gram_schmidt: Removing linear dependent vector 30
19:48 gram_schmidt: Removing linear dependent vector 31
19:48 gram_schmidt: Removing linear dependent vector 32
19:48 gram_schmidt: Removing linear dependent vector 33
19:48 gram_schmidt: Removing linear dependent vector 34
19:48 gram_schmidt: Removing linear dependent vector 35
19:48 gram_schmidt: Removing linear dependent vector 36
19:48 gram_schmidt: Removing linear dependent vector 37
19:48 gram_schmidt: Removing linear dependent vector 38
19:48 gram_schmidt: Removing linear dependent vector 39
19:48 gram_schmidt: Removing linear dependent vector 40
19:48 gram_schmidt: Removing linear dependent vector 41
19:48 gram_schmidt: Removing linear dependent vector 42
19:48 gram_schmidt: Removing linear dependent vector 43
19:48 gram_schmidt: Removing linear dependent vector 44
19:48 gram_schmidt: Removing linear dependent vector 45
19:48 gram_schmidt: Removing linear dependent vector 46
19:48 gram_schmidt: Removing linear dependent vector 47
19:48 gram_schmidt: Removing linear dependent vector 48
19:48 gram_schmidt: Removing linear dependent vector 49
19:48 gram_schmidt: Removing linear dependent vector 50
19:48 gram_schmidt: Removing linear dependent vector 51
19:48 gram_schmidt: Removing linear dependent vector 52
19:48 gram_schmidt: Removing linear dependent vector 53
19:48 gram_schmidt: Removing linear dependent vector 54
19:48 gram_schmidt: Removing linear dependent vector 55
19:48 gram_schmidt: Removing linear dependent vector 56
19:48 gram_schmidt: Removing linear dependent vector 57
19:48 gram_schmidt: Removing linear dependent vector 58
19:48 gram_schmidt: Removing linear dependent vector 59
19:48 gram_schmidt: Removing linear dependent vector 60
19:48 gram_schmidt: Removing linear dependent vector 61
19:48 gram_schmidt: Removing linear dependent vector 62
19:48 gram_schmidt: Removing linear dependent vector 63
19:48 gram_schmidt: Removing linear dependent vector 64
19:48 gram_schmidt: Removing linear dependent vector 65
19:48 gram_schmidt: Removing linear dependent vector 66
19:48 gram_schmidt: Removing linear dependent vector 67
19:48 gram_schmidt: Removing linear dependent vector 68
19:48 gram_schmidt: Removing linear dependent vector 69
19:48 gram_schmidt: Removing linear dependent vector 70
19:48 gram_schmidt: Removing linear dependent vector 71
19:48 gram_schmidt: Removing linear dependent vector 72
19:48 gram_schmidt: Removing linear dependent vector 73
19:48 gram_schmidt: Removing linear dependent vector 74
19:48 gram_schmidt: Removing linear dependent vector 75
19:48 gram_schmidt: Removing linear dependent vector 76
19:48 gram_schmidt: Removing linear dependent vector 77
19:48 gram_schmidt: Removing linear dependent vector 78
19:48 gram_schmidt: Removing linear dependent vector 79
19:48 gram_schmidt: Removing linear dependent vector 80
19:48 gram_schmidt: Removing linear dependent vector 81
19:48 gram_schmidt: Removing linear dependent vector 82
19:48 gram_schmidt: Removing linear dependent vector 83
19:48 gram_schmidt: Removing linear dependent vector 84
19:48 gram_schmidt: Removing linear dependent vector 85
19:48 gram_schmidt: Removing linear dependent vector 86
19:48 gram_schmidt: Removing linear dependent vector 87
19:48 gram_schmidt: Removing linear dependent vector 88
19:48 gram_schmidt: Removing linear dependent vector 89
19:48 gram_schmidt: Removing linear dependent vector 90
19:48 gram_schmidt: Removing linear dependent vector 91
19:48 gram_schmidt: Removing linear dependent vector 92
19:48 gram_schmidt: Removing linear dependent vector 93
19:48 gram_schmidt: Removing linear dependent vector 94
19:48 gram_schmidt: Removing linear dependent vector 95
19:48 gram_schmidt: Removing linear dependent vector 96
19:48 gram_schmidt: Removing linear dependent vector 97
19:48 gram_schmidt: Removing linear dependent vector 98
19:48 gram_schmidt: Removing linear dependent vector 99
19:48 gram_schmidt: Removing linear dependent vector 100
19:48 gram_schmidt: Removing linear dependent vector 101
19:48 gram_schmidt: Removing linear dependent vector 3
19:48 gram_schmidt: Removing linear dependent vector 4
19:48 gram_schmidt: Removing linear dependent vector 5
19:48 gram_schmidt: Removing linear dependent vector 6
19:48 gram_schmidt: Removing linear dependent vector 7
19:48 gram_schmidt: Removing linear dependent vector 8
19:48 gram_schmidt: Removing linear dependent vector 9
19:48 gram_schmidt: Removing linear dependent vector 10
19:48 gram_schmidt: Removing linear dependent vector 11
19:48 gram_schmidt: Removing linear dependent vector 12
19:48 gram_schmidt: Removing linear dependent vector 13
19:48 gram_schmidt: Removing linear dependent vector 14
19:48 gram_schmidt: Removing linear dependent vector 15
19:48 gram_schmidt: Removing linear dependent vector 16
19:48 gram_schmidt: Removing linear dependent vector 17
19:48 gram_schmidt: Removing linear dependent vector 18
19:48 gram_schmidt: Removing linear dependent vector 19
19:48 gram_schmidt: Removing linear dependent vector 20
19:48 gram_schmidt: Removing linear dependent vector 21
19:48 gram_schmidt: Removing linear dependent vector 22
19:48 gram_schmidt: Removing linear dependent vector 23
19:48 gram_schmidt: Removing linear dependent vector 24
19:48 gram_schmidt: Removing linear dependent vector 25
19:48 gram_schmidt: Removing linear dependent vector 26
19:48 gram_schmidt: Removing linear dependent vector 27
19:48 gram_schmidt: Removing linear dependent vector 28
19:48 gram_schmidt: Removing linear dependent vector 29
19:48 gram_schmidt: Removing linear dependent vector 30
19:48 gram_schmidt: Removing linear dependent vector 31
19:48 gram_schmidt: Removing linear dependent vector 32
19:48 gram_schmidt: Removing linear dependent vector 33
19:48 gram_schmidt: Removing linear dependent vector 34
19:48 gram_schmidt: Removing linear dependent vector 35
19:48 gram_schmidt: Removing linear dependent vector 36
19:48 gram_schmidt: Removing linear dependent vector 37
19:48 gram_schmidt: Removing linear dependent vector 38
19:48 gram_schmidt: Removing linear dependent vector 39
19:48 gram_schmidt: Removing linear dependent vector 40
19:48 gram_schmidt: Removing linear dependent vector 41
19:48 gram_schmidt: Removing linear dependent vector 42
19:48 gram_schmidt: Removing linear dependent vector 43
19:48 gram_schmidt: Removing linear dependent vector 44
19:48 gram_schmidt: Removing linear dependent vector 45
19:48 gram_schmidt: Removing linear dependent vector 46
19:48 gram_schmidt: Removing linear dependent vector 47
19:48 gram_schmidt: Removing linear dependent vector 48
19:48 gram_schmidt: Removing linear dependent vector 49
19:48 gram_schmidt: Removing linear dependent vector 50
19:48 gram_schmidt: Removing linear dependent vector 51
19:48 gram_schmidt: Removing linear dependent vector 52
19:48 gram_schmidt: Removing linear dependent vector 53
19:48 gram_schmidt: Removing linear dependent vector 54
19:48 gram_schmidt: Removing linear dependent vector 55
19:48 gram_schmidt: Removing linear dependent vector 56
19:48 gram_schmidt: Removing linear dependent vector 57
19:48 gram_schmidt: Removing linear dependent vector 58
19:48 gram_schmidt: Removing linear dependent vector 59
19:48 gram_schmidt: Removing linear dependent vector 60
19:48 gram_schmidt: Removing linear dependent vector 61
19:48 gram_schmidt: Removing linear dependent vector 62
19:48 gram_schmidt: Removing linear dependent vector 63
19:48 gram_schmidt: Removing linear dependent vector 64
19:48 gram_schmidt: Removing linear dependent vector 65
19:48 gram_schmidt: Removing linear dependent vector 66
19:48 gram_schmidt: Removing linear dependent vector 67
19:48 gram_schmidt: Removing linear dependent vector 68
19:48 gram_schmidt: Removing linear dependent vector 69
19:48 gram_schmidt: Removing linear dependent vector 70
19:48 gram_schmidt: Removing linear dependent vector 71
19:48 gram_schmidt: Removing linear dependent vector 72
19:48 gram_schmidt: Removing linear dependent vector 73
19:48 gram_schmidt: Removing linear dependent vector 74
19:48 gram_schmidt: Removing linear dependent vector 75
19:48 gram_schmidt: Removing linear dependent vector 76
19:48 gram_schmidt: Removing linear dependent vector 77
19:48 gram_schmidt: Removing linear dependent vector 78
19:48 gram_schmidt: Removing linear dependent vector 79
19:48 gram_schmidt: Removing linear dependent vector 80
19:48 gram_schmidt: Removing linear dependent vector 81
19:48 gram_schmidt: Removing linear dependent vector 82
19:48 gram_schmidt: Removing linear dependent vector 83
19:48 gram_schmidt: Removing linear dependent vector 84
19:48 gram_schmidt: Removing linear dependent vector 85
19:48 gram_schmidt: Removing linear dependent vector 86
19:48 gram_schmidt: Removing linear dependent vector 87
19:48 gram_schmidt: Removing linear dependent vector 88
19:48 gram_schmidt: Removing linear dependent vector 89
19:48 gram_schmidt: Removing linear dependent vector 90
19:48 gram_schmidt: Removing linear dependent vector 91
19:48 gram_schmidt: Removing linear dependent vector 92
19:48 gram_schmidt: Removing linear dependent vector 93
19:48 gram_schmidt: Removing linear dependent vector 94
19:48 gram_schmidt: Removing linear dependent vector 95
19:48 gram_schmidt: Removing linear dependent vector 96
19:48 gram_schmidt: Removing linear dependent vector 97
19:48 gram_schmidt: Removing linear dependent vector 98
19:48 gram_schmidt: Removing linear dependent vector 99
19:48 gram_schmidt: Removing linear dependent vector 100
19:48 gram_schmidt: Removing linear dependent vector 101
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;17]" time="0.00342559814453125"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;18]" time="0.002663135528564453"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;19]" time="0.005047798156738281"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;20]" time="0.2959113121032715"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;21]" time="1.568920612335205"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;22]" time="0.002615213394165039"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;23]" time="0.0020329952239990234"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;24]" time="0.008202314376831055"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;25]" time="0.43220996856689453"><system-err>19:50 gram_schmidt: Orthonormalizing vector 31 again
19:50 gram_schmidt: Removing linear dependent vector 32
19:50 gram_schmidt: Removing linear dependent vector 33
19:50 gram_schmidt: Removing linear dependent vector 34
19:50 gram_schmidt: Removing linear dependent vector 35
19:50 gram_schmidt: Removing linear dependent vector 36
19:50 gram_schmidt: Removing linear dependent vector 37
19:51 gram_schmidt: Removing linear dependent vector 38
19:51 gram_schmidt: Removing linear dependent vector 39
19:51 gram_schmidt: Removing linear dependent vector 40
19:51 gram_schmidt: Removing linear dependent vector 41
19:51 gram_schmidt: Removing linear dependent vector 42
19:51 gram_schmidt: Orthonormalizing vector 31 again
19:51 gram_schmidt: Removing linear dependent vector 32
19:51 gram_schmidt: Removing linear dependent vector 33
19:51 gram_schmidt: Removing linear dependent vector 34
19:51 gram_schmidt: Removing linear dependent vector 35
19:51 gram_schmidt: Removing linear dependent vector 36
19:51 gram_schmidt: Removing linear dependent vector 37
19:51 gram_schmidt: Removing linear dependent vector 38
19:51 gram_schmidt: Removing linear dependent vector 39
19:51 gram_schmidt: Removing linear dependent vector 40
19:51 gram_schmidt: Removing linear dependent vector 41
19:51 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;26]" time="0.24059057235717773"><system-err>19:51 gram_schmidt: Removing vector 0 of norm 0.0
19:51 gram_schmidt: Removing vector 1 of norm 0.0
19:51 gram_schmidt: Removing vector 2 of norm 0.0
19:51 gram_schmidt: Removing vector 3 of norm 0.0
19:51 gram_schmidt: Removing vector 4 of norm 0.0
19:51 gram_schmidt: Removing vector 5 of norm 0.0
19:51 gram_schmidt: Removing vector 6 of norm 0.0
19:51 gram_schmidt: Removing vector 7 of norm 0.0
19:51 gram_schmidt: Removing vector 8 of norm 0.0
19:51 gram_schmidt: Removing vector 9 of norm 0.0
19:51 gram_schmidt: Removing vector 10 of norm 0.0
19:51 gram_schmidt: Removing vector 11 of norm 0.0
19:51 gram_schmidt: Removing vector 12 of norm 0.0
19:51 gram_schmidt: Removing vector 13 of norm 0.0
19:51 gram_schmidt: Removing vector 14 of norm 0.0
19:51 gram_schmidt: Removing vector 15 of norm 0.0
19:51 gram_schmidt: Removing vector 16 of norm 0.0
19:51 gram_schmidt: Removing vector 17 of norm 0.0
19:51 gram_schmidt: Removing vector 18 of norm 0.0
19:51 gram_schmidt: Removing vector 19 of norm 0.0
19:51 gram_schmidt: Removing vector 20 of norm 0.0
19:51 gram_schmidt: Removing vector 21 of norm 0.0
19:51 gram_schmidt: Removing vector 22 of norm 0.0
19:51 gram_schmidt: Removing vector 23 of norm 0.0
19:51 gram_schmidt: Removing vector 24 of norm 0.0
19:51 gram_schmidt: Removing vector 25 of norm 0.0
19:51 gram_schmidt: Removing vector 26 of norm 0.0
19:51 gram_schmidt: Removing vector 27 of norm 0.0
19:51 gram_schmidt: Removing vector 28 of norm 0.0
19:51 gram_schmidt: Removing vector 29 of norm 0.0
19:51 gram_schmidt: Removing vector 30 of norm 0.0
19:51 gram_schmidt: Removing vector 31 of norm 0.0
19:51 gram_schmidt: Removing vector 32 of norm 0.0
19:51 gram_schmidt: Removing vector 33 of norm 0.0
19:51 gram_schmidt: Removing vector 34 of norm 0.0
19:51 gram_schmidt: Removing vector 35 of norm 0.0
19:51 gram_schmidt: Removing vector 36 of norm 0.0
19:51 gram_schmidt: Removing vector 37 of norm 0.0
19:51 gram_schmidt: Removing vector 38 of norm 0.0
19:51 gram_schmidt: Removing vector 39 of norm 0.0
19:51 gram_schmidt: Removing vector 40 of norm 0.0
19:51 gram_schmidt: Removing vector 41 of norm 0.0
19:51 gram_schmidt: Removing vector 42 of norm 0.0
19:51 gram_schmidt: Removing vector 43 of norm 0.0
19:51 gram_schmidt: Removing vector 44 of norm 0.0
19:51 gram_schmidt: Removing vector 45 of norm 0.0
19:51 gram_schmidt: Removing vector 46 of norm 0.0
19:51 gram_schmidt: Removing vector 47 of norm 0.0
19:51 gram_schmidt: Removing vector 48 of norm 0.0
19:51 gram_schmidt: Removing vector 49 of norm 0.0
19:51 gram_schmidt: Removing vector 50 of norm 0.0
19:51 gram_schmidt: Removing vector 51 of norm 0.0
19:51 gram_schmidt: Removing vector 52 of norm 0.0
19:51 gram_schmidt: Removing vector 53 of norm 0.0
19:51 gram_schmidt: Removing vector 54 of norm 0.0
19:51 gram_schmidt: Removing vector 55 of norm 0.0
19:51 gram_schmidt: Removing vector 56 of norm 0.0
19:51 gram_schmidt: Removing vector 57 of norm 0.0
19:51 gram_schmidt: Removing vector 58 of norm 0.0
19:51 gram_schmidt: Removing vector 59 of norm 0.0
19:51 gram_schmidt: Removing vector 60 of norm 0.0
19:51 gram_schmidt: Removing vector 61 of norm 0.0
19:51 gram_schmidt: Removing vector 62 of norm 0.0
19:51 gram_schmidt: Removing vector 63 of norm 0.0
19:51 gram_schmidt: Removing vector 64 of norm 0.0
19:51 gram_schmidt: Removing vector 65 of norm 0.0
19:51 gram_schmidt: Removing vector 66 of norm 0.0
19:51 gram_schmidt: Removing vector 67 of norm 0.0
19:51 gram_schmidt: Removing vector 68 of norm 0.0
19:51 gram_schmidt: Removing vector 69 of norm 0.0
19:51 gram_schmidt: Removing vector 70 of norm 0.0
19:51 gram_schmidt: Removing vector 71 of norm 0.0
19:51 gram_schmidt: Removing vector 72 of norm 0.0
19:51 gram_schmidt: Removing vector 73 of norm 0.0
19:51 gram_schmidt: Removing vector 74 of norm 0.0
19:51 gram_schmidt: Removing vector 75 of norm 0.0
19:51 gram_schmidt: Removing vector 76 of norm 0.0
19:51 gram_schmidt: Removing vector 77 of norm 0.0
19:51 gram_schmidt: Removing vector 78 of norm 0.0
19:51 gram_schmidt: Removing vector 79 of norm 0.0
19:51 gram_schmidt: Removing vector 80 of norm 0.0
19:51 gram_schmidt: Removing vector 81 of norm 0.0
19:51 gram_schmidt: Removing vector 82 of norm 0.0
19:51 gram_schmidt: Removing vector 83 of norm 0.0
19:51 gram_schmidt: Removing vector 84 of norm 0.0
19:51 gram_schmidt: Removing vector 85 of norm 0.0
19:51 gram_schmidt: Removing vector 86 of norm 0.0
19:51 gram_schmidt: Removing vector 87 of norm 0.0
19:51 gram_schmidt: Removing vector 88 of norm 0.0
19:51 gram_schmidt: Removing vector 89 of norm 0.0
19:51 gram_schmidt: Removing vector 90 of norm 0.0
19:51 gram_schmidt: Removing vector 91 of norm 0.0
19:51 gram_schmidt: Removing vector 92 of norm 0.0
19:51 gram_schmidt: Removing vector 93 of norm 0.0
19:51 gram_schmidt: Removing vector 94 of norm 0.0
19:51 gram_schmidt: Removing vector 95 of norm 0.0
19:51 gram_schmidt: Removing vector 96 of norm 0.0
19:51 gram_schmidt: Removing vector 97 of norm 0.0
19:51 gram_schmidt: Removing vector 98 of norm 0.0
19:51 gram_schmidt: Removing vector 99 of norm 0.0
19:51 gram_schmidt: Removing vector 100 of norm 0.0
19:51 gram_schmidt: Removing vector 101 of norm 0.0
19:51 gram_schmidt: Removing vector 0 of norm 0.0
19:51 gram_schmidt: Removing vector 1 of norm 0.0
19:51 gram_schmidt: Removing vector 2 of norm 0.0
19:51 gram_schmidt: Removing vector 3 of norm 0.0
19:51 gram_schmidt: Removing vector 4 of norm 0.0
19:51 gram_schmidt: Removing vector 5 of norm 0.0
19:51 gram_schmidt: Removing vector 6 of norm 0.0
19:51 gram_schmidt: Removing vector 7 of norm 0.0
19:51 gram_schmidt: Removing vector 8 of norm 0.0
19:51 gram_schmidt: Removing vector 9 of norm 0.0
19:51 gram_schmidt: Removing vector 10 of norm 0.0
19:51 gram_schmidt: Removing vector 11 of norm 0.0
19:51 gram_schmidt: Removing vector 12 of norm 0.0
19:51 gram_schmidt: Removing vector 13 of norm 0.0
19:51 gram_schmidt: Removing vector 14 of norm 0.0
19:51 gram_schmidt: Removing vector 15 of norm 0.0
19:51 gram_schmidt: Removing vector 16 of norm 0.0
19:51 gram_schmidt: Removing vector 17 of norm 0.0
19:51 gram_schmidt: Removing vector 18 of norm 0.0
19:51 gram_schmidt: Removing vector 19 of norm 0.0
19:51 gram_schmidt: Removing vector 20 of norm 0.0
19:51 gram_schmidt: Removing vector 21 of norm 0.0
19:51 gram_schmidt: Removing vector 22 of norm 0.0
19:51 gram_schmidt: Removing vector 23 of norm 0.0
19:51 gram_schmidt: Removing vector 24 of norm 0.0
19:51 gram_schmidt: Removing vector 25 of norm 0.0
19:51 gram_schmidt: Removing vector 26 of norm 0.0
19:51 gram_schmidt: Removing vector 27 of norm 0.0
19:51 gram_schmidt: Removing vector 28 of norm 0.0
19:51 gram_schmidt: Removing vector 29 of norm 0.0
19:51 gram_schmidt: Removing vector 30 of norm 0.0
19:51 gram_schmidt: Removing vector 31 of norm 0.0
19:51 gram_schmidt: Removing vector 32 of norm 0.0
19:51 gram_schmidt: Removing vector 33 of norm 0.0
19:51 gram_schmidt: Removing vector 34 of norm 0.0
19:51 gram_schmidt: Removing vector 35 of norm 0.0
19:51 gram_schmidt: Removing vector 36 of norm 0.0
19:51 gram_schmidt: Removing vector 37 of norm 0.0
19:51 gram_schmidt: Removing vector 38 of norm 0.0
19:51 gram_schmidt: Removing vector 39 of norm 0.0
19:51 gram_schmidt: Removing vector 40 of norm 0.0
19:51 gram_schmidt: Removing vector 41 of norm 0.0
19:51 gram_schmidt: Removing vector 42 of norm 0.0
19:51 gram_schmidt: Removing vector 43 of norm 0.0
19:51 gram_schmidt: Removing vector 44 of norm 0.0
19:51 gram_schmidt: Removing vector 45 of norm 0.0
19:51 gram_schmidt: Removing vector 46 of norm 0.0
19:51 gram_schmidt: Removing vector 47 of norm 0.0
19:51 gram_schmidt: Removing vector 48 of norm 0.0
19:51 gram_schmidt: Removing vector 49 of norm 0.0
19:51 gram_schmidt: Removing vector 50 of norm 0.0
19:51 gram_schmidt: Removing vector 51 of norm 0.0
19:51 gram_schmidt: Removing vector 52 of norm 0.0
19:51 gram_schmidt: Removing vector 53 of norm 0.0
19:51 gram_schmidt: Removing vector 54 of norm 0.0
19:51 gram_schmidt: Removing vector 55 of norm 0.0
19:51 gram_schmidt: Removing vector 56 of norm 0.0
19:51 gram_schmidt: Removing vector 57 of norm 0.0
19:51 gram_schmidt: Removing vector 58 of norm 0.0
19:51 gram_schmidt: Removing vector 59 of norm 0.0
19:51 gram_schmidt: Removing vector 60 of norm 0.0
19:51 gram_schmidt: Removing vector 61 of norm 0.0
19:51 gram_schmidt: Removing vector 62 of norm 0.0
19:51 gram_schmidt: Removing vector 63 of norm 0.0
19:51 gram_schmidt: Removing vector 64 of norm 0.0
19:51 gram_schmidt: Removing vector 65 of norm 0.0
19:51 gram_schmidt: Removing vector 66 of norm 0.0
19:51 gram_schmidt: Removing vector 67 of norm 0.0
19:51 gram_schmidt: Removing vector 68 of norm 0.0
19:51 gram_schmidt: Removing vector 69 of norm 0.0
19:51 gram_schmidt: Removing vector 70 of norm 0.0
19:51 gram_schmidt: Removing vector 71 of norm 0.0
19:51 gram_schmidt: Removing vector 72 of norm 0.0
19:51 gram_schmidt: Removing vector 73 of norm 0.0
19:51 gram_schmidt: Removing vector 74 of norm 0.0
19:51 gram_schmidt: Removing vector 75 of norm 0.0
19:51 gram_schmidt: Removing vector 76 of norm 0.0
19:51 gram_schmidt: Removing vector 77 of norm 0.0
19:51 gram_schmidt: Removing vector 78 of norm 0.0
19:51 gram_schmidt: Removing vector 79 of norm 0.0
19:51 gram_schmidt: Removing vector 80 of norm 0.0
19:51 gram_schmidt: Removing vector 81 of norm 0.0
19:51 gram_schmidt: Removing vector 82 of norm 0.0
19:51 gram_schmidt: Removing vector 83 of norm 0.0
19:51 gram_schmidt: Removing vector 84 of norm 0.0
19:51 gram_schmidt: Removing vector 85 of norm 0.0
19:51 gram_schmidt: Removing vector 86 of norm 0.0
19:51 gram_schmidt: Removing vector 87 of norm 0.0
19:51 gram_schmidt: Removing vector 88 of norm 0.0
19:51 gram_schmidt: Removing vector 89 of norm 0.0
19:51 gram_schmidt: Removing vector 90 of norm 0.0
19:51 gram_schmidt: Removing vector 91 of norm 0.0
19:51 gram_schmidt: Removing vector 92 of norm 0.0
19:51 gram_schmidt: Removing vector 93 of norm 0.0
19:51 gram_schmidt: Removing vector 94 of norm 0.0
19:51 gram_schmidt: Removing vector 95 of norm 0.0
19:51 gram_schmidt: Removing vector 96 of norm 0.0
19:51 gram_schmidt: Removing vector 97 of norm 0.0
19:51 gram_schmidt: Removing vector 98 of norm 0.0
19:51 gram_schmidt: Removing vector 99 of norm 0.0
19:51 gram_schmidt: Removing vector 100 of norm 0.0
19:51 gram_schmidt: Removing vector 101 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;0]" time="0.03825068473815918"><system-err>19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 L2ProductP1: Integrate the products of the shape functions on each element
19:51 L2ProductP1: Determine global dofs ...
19:51 L2ProductP1: Boundary treatment ...
19:51 L2ProductP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 L2ProductP1: Integrate the products of the shape functions on each element
19:51 L2ProductP1: Determine global dofs ...
19:51 L2ProductP1: Boundary treatment ...
19:51 L2ProductP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 gram_schmidt: Orthonormalizing vector 3 again
19:51 gram_schmidt: Orthonormalizing vector 4 again
19:51 gram_schmidt: Orthonormalizing vector 3 again
19:51 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;1]" time="0.03635525703430176"><system-err>19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 L2ProductP1: Integrate the products of the shape functions on each element
19:51 L2ProductP1: Determine global dofs ...
19:51 L2ProductP1: Boundary treatment ...
19:51 L2ProductP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 L2ProductP1: Integrate the products of the shape functions on each element
19:51 L2ProductP1: Determine global dofs ...
19:51 L2ProductP1: Boundary treatment ...
19:51 L2ProductP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 gram_schmidt: Orthonormalizing vector 1 again
19:51 gram_schmidt: Orthonormalizing vector 2 again
19:51 gram_schmidt: Orthonormalizing vector 3 again
19:51 gram_schmidt: Orthonormalizing vector 4 again
19:51 gram_schmidt: Orthonormalizing vector 1 again
19:51 gram_schmidt: Orthonormalizing vector 2 again
19:51 gram_schmidt: Orthonormalizing vector 3 again
19:51 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;2]" time="0.03990435600280762"><system-err>19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 L2ProductP1: Integrate the products of the shape functions on each element
19:51 L2ProductP1: Determine global dofs ...
19:51 L2ProductP1: Boundary treatment ...
19:51 L2ProductP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 L2ProductP1: Integrate the products of the shape functions on each element
19:51 L2ProductP1: Determine global dofs ...
19:51 L2ProductP1: Boundary treatment ...
19:51 L2ProductP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 gram_schmidt: Orthonormalizing vector 3 again
19:51 gram_schmidt: Orthonormalizing vector 4 again
19:51 gram_schmidt: Orthonormalizing vector 3 again
19:51 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;3]" time="0.03647589683532715"><system-err>19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 L2ProductP1: Integrate the products of the shape functions on each element
19:51 L2ProductP1: Determine global dofs ...
19:51 L2ProductP1: Boundary treatment ...
19:51 L2ProductP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 L2ProductP1: Integrate the products of the shape functions on each element
19:51 L2ProductP1: Determine global dofs ...
19:51 L2ProductP1: Boundary treatment ...
19:51 L2ProductP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 gram_schmidt: Orthonormalizing vector 1 again
19:51 gram_schmidt: Orthonormalizing vector 2 again
19:51 gram_schmidt: Orthonormalizing vector 3 again
19:51 gram_schmidt: Orthonormalizing vector 4 again
19:51 gram_schmidt: Orthonormalizing vector 1 again
19:51 gram_schmidt: Orthonormalizing vector 2 again
19:51 gram_schmidt: Orthonormalizing vector 3 again
19:51 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;4]" time="0.039048194885253906"><system-err>19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 L2ProductP1: Integrate the products of the shape functions on each element
19:51 L2ProductP1: Determine global dofs ...
19:51 L2ProductP1: Boundary treatment ...
19:51 L2ProductP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 L2ProductP1: Integrate the products of the shape functions on each element
19:51 L2ProductP1: Determine global dofs ...
19:51 L2ProductP1: Boundary treatment ...
19:51 L2ProductP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 gram_schmidt: Orthonormalizing vector 3 again
19:51 gram_schmidt: Orthonormalizing vector 4 again
19:51 gram_schmidt: Orthonormalizing vector 3 again
19:51 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;5]" time="0.03587532043457031"><system-err>19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 L2ProductP1: Integrate the products of the shape functions on each element
19:51 L2ProductP1: Determine global dofs ...
19:51 L2ProductP1: Boundary treatment ...
19:51 L2ProductP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 L2ProductP1: Integrate the products of the shape functions on each element
19:51 L2ProductP1: Determine global dofs ...
19:51 L2ProductP1: Boundary treatment ...
19:51 L2ProductP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 gram_schmidt: Orthonormalizing vector 1 again
19:51 gram_schmidt: Orthonormalizing vector 2 again
19:51 gram_schmidt: Orthonormalizing vector 3 again
19:51 gram_schmidt: Orthonormalizing vector 4 again
19:51 gram_schmidt: Orthonormalizing vector 1 again
19:51 gram_schmidt: Orthonormalizing vector 2 again
19:51 gram_schmidt: Orthonormalizing vector 3 again
19:51 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;6]" time="0.04181241989135742"><system-err>19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 L2ProductP1: Integrate the products of the shape functions on each element
19:51 L2ProductP1: Determine global dofs ...
19:51 L2ProductP1: Boundary treatment ...
19:51 L2ProductP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 L2ProductP1: Integrate the products of the shape functions on each element
19:51 L2ProductP1: Determine global dofs ...
19:51 L2ProductP1: Boundary treatment ...
19:51 L2ProductP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 gram_schmidt: Orthonormalizing vector 3 again
19:51 gram_schmidt: Orthonormalizing vector 4 again
19:51 gram_schmidt: Orthonormalizing vector 3 again
19:51 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;7]" time="0.03652000427246094"><system-err>19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 L2ProductP1: Integrate the products of the shape functions on each element
19:51 L2ProductP1: Determine global dofs ...
19:51 L2ProductP1: Boundary treatment ...
19:51 L2ProductP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 L2ProductP1: Integrate the products of the shape functions on each element
19:51 L2ProductP1: Determine global dofs ...
19:51 L2ProductP1: Boundary treatment ...
19:51 L2ProductP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 gram_schmidt: Orthonormalizing vector 1 again
19:51 gram_schmidt: Orthonormalizing vector 2 again
19:51 gram_schmidt: Orthonormalizing vector 3 again
19:51 gram_schmidt: Orthonormalizing vector 4 again
19:51 gram_schmidt: Orthonormalizing vector 1 again
19:51 gram_schmidt: Orthonormalizing vector 2 again
19:51 gram_schmidt: Orthonormalizing vector 3 again
19:51 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;8]" time="0.039267539978027344"><system-err>19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 L2ProductP1: Integrate the products of the shape functions on each element
19:51 L2ProductP1: Determine global dofs ...
19:51 L2ProductP1: Boundary treatment ...
19:51 L2ProductP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 L2ProductP1: Integrate the products of the shape functions on each element
19:51 L2ProductP1: Determine global dofs ...
19:51 L2ProductP1: Boundary treatment ...
19:51 L2ProductP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 gram_schmidt: Orthonormalizing vector 3 again
19:51 gram_schmidt: Orthonormalizing vector 4 again
19:51 gram_schmidt: Orthonormalizing vector 3 again
19:51 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;9]" time="0.03631281852722168"><system-err>19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 L2ProductP1: Integrate the products of the shape functions on each element
19:51 L2ProductP1: Determine global dofs ...
19:51 L2ProductP1: Boundary treatment ...
19:51 L2ProductP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 L2ProductP1: Integrate the products of the shape functions on each element
19:51 L2ProductP1: Determine global dofs ...
19:51 L2ProductP1: Boundary treatment ...
19:51 L2ProductP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 gram_schmidt: Orthonormalizing vector 1 again
19:51 gram_schmidt: Orthonormalizing vector 2 again
19:51 gram_schmidt: Orthonormalizing vector 3 again
19:51 gram_schmidt: Orthonormalizing vector 4 again
19:51 gram_schmidt: Orthonormalizing vector 1 again
19:51 gram_schmidt: Orthonormalizing vector 2 again
19:51 gram_schmidt: Orthonormalizing vector 3 again
19:51 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;10]" time="0.03864121437072754"><system-err>19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 L2ProductP1: Integrate the products of the shape functions on each element
19:51 L2ProductP1: Determine global dofs ...
19:51 L2ProductP1: Boundary treatment ...
19:51 L2ProductP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 L2ProductP1: Integrate the products of the shape functions on each element
19:51 L2ProductP1: Determine global dofs ...
19:51 L2ProductP1: Boundary treatment ...
19:51 L2ProductP1: Assemble system matrix ...
19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:51 gram_schmidt: Orthonormalizing vector 3 again
19:51 gram_schmidt: Orthonormalizing vector 4 again
19:51 gram_schmidt: Orthonormalizing vector 3 again
19:51 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;11]" time="0.036313772201538086"><system-err>19:51 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:51 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:51 DiffusionOperatorP1: Determine global dofs ...
19:51 DiffusionOperatorP1: Boundary treatment ...
19:51 DiffusionOperatorP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 L2ProductP1: Integrate the products of the shape functions on each element
19:52 L2ProductP1: Determine global dofs ...
19:52 L2ProductP1: Boundary treatment ...
19:52 L2ProductP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 L2ProductP1: Integrate the products of the shape functions on each element
19:52 L2ProductP1: Determine global dofs ...
19:52 L2ProductP1: Boundary treatment ...
19:52 L2ProductP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 gram_schmidt: Orthonormalizing vector 1 again
19:52 gram_schmidt: Orthonormalizing vector 2 again
19:52 gram_schmidt: Orthonormalizing vector 3 again
19:52 gram_schmidt: Orthonormalizing vector 4 again
19:52 gram_schmidt: Orthonormalizing vector 1 again
19:52 gram_schmidt: Orthonormalizing vector 2 again
19:52 gram_schmidt: Orthonormalizing vector 3 again
19:52 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;12]" time="0.03901076316833496"><system-err>19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 L2ProductP1: Integrate the products of the shape functions on each element
19:52 L2ProductP1: Determine global dofs ...
19:52 L2ProductP1: Boundary treatment ...
19:52 L2ProductP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 L2ProductP1: Integrate the products of the shape functions on each element
19:52 L2ProductP1: Determine global dofs ...
19:52 L2ProductP1: Boundary treatment ...
19:52 L2ProductP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 gram_schmidt: Removing linear dependent vector 5
19:52 gram_schmidt: Removing linear dependent vector 6
19:52 gram_schmidt: Removing linear dependent vector 5
19:52 gram_schmidt: Removing linear dependent vector 6
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;13]" time="0.035355567932128906"><system-err>19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 L2ProductP1: Integrate the products of the shape functions on each element
19:52 L2ProductP1: Determine global dofs ...
19:52 L2ProductP1: Boundary treatment ...
19:52 L2ProductP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 L2ProductP1: Integrate the products of the shape functions on each element
19:52 L2ProductP1: Determine global dofs ...
19:52 L2ProductP1: Boundary treatment ...
19:52 L2ProductP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 gram_schmidt: Orthonormalizing vector 3 again
19:52 gram_schmidt: Removing linear dependent vector 5
19:52 gram_schmidt: Removing linear dependent vector 6
19:52 gram_schmidt: Orthonormalizing vector 3 again
19:52 gram_schmidt: Removing linear dependent vector 5
19:52 gram_schmidt: Removing linear dependent vector 6
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;14]" time="0.041944026947021484"><system-err>19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 L2ProductP1: Integrate the products of the shape functions on each element
19:52 L2ProductP1: Determine global dofs ...
19:52 L2ProductP1: Boundary treatment ...
19:52 L2ProductP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 L2ProductP1: Integrate the products of the shape functions on each element
19:52 L2ProductP1: Determine global dofs ...
19:52 L2ProductP1: Boundary treatment ...
19:52 L2ProductP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 gram_schmidt: Orthonormalizing vector 1 again
19:52 gram_schmidt: Orthonormalizing vector 2 again
19:52 gram_schmidt: Orthonormalizing vector 3 again
19:52 gram_schmidt: Orthonormalizing vector 4 again
19:52 gram_schmidt: Removing linear dependent vector 5
19:52 gram_schmidt: Orthonormalizing vector 1 again
19:52 gram_schmidt: Orthonormalizing vector 2 again
19:52 gram_schmidt: Orthonormalizing vector 3 again
19:52 gram_schmidt: Orthonormalizing vector 4 again
19:52 gram_schmidt: Removing linear dependent vector 5
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;15]" time="0.03952741622924805"><system-err>19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 L2ProductP1: Integrate the products of the shape functions on each element
19:52 L2ProductP1: Determine global dofs ...
19:52 L2ProductP1: Boundary treatment ...
19:52 L2ProductP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 L2ProductP1: Integrate the products of the shape functions on each element
19:52 L2ProductP1: Determine global dofs ...
19:52 L2ProductP1: Boundary treatment ...
19:52 L2ProductP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 gram_schmidt: Orthonormalizing vector 1 again
19:52 gram_schmidt: Orthonormalizing vector 2 again
19:52 gram_schmidt: Orthonormalizing vector 3 again
19:52 gram_schmidt: Orthonormalizing vector 4 again
19:52 gram_schmidt: Orthonormalizing vector 5 again
19:52 gram_schmidt: Orthonormalizing vector 1 again
19:52 gram_schmidt: Orthonormalizing vector 2 again
19:52 gram_schmidt: Orthonormalizing vector 3 again
19:52 gram_schmidt: Orthonormalizing vector 4 again
19:52 gram_schmidt: Orthonormalizing vector 5 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;16]" time="0.03696155548095703"><system-err>19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 L2ProductP1: Integrate the products of the shape functions on each element
19:52 L2ProductP1: Determine global dofs ...
19:52 L2ProductP1: Boundary treatment ...
19:52 L2ProductP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 L2ProductP1: Integrate the products of the shape functions on each element
19:52 L2ProductP1: Determine global dofs ...
19:52 L2ProductP1: Boundary treatment ...
19:52 L2ProductP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 gram_schmidt: Removing linear dependent vector 1
19:52 gram_schmidt: Removing linear dependent vector 2
19:52 gram_schmidt: Removing linear dependent vector 3
19:52 gram_schmidt: Removing linear dependent vector 4
19:52 gram_schmidt: Removing linear dependent vector 5
19:52 gram_schmidt: Removing linear dependent vector 6
19:52 gram_schmidt: Removing linear dependent vector 1
19:52 gram_schmidt: Removing linear dependent vector 2
19:52 gram_schmidt: Removing linear dependent vector 3
19:52 gram_schmidt: Removing linear dependent vector 4
19:52 gram_schmidt: Removing linear dependent vector 5
19:52 gram_schmidt: Removing linear dependent vector 6
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;17]" time="0.03280138969421387"><system-err>19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 L2ProductP1: Integrate the products of the shape functions on each element
19:52 L2ProductP1: Determine global dofs ...
19:52 L2ProductP1: Boundary treatment ...
19:52 L2ProductP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 L2ProductP1: Integrate the products of the shape functions on each element
19:52 L2ProductP1: Determine global dofs ...
19:52 L2ProductP1: Boundary treatment ...
19:52 L2ProductP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 gram_schmidt: Removing linear dependent vector 1
19:52 gram_schmidt: Removing linear dependent vector 2
19:52 gram_schmidt: Removing linear dependent vector 3
19:52 gram_schmidt: Removing linear dependent vector 4
19:52 gram_schmidt: Removing linear dependent vector 5
19:52 gram_schmidt: Removing linear dependent vector 6
19:52 gram_schmidt: Removing linear dependent vector 1
19:52 gram_schmidt: Removing linear dependent vector 2
19:52 gram_schmidt: Removing linear dependent vector 3
19:52 gram_schmidt: Removing linear dependent vector 4
19:52 gram_schmidt: Removing linear dependent vector 5
19:52 gram_schmidt: Removing linear dependent vector 6
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;18]" time="0.04191231727600098"><system-err>19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 L2ProductP1: Integrate the products of the shape functions on each element
19:52 L2ProductP1: Determine global dofs ...
19:52 L2ProductP1: Boundary treatment ...
19:52 L2ProductP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 L2ProductP1: Integrate the products of the shape functions on each element
19:52 L2ProductP1: Determine global dofs ...
19:52 L2ProductP1: Boundary treatment ...
19:52 L2ProductP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 gram_schmidt: Orthonormalizing vector 1 again
19:52 gram_schmidt: Orthonormalizing vector 2 again
19:52 gram_schmidt: Orthonormalizing vector 3 again
19:52 gram_schmidt: Orthonormalizing vector 4 again
19:52 gram_schmidt: Removing linear dependent vector 5
19:52 gram_schmidt: Orthonormalizing vector 1 again
19:52 gram_schmidt: Orthonormalizing vector 2 again
19:52 gram_schmidt: Orthonormalizing vector 3 again
19:52 gram_schmidt: Orthonormalizing vector 4 again
19:52 gram_schmidt: Removing linear dependent vector 5
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;19]" time="0.0392758846282959"><system-err>19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 L2ProductP1: Integrate the products of the shape functions on each element
19:52 L2ProductP1: Determine global dofs ...
19:52 L2ProductP1: Boundary treatment ...
19:52 L2ProductP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 L2ProductP1: Integrate the products of the shape functions on each element
19:52 L2ProductP1: Determine global dofs ...
19:52 L2ProductP1: Boundary treatment ...
19:52 L2ProductP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 gram_schmidt: Orthonormalizing vector 1 again
19:52 gram_schmidt: Orthonormalizing vector 2 again
19:52 gram_schmidt: Orthonormalizing vector 3 again
19:52 gram_schmidt: Orthonormalizing vector 4 again
19:52 gram_schmidt: Orthonormalizing vector 5 again
19:52 gram_schmidt: Orthonormalizing vector 1 again
19:52 gram_schmidt: Orthonormalizing vector 2 again
19:52 gram_schmidt: Orthonormalizing vector 3 again
19:52 gram_schmidt: Orthonormalizing vector 4 again
19:52 gram_schmidt: Orthonormalizing vector 5 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;20]" time="0.04270768165588379"><system-err>19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 L2ProductP1: Integrate the products of the shape functions on each element
19:52 L2ProductP1: Determine global dofs ...
19:52 L2ProductP1: Boundary treatment ...
19:52 L2ProductP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 L2ProductP1: Integrate the products of the shape functions on each element
19:52 L2ProductP1: Determine global dofs ...
19:52 L2ProductP1: Boundary treatment ...
19:52 L2ProductP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 gram_schmidt: Orthonormalizing vector 1 again
19:52 gram_schmidt: Orthonormalizing vector 2 again
19:52 gram_schmidt: Orthonormalizing vector 3 again
19:52 gram_schmidt: Orthonormalizing vector 4 again
19:52 gram_schmidt: Removing linear dependent vector 5
19:52 gram_schmidt: Orthonormalizing vector 1 again
19:52 gram_schmidt: Orthonormalizing vector 2 again
19:52 gram_schmidt: Orthonormalizing vector 3 again
19:52 gram_schmidt: Orthonormalizing vector 4 again
19:52 gram_schmidt: Removing linear dependent vector 5
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;21]" time="0.04010200500488281"><system-err>19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 L2ProductP1: Integrate the products of the shape functions on each element
19:52 L2ProductP1: Determine global dofs ...
19:52 L2ProductP1: Boundary treatment ...
19:52 L2ProductP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 L2ProductP1: Integrate the products of the shape functions on each element
19:52 L2ProductP1: Determine global dofs ...
19:52 L2ProductP1: Boundary treatment ...
19:52 L2ProductP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 gram_schmidt: Orthonormalizing vector 1 again
19:52 gram_schmidt: Orthonormalizing vector 2 again
19:52 gram_schmidt: Orthonormalizing vector 3 again
19:52 gram_schmidt: Orthonormalizing vector 4 again
19:52 gram_schmidt: Orthonormalizing vector 5 again
19:52 gram_schmidt: Orthonormalizing vector 1 again
19:52 gram_schmidt: Orthonormalizing vector 2 again
19:52 gram_schmidt: Orthonormalizing vector 3 again
19:52 gram_schmidt: Orthonormalizing vector 4 again
19:52 gram_schmidt: Orthonormalizing vector 5 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;22]" time="0.03965425491333008"><system-err>19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 L2ProductP1: Integrate the products of the shape functions on each element
19:52 L2ProductP1: Determine global dofs ...
19:52 L2ProductP1: Boundary treatment ...
19:52 L2ProductP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 L2ProductP1: Integrate the products of the shape functions on each element
19:52 L2ProductP1: Determine global dofs ...
19:52 L2ProductP1: Boundary treatment ...
19:52 L2ProductP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 gram_schmidt: Orthonormalizing vector 3 again
19:52 gram_schmidt: Orthonormalizing vector 4 again
19:52 gram_schmidt: Orthonormalizing vector 3 again
19:52 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;23]" time="0.03619718551635742"><system-err>19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 L2ProductP1: Integrate the products of the shape functions on each element
19:52 L2ProductP1: Determine global dofs ...
19:52 L2ProductP1: Boundary treatment ...
19:52 L2ProductP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 L2ProductP1: Integrate the products of the shape functions on each element
19:52 L2ProductP1: Determine global dofs ...
19:52 L2ProductP1: Boundary treatment ...
19:52 L2ProductP1: Assemble system matrix ...
19:52 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:52 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:52 DiffusionOperatorP1: Determine global dofs ...
19:52 DiffusionOperatorP1: Boundary treatment ...
19:52 DiffusionOperatorP1: Assemble system matrix ...
19:52 gram_schmidt: Orthonormalizing vector 1 again
19:52 gram_schmidt: Orthonormalizing vector 2 again
19:52 gram_schmidt: Orthonormalizing vector 3 again
19:52 gram_schmidt: Orthonormalizing vector 4 again
19:52 gram_schmidt: Orthonormalizing vector 1 again
19:52 gram_schmidt: Orthonormalizing vector 2 again
19:52 gram_schmidt: Orthonormalizing vector 3 again
19:52 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;24]" time="0.011170387268066406"><system-err>19:52 gram_schmidt: Orthonormalizing vector 1 again
19:52 gram_schmidt: Orthonormalizing vector 2 again
19:52 gram_schmidt: Orthonormalizing vector 3 again
19:52 gram_schmidt: Orthonormalizing vector 1 again
19:52 gram_schmidt: Orthonormalizing vector 2 again
19:52 gram_schmidt: Orthonormalizing vector 3 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;25]" time="0.01109170913696289"><system-err>19:52 gram_schmidt: Orthonormalizing vector 1 again
19:52 gram_schmidt: Orthonormalizing vector 2 again
19:52 gram_schmidt: Orthonormalizing vector 3 again
19:52 gram_schmidt: Orthonormalizing vector 1 again
19:52 gram_schmidt: Orthonormalizing vector 2 again
19:52 gram_schmidt: Orthonormalizing vector 3 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;26]" time="0.01120448112487793"><system-err>19:52 gram_schmidt: Orthonormalizing vector 1 again
19:52 gram_schmidt: Orthonormalizing vector 2 again
19:52 gram_schmidt: Orthonormalizing vector 3 again
19:52 gram_schmidt: Orthonormalizing vector 1 again
19:52 gram_schmidt: Orthonormalizing vector 2 again
19:52 gram_schmidt: Orthonormalizing vector 3 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;27]" time="0.007021903991699219"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;28]" time="0.007616519927978516"><system-err>19:52 gram_schmidt: Orthonormalizing vector 1 again
19:52 gram_schmidt: Orthonormalizing vector 2 again
19:52 gram_schmidt: Orthonormalizing vector 1 again
19:52 gram_schmidt: Orthonormalizing vector 2 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;29]" time="0.006789684295654297"><system-err>19:52 gram_schmidt: Orthonormalizing vector 1 again
19:52 gram_schmidt: Orthonormalizing vector 2 again
19:52 gram_schmidt: Orthonormalizing vector 1 again
19:52 gram_schmidt: Orthonormalizing vector 2 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;30]" time="0.006622791290283203"><system-err>19:52 gram_schmidt: Orthonormalizing vector 1 again
19:52 gram_schmidt: Orthonormalizing vector 2 again
19:52 gram_schmidt: Orthonormalizing vector 1 again
19:52 gram_schmidt: Orthonormalizing vector 2 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;31]" time="0.006815433502197266"><system-err>19:52 gram_schmidt: Orthonormalizing vector 1 again
19:52 gram_schmidt: Orthonormalizing vector 2 again
19:52 gram_schmidt: Orthonormalizing vector 1 again
19:52 gram_schmidt: Orthonormalizing vector 2 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;32]" time="0.023226022720336914"><system-err>19:52 gram_schmidt: Orthonormalizing vector 3 again
19:52 gram_schmidt: Orthonormalizing vector 3 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;33]" time="0.0191957950592041"><system-err>19:52 gram_schmidt: Orthonormalizing vector 3 again
19:52 gram_schmidt: Orthonormalizing vector 3 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;34]" time="0.011588811874389648"><system-err>19:52 gram_schmidt: Orthonormalizing vector 1 again
19:52 gram_schmidt: Orthonormalizing vector 2 again
19:52 gram_schmidt: Orthonormalizing vector 3 again
19:52 gram_schmidt: Orthonormalizing vector 1 again
19:52 gram_schmidt: Orthonormalizing vector 2 again
19:52 gram_schmidt: Orthonormalizing vector 3 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;35]" time="0.02102184295654297"><system-err>19:52 gram_schmidt: Orthonormalizing vector 2 again
19:52 gram_schmidt: Orthonormalizing vector 3 again
19:52 gram_schmidt: Orthonormalizing vector 2 again
19:52 gram_schmidt: Orthonormalizing vector 3 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;36]" time="0.011176347732543945"><system-err>19:52 gram_schmidt: Orthonormalizing vector 1 again
19:52 gram_schmidt: Orthonormalizing vector 2 again
19:52 gram_schmidt: Orthonormalizing vector 3 again
19:52 gram_schmidt: Orthonormalizing vector 1 again
19:52 gram_schmidt: Orthonormalizing vector 2 again
19:52 gram_schmidt: Orthonormalizing vector 3 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;0]" time="0.0017986297607421875"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;1]" time="0.0013020038604736328"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;2]" time="0.0012366771697998047"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;3]" time="0.06046557426452637"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;4]" time="0.0017688274383544922"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;5]" time="0.001323699951171875"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;6]" time="0.0012009143829345703"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;7]" time="0.001270294189453125"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;8]" time="0.11488699913024902"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;9]" time="0.0024330615997314453"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;10]" time="0.0014562606811523438"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;11]" time="0.006577014923095703"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;12]" time="0.0014121532440185547"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;13]" time="0.001382589340209961"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;14]" time="0.004720211029052734"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;15]" time="0.21921491622924805"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;16]" time="0.00927734375"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;17]" time="0.0030698776245117188"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;18]" time="0.0021505355834960938"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;19]" time="0.0034661293029785156"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;20]" time="0.15380859375"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;21]" time="0.7903580665588379"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;22]" time="0.0017917156219482422"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;23]" time="0.001323699951171875"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;24]" time="0.0022177696228027344"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;25]" time="0.32080769538879395"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;26]" time="0.0549771785736084"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;0]" time="0.001809835433959961"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;1]" time="0.0013034343719482422"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;2]" time="0.0013110637664794922"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;3]" time="0.06006979942321777"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;4]" time="0.0018315315246582031"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;5]" time="0.001332998275756836"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;6]" time="0.0012359619140625"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;7]" time="0.0012803077697753906"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;8]" time="0.11356282234191895"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;9]" time="0.0032019615173339844"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;10]" time="0.001558542251586914"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;11]" time="0.006563425064086914"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;12]" time="0.0015263557434082031"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;13]" time="0.0014119148254394531"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;14]" time="0.004792451858520508"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;15]" time="0.21989202499389648"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;16]" time="0.009196043014526367"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;17]" time="0.003016233444213867"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;18]" time="0.0021660327911376953"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;19]" time="0.003419160842895508"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;20]" time="0.15275311470031738"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;21]" time="0.7980890274047852"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;22]" time="0.0018343925476074219"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;23]" time="0.0013096332550048828"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;24]" time="0.0023276805877685547"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;25]" time="0.32404494285583496"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;26]" time="0.055048465728759766"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;0]" time="0.001851797103881836"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;1]" time="0.0013070106506347656"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;2]" time="0.0012691020965576172"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;3]" time="0.06072998046875"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;4]" time="0.0018627643585205078"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;5]" time="0.0013349056243896484"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;6]" time="0.0013110637664794922"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;7]" time="0.001325368881225586"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;8]" time="0.11326146125793457"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;9]" time="0.003001689910888672"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;10]" time="0.001628875732421875"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;11]" time="0.00681614875793457"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;12]" time="0.0015475749969482422"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;13]" time="0.0015180110931396484"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;14]" time="0.0050051212310791016"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;15]" time="0.22022318840026855"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;16]" time="0.009206533432006836"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;17]" time="0.003224611282348633"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;18]" time="0.002298116683959961"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;19]" time="0.0036127567291259766"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;20]" time="0.15404510498046875"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;21]" time="0.7824933528900146"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;22]" time="0.0018088817596435547"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;23]" time="0.001302957534790039"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;24]" time="0.0022449493408203125"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;25]" time="0.3235936164855957"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;26]" time="0.05499768257141113"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;0]" time="0.03471088409423828"><system-err>19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;1]" time="0.03208589553833008"><system-err>19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 gram_schmidt_biorth: Projecting vector V[1] again
19:58 gram_schmidt_biorth: Projecting vector W[1] again
19:58 gram_schmidt_biorth: Projecting vector V[1] again
19:58 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;2]" time="0.03592276573181152"><system-err>19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;3]" time="0.032942771911621094"><system-err>19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 gram_schmidt_biorth: Projecting vector V[1] again
19:58 gram_schmidt_biorth: Projecting vector W[1] again
19:58 gram_schmidt_biorth: Projecting vector V[1] again
19:58 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;4]" time="0.0348207950592041"><system-err>19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;5]" time="0.032875776290893555"><system-err>19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 gram_schmidt_biorth: Projecting vector V[1] again
19:58 gram_schmidt_biorth: Projecting vector W[1] again
19:58 gram_schmidt_biorth: Projecting vector V[1] again
19:58 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;6]" time="0.03498077392578125"><system-err>19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;7]" time="0.03162407875061035"><system-err>19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 gram_schmidt_biorth: Projecting vector V[1] again
19:58 gram_schmidt_biorth: Projecting vector W[1] again
19:58 gram_schmidt_biorth: Projecting vector V[1] again
19:58 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;8]" time="0.0354151725769043"><system-err>19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;9]" time="0.031190156936645508"><system-err>19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 gram_schmidt_biorth: Projecting vector V[1] again
19:58 gram_schmidt_biorth: Projecting vector W[1] again
19:58 gram_schmidt_biorth: Projecting vector V[1] again
19:58 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;10]" time="0.03526425361633301"><system-err>19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;11]" time="0.03218364715576172"><system-err>19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 gram_schmidt_biorth: Projecting vector V[1] again
19:58 gram_schmidt_biorth: Projecting vector W[1] again
19:58 gram_schmidt_biorth: Projecting vector V[1] again
19:58 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;12]" time="0.03555440902709961"><system-err>19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;13]" time="0.03185009956359863"><system-err>19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;14]" time="0.03985428810119629"><system-err>19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 gram_schmidt_biorth: Projecting vector V[1] again
19:58 gram_schmidt_biorth: Projecting vector V[2] again
19:58 gram_schmidt_biorth: Projecting vector W[2] again
19:58 gram_schmidt_biorth: Projecting vector V[1] again
19:58 gram_schmidt_biorth: Projecting vector V[2] again
19:58 gram_schmidt_biorth: Projecting vector W[2] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;15]" time="0.0364222526550293"><system-err>19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 gram_schmidt_biorth: Projecting vector V[1] again
19:58 gram_schmidt_biorth: Projecting vector W[1] again
19:58 gram_schmidt_biorth: Projecting vector V[2] again
19:58 gram_schmidt_biorth: Projecting vector W[2] again
19:58 gram_schmidt_biorth: Projecting vector V[1] again
19:58 gram_schmidt_biorth: Projecting vector W[1] again
19:58 gram_schmidt_biorth: Projecting vector V[2] again
19:58 gram_schmidt_biorth: Projecting vector W[2] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;16]" time="0.03119659423828125"><system-err>19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;17]" time="0.027298927307128906"><system-err>19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;18]" time="0.03912353515625"><system-err>19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 gram_schmidt_biorth: Projecting vector V[1] again
19:58 gram_schmidt_biorth: Projecting vector V[2] again
19:58 gram_schmidt_biorth: Projecting vector W[2] again
19:58 gram_schmidt_biorth: Projecting vector V[1] again
19:58 gram_schmidt_biorth: Projecting vector V[2] again
19:58 gram_schmidt_biorth: Projecting vector W[2] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;19]" time="0.035886526107788086"><system-err>19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 gram_schmidt_biorth: Projecting vector V[1] again
19:58 gram_schmidt_biorth: Projecting vector W[1] again
19:58 gram_schmidt_biorth: Projecting vector V[2] again
19:58 gram_schmidt_biorth: Projecting vector W[2] again
19:58 gram_schmidt_biorth: Projecting vector V[1] again
19:58 gram_schmidt_biorth: Projecting vector W[1] again
19:58 gram_schmidt_biorth: Projecting vector V[2] again
19:58 gram_schmidt_biorth: Projecting vector W[2] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;20]" time="0.03980755805969238"><system-err>19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 gram_schmidt_biorth: Projecting vector V[1] again
19:58 gram_schmidt_biorth: Projecting vector V[2] again
19:58 gram_schmidt_biorth: Projecting vector W[2] again
19:58 gram_schmidt_biorth: Projecting vector V[1] again
19:58 gram_schmidt_biorth: Projecting vector V[2] again
19:58 gram_schmidt_biorth: Projecting vector W[2] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;21]" time="0.03556537628173828"><system-err>19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 gram_schmidt_biorth: Projecting vector V[1] again
19:58 gram_schmidt_biorth: Projecting vector W[1] again
19:58 gram_schmidt_biorth: Projecting vector V[2] again
19:58 gram_schmidt_biorth: Projecting vector W[2] again
19:58 gram_schmidt_biorth: Projecting vector V[1] again
19:58 gram_schmidt_biorth: Projecting vector W[1] again
19:58 gram_schmidt_biorth: Projecting vector V[2] again
19:58 gram_schmidt_biorth: Projecting vector W[2] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;22]" time="0.03498411178588867"><system-err>19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;23]" time="0.031752824783325195"><system-err>19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 L2ProductP1: Integrate the products of the shape functions on each element
19:58 L2ProductP1: Determine global dofs ...
19:58 L2ProductP1: Boundary treatment ...
19:58 L2ProductP1: Assemble system matrix ...
19:58 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
19:58 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
19:58 DiffusionOperatorP1: Determine global dofs ...
19:58 DiffusionOperatorP1: Boundary treatment ...
19:58 DiffusionOperatorP1: Assemble system matrix ...
19:58 gram_schmidt_biorth: Projecting vector V[1] again
19:58 gram_schmidt_biorth: Projecting vector W[1] again
19:58 gram_schmidt_biorth: Projecting vector V[1] again
19:59 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;24]" time="0.009486198425292969"><system-err>19:59 gram_schmidt_biorth: Projecting vector V[1] again
19:59 gram_schmidt_biorth: Projecting vector W[1] again
19:59 gram_schmidt_biorth: Projecting vector V[1] again
19:59 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;25]" time="0.00935983657836914"><system-err>19:59 gram_schmidt_biorth: Projecting vector V[1] again
19:59 gram_schmidt_biorth: Projecting vector W[1] again
19:59 gram_schmidt_biorth: Projecting vector V[1] again
19:59 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;26]" time="0.009639978408813477"><system-err>19:59 gram_schmidt_biorth: Projecting vector V[1] again
19:59 gram_schmidt_biorth: Projecting vector W[1] again
19:59 gram_schmidt_biorth: Projecting vector V[1] again
19:59 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;27]" time="0.006269693374633789"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;28]" time="0.005214214324951172"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;29]" time="0.004604339599609375"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;30]" time="0.004532814025878906"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;31]" time="0.0044133663177490234"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;32]" time="0.01769399642944336"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;33]" time="0.014608144760131836"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;34]" time="0.01030111312866211"><system-err>19:59 gram_schmidt_biorth: Projecting vector V[1] again
19:59 gram_schmidt_biorth: Projecting vector W[1] again
19:59 gram_schmidt_biorth: Projecting vector V[1] again
19:59 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;35]" time="0.014541864395141602"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;36]" time="0.009778738021850586"><system-err>19:59 gram_schmidt_biorth: Projecting vector V[1] again
19:59 gram_schmidt_biorth: Projecting vector W[1] again
19:59 gram_schmidt_biorth: Projecting vector V[1] again
19:59 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.stuff" file="src/pymortests/algorithms/stuff.py" line="20" name="test_newton[1]" time="0.0034170150756835938"><system-err>19:59 newton:       Initial Residual: 1.000000e+00
19:59 newton: Iteration  1: Residual: 0.000000e+00,  Reduction: 0.000000e+00, Total Reduction: 0.000000e+00
19:59 newton: Absolute limit of 1e-15 reached. Stopping.
</system-err></testcase><testcase classname="src.pymortests.algorithms.stuff" file="src/pymortests/algorithms/stuff.py" line="20" name="test_newton[2]" time="0.002457857131958008"><system-err>19:59 newton:       Initial Residual: 1.000000e+00
19:59 newton: Iteration  1: Residual: 0.000000e+00,  Reduction: 0.000000e+00, Total Reduction: 0.000000e+00
19:59 newton: Absolute limit of 1e-15 reached. Stopping.
</system-err></testcase><testcase classname="src.pymortests.algorithms.stuff" file="src/pymortests/algorithms/stuff.py" line="20" name="test_newton[3]" time="0.0022842884063720703"><system-err>19:59 newton:       Initial Residual: 1.000000e+00
19:59 newton: Iteration  1: Residual: 0.000000e+00,  Reduction: 0.000000e+00, Total Reduction: 0.000000e+00
19:59 newton: Absolute limit of 1e-15 reached. Stopping.
</system-err></testcase><testcase classname="src.pymortests.algorithms.stuff" file="src/pymortests/algorithms/stuff.py" line="20" name="test_newton[4]" time="0.002440214157104492"><system-err>19:59 newton:       Initial Residual: 1.000000e+00
19:59 newton: Iteration  1: Residual: 0.000000e+00,  Reduction: 0.000000e+00, Total Reduction: 0.000000e+00
19:59 newton: Absolute limit of 1e-15 reached. Stopping.
</system-err></testcase><testcase classname="src.pymortests.algorithms.stuff" file="src/pymortests/algorithms/stuff.py" line="20" name="test_newton[5]" time="0.0021915435791015625"><system-err>19:59 newton:       Initial Residual: 1.000000e+00
19:59 newton: Iteration  1: Residual: 0.000000e+00,  Reduction: 0.000000e+00, Total Reduction: 0.000000e+00
19:59 newton: Absolute limit of 1e-15 reached. Stopping.
</system-err></testcase><testcase classname="src.pymortests.algorithms.stuff" file="src/pymortests/algorithms/stuff.py" line="20" name="test_newton[6]" time="0.002193450927734375"><system-err>19:59 newton:       Initial Residual: 1.000000e+00
19:59 newton: Iteration  1: Residual: 0.000000e+00,  Reduction: 0.000000e+00, Total Reduction: 0.000000e+00
19:59 newton: Absolute limit of 1e-15 reached. Stopping.
</system-err></testcase><testcase classname="src.pymortests.algorithms.stuff" file="src/pymortests/algorithms/stuff.py" line="20" name="test_newton[7]" time="0.0021593570709228516"><system-err>19:59 newton:       Initial Residual: 1.000000e+00
19:59 newton: Iteration  1: Residual: 0.000000e+00,  Reduction: 0.000000e+00, Total Reduction: 0.000000e+00
19:59 newton: Absolute limit of 1e-15 reached. Stopping.
</system-err></testcase><testcase classname="src.pymortests.algorithms.stuff" file="src/pymortests/algorithms/stuff.py" line="26" name="test_newton_fail" time="0.00604557991027832"><system-err>19:59 newton:       Initial Residual: 1.000000e+00
19:59 newton: Iteration  1: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
19:59 newton: Iteration  2: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
19:59 newton: Iteration  3: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
19:59 newton: Iteration  4: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
19:59 newton: Iteration  5: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
19:59 newton: Iteration  6: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
19:59 newton: Iteration  7: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
19:59 newton: Iteration  8: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
19:59 newton: Iteration  9: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
19:59 newton: Iteration 10: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
</system-err></testcase><testcase classname="src.pymortests.core.config" file="src/pymortests/core/config.py" line="8" name="test_repr" time="0.015029668807983398"></testcase><testcase classname="src.pymortests.core.config" file="src/pymortests/core/config.py" line="12" name="test_entries" time="0.0009248256683349609"></testcase><testcase classname="src.pymortests.core.config" file="src/pymortests/core/config.py" line="19" name="test_dir" time="0.0008828639984130859"></testcase><testcase classname="src.pymortests.core.defaults" file="src/pymortests/core/defaults.py" line="14" name="test_defaults" time="0.0012137889862060547"></testcase><testcase classname="src.pymortests.core.defaults" file="src/pymortests/core/defaults.py" line="30" name="test_print_defaults" time="0.05151653289794922"><system-out>                                                       defaults affecting state id calcuation                                                       
                                                       ======================================                                                       

path (shortened)                                                       value                                                                  source
---------------------------------------------------------------------  ---------------------------------------------------------------------  ------
basic.almost_equal.atol                                                1e-14                                                                  code  
basic.almost_equal.rtol                                                1e-14                                                                  code  
genericsolvers.apply_inverse.check_finite                              True                                                                   code  
genericsolvers.apply_inverse.default_least_squares_solver              &apos;generic_least_squares_lsmr&apos;                                           code  
genericsolvers.apply_inverse.default_solver                            &apos;generic_lgmres&apos;                                                       code  
genericsolvers.solver_options.least_squares_lsmr_atol                  1e-06                                                                  code  
genericsolvers.solver_options.least_squares_lsmr_btol                  1e-06                                                                  code  
genericsolvers.solver_options.least_squares_lsmr_conlim                100000000.0                                                            code  
genericsolvers.solver_options.least_squares_lsmr_damp                  0.0                                                                    code  
genericsolvers.solver_options.least_squares_lsmr_maxiter               None                                                                   code  
genericsolvers.solver_options.least_squares_lsqr_atol                  1e-06                                                                  code  
genericsolvers.solver_options.least_squares_lsqr_btol                  1e-06                                                                  code  
genericsolvers.solver_options.least_squares_lsqr_conlim                100000000.0                                                            code  
genericsolvers.solver_options.least_squares_lsqr_iter_lim              None                                                                   code  
genericsolvers.solver_options.lgmres_inner_m                           39                                                                     code  
genericsolvers.solver_options.lgmres_maxiter                           1000                                                                   code  
genericsolvers.solver_options.lgmres_outer_k                           3                                                                      code  
genericsolvers.solver_options.lgmres_tol                               1e-05                                                                  code  
gram_schmidt.gram_schmidt.atol                                         1e-13                                                                  code  
gram_schmidt.gram_schmidt.check                                        True                                                                   code  
gram_schmidt.gram_schmidt.check_tol                                    0.001                                                                  code  
gram_schmidt.gram_schmidt.reiterate                                    True                                                                   code  
gram_schmidt.gram_schmidt.reiteration_threshold                        0.1                                                                    code  
gram_schmidt.gram_schmidt.rtol                                         1e-13                                                                  code  
lradi.lyap_lrcf_solver_options.lradi_maxiter                           500                                                                    code  
lradi.lyap_lrcf_solver_options.lradi_shifts                            &apos;projection_shifts&apos;                                                    code  
lradi.lyap_lrcf_solver_options.lradi_tol                               1e-10                                                                  code  
lradi.lyap_lrcf_solver_options.projection_shifts_implicit_subspace     True                                                                   code  
lradi.lyap_lrcf_solver_options.projection_shifts_init_maxiter          20                                                                     code  
lradi.lyap_lrcf_solver_options.projection_shifts_init_seed             None                                                                   code  
lradi.lyap_lrcf_solver_options.projection_shifts_z_columns             1                                                                      code  
lyapunov.mat_eqn_sparse_min_size.value                                 1000                                                                   code  
lyapunov.solve_lyap_dense.default_solver_backend                       &apos;pymess&apos;                                                               code  
lyapunov.solve_lyap_lrcf.default_dense_solver_backend                  &apos;pymess&apos;                                                               code  
lyapunov.solve_lyap_lrcf.default_sparse_solver_backend                 &apos;pymess&apos;                                                               code  
newton.newton.atol                                                     -1.0                                                                   code  
newton.newton.maxiter                                                  100                                                                    code  
newton.newton.miniter                                                  0                                                                      code  
newton.newton.rtol                                                     -1.0                                                                   code  
newton.newton.stagnation_threshold                                     0.9                                                                    code  
newton.newton.stagnation_window                                        3                                                                      code  
pod.pod.atol                                                           0.0                                                                    code  
pod.pod.check                                                          True                                                                   code  
pod.pod.check_tol                                                      1e-10                                                                  code  
pod.pod.l2_err                                                         0.0                                                                    code  
pod.pod.orthonormalize                                                 True                                                                   code  
pod.pod.rtol                                                           4e-08                                                                  code  
pod.pod.symmetrize                                                     False                                                                  code  
riccati.solve_pos_ricc_lrcf.default_dense_solver_backend               &apos;pymess&apos;                                                               code  
riccati.solve_ricc_lrcf.default_dense_solver_backend                   &apos;pymess&apos;                                                               code  
riccati.solve_ricc_lrcf.default_sparse_solver_backend                  &apos;pymess&apos;                                                               code  
text.text_problem.font_name                                            None                                                                   code  
fenics._solver_options.preconditioner                                  &apos;amg&apos;                                                                  code  
fenics._solver_options.solver                                          &apos;bicgstab&apos;                                                             code  
ngsolve.NGSolveMatrixOperator.apply_inverse.default_solver             &apos;&apos;                                                                     code  
pyamg.apply_inverse.check_finite                                       True                                                                   code  
pyamg.apply_inverse.default_solver                                     &apos;pyamg_solve&apos;                                                          code  
pyamg.solver_options.maxiter                                           400                                                                    code  
pyamg.solver_options.rs_CF                                             &apos;RS&apos;                                                                   code  
pyamg.solver_options.rs_accel                                          None                                                                   code  
pyamg.solver_options.rs_coarse_solver                                  &apos;pinv2&apos;                                                                code  
pyamg.solver_options.rs_cycle                                          &apos;V&apos;                                                                    code  
pyamg.solver_options.rs_max_coarse                                     500                                                                    code  
pyamg.solver_options.rs_max_levels                                     10                                                                     code  
pyamg.solver_options.rs_maxiter                                        100                                                                    code  
pyamg.solver_options.rs_postsmoother                                   (&apos;gauss_seidel&apos;, {&apos;sweep&apos;: &apos;symmetric&apos;})                               code  
pyamg.solver_options.rs_strength                                       (&apos;classical&apos;, {&apos;theta&apos;: 0.25})                                         code  
pyamg.solver_options.rs_tol                                            1e-05                                                                  code  
pyamg.solver_options.sa_accel                                          None                                                                   code  
pyamg.solver_options.sa_aggregate                                      &apos;standard&apos;                                                             code  
pyamg.solver_options.sa_coarse_solver                                  &apos;pinv2&apos;                                                                code  
pyamg.solver_options.sa_cycle                                          &apos;V&apos;                                                                    code  
pyamg.solver_options.sa_diagonal_dominance                             False                                                                  code  
pyamg.solver_options.sa_improve_candidates                             ((&apos;block_gauss_seidel&apos;, {&apos;sweep&apos;: &apos;symmetric&apos;, &apos;iterations&apos;: 4}),      code  
                                                                       None)                                                                        
pyamg.solver_options.sa_max_coarse                                     500                                                                    code  
pyamg.solver_options.sa_max_levels                                     10                                                                     code  
pyamg.solver_options.sa_maxiter                                        100                                                                    code  
pyamg.solver_options.sa_postsmoother                                   (&apos;block_gauss_seidel&apos;, {&apos;sweep&apos;: &apos;symmetric&apos;})                         code  
pyamg.solver_options.sa_presmoother                                    (&apos;block_gauss_seidel&apos;, {&apos;sweep&apos;: &apos;symmetric&apos;})                         code  
pyamg.solver_options.sa_smooth                                         (&apos;jacobi&apos;, {&apos;omega&apos;: 1.3333333333333333})                              code  
pyamg.solver_options.sa_strength                                       &apos;symmetric&apos;                                                            code  
pyamg.solver_options.sa_symmetry                                       &apos;hermitian&apos;                                                            code  
pyamg.solver_options.sa_tol                                            1e-05                                                                  code  
pyamg.solver_options.tol                                               1e-05                                                                  code  
pymess.dense_nm_gmpcare_solver_options.absres_tol                      1e-11                                                                  code  
pymess.dense_nm_gmpcare_solver_options.linesearch                      False                                                                  code  
pymess.dense_nm_gmpcare_solver_options.maxit                           50                                                                     code  
pymess.dense_nm_gmpcare_solver_options.nrm                             0                                                                      code  
pymess.dense_nm_gmpcare_solver_options.relres_tol                      1e-12                                                                  code  
pymess.lradi_solver_options.adi_maxit                                  500                                                                    code  
pymess.lradi_solver_options.adi_memory_usage                           1                                                                      code  
pymess.lradi_solver_options.adi_output                                 1                                                                      code  
pymess.lradi_solver_options.adi_rel_change_tol                         1e-10                                                                  code  
pymess.lradi_solver_options.adi_res2_tol                               1e-10                                                                  code  
pymess.lradi_solver_options.adi_res2c_tol                              1e-11                                                                  code  
pymess.lradi_solver_options.adi_shifts_arp_m                           32                                                                     code  
pymess.lradi_solver_options.adi_shifts_arp_p                           48                                                                     code  
pymess.lradi_solver_options.adi_shifts_b0                              None                                                                   code  
pymess.lradi_solver_options.adi_shifts_l0                              16                                                                     code  
pymess.lradi_solver_options.adi_shifts_p                               None                                                                   code  
pymess.lradi_solver_options.adi_shifts_paratype                        3                                                                      code  
pymess.lrnm_solver_options.newton_gstep                                0                                                                      code  
pymess.lrnm_solver_options.newton_k0                                   None                                                                   code  
pymess.lrnm_solver_options.newton_linesearch                           0                                                                      code  
pymess.lrnm_solver_options.newton_maxit                                30                                                                     code  
pymess.lrnm_solver_options.newton_output                               1                                                                      code  
pymess.lrnm_solver_options.newton_res2_tol                             1e-10                                                                  code  
pymess.lrnm_solver_options.newton_singleshifts                         0                                                                      code  
pymess.solve_lyap_lrcf.default_solver                                  None                                                                   code  
pymess.solve_ricc_lrcf.default_solver                                  None                                                                   code  
scipy.apply_inverse.check_finite                                       True                                                                   code  
scipy.apply_inverse.default_least_squares_solver                       &apos;scipy_least_squares_lsmr&apos;                                             code  
scipy.apply_inverse.default_solver                                     &apos;scipy_spsolve&apos;                                                        code  
scipy.solver_options.bicgstab_maxiter                                  None                                                                   code  
scipy.solver_options.bicgstab_tol                                      1e-15                                                                  code  
scipy.solver_options.least_squares_lsmr_atol                           1e-06                                                                  code  
scipy.solver_options.least_squares_lsmr_btol                           1e-06                                                                  code  
scipy.solver_options.least_squares_lsmr_conlim                         100000000.0                                                            code  
scipy.solver_options.least_squares_lsmr_damp                           0.0                                                                    code  
scipy.solver_options.least_squares_lsmr_maxiter                        None                                                                   code  
scipy.solver_options.least_squares_lsqr_atol                           1e-06                                                                  code  
scipy.solver_options.least_squares_lsqr_btol                           1e-06                                                                  code  
scipy.solver_options.least_squares_lsqr_conlim                         100000000.0                                                            code  
scipy.solver_options.least_squares_lsqr_iter_lim                       None                                                                   code  
scipy.solver_options.lgmres_inner_m                                    39                                                                     code  
scipy.solver_options.lgmres_maxiter                                    1000                                                                   code  
scipy.solver_options.lgmres_outer_k                                    3                                                                      code  
scipy.solver_options.lgmres_tol                                        1e-05                                                                  code  
scipy.solver_options.spilu_drop_rule                                   None                                                                   code  
scipy.solver_options.spilu_drop_tol                                    0.0001                                                                 code  
scipy.solver_options.spilu_fill_factor                                 10                                                                     code  
scipy.solver_options.spilu_permc_spec                                  &apos;COLAMD&apos;                                                               code  
scipy.solver_options.spsolve_keep_factorization                        True                                                                   code  
scipy.solver_options.spsolve_permc_spec                                &apos;COLAMD&apos;                                                               code  
constructions.induced_norm.raise_negative                              True                                                                   code  
constructions.induced_norm.tol                                         1e-10                                                                  code  
fv.jacobian_options.delta                                              1e-07                                                                  code  
numpy.NumpyMatrixOperator.apply_inverse.check_finite                   True                                                                   code  
numpy.NumpyMatrixOperator.apply_inverse.default_sparse_solver_backend  &apos;scipy&apos;                                                                code  
default.new_parallel_pool.allow_mpi                                    True                                                                   code  
default.new_parallel_pool.ipython_num_engines                          None                                                                   code  
default.new_parallel_pool.ipython_profile                              None                                                                   code  
floatcmp.float_cmp.atol                                                1e-14                                                                  code  
floatcmp.float_cmp.rtol                                                1e-14                                                                  code  
mpi.event_loop_settings.auto_launch                                    True                                                                   code  
random.new_random_state.seed                                           42                                                                     code  
defaults.func.c                                                        43                                                                     user  
defaults.func.d                                                        3                                                                      code  



                  defaults not affecting state id calculation                   
                  ===========================================                   

path (shortened)                     value                                source
-----------------------------------  -----------------------------------  ------
genericsolvers.solver_options.least  False                                code  
_squares_lsmr_show                                                              
genericsolvers.solver_options.least  False                                code  
_squares_lsqr_show                                                              
pyamg.solver_options.verb            False                                code  
scipy.solver_options.least_squares_  False                                code  
lsmr_show                                                                       
scipy.solver_options.least_squares_  False                                code  
lsqr_show                                                                       
cache.default_regions.disk_max_size  1073741824                           code  
cache.default_regions.disk_path      &apos;/tmp/pymor.cache.pymor&apos;             code  
cache.default_regions.memory_max_ke  1000                                 code  
ys                                                                              
cache.default_regions.persistent_ma  1073741824                           code  
x_size                                                                          
cache.default_regions.persistent_pa  &apos;/tmp/pymor.persistent.cache.pymor&apos;  code  
th                                                                              
logger.getLogger.filename            &apos;&apos;                                   code  
logger.set_log_format.block_timings  False                                code  
logger.set_log_format.indent_blocks  True                                 code  
logger.set_log_format.max_hierarchy  1                                    code  
_level                                                                          
logger.set_log_levels.levels         None                                 code  
gl.colormap_texture.name             &apos;viridis&apos;                            code  
qt.visualize_patch.backend           &apos;gl&apos;                                 code  
pprint.format_array.compact_print    False                                code  

</system-out></testcase><testcase classname="src.pymortests.core.defaults" file="src/pymortests/core/defaults.py" line="34" name="test_write_defaults_to_file" time="0.012810468673706055"><system-out>Written defaults to file /tmp/tmplwinr25n/defaults.py
</system-out></testcase><testcase classname="src.pymortests.core.defaults" file="src/pymortests/core/defaults.py" line="39" name="test_load_defaults_from_file" time="0.01239776611328125"><system-out>Written defaults to file /tmp/tmpkus5_3ne/defaults.py
</system-out></testcase><testcase classname="src.pymortests.core.interface.Test_Interface" file="src/pymortests/core/interface.py" line="18" name="testImplementorlist" time="0.001369476318359375"></testcase><testcase classname="src.pymortests.core.interface.Test_Interface" file="src/pymortests/core/interface.py" line="24" name="testAbstractMethods" time="0.003131389617919922"></testcase><testcase classname="src.pymortests.core.interface.Test_Interface" file="src/pymortests/core/interface.py" line="56" name="testVersion" time="0.0008997917175292969"></testcase><testcase classname="src.pymortests.core.interface" file="src/pymortests/core/interface.py" line="78" name="test_withcopy_implementors" time="0.008834600448608398"></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[RuleTable]" time="0.0015954971313476562"><system-err>19:59 |WARNING|RuleTable: warning -- logger &lt;logging.Logger object at 0x7f4c168c28d0&gt;
19:59 |ERROR|RuleTable: error -- logger &lt;logging.Logger object at 0x7f4c168c28d0&gt;
19:59 RuleTable: info -- logger &lt;logging.Logger object at 0x7f4c168c28d0&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[PatchVisualizer]" time="0.0014045238494873047"><system-err>19:59 |WARNING|PatchVisualizer: warning -- logger &lt;logging.Logger object at 0x7f4c1688bb00&gt;
19:59 |ERROR|PatchVisualizer: error -- logger &lt;logging.Logger object at 0x7f4c1688bb00&gt;
19:59 PatchVisualizer: info -- logger &lt;logging.Logger object at 0x7f4c1688bb00&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[OnedVisualizer]" time="0.001355886459350586"><system-err>19:59 |WARNING|OnedVisualizer: warning -- logger &lt;logging.Logger object at 0x7f4c1688bef0&gt;
19:59 |ERROR|OnedVisualizer: error -- logger &lt;logging.Logger object at 0x7f4c1688bef0&gt;
19:59 OnedVisualizer: info -- logger &lt;logging.Logger object at 0x7f4c1688bef0&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[FenicsVisualizer]" time="0.0014760494232177734"><system-err>19:59 |WARNING|FenicsVisualizer: warning -- logger &lt;logging.Logger object at 0x7f4c0af22b70&gt;
19:59 |ERROR|FenicsVisualizer: error -- logger &lt;logging.Logger object at 0x7f4c0af22b70&gt;
19:59 FenicsVisualizer: info -- logger &lt;logging.Logger object at 0x7f4c0af22b70&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[BoringTestClass]" time="0.0012912750244140625"><system-err>19:59 |WARNING|BoringTestClass: warning -- logger &lt;logging.Logger object at 0x7f4bf2582160&gt;
19:59 |ERROR|BoringTestClass: error -- logger &lt;logging.Logger object at 0x7f4bf2582160&gt;
19:59 BoringTestClass: info -- logger &lt;logging.Logger object at 0x7f4bf2582160&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[RemoteObjectManager]" time="0.0012841224670410156"><system-err>19:59 |WARNING|RemoteObjectManager: warning -- logger &lt;logging.Logger object at 0x7f4bf2594470&gt;
19:59 |ERROR|RemoteObjectManager: error -- logger &lt;logging.Logger object at 0x7f4bf2594470&gt;
19:59 RemoteObjectManager: info -- logger &lt;logging.Logger object at 0x7f4bf2594470&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[AdaptiveSampleSet]" time="0.0012712478637695312"><system-err>19:59 |WARNING|AdaptiveSampleSet: warning -- logger &lt;logging.Logger object at 0x7f4bf25947f0&gt;
19:59 |ERROR|AdaptiveSampleSet: error -- logger &lt;logging.Logger object at 0x7f4bf25947f0&gt;
19:59 AdaptiveSampleSet: info -- logger &lt;logging.Logger object at 0x7f4bf25947f0&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[Tree]" time="0.0012958049774169922"><system-err>19:59 |WARNING|Tree: warning -- logger &lt;logging.Logger object at 0x7f4bf22f8cf8&gt;
19:59 |ERROR|Tree: error -- logger &lt;logging.Logger object at 0x7f4bf22f8cf8&gt;
19:59 Tree: info -- logger &lt;logging.Logger object at 0x7f4bf22f8cf8&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[GenericRBReductor]" time="0.0012850761413574219"><system-err>19:59 |WARNING|GenericRBReductor: warning -- logger &lt;logging.Logger object at 0x7f4bf233bf60&gt;
19:59 |ERROR|GenericRBReductor: error -- logger &lt;logging.Logger object at 0x7f4bf233bf60&gt;
19:59 GenericRBReductor: info -- logger &lt;logging.Logger object at 0x7f4bf233bf60&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[GenericPGReductor]" time="0.0013117790222167969"><system-err>19:59 |WARNING|GenericPGReductor: warning -- logger &lt;logging.Logger object at 0x7f4bf23486d8&gt;
19:59 |ERROR|GenericPGReductor: error -- logger &lt;logging.Logger object at 0x7f4bf23486d8&gt;
19:59 GenericPGReductor: info -- logger &lt;logging.Logger object at 0x7f4bf23486d8&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[GenericBTReductor]" time="0.0012638568878173828"><system-err>19:59 |WARNING|GenericBTReductor: warning -- logger &lt;logging.Logger object at 0x7f4bf2348b70&gt;
19:59 |ERROR|GenericBTReductor: error -- logger &lt;logging.Logger object at 0x7f4bf2348b70&gt;
19:59 GenericBTReductor: info -- logger &lt;logging.Logger object at 0x7f4bf2348b70&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[ResidualReductor]" time="0.0012958049774169922"><system-err>19:59 |WARNING|ResidualReductor: warning -- logger &lt;logging.Logger object at 0x7f4bf2358ba8&gt;
19:59 |ERROR|ResidualReductor: error -- logger &lt;logging.Logger object at 0x7f4bf2358ba8&gt;
19:59 ResidualReductor: info -- logger &lt;logging.Logger object at 0x7f4bf2358ba8&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[ImplicitEulerResidualReductor]" time="0.0012562274932861328"><system-err>19:59 |WARNING|ImplicitEulerResidualReductor: warning -- logger &lt;logging.Logger object at 0x7f4bf23604e0&gt;
19:59 |ERROR|ImplicitEulerResidualReductor: error -- logger &lt;logging.Logger object at 0x7f4bf23604e0&gt;
19:59 ImplicitEulerResidualReductor: info -- logger &lt;logging.Logger object at 0x7f4bf23604e0&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[GenericBHIReductor]" time="0.0012629032135009766"><system-err>19:59 |WARNING|GenericBHIReductor: warning -- logger &lt;logging.Logger object at 0x7f4bf2372978&gt;
19:59 |ERROR|GenericBHIReductor: error -- logger &lt;logging.Logger object at 0x7f4bf2372978&gt;
19:59 GenericBHIReductor: info -- logger &lt;logging.Logger object at 0x7f4bf2372978&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[TFInterpReductor]" time="0.0014007091522216797"><system-err>19:59 |WARNING|TFInterpReductor: warning -- logger &lt;logging.Logger object at 0x7f4bf24b8358&gt;
19:59 |ERROR|TFInterpReductor: error -- logger &lt;logging.Logger object at 0x7f4bf24b8358&gt;
19:59 TFInterpReductor: info -- logger &lt;logging.Logger object at 0x7f4bf24b8358&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[IRKAReductor]" time="0.001313924789428711"><system-err>19:59 |WARNING|IRKAReductor: warning -- logger &lt;logging.Logger object at 0x7f4bf236e160&gt;
19:59 |ERROR|IRKAReductor: error -- logger &lt;logging.Logger object at 0x7f4bf236e160&gt;
19:59 IRKAReductor: info -- logger &lt;logging.Logger object at 0x7f4bf236e160&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[TSIAReductor]" time="0.001386404037475586"><system-err>19:59 |WARNING|TSIAReductor: warning -- logger &lt;logging.Logger object at 0x7f4bf24b8630&gt;
19:59 |ERROR|TSIAReductor: error -- logger &lt;logging.Logger object at 0x7f4bf24b8630&gt;
19:59 TSIAReductor: info -- logger &lt;logging.Logger object at 0x7f4bf24b8630&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[TF_IRKAReductor]" time="0.0012857913970947266"><system-err>19:59 |WARNING|TF_IRKAReductor: warning -- logger &lt;logging.Logger object at 0x7f4bf24b8898&gt;
19:59 |ERROR|TF_IRKAReductor: error -- logger &lt;logging.Logger object at 0x7f4bf24b8898&gt;
19:59 TF_IRKAReductor: info -- logger &lt;logging.Logger object at 0x7f4bf24b8898&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[GenericSOBTpvReductor]" time="0.0013034343719482422"><system-err>19:59 |WARNING|GenericSOBTpvReductor: warning -- logger &lt;logging.Logger object at 0x7f4bf24b72b0&gt;
19:59 |ERROR|GenericSOBTpvReductor: error -- logger &lt;logging.Logger object at 0x7f4bf24b72b0&gt;
19:59 GenericSOBTpvReductor: info -- logger &lt;logging.Logger object at 0x7f4bf24b72b0&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[SOBTfvReductor]" time="0.0013267993927001953"><system-err>19:59 |WARNING|SOBTfvReductor: warning -- logger &lt;logging.Logger object at 0x7f4bf24c7710&gt;
19:59 |ERROR|SOBTfvReductor: error -- logger &lt;logging.Logger object at 0x7f4bf24c7710&gt;
19:59 SOBTfvReductor: info -- logger &lt;logging.Logger object at 0x7f4bf24c7710&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[SOBTReductor]" time="0.0013165473937988281"><system-err>19:59 |WARNING|SOBTReductor: warning -- logger &lt;logging.Logger object at 0x7f4bf24c79e8&gt;
19:59 |ERROR|SOBTReductor: error -- logger &lt;logging.Logger object at 0x7f4bf24c79e8&gt;
19:59 SOBTReductor: info -- logger &lt;logging.Logger object at 0x7f4bf24c79e8&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[SOR_IRKAReductor]" time="0.0012965202331542969"><system-err>19:59 |WARNING|SOR_IRKAReductor: warning -- logger &lt;logging.Logger object at 0x7f4bf24c7c88&gt;
19:59 |ERROR|SOR_IRKAReductor: error -- logger &lt;logging.Logger object at 0x7f4bf24c7c88&gt;
19:59 SOR_IRKAReductor: info -- logger &lt;logging.Logger object at 0x7f4bf24c7c88&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[new_ipcluster_pool]" time="0.0012836456298828125"><system-err>19:59 |WARNING|new_ipcluster_pool: warning -- logger &lt;logging.Logger object at 0x7f4bf209ab00&gt;
19:59 |ERROR|new_ipcluster_pool: error -- logger &lt;logging.Logger object at 0x7f4bf209ab00&gt;
19:59 new_ipcluster_pool: info -- logger &lt;logging.Logger object at 0x7f4bf209ab00&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[StationaryProblem]" time="0.0016412734985351562"><system-err>19:59 |WARNING|StationaryProblem: warning -- logger &lt;logging.Logger object at 0x7f4c2b7476d8&gt;
19:59 |ERROR|StationaryProblem: error -- logger &lt;logging.Logger object at 0x7f4c2b7476d8&gt;
19:59 StationaryProblem: info -- logger &lt;logging.Logger object at 0x7f4c2b7476d8&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[InstationaryProblem]" time="0.0012598037719726562"><system-err>19:59 |WARNING|InstationaryProblem: warning -- logger &lt;logging.Logger object at 0x7f4c2b747a90&gt;
19:59 |ERROR|InstationaryProblem: error -- logger &lt;logging.Logger object at 0x7f4c2b747a90&gt;
19:59 InstationaryProblem: info -- logger &lt;logging.Logger object at 0x7f4c2b747a90&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[InducedNorm]" time="0.0013065338134765625"><system-err>19:59 |WARNING|InducedNorm: warning -- logger &lt;logging.Logger object at 0x7f4c23ed5c50&gt;
19:59 |ERROR|InducedNorm: error -- logger &lt;logging.Logger object at 0x7f4c23ed5c50&gt;
19:59 InducedNorm: info -- logger &lt;logging.Logger object at 0x7f4c23ed5c50&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[NGSolveVisualizer]" time="0.001268625259399414"><system-err>19:59 |WARNING|NGSolveVisualizer: warning -- logger &lt;logging.Logger object at 0x7f4bf49a74a8&gt;
19:59 |ERROR|NGSolveVisualizer: error -- logger &lt;logging.Logger object at 0x7f4bf49a74a8&gt;
19:59 NGSolveVisualizer: info -- logger &lt;logging.Logger object at 0x7f4bf49a74a8&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[CoerciveRBEstimator]" time="0.0012540817260742188"><system-err>19:59 |WARNING|CoerciveRBEstimator: warning -- logger &lt;logging.Logger object at 0x7f4bf2360ef0&gt;
19:59 |ERROR|CoerciveRBEstimator: error -- logger &lt;logging.Logger object at 0x7f4bf2360ef0&gt;
19:59 CoerciveRBEstimator: info -- logger &lt;logging.Logger object at 0x7f4bf2360ef0&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[SimpleCoerciveRBEstimator]" time="0.0012669563293457031"><system-err>19:59 |WARNING|SimpleCoerciveRBEstimator: warning -- logger &lt;logging.Logger object at 0x7f4bf2372438&gt;
19:59 |ERROR|SimpleCoerciveRBEstimator: error -- logger &lt;logging.Logger object at 0x7f4bf2372438&gt;
19:59 SimpleCoerciveRBEstimator: info -- logger &lt;logging.Logger object at 0x7f4bf2372438&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[ParabolicRBEstimator]" time="0.0012629032135009766"><system-err>19:59 |WARNING|ParabolicRBEstimator: warning -- logger &lt;logging.Logger object at 0x7f4bf24b8f98&gt;
19:59 |ERROR|ParabolicRBEstimator: error -- logger &lt;logging.Logger object at 0x7f4bf24b8f98&gt;
19:59 ParabolicRBEstimator: info -- logger &lt;logging.Logger object at 0x7f4bf24b8f98&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[MPIVisualizer]" time="0.0012307167053222656"><system-err>19:59 |WARNING|MPIVisualizer: warning -- logger &lt;logging.Logger object at 0x7f4bf23a4240&gt;
19:59 |ERROR|MPIVisualizer: error -- logger &lt;logging.Logger object at 0x7f4bf23a4240&gt;
19:59 MPIVisualizer: info -- logger &lt;logging.Logger object at 0x7f4bf23a4240&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[NumpyVectorArray]" time="0.0012552738189697266"><system-err>19:59 |WARNING|NumpyVectorArray: warning -- logger &lt;logging.Logger object at 0x7f4c40033cf8&gt;
19:59 |ERROR|NumpyVectorArray: error -- logger &lt;logging.Logger object at 0x7f4c40033cf8&gt;
19:59 NumpyVectorArray: info -- logger &lt;logging.Logger object at 0x7f4c40033cf8&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[BlockVectorArray]" time="0.0012369155883789062"><system-err>19:59 |WARNING|BlockVectorArray: warning -- logger &lt;logging.Logger object at 0x7f4c240003c8&gt;
19:59 |ERROR|BlockVectorArray: error -- logger &lt;logging.Logger object at 0x7f4c240003c8&gt;
19:59 BlockVectorArray: info -- logger &lt;logging.Logger object at 0x7f4c240003c8&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[ListVectorArray]" time="0.0012857913970947266"><system-err>19:59 |WARNING|ListVectorArray: warning -- logger &lt;logging.Logger object at 0x7f4c0f4ca3c8&gt;
19:59 |ERROR|ListVectorArray: error -- logger &lt;logging.Logger object at 0x7f4c0f4ca3c8&gt;
19:59 ListVectorArray: info -- logger &lt;logging.Logger object at 0x7f4c0f4ca3c8&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[MPIVectorArray]" time="0.0012431144714355469"><system-err>19:59 |WARNING|MPIVectorArray: warning -- logger &lt;logging.Logger object at 0x7f4bf237fe10&gt;
19:59 |ERROR|MPIVectorArray: error -- logger &lt;logging.Logger object at 0x7f4bf237fe10&gt;
19:59 MPIVectorArray: info -- logger &lt;logging.Logger object at 0x7f4bf237fe10&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[PreAssembleRules]" time="0.0013027191162109375"><system-err>19:59 |WARNING|PreAssembleRules: warning -- logger &lt;logging.Logger object at 0x7f4c168759b0&gt;
19:59 |ERROR|PreAssembleRules: error -- logger &lt;logging.Logger object at 0x7f4c168759b0&gt;
19:59 PreAssembleRules: info -- logger &lt;logging.Logger object at 0x7f4c168759b0&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[ProjectRules]" time="0.0012774467468261719"><system-err>19:59 |WARNING|ProjectRules: warning -- logger &lt;logging.Logger object at 0x7f4c0f398ac8&gt;
19:59 |ERROR|ProjectRules: error -- logger &lt;logging.Logger object at 0x7f4c0f398ac8&gt;
19:59 ProjectRules: info -- logger &lt;logging.Logger object at 0x7f4c0f398ac8&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[ProjectToSubbasisRules]" time="0.0012927055358886719"><system-err>19:59 |WARNING|ProjectToSubbasisRules: warning -- logger &lt;logging.Logger object at 0x7f4c0f398668&gt;
19:59 |ERROR|ProjectToSubbasisRules: error -- logger &lt;logging.Logger object at 0x7f4c0f398668&gt;
19:59 ProjectToSubbasisRules: info -- logger &lt;logging.Logger object at 0x7f4c0f398668&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[ToMatrixRules]" time="0.001312255859375"><system-err>19:59 |WARNING|ToMatrixRules: warning -- logger &lt;logging.Logger object at 0x7f4bf4493588&gt;
19:59 |ERROR|ToMatrixRules: error -- logger &lt;logging.Logger object at 0x7f4bf4493588&gt;
19:59 ToMatrixRules: info -- logger &lt;logging.Logger object at 0x7f4bf4493588&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[CollectOperatorRangeRules]" time="0.0014307498931884766"><system-err>19:59 |WARNING|CollectOperatorRangeRules: warning -- logger &lt;logging.Logger object at 0x7f4bf231cd30&gt;
19:59 |ERROR|CollectOperatorRangeRules: error -- logger &lt;logging.Logger object at 0x7f4bf231cd30&gt;
19:59 CollectOperatorRangeRules: info -- logger &lt;logging.Logger object at 0x7f4bf231cd30&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[CollectVectorRangeRules]" time="0.0012683868408203125"><system-err>19:59 |WARNING|CollectVectorRangeRules: warning -- logger &lt;logging.Logger object at 0x7f4bf2322208&gt;
19:59 |ERROR|CollectVectorRangeRules: error -- logger &lt;logging.Logger object at 0x7f4bf2322208&gt;
19:59 CollectVectorRangeRules: info -- logger &lt;logging.Logger object at 0x7f4bf2322208&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[CopyOnWriteVector]" time="0.0013041496276855469"><system-err>19:59 |WARNING|CopyOnWriteVector: warning -- logger &lt;logging.Logger object at 0x7f4c0f4caf98&gt;
19:59 |ERROR|CopyOnWriteVector: error -- logger &lt;logging.Logger object at 0x7f4c0f4caf98&gt;
19:59 CopyOnWriteVector: info -- logger &lt;logging.Logger object at 0x7f4c0f4caf98&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[AllDirichletBoundaryInfo]" time="0.0013079643249511719"><system-err>19:59 |WARNING|AllDirichletBoundaryInfo: warning -- logger &lt;logging.Logger object at 0x7f4bf2587748&gt;
19:59 |ERROR|AllDirichletBoundaryInfo: error -- logger &lt;logging.Logger object at 0x7f4bf2587748&gt;
19:59 AllDirichletBoundaryInfo: info -- logger &lt;logging.Logger object at 0x7f4bf2587748&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[StupidImplementer]" time="0.0013136863708496094"><system-err>19:59 |WARNING|StupidImplementer: warning -- logger &lt;logging.Logger object at 0x7f4bf2579588&gt;
19:59 |ERROR|StupidImplementer: error -- logger &lt;logging.Logger object at 0x7f4bf2579588&gt;
19:59 StupidImplementer: info -- logger &lt;logging.Logger object at 0x7f4bf2579588&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[AverageImplementer0]" time="0.0013606548309326172"><system-err>19:59 |WARNING|AverageImplementer: warning -- logger &lt;logging.Logger object at 0x7f4bf2579828&gt;
19:59 |ERROR|AverageImplementer: error -- logger &lt;logging.Logger object at 0x7f4bf2579828&gt;
19:59 AverageImplementer: info -- logger &lt;logging.Logger object at 0x7f4bf2579828&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[FailImplementer]" time="0.0012669563293457031"><system-err>19:59 |WARNING|FailImplementer: warning -- logger &lt;logging.Logger object at 0x7f4bf2579f28&gt;
19:59 |ERROR|FailImplementer: error -- logger &lt;logging.Logger object at 0x7f4bf2579f28&gt;
19:59 FailImplementer: info -- logger &lt;logging.Logger object at 0x7f4bf2579f28&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[AverageImplementer1]" time="0.0012874603271484375"><system-err>19:59 |WARNING|AverageImplementer: warning -- logger &lt;logging.Logger object at 0x7f4bf2579828&gt;
19:59 |ERROR|AverageImplementer: error -- logger &lt;logging.Logger object at 0x7f4bf2579828&gt;
19:59 AverageImplementer: info -- logger &lt;logging.Logger object at 0x7f4bf2579828&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[DummyPool]" time="0.0017788410186767578"><system-err>19:59 |WARNING|DummyPool: warning -- logger &lt;logging.Logger object at 0x7f4bf25946a0&gt;
19:59 |ERROR|DummyPool: error -- logger &lt;logging.Logger object at 0x7f4bf25946a0&gt;
19:59 DummyPool: info -- logger &lt;logging.Logger object at 0x7f4bf25946a0&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[WorkerPoolBase]" time="0.0012621879577636719"><system-err>19:59 |WARNING|WorkerPoolBase: warning -- logger &lt;logging.Logger object at 0x7f4bf23a94e0&gt;
19:59 |ERROR|WorkerPoolBase: error -- logger &lt;logging.Logger object at 0x7f4bf23a94e0&gt;
19:59 WorkerPoolBase: info -- logger &lt;logging.Logger object at 0x7f4bf23a94e0&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[IncHAPODTree]" time="0.0013234615325927734"><system-err>19:59 |WARNING|IncHAPODTree: warning -- logger &lt;logging.Logger object at 0x7f4bf2431748&gt;
19:59 |ERROR|IncHAPODTree: error -- logger &lt;logging.Logger object at 0x7f4bf2431748&gt;
19:59 IncHAPODTree: info -- logger &lt;logging.Logger object at 0x7f4bf2431748&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[DistHAPODTree]" time="0.0012829303741455078"><system-err>19:59 |WARNING|DistHAPODTree: warning -- logger &lt;logging.Logger object at 0x7f4bf231c198&gt;
19:59 |ERROR|DistHAPODTree: error -- logger &lt;logging.Logger object at 0x7f4bf231c198&gt;
19:59 DistHAPODTree: info -- logger &lt;logging.Logger object at 0x7f4bf231c198&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[CoerciveRBReductor]" time="0.0013458728790283203"><system-err>19:59 |WARNING|CoerciveRBReductor: warning -- logger &lt;logging.Logger object at 0x7f4bf2360d30&gt;
19:59 |ERROR|CoerciveRBReductor: error -- logger &lt;logging.Logger object at 0x7f4bf2360d30&gt;
19:59 CoerciveRBReductor: info -- logger &lt;logging.Logger object at 0x7f4bf2360d30&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[SimpleCoerciveRBReductor]" time="0.001333475112915039"><system-err>19:59 |WARNING|SimpleCoerciveRBReductor: warning -- logger &lt;logging.Logger object at 0x7f4bf23721d0&gt;
19:59 |ERROR|SimpleCoerciveRBReductor: error -- logger &lt;logging.Logger object at 0x7f4bf23721d0&gt;
19:59 SimpleCoerciveRBReductor: info -- logger &lt;logging.Logger object at 0x7f4bf23721d0&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[ParabolicRBReductor]" time="0.0014007091522216797"><system-err>19:59 |WARNING|ParabolicRBReductor: warning -- logger &lt;logging.Logger object at 0x7f4bf24b8cc0&gt;
19:59 |ERROR|ParabolicRBReductor: error -- logger &lt;logging.Logger object at 0x7f4bf24b8cc0&gt;
19:59 ParabolicRBReductor: info -- logger &lt;logging.Logger object at 0x7f4bf24b8cc0&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[BTReductor]" time="0.0013666152954101562"><system-err>19:59 |WARNING|BTReductor: warning -- logger &lt;logging.Logger object at 0x7f4bf2351160&gt;
19:59 |ERROR|BTReductor: error -- logger &lt;logging.Logger object at 0x7f4bf2351160&gt;
19:59 BTReductor: info -- logger &lt;logging.Logger object at 0x7f4bf2351160&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[LQGBTReductor]" time="0.0014026165008544922"><system-err>19:59 |WARNING|LQGBTReductor: warning -- logger &lt;logging.Logger object at 0x7f4bf2351470&gt;
19:59 |ERROR|LQGBTReductor: error -- logger &lt;logging.Logger object at 0x7f4bf2351470&gt;
19:59 LQGBTReductor: info -- logger &lt;logging.Logger object at 0x7f4bf2351470&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[BRBTReductor]" time="0.0013093948364257812"><system-err>19:59 |WARNING|BRBTReductor: warning -- logger &lt;logging.Logger object at 0x7f4bf2351748&gt;
19:59 |ERROR|BRBTReductor: error -- logger &lt;logging.Logger object at 0x7f4bf2351748&gt;
19:59 BRBTReductor: info -- logger &lt;logging.Logger object at 0x7f4bf2351748&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[LTI_BHIReductor]" time="0.0013709068298339844"><system-err>19:59 |WARNING|LTI_BHIReductor: warning -- logger &lt;logging.Logger object at 0x7f4bf236eb38&gt;
19:59 |ERROR|LTI_BHIReductor: error -- logger &lt;logging.Logger object at 0x7f4bf236eb38&gt;
19:59 LTI_BHIReductor: info -- logger &lt;logging.Logger object at 0x7f4bf236eb38&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[SO_BHIReductor]" time="0.0013501644134521484"><system-err>19:59 |WARNING|SO_BHIReductor: warning -- logger &lt;logging.Logger object at 0x7f4bf236edd8&gt;
19:59 |ERROR|SO_BHIReductor: error -- logger &lt;logging.Logger object at 0x7f4bf236edd8&gt;
19:59 SO_BHIReductor: info -- logger &lt;logging.Logger object at 0x7f4bf236edd8&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[DelayBHIReductor]" time="0.001314401626586914"><system-err>19:59 |WARNING|DelayBHIReductor: warning -- logger &lt;logging.Logger object at 0x7f4bf24b80b8&gt;
19:59 |ERROR|DelayBHIReductor: error -- logger &lt;logging.Logger object at 0x7f4bf24b80b8&gt;
19:59 DelayBHIReductor: info -- logger &lt;logging.Logger object at 0x7f4bf24b80b8&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[SOBTpReductor]" time="0.0012843608856201172"><system-err>19:59 |WARNING|SOBTpReductor: warning -- logger &lt;logging.Logger object at 0x7f4bf24b77b8&gt;
19:59 |ERROR|SOBTpReductor: error -- logger &lt;logging.Logger object at 0x7f4bf24b77b8&gt;
19:59 SOBTpReductor: info -- logger &lt;logging.Logger object at 0x7f4bf24b77b8&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[SOBTvReductor]" time="0.0013091564178466797"><system-err>19:59 |WARNING|SOBTvReductor: warning -- logger &lt;logging.Logger object at 0x7f4bf24b7ac8&gt;
19:59 |ERROR|SOBTvReductor: error -- logger &lt;logging.Logger object at 0x7f4bf24b7ac8&gt;
19:59 SOBTvReductor: info -- logger &lt;logging.Logger object at 0x7f4bf24b7ac8&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[SOBTpvReductor]" time="0.001283407211303711"><system-err>19:59 |WARNING|SOBTpvReductor: warning -- logger &lt;logging.Logger object at 0x7f4bf24b7da0&gt;
19:59 |ERROR|SOBTpvReductor: error -- logger &lt;logging.Logger object at 0x7f4bf24b7da0&gt;
19:59 SOBTpvReductor: info -- logger &lt;logging.Logger object at 0x7f4bf24b7da0&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[SOBTvpReductor]" time="0.0013566017150878906"><system-err>19:59 |WARNING|SOBTvpReductor: warning -- logger &lt;logging.Logger object at 0x7f4bf24c7438&gt;
19:59 |ERROR|SOBTvpReductor: error -- logger &lt;logging.Logger object at 0x7f4bf24c7438&gt;
19:59 SOBTvpReductor: info -- logger &lt;logging.Logger object at 0x7f4bf24c7438&gt;
</system-err></testcase></testsuite>