<?xml version="1.0" encoding="utf-8"?><testsuite errors="0" failures="0" name="pytest" skips="6083" tests="12167" time="1044.794"><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;0]" time="0.001123666763305664"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f6d2e55dba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;1]" time="0.0004975795745849609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f6d06bd1908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;2]" time="0.0005369186401367188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f6d2e4e6d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;3]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f6d2e4b7240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;4]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f6d2e4b7710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;5]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f6d2e4b7be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;6]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f6d2e4b7c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;7]" time="0.0004153251647949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f6d2e4b74e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;8]" time="0.0004105567932128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f6d5009d2b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;9]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f6d2e4e6ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;10]" time="0.0004100799560546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f6d2e55d2e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;11]" time="0.000408172607421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f6d2e4c4208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;12]" time="0.0004761219024658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f6d2e4c46d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;13]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f6d2e4c4ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;14]" time="0.0006608963012695312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f6d2e55d2e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;15]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f6d2e4e6dd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;16]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f6d2e4b7898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;17]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f6d2e4b7978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;18]" time="0.0004875659942626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f6d2e4c4358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;19]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f6d2e4c4780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;20]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f6d2e4c40b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;21]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f6d2e4cf2b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;22]" time="0.0006368160247802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f6d2e4c40f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;23]" time="0.00041103363037109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f6d2e4c4978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;24]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f6d2e4b7358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;25]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f6d2e4b7d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;26]" time="0.0004124641418457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f6d5009d550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;27]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f6d2e4e6e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;28]" time="0.00041556358337402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f6d2e4cf198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;29]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f6d2e4cfa90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;30]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f6d0626f908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;31]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f6d5009de80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;32]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f6d2e4b7160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;33]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f6d500b22b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;34]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f6d2e4c4710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;35]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f6d2e4cfa58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;36]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f6d2e4cf2e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;37]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f6d2e4d9390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;38]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f6d2e4cf0b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;39]" time="0.0004153251647949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f6d2e4c45c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;40]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f6d2e4c4a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;41]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f6d2e4b7518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="24" name="test_reference_element_wrong_arguments[&lt;lambda&gt;42]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:24: &lt;py._xmlgen.raw object at 0x7f6d5009d940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;0]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f6d2e4e6e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;1]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f6d2e4d90f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;2]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f6d2e4d9c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;3]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f6d2e4641d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;4]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f6d2e4d94a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;5]" time="0.00041747093200683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f6d2e4e6e80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;6]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f6d2e4b7128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;7]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f6d500b2160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;8]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f6d2e4c44e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;9]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f6d2e4cf6a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;10]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f6d2e464550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;11]" time="0.0006949901580810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f6d2e464a90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;12]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f6d2e4c4c88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;13]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f6d500b2940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;14]" time="0.00041747093200683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f6d2e4b7c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;15]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f6d42f2ea20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;16]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f6d2e4d9a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;17]" time="0.0004150867462158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f6d2e464860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;18]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f6d2e464b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;19]" time="0.004353046417236328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f6d2e46e0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;20]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f6d5009d940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;21]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f6d2e464be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;22]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f6d2e464358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;23]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f6d2e4640f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;24]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f6d2e4d9438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;25]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f6d2e4d97f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;26]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f6d2e4cf278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;27]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f6d2e4c43c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;28]" time="0.0007665157318115234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f6d2e4cfcf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;29]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f6d2e4d9fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;30]" time="0.00048422813415527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f6d2e4d93c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;31]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f6d2e4647b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;32]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f6d2e464ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;33]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f6d500b27f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;34]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f6d42f2e8d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;35]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f6d2e4c47f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;36]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f6d2e4c4da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;37]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f6d42f2ec18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;38]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f6d42f40828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;39]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f6d2e464550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;40]" time="0.00047397613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f6d2e464710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;41]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f6d2e4d9d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="32" name="test_reference_element_type[&lt;lambda&gt;42]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:32: &lt;py._xmlgen.raw object at 0x7f6d2e4cff28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;0]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f6d2e4b7ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;1]" time="0.0007116794586181641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f6d2e4e67f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;2]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f6d2e4cfcf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;3]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f6d2e4d9e80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;4]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f6d2e464710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;5]" time="0.0004889965057373047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f6d2e464668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;6]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f6d42f40c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;7]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f6d2e4c4908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;8]" time="0.0005259513854980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f6d2e4e6978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;9]" time="0.0008933544158935547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f6d2e46e518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;10]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f6d2e4c4ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;11]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f6d42f404e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;12]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f6d2e4643c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;13]" time="0.0004944801330566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f6d2e4d9c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;14]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f6d2e4cf780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;15]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f6d2e4b7940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;16]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f6d2e46e3c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;17]" time="0.0007421970367431641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f6d2e46eb38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;18]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f6d2e4cfa58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;19]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f6d2e4d9a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;20]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f6d2e464518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;21]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f6d42f40ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;22]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f6d500424a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;23]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f6d2e46eba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;24]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f6d2e46e160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;25]" time="0.0007493495941162109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f6d2e47d198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;26]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f6d2e46e208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;27]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f6d2e4c4ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;28]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f6d50042748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;29]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f6d0626f908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;30]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f6d500b22b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;31]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f6d2e4b7f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;32]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f6d2e47d320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;33]" time="0.0007431507110595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f6d2e47d7b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;34]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f6d2e4d9470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;35]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f6d2e464898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;36]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f6d42f40198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;37]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f6d50042400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;38]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f6d2e46e860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;39]" time="0.0004734992980957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f6d2e4e6978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;40]" time="0.00041937828063964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f6d2e47d048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;41]" time="0.0007352828979492188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f6d2e47ddd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="38" name="test_reference_element_transitivity[&lt;lambda&gt;42]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:38: &lt;py._xmlgen.raw object at 0x7f6d2e46ed68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;0]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d50042c88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;1]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d07999e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;2]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d2e4d95c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;3]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d500554a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;4]" time="0.00047707557678222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d2e47da90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;5]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d2e47d6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;6]" time="0.0007457733154296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d2e488438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;7]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d2e47db38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;8]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d2e4b7860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;9]" time="0.00041985511779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d2e4d9b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;10]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d42f2e390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;11]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d50042fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;12]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d2e46efd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;13]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d2e4882b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;14]" time="0.0007123947143554688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d2e488a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;15]" time="0.0004150867462158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d06214f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;16]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d50069ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;17]" time="0.00041484832763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d2e4d9b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;18]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d2e4cf780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;19]" time="0.00041604042053222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d2e47db38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;20]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d2e488be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;21]" time="0.0004253387451171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d2e488128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;22]" time="0.0007183551788330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d2e4910b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;23]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d2e488128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;24]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d2e47d278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;25]" time="0.0004146099090576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d2e47de48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;26]" time="0.00041556358337402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d2e464390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;27]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d50069da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;28]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d06214f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;29]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d2e4911d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;30]" time="0.0009944438934326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d2e4916d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;31]" time="0.0005428791046142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d50069fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;32]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d2e464c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;33]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d2e488518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;34]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d2e488f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;35]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d2e47db38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;36]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d2e46e6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;37]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d2e4e62b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;38]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d2e4c40f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;39]" time="0.0006992816925048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d2e4e6940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;40]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d2e47dc50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;41]" time="0.00041413307189941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d2e488a90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="44" name="test_embeddings_wrong_arguments[&lt;lambda&gt;42]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d2e4880f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;0]" time="0.00047397613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f6d42ed9518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;1]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f6d42f2ee10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;2]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f6d50069ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;3]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f6d2e4917b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;4]" time="0.0007245540618896484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f6d2e4cfef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;5]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f6d42f2ecc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;6]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f6d42ed9278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;7]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f6d2e4882b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;8]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f6d2e47d978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;9]" time="0.0004200935363769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f6d2e46e208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;10]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f6d2e491780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;11]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f6d2e491be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;12]" time="0.0007851123809814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f6d2e41f160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;13]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f6d2e491be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;14]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f6d2e46ed68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;15]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f6d2e47d358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;16]" time="0.0004878044128417969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f6d2e488e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;17]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f6d42ee9b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;18]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f6d42f2ecc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;19]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f6d2e41f048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;20]" time="0.0007369518280029297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f6d2e41f6a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;21]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f6d500552b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;22]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f6d2e488518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;23]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f6d2e47d6a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;24]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f6d2e46e4e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;25]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f6d2e4911d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;26]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f6d42efe278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;27]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f6d2e41f320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;28]" time="0.0007119178771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f6d2e41fcc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;29]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f6d2e491dd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;30]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f6d2e46eb00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;31]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f6d2e488f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;32]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f6d42ee9b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;33]" time="0.0004801750183105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f6d50069da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;34]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f6d2e41f048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;35]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f6d2e41f518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;36]" time="0.0007421970367431641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f6d2e42c320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;37]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f6d2e41f320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;38]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f6d50069cf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;39]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f6d42ee9b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;40]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f6d2e47dc18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;41]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f6d2e491780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="52" name="test_embeddings_shape[&lt;lambda&gt;42]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:52: &lt;py._xmlgen.raw object at 0x7f6d42efecf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;0]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f6d2e42c198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;1]" time="0.0007157325744628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f6d2e42c940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;2]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f6d2e491898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;3]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f6d2e47d780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;4]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f6d2e4cf2b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;5]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f6d2e41f400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;6]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f6d2e41fb38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;7]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f6d2e42ca58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;8]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f6d2e42c390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;9]" time="0.0006937980651855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f6d2e42cf60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;10]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f6d2e42ce10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;11]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f6d2e42ca58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;12]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f6d2e41f208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;13]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f6d2e4cfc88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;14]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f6d2e46eba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;15]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f6d42ea3908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;16]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f6d2e42d080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;17]" time="0.0006625652313232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f6d2e42d5c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;18]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f6d2e4913c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;19]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f6d2e488ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;20]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f6d2e4cf2e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;21]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f6d2e41fb38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;22]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f6d2e42c198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;23]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f6d42f0e3c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;24]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f6d2e42d240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;25]" time="0.0007002353668212891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f6d2e42dbe0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;26]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f6d2e42cb70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;27]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f6d2e41f898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;28]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f6d42ed9128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;29]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f6d2e491a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;30]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f6d42ea37b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;31]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f6d2e42d0b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;32]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f6d2e42d438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;33]" time="0.0008423328399658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f6d2e440240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;34]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f6d2e42d278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;35]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f6d42ea3e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;36]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f6d2e46e518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;37]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f6d42ed9c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;38]" time="0.0004189014434814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f6d42eb4668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;39]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f6d2e42cb70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;40]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f6d2e4400b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;41]" time="0.0009415149688720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f6d2e440860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="62" name="test_embeddings_transitivity[&lt;lambda&gt;42]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:62: &lt;py._xmlgen.raw object at 0x7f6d2e488908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;0]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f6d42ea37b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;1]" time="0.0004930496215820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f6d2e42d320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;2]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f6d2e42d588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;3]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f6d2e42c828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;4]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f6d2e41feb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;5]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f6d2e491f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;6]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f6d2e4c4d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;7]" time="0.0006940364837646484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f6d2e4919b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;8]" time="0.0004200935363769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f6d42efe128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;9]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f6d2e42c048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;10]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f6d2e42deb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;11]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f6d2e42de10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;12]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f6d42ea3f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;13]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f6d42eb4320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;14]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f6d2e4409e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;15]" time="0.0006737709045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f6d2e488a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;16]" time="0.0004165172576904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f6d2e46e1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;17]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f6d2e42d7b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;18]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f6d42f0e320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;19]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f6d2e42c940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;20]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f6d2e41f198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;21]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f6d2e440908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;22]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f6d2e440d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;23]" time="0.0007328987121582031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f6d2e44c2e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;24]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f6d2e440b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;25]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f6d2e41fb38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;26]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f6d2e42c358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;27]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f6d42e59710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;28]" time="0.0004923343658447266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f6d2e42d9e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;29]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f6d42eb4908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;30]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f6d2e44c1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;31]" time="0.0006818771362304688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f6d2e44c828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;32]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f6d2e47d898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;33]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f6d42e59ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;34]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f6d42ec3b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;35]" time="0.0004253387451171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f6d2e41f710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;36]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f6d2e440550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;37]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f6d2e44c550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;38]" time="0.00041174888610839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f6d2e44c048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;39]" time="0.0010461807250976562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f6d2e44ce48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;40]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f6d2e440ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;41]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f6d2e42cc18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="75" name="test_jacobian_inverse_transposed_wrong_arguments[&lt;lambda&gt;42]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:75: &lt;py._xmlgen.raw object at 0x7f6d42e591d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;0]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f6d2e42dda0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;1]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f6d42eb4908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;2]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f6d2e44cc18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;3]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f6d2e44c518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;4]" time="0.0007016658782958984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f6d2e45a4a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;5]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f6d2e44cc18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;6]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f6d42eb4710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;7]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f6d42ec3fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;8]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f6d42e59f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;9]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f6d2e41f198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;10]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f6d2e440fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;11]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f6d2e45a358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;12]" time="0.0006690025329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f6d2e45aac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;13]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f6d2e42c978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;14]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f6d42e59a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;15]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f6d2e42deb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;16]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f6d42e7b7b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;17]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f6d2e44c1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;18]" time="0.00041174888610839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f6d2e45ac50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;19]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f6d2e45a080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;20]" time="0.0006563663482666016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f6d2e3e1128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;21]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f6d2e45a320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;22]" time="0.0004055500030517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f6d2e44c6a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;23]" time="0.0004127025604248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f6d42eb4908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;24]" time="0.00041294097900390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f6d42e7bc50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;25]" time="0.00041103363037109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f6d42e59518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;26]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f6d2e42c978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;27]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f6d2e3e1278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;28]" time="0.0007343292236328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f6d2e3e1748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;29]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f6d42e685c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;30]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f6d42e59518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;31]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f6d42eb4cf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;32]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f6d2e44c748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;33]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f6d2e45a7f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;34]" time="0.00041294097900390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f6d2e45a9b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;35]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f6d2e3e13c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;36]" time="0.0007114410400390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f6d2e3e1d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;37]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f6d2e45ae48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;38]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f6d2e44c6a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;39]" time="0.0004787445068359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f6d42e7b5c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;40]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f6d2e42d2b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;41]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f6d2e440fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="85" name="test_jacobian_inverse_transposed_shape[&lt;lambda&gt;42]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:85: &lt;py._xmlgen.raw object at 0x7f6d2e3e1198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;0]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f6d2e3e15c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;1]" time="0.0007245540618896484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f6d2e3ee3c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;2]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f6d2e3e1c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;3]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f6d2e440fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;4]" time="0.00041794776916503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f6d2e42ddd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;5]" time="0.0004754066467285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f6d42ea3518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;6]" time="0.00048661231994628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f6d42e8fb00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;7]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f6d2e45aef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;8]" time="0.0004856586456298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f6d2e3ee240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;9]" time="0.0010128021240234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f6d2e3ee9e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;10]" time="0.0005066394805908203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f6d42e7b320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;11]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f6d3d76af98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;12]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f6d2e3e1940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;13]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f6d2e3e1d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;14]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f6d2e45a550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;15]" time="0.00046944618225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f6d2e44ce10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;16]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f6d2e4408d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;17]" time="0.0004825592041015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f6d2e4cfe48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;18]" time="0.0008041858673095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f6d2e42da20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;19]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f6d2e44ce10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;20]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f6d2e45ab38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;21]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f6d2e3e1048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;22]" time="0.00041604042053222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f6d3d76a0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;23]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f6d42e7b320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;24]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f6d42e8f5c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;25]" time="0.0004184246063232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f6d2e3ee748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;26]" time="0.0007119178771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f6d42e8f470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;27]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f6d42e593c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;28]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f6d2e3e1940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;29]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f6d2e3e1748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;30]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f6d2e45ab00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;31]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f6d2e440fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;32]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f6d2e3eeb38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;33]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f6d2e3eeef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;34]" time="0.0009400844573974609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f6d2e3fc470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;35]" time="0.0004100799560546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f6d2e3ee0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;36]" time="0.0004146099090576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f6d2e4400b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;37]" time="0.0004131793975830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f6d2e45ac88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;38]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f6d2e3e13c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;39]" time="0.00041413307189941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f6d42eb4cf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;40]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f6d42e68668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;41]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f6d2e3fc358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="91" name="test_jacobian_inverse_transposed_values[&lt;lambda&gt;42]" time="0.0007617473602294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:91: &lt;py._xmlgen.raw object at 0x7f6d2e3fc9b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;0]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f6d3d7821d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;1]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f6d2e3e13c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;2]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f6d2e45af28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;3]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f6d2e440fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;4]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f6d2e3ee080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;5]" time="0.0004792213439941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f6d2e3fc588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;6]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f6d2e3fc1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;7]" time="0.000698089599609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f6d2e3fcfd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;8]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f6d2e3fceb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;9]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f6d2e3fc6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;10]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f6d2e3ee390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;11]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f6d2e45a7b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;12]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f6d42e7bfd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;13]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f6d42ec3b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;14]" time="0.00047707557678222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f6d2e407128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;15]" time="0.00072479248046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f6d2e407630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;16]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f6d2e3e1be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;17]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f6d3d724668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;18]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f6d2e44c588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;19]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f6d2e3ee710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;20]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f6d2e3fc6a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;21]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f6d3d7903c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;22]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f6d2e4072b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;23]" time="0.0006878376007080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f6d2e407c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;24]" time="0.0004992485046386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f6d2e3fc5c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;25]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f6d2e3eeba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;26]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f6d2e44c588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;27]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f6d3d724908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;28]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f6d2e3e13c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;29]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f6d2e407160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;30]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f6d2e4074a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;31]" time="0.0007312297821044922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f6d2e4112b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;32]" time="0.0004138946533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f6d2e407780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;33]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f6d2e3e1588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;34]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f6d3d724c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;35]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f6d2e45af28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;36]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f6d2e3fc518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;37]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f6d3d737908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;38]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f6d2e411128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;39]" time="0.0007035732269287109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f6d2e4118d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;40]" time="0.00041174888610839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f6d2e3fcd30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;41]" time="0.00041174888610839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f6d2e440710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="100" name="test_integration_elements_wrong_arguments[&lt;lambda&gt;42]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:100: &lt;py._xmlgen.raw object at 0x7f6d3d7245c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;0]" time="0.0004737377166748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f6d3d76af98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;1]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f6d2e407dd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;2]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f6d2e4119b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;3]" time="0.00041556358337402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f6d2e4113c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;4]" time="0.0007619857788085938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f6d2e411ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;5]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f6d2e4116a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;6]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f6d2e407208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;7]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f6d2e407d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;8]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f6d3d747da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;9]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f6d3d724e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;10]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f6d2e3fcc88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;11]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f6d3d7371d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;12]" time="0.0007140636444091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f6d2e3a0550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;13]" time="0.00047516822814941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f6d2e3fc7f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;14]" time="0.0004184246063232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f6d2e45af60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;15]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f6d42e685c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;16]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f6d2e407e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;17]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f6d2e411a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;18]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f6d2e411e10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;19]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f6d2e3a0470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;20]" time="0.0010483264923095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f6d2e3a0b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;21]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f6d3d724c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;22]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f6d3d737b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;23]" time="0.0005078315734863281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f6d2e411cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;24]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f6d2e4112e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;25]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f6d2e407128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;26]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f6d2e3fcfd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;27]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f6d2e3ee860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;28]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f6d2e4b7128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;29]" time="0.13252496719360352"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f6d3d7825c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;30]" time="0.0007159709930419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f6d2e407128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;31]" time="0.0006663799285888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f6d2e411c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;32]" time="0.0004942417144775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f6d3d7371d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;33]" time="0.00048661231994628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f6d3d75d320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;34]" time="0.0004889965057373047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f6d3d75d320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;35]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f6d2e411ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;36]" time="0.000530242919921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f6d2e4112b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;37]" time="0.0004787445068359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f6d2e3fc9b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;38]" time="0.0005071163177490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f6d42e8fe48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;39]" time="0.000484466552734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f6d2e440dd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;40]" time="0.0005207061767578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f6d52e7a748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;41]" time="0.0007371902465820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f6d2e3a0940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="108" name="test_integration_elements_shape[&lt;lambda&gt;42]" time="0.0004897117614746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:108: &lt;py._xmlgen.raw object at 0x7f6d2e3ee860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;0]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f6d42e7be48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;1]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f6d2e407c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;2]" time="0.000476837158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f6d2e4113c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;3]" time="0.00047707557678222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f6d3d75d908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;4]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f6d2e3a0be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;5]" time="0.0005116462707519531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f6d2e3a0358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;6]" time="0.0007452964782714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f6d2e3ae198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;7]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f6d2e3a0630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;8]" time="0.0004787445068359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f6d3d75d1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;9]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f6d2e411b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;10]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f6d2e407dd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;11]" time="0.0004935264587402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f6d2e3e13c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;12]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f6d2e3ee860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;13]" time="0.0005152225494384766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f6d2e3ae278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;14]" time="0.0007960796356201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f6d2e3ae7b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;15]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f6d2e3ee208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;16]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f6d2e3fcf98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;17]" time="0.0004909038543701172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f6d2e411ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;18]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f6d3d737278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;19]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f6d2e3a09b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;20]" time="0.0004782676696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f6d2e3a0e80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;21]" time="0.00048542022705078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f6d2e3ae278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;22]" time="0.0010008811950683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f6d2e3aedd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;23]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f6d2e3a0e10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;24]" time="0.0005183219909667969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f6d3d6ed5c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;25]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f6d2e411e10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;26]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f6d3d700320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;27]" time="0.0004680156707763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f6d3d7245c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;28]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f6d2e3aeb38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;29]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f6d2e3ae860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;30]" time="0.0007476806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f6d2e3b5438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;31]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f6d2e3aeba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;32]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f6d2e491e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;33]" time="0.0004923343658447266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f6d3d700cf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;34]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f6d2e411cf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;35]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f6d3d714668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;36]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f6d2e3a0390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;37]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f6d2e3b52b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;38]" time="0.0007295608520507812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f6d2e3b5a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;39]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f6d3d6ed518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;40]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f6d3d75d7b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;41]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f6d2e3fc438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="114" name="test_integration_elements_values[&lt;lambda&gt;42]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:114: &lt;py._xmlgen.raw object at 0x7f6d2e3ee390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;0]" time="0.0005643367767333984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f6d2e3aeba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;1]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f6d2e3b5be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;2]" time="0.0004825592041015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f6d2e3b5128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;3]" time="0.0007178783416748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f6d2e3be0b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;4]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f6d2e3b5940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;5]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f6d2e3ae2b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;6]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f6d2e3ae9e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;7]" time="0.0005435943603515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f6d42e7be48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;8]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f6d2e45acc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;9]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f6d3d737cf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;10]" time="0.00048065185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f6d2e3be1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;11]" time="0.0007317066192626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f6d2e3be6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;12]" time="0.0004820823669433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f6d3d714e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;13]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f6d2e411ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;14]" time="0.0004851818084716797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f6d3d700710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;15]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f6d2e3ae828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;16]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f6d2e3b5748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;17]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f6d2e3b5c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;18]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f6d2e3be358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;19]" time="0.0007581710815429688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f6d2e3becf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;20]" time="0.0004787445068359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f6d2e3b5da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;21]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f6d3d6a3b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;22]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f6d2e407f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;23]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f6d3d714668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;24]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f6d2e3a0cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;25]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f6d2e3be208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;26]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f6d2e3be550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;27]" time="0.0008668899536132812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f6d2e3ca358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;28]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f6d2e3beac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;29]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f6d3d6bbcf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;30]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f6d3d714cf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;31]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f6d2e3ee208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;32]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f6d2e3ae9b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;33]" time="0.0004987716674804688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f6d2e3b5828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;34]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f6d2e3ca1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;35]" time="0.0010178089141845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f6d2e3ca978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;36]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f6d06a471d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;37]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f6d3d6bb470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;38]" time="0.0004811286926269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f6d2e3beb70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;39]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f6d2e3becc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;40]" time="0.0004761219024658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f6d2e3b57b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;41]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f6d2e3ae208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="124" name="test_volumes_wrong_arguments[&lt;lambda&gt;42]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:124: &lt;py._xmlgen.raw object at 0x7f6d2e3a0978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;0]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f6d2e3ca6a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;1]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f6d2e3a0978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;2]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f6d2e3aeb38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;3]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f6d2e3b5b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;4]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f6d2e3bec18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;5]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f6d3d6bba58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;6]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f6d3d6a3b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;7]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f6d2e407f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;8]" time="0.0004973411560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f6d2e3ca208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;9]" time="0.0007846355438232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f6d3d6a3ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;10]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f6d2e3be438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;11]" time="0.0005095005035400391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f6d2e3be6a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;12]" time="0.0004966259002685547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f6d2e3b5e80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;13]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f6d2e3a0d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;14]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f6d3d7470f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;15]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f6d2e3ca630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;16]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f6d2e3cada0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;17]" time="0.0007278919219970703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f6d2e3cadd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;18]" time="0.00048279762268066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f6d2e3ca4a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;19]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f6d3d6dfba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;20]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f6d2e3ae7f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;21]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f6d2e3b57b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;22]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f6d2e3be7b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;23]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f6d3d714668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;24]" time="0.00046515464782714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f6d2e3d76a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;25]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f6d3d6bbf98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;26]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f6d2e3be1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;27]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f6d2e3b5a90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;28]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f6d2e41fba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;29]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f6d3d6dfe48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;30]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f6d2e3ca748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;31]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f6d2e3d7470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;32]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f6d2e3d7f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;33]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f6d2e3d7f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;34]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f6d2e3d76a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;35]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f6d2e3cac50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;36]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f6d2e41fba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;37]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f6d2e3b5f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;38]" time="0.0004706382751464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f6d2e3be860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;39]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f6d3d6bbfd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;40]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f6d2e360860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;41]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f6d2e360da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="132" name="test_volumes_shape[&lt;lambda&gt;42]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:132: &lt;py._xmlgen.raw object at 0x7f6d3d66f7b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;0]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f6d2e3aee10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;1]" time="0.0004801750183105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f6d3d6dfe48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;2]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f6d2e3ca208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;3]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f6d2e3d7470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;4]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f6d2e360630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;5]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f6d2e36c160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;6]" time="0.0007128715515136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f6d2e36c6a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;7]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f6d2e360550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;8]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f6d3d75d908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;9]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f6d2e3a0390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;10]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f6d2e3b5f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;11]" time="0.00048065185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f6d2e3be1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;12]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f6d3d6bb3c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;13]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f6d2e36c780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;14]" time="0.0007534027099609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f6d2e36ccc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;15]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f6d2e3be748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;16]" time="0.0004978179931640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f6d3d694320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;17]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f6d2e3cab00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;18]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f6d2e3d7d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;19]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f6d2e3605c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;20]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f6d2e36ca20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;21]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f6d2e36c278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;22]" time="0.0007126331329345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f6d2e375320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;23]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f6d2e36c860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;24]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f6d2e360f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;25]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f6d2e3d7470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;26]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f6d3d6df3c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;27]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f6d2e3b5470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;28]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f6d2e3aee48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;29]" time="0.00047588348388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f6d2e3751d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;30]" time="0.0007431507110595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f6d2e375940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;31]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f6d3d67efd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;32]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f6d3d694320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;33]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f6d2e3cab00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;34]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f6d2e360f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;35]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f6d2e36ca20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;36]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f6d2e375a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;37]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f6d2e375390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;38]" time="0.0007205009460449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f6d2e375f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;39]" time="0.00047588348388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f6d2e375710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;40]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f6d2e36c470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;41]" time="0.0004742145538330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f6d2e3d7e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="138" name="test_volumes_values[&lt;lambda&gt;42]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:138: &lt;py._xmlgen.raw object at 0x7f6d3d624320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;0]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f6d3d6dfe48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;1]" time="0.0004956722259521484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f6d2e3b5f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;2]" time="0.0004773139953613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f6d2e380080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;3]" time="0.0012698173522949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f6d2e3805c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;4]" time="0.00051116943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f6d3d694518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;5]" time="0.00046944618225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f6d2e375c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;6]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f6d2e375d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;7]" time="0.0004813671112060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f6d3d66f320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;8]" time="0.00046944618225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f6d2e36c780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;9]" time="0.0004904270172119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f6d2e3609b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;10]" time="0.000514984130859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f6d2e360c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;11]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f6d2e3d76a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;12]" time="0.0007753372192382812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f6d2e360cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;13]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f6d2e36c160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;14]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f6d2e36cda0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;15]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f6d2e375978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;16]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f6d3d75d908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;17]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f6d3d638860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;18]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f6d2e3aee48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;19]" time="0.0004858970642089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f6d2e3d70f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;20]" time="0.0007388591766357422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f6d2e3d70f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;21]" time="0.0004849433898925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f6d3d694b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;22]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f6d3d638860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;23]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f6d2e3757b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;24]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f6d3d66f470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;25]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f6d2e36ccf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;26]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f6d2e360f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;27]" time="0.0004875659942626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f6d2e3806d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;28]" time="0.0007543563842773438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f6d2e380828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;29]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f6d2e360080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;30]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f6d2e36c780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;31]" time="0.0004923343658447266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f6d2e375c88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;32]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f6d3d67eef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;33]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f6d3d648128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;34]" time="0.0005621910095214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f6d2e3d7470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;35]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f6d2e3806d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;36]" time="0.0007212162017822266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f6d2e380d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;37]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f6d3d648908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;38]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f6d3d67efd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;39]" time="0.0005481243133544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f6d2e3754e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;40]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f6d2e36ca20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;41]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f6d2e3606d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="146" name="test_volumes_inverse_wrong_arguments[&lt;lambda&gt;42]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:146: &lt;py._xmlgen.raw object at 0x7f6d2e380a90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;0]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f6d2e3800b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;1]" time="0.0007643699645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f6d2e38f3c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;2]" time="0.0005462169647216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f6d2e380ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;3]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f6d2e3606d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;4]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f6d3d66f320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;5]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f6d2e3757b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;6]" time="0.0005276203155517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f6d3d648710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;7]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f6d2e3d7ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;8]" time="0.0004894733428955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f6d2e38f278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;9]" time="0.0007359981536865234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f6d2e38f9e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;10]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f6d3d6485c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;11]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f6d2e3750f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;12]" time="0.0004870891571044922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f6d2e36c470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;13]" time="0.0004742145538330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f6d2e360c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;14]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f6d2e380390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;15]" time="0.0004932880401611328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f6d2e38fb38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;16]" time="0.0004830360412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f6d2e38f0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;17]" time="0.0007808208465576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f6d2e399048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;18]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f6d2e38f8d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;19]" time="0.0004951953887939453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f6d2e3809e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;20]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f6d3d656c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;21]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f6d2e36c470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;22]" time="0.0005044937133789062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f6d3d6387b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;23]" time="0.0004849433898925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f6d2e3d7a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;24]" time="0.0004975795745849609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f6d2e399160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;25]" time="0.0008275508880615234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f6d2e399668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;26]" time="0.0004968643188476562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f6d3d5ec668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;27]" time="0.0004887580871582031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f6d2e375908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;28]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f6d2e36cda0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;29]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f6d2e380ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;30]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f6d2e38f7f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;31]" time="0.0004889965057373047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f6d2e38f0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;32]" time="0.0005002021789550781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f6d2e3992e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;33]" time="0.0007269382476806641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f6d2e399c88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;34]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f6d2e38fd68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;35]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f6d2e380ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;36]" time="0.0005092620849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f6d2e375a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;37]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f6d2e3d70f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;38]" time="0.0004811286926269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f6d3d5eca58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;39]" time="0.0004870891571044922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f6d2e399198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;40]" time="0.0004899501800537109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f6d2e3994e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;41]" time="0.0009474754333496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f6d2e3242e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="154" name="test_volumes_inverse_shape[&lt;lambda&gt;42]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:154: &lt;py._xmlgen.raw object at 0x7f6d2e399a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;0]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f6d3d5eca58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;1]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f6d3d624320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;2]" time="0.00048661231994628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f6d2e36cda0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;3]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f6d3d656c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;4]" time="0.0005428791046142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f6d2e38fe80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;5]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f6d2e324160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;6]" time="0.0007200241088867188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f6d2e324908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;7]" time="0.0004990100860595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f6d2e38f4a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;8]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f6d2e375978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;9]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f6d2e3d76a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;10]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f6d3d5ec278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;11]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f6d2e399940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;12]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f6d2e324a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;13]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f6d2e324438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;14]" time="0.0009982585906982422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f6d2e324f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;15]" time="0.0004830360412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f6d2e36c470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;16]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f6d3d5fe470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;17]" time="0.0005369186401367188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f6d2e324da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;18]" time="0.0005078315734863281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f6d2e3249e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;19]" time="0.0004780292510986328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f6d2e399ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;20]" time="0.00047087669372558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f6d2e399cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;21]" time="0.00047588348388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f6d2e38f898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;22]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f6d2e380d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;23]" time="0.0007576942443847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f6d2e38f9e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;24]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f6d3d648da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;25]" time="0.0005090236663818359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f6d2e399da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;26]" time="0.0004925727844238281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f6d2e3249e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;27]" time="0.00046515464782714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f6d2e324c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;28]" time="0.0005059242248535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f6d3d624668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;29]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f6d2e36c470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;30]" time="0.00046896934509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f6d2e3d76a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;31]" time="0.0008246898651123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f6d2e3cafd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;32]" time="0.0005109310150146484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f6d3d611668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;33]" time="0.0004870891571044922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f6d3d5fe278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;34]" time="0.0005333423614501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f6d2e324710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;35]" time="0.0005199909210205078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f6d2e399c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;36]" time="0.0004978179931640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f6d3d621710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;37]" time="0.0005047321319580078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f6d2e38f128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;38]" time="0.00048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f6d2e336470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;39]" time="0.0008070468902587891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f6d2e3369b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;40]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f6d3d621320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;41]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f6d2e399c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="160" name="test_volumes_inverse_values[&lt;lambda&gt;42]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:160: &lt;py._xmlgen.raw object at 0x7f6d2e3249e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;0]" time="0.0004801750183105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f6d2e375ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;1]" time="0.0004878044128417969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f6d3d611860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;2]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f6d2e3364e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;3]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f6d2e336358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;4]" time="0.0009121894836425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f6d2e336ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;5]" time="0.00047397613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f6d2e336da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;6]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f6d2e3364e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;7]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f6d3d6113c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;8]" time="0.0005168914794921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f6d2e324be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;9]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f6d2e3992e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;10]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f6d3d621b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;11]" time="0.000476837158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f6d2e38f4a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;12]" time="0.0007772445678710938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f6d2e33d550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;13]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f6d3d621e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;14]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f6d3d5b1f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;15]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f6d2e324400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;16]" time="0.0005207061767578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f6d3d611f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;17]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f6d2e3367b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;18]" time="0.0004951953887939453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f6d2e336c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;19]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f6d2e33d0b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;20]" time="0.0008609294891357422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f6d2e33db70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;21]" time="0.0004944801330566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f6d2e3367b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;22]" time="0.00047588348388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f6d3d656b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;23]" time="0.0004742145538330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f6d2e3242b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;24]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f6d3d624278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;25]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f6d3d5c7128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;26]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f6d2e33d278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;27]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f6d2e33d320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;28]" time="0.0007226467132568359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f6d2e3471d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;29]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f6d2e33d710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;30]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f6d3d6211d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;31]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f6d2e38fb38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;32]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f6d3d5b1b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;33]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f6d3d6115c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;34]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f6d2e336390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;35]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f6d2e347048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;36]" time="0.0007333755493164062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f6d2e3477f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;37]" time="0.00047707557678222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f6d2e3361d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;38]" time="0.0004911422729492188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f6d2e3249e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;39]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f6d3d624278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;40]" time="0.000518798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f6d3d5c7518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;41]" time="0.0004935264587402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f6d2e33dc88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="168" name="test_unit_outer_normals_shape[&lt;lambda&gt;42]" time="0.00048232078552246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:168: &lt;py._xmlgen.raw object at 0x7f6d2e347518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;0]" time="0.0004801750183105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f6d2e347048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;1]" time="0.0007500648498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f6d2e347e10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;2]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f6d2e33dda0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;3]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f6d3d5c79b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;4]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f6d3d5b1da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;5]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f6d2e324be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;6]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f6d3d5d85c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;7]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f6d2e347b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;8]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f6d2e3478d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;9]" time="0.0007116794586181641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f6d2e351470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;10]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f6d2e347940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;11]" time="0.0004911422729492188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f6d2e336240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;12]" time="0.0005102157592773438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f6d2e324710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;13]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f6d2e399a90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;14]" time="0.0004906654357910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f6d2e33d1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;15]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f6d3d56c710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;16]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f6d2e3512e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;17]" time="0.0007724761962890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f6d2e351a90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;18]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f6d2e33de48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;19]" time="0.0004773139953613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f6d3d5c7710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;20]" time="0.0004949569702148438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f6d3d6117b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;21]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f6d2e336c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;22]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f6d2e347940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;23]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f6d2e351c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;24]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f6d2e351160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;25]" time="0.00098419189453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f6d2e35a0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;26]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f6d3d5c79b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;27]" time="0.00048732757568359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f6d3d56c9b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;28]" time="0.0005056858062744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f6d2e3515f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;29]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f6d2e351b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;30]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f6d2e347908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;31]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f6d2e3477b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;32]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f6d2e33dba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;33]" time="0.0004909038543701172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f6d2e3369e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;34]" time="0.0007851123809814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f6d2e33d1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;35]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f6d3d648c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;36]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f6d2e347630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;37]" time="0.0004913806915283203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f6d2e351588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;38]" time="0.0005195140838623047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f6d3d56cef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;39]" time="0.0005133152008056641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f6d2e399668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;40]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f6d3d57e518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;41]" time="0.0004742145538330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f6d2e3ca6a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="174" name="test_unit_outer_normals_normed[&lt;lambda&gt;42]" time="0.0008890628814697266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:174: &lt;py._xmlgen.raw object at 0x7f6d2e3d7908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;0]" time="0.00048065185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f6d3d57e470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;1]" time="0.0004925727844238281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f6d3d56cfd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;2]" time="0.0004901885986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f6d2e351da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;3]" time="0.0004851818084716797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f6d2e351518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;4]" time="0.0004999637603759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f6d2e347550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;5]" time="0.0005705356597900391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f6d2e33d940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;6]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f6d2e35a5f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;7]" time="0.0007650852203369141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f6d2e35ab38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;8]" time="0.0004761219024658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f6d2e347cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;9]" time="0.0005288124084472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f6d2e351128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;10]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f6d3d56cf98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;11]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f6d3d58bda0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;12]" time="0.0005004405975341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f6d3d57e7b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;13]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f6d2e35a898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;14]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f6d2e35a198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;15]" time="0.0007050037384033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f6d2e2ea0b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;16]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f6d2e35a518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;17]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f6d2e35a828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;18]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f6d2e36c470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;19]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f6d3d56c9b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;20]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f6d2e351390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;21]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f6d2e347080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;22]" time="0.0005083084106445312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f6d2e2ea1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;23]" time="0.0008449554443359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f6d2e2ea6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;24]" time="0.0004773139953613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f6d2e347e80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;25]" time="0.0004973411560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f6d3d5a09b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;26]" time="0.0006220340728759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f6d3d56cf98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;27]" time="0.0006062984466552734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f6d3d57eb00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;28]" time="0.0005159378051757812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f6d2e35a470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;29]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f6d3d6ed128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;30]" time="0.00048470497131347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f6d2e2ea198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;31]" time="0.0008089542388916016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f6d2e2eacf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;32]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f6d2e35a5f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;33]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f6d3d57e470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;34]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f6d3d5a0cf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;35]" time="0.0005195140838623047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f6d2e3519b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;36]" time="0.0005030632019042969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f6d2e347048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;37]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f6d2e2ea1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;38]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f6d2e2ea588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;39]" time="0.0007560253143310547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f6d2e2f5358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;40]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f6d2e2eabe0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;41]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f6d3d648ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="180" name="test_unit_outer_normals_normal[&lt;lambda&gt;42]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:180: &lt;py._xmlgen.raw object at 0x7f6d3d531470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;0]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f6d3d5a0320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;1]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f6d3d5c7e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;2]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f6d2e35a9e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;3]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f6d2e2f51d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;4]" time="0.0007169246673583984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f6d2e2f5978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;5]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f6d3d57e5c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;6]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f6d3d56cba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;7]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f6d3d5318d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;8]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f6d2e33d550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;9]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f6d2e2ea1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;10]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f6d2e2f5550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;11]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f6d2e2f54e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;12]" time="0.0007085800170898438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f6d2e2f5f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;13]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f6d2e2f5828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;14]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f6d2e2eab00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;15]" time="0.0004761219024658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f6d2e33de48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;16]" time="0.0004930496215820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f6d3d5318d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;17]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f6d2e324198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;18]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f6d3d57e5c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;19]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f6d2e3010b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;20]" time="0.000713348388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f6d2e3015f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;21]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f6d3d546ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;22]" time="0.0004913806915283203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f6d2e3d7908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;23]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f6d2e351390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;24]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f6d2e2ea7b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;25]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f6d2e2f5080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;26]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f6d2e2f54e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;27]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f6d2e301278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;28]" time="0.0007417201995849609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f6d2e301c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;29]" time="0.0004889965057373047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f6d2e2f5080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;30]" time="0.0004792213439941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f6d2e2ea828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;31]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f6d3d5a0278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;32]" time="0.0005002021789550781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f6d3d546da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;33]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f6d2e35a198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;34]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f6d2e3010f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;35]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f6d2e301470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;36]" time="0.0010056495666503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f6d2e30b278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;37]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f6d3d5587b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;38]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f6d3d5a0710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;39]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f6d2e301438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;40]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f6d2e301cf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;41]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f6d2e2f5ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="189" name="test_unit_outer_normals_neighbours[&lt;lambda&gt;42]" time="0.0004901885986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:189: &lt;py._xmlgen.raw object at 0x7f6d2e2f5390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;0]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f6d2e2ea710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;1]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f6d2e35ab38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;2]" time="0.0007812976837158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f6d3d4e90f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;3]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f6d2e3600b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;4]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f6d2e2f5ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;5]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f6d2e301cf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;6]" time="0.0004987716674804688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f6d2e301320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;7]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f6d3d5469b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;8]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f6d3d558710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;9]" time="0.0004782676696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f6d2e336fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;10]" time="0.0007314682006835938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f6d3d638b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;11]" time="0.000507354736328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f6d3d558518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;12]" time="0.0005009174346923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f6d3d546ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;13]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f6d2e301e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;14]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f6d2e2f5dd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;15]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f6d2e2ea748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;16]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f6d3d4e9c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;17]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f6d2e30b780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;18]" time="0.0007321834564208984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f6d2e30bcc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;19]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f6d2e347b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;20]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f6d2e301358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;21]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f6d2e3017b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;22]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f6d3d4fe860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;23]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f6d3d558710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;24]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f6d2e30ba20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;25]" time="0.0004820823669433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f6d2e30b080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;26]" time="0.000728607177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f6d2e317240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;27]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f6d2e30b0b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;28]" time="0.0004963874816894531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f6d3d5318d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;29]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f6d3d4fe9b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;30]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f6d2e301780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;31]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f6d2e2f57f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;32]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f6d2e2ea588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;33]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f6d2e3170f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;34]" time="0.0007290840148925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f6d2e317860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;35]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f6d2e2f5dd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;36]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f6d2e301da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;37]" time="0.00047516822814941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f6d3d4feef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;38]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f6d3d558e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;39]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f6d2e30b9b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;40]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f6d2e317908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;41]" time="0.0005002021789550781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f6d2e317358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="202" name="test_centers_wrong_arguments[&lt;lambda&gt;42]" time="0.0007224082946777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:202: &lt;py._xmlgen.raw object at 0x7f6d2e317e80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;0]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f6d2e317390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;1]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f6d2e30b0b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;2]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f6d2e30ba90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;3]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f6d3d4fea58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;4]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f6d2e301780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;5]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f6d2e2ea550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;6]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f6d3d50e128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;7]" time="0.0006868839263916016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f6cfe9314e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;8]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f6d2e2ea550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;9]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f6d3d5a07b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;10]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f6d3d4fec50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;11]" time="0.0004799365997314453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f6d2e30b5f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;12]" time="0.0005376338958740234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f6d2e3170b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;13]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f6d2e317cf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;14]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f6cfe9313c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;15]" time="0.0007777214050292969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f6cfe931b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;16]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f6d2e3175c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;17]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f6d2e30bd68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;18]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f6d3d558470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;19]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f6d2e351390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;20]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f6d2e2f5320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;21]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f6cfe9317f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;22]" time="0.0004711151123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f6cfe931198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;23]" time="0.0007412433624267578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f6cfe93a160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;24]" time="0.00048422813415527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f6cfe931240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;25]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f6cfe931be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;26]" time="0.0004851818084716797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f6d2e301358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;27]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f6d3d5587b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;28]" time="0.0004966259002685547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f6d2e317668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;29]" time="0.0004863739013671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f6d2e317d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;30]" time="0.000492095947265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f6cfe93a1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;31]" time="0.0007255077362060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f6cfe93a780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;32]" time="0.0004818439483642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f6d2e317be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;33]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f6d2e30b9b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;34]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f6d3d4e9ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;35]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f6cfe9316a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;36]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f6cfe931908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;37]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f6d3d50e5c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;38]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f6cfe93a2b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;39]" time="0.0007252693176269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f6cfe93ada0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;40]" time="0.0004780292510986328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f6cfe931f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;41]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f6cfe931198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="210" name="test_centers_shape[&lt;lambda&gt;42]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:210: &lt;py._xmlgen.raw object at 0x7f6d3d5a0a58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;0]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f6d2e30bb00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;1]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f6d3d521470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;2]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f6cfe93a1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;3]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f6cfe93a630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;4]" time="0.0010035037994384766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f6cfe946400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;5]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f6d2e301780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;6]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f6cfe93a390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;7]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f6cfe93aa58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;8]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f6d3d521f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;9]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f6cfe931198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;10]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f6d2e317320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;11]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f6d2e317240&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;12]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f6d2e30b400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;13]" time="0.0007104873657226562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f6d2e38f9e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;14]" time="0.00047588348388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f6d2e317320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;15]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f6cfe931be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;16]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f6cfe93a668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;17]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f6cfe93a908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;18]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f6d3d4b2278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;19]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f6d3d4c1da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;20]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f6d2e35a208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;21]" time="0.0007040500640869141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f6d3d4fe128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;22]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f6d3d4c1cf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;23]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f6cfe93a470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;24]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f6cfe93a668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;25]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f6cfe9314e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;26]" time="0.00047850608825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f6d2e317cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;27]" time="0.0004792213439941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f6d2e38fb38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;28]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f6cfe946908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;29]" time="0.0007278919219970703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f6cfe946e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;30]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f6d2e317898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;31]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f6cfe931390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;32]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f6cfe93a128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;33]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f6d3d4b2518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;34]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f6d2e2f54e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;35]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f6cfe946ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;36]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f6cfe946208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;37]" time="0.0007166862487792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f6cfe9553c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;38]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f6cfe946668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;39]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f6d2e2f5fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;40]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f6d3d4b2e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;41]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f6cfe93a470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="216" name="test_centers_values[&lt;lambda&gt;42]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:216: &lt;py._xmlgen.raw object at 0x7f6d2e317b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;0]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f6d3d4d8908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;1]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f6cfe955278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;2]" time="0.000789642333984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f6cfe9559e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;3]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f6d2e317e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;4]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f6cfe93aba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;5]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f6d3d4c1da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;6]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f6d3d467668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;7]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f6cfe946748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;8]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f6cfe955b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;9]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f6cfe955080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;10]" time="0.0007588863372802734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f6cfe95f048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;11]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f6cfe9556a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;12]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f6cfe946940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;13]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f6d3d4673c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;14]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f6d3d4c1da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;15]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f6cfe93af60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;16]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f6d2e317b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;17]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f6cfe95f160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;18]" time="0.001056671142578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f6cfe95f668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;19]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f6d3d4d8b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;20]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f6cfe93a2b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;21]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f6d3d4b2908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;22]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f6cfe946f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;23]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f6cfe9555c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;24]" time="0.0004932880401611328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f6cfe955b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;25]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f6cfe95f2e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;26]" time="0.0008056163787841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f6cfe95fc88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;27]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f6cfe955198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;28]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f6cfe946ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;29]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f6d3d4b2860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;30]" time="0.0004944801330566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f6cfe931dd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;31]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f6d3d47ce48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;32]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f6cfe95f198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;33]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f6cfe95f4e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;34]" time="0.0007393360137939453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f6cfe9692e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;35]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f6cfe95fa58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;36]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f6d3d47ccf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;37]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f6cfe93a908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;38]" time="0.00048613548278808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f6d3d521f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;39]" time="0.0005087852478027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f6d3d48ea58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;40]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f6cfe9550f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;41]" time="0.00046896934509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f6cfe969160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="223" name="test_diameters_wrong_arguments[&lt;lambda&gt;42]" time="0.0007402896881103516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:223: &lt;py._xmlgen.raw object at 0x7f6cfe969908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;0]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f6d3d48e1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;1]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f6d3d467470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;2]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f6d2e301358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;3]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f6d3d47cf98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;4]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f6cfe95f940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;5]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f6cfe969a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;6]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f6cfe969438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;7]" time="0.0008060932159423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f6cfe969f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;8]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f6cfe969a90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;9]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f6cfe95fba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;10]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f6d2e317e80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;11]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f6d3d4d8e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;12]" time="0.00041937828063964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f6cfe9469b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;13]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f6d3d49ff60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;14]" time="0.0004143714904785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f6cfe8f6048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;15]" time="0.0009665489196777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f6cfe8f6588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;16]" time="0.0004932880401611328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f6d3d4c1da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;17]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f6d3d4332e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;18]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f6cfe9696d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;19]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f6cfe9698d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;20]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f6cfe95f748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;21]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f6d2e2ea588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;22]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f6d2e38fb38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;23]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f6cfe946160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;24]" time="0.000736236572265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f6d3d4fe518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;25]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f6d3d47c320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;26]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f6cfe95feb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;27]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f6cfe969c88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;28]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f6cfe969470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;29]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f6d3d433198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;30]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f6cfe931a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;31]" time="0.0004811286926269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f6d3d4d8278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;32]" time="0.0007894039154052734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f6d2e30b780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;33]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f6d3d48ee48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;34]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f6cfe93a898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;35]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f6cfe969fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;36]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f6cfe95f4a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;37]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f6cfe955470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;38]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f6cfe8f6630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;39]" time="0.0005023479461669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f6cfe8f6a90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;40]" time="0.0007410049438476562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f6cfe8f6fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;41]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f6cfe8f67f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="231" name="test_diameters_shape[&lt;lambda&gt;42]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:231: &lt;py._xmlgen.raw object at 0x7f6cfe9559b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;0]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f6cfe95fba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;1]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f6cfe969c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;2]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f6d3d4414e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;3]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f6d3d49fe10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;4]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f6d2e30bc88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;5]" time="0.0007333755493164062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f6cfe902550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;6]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f6d3d433f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;7]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f6cfe969a90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;8]" time="0.0004253387451171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f6d3d456748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;9]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f6cfe95fba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;10]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f6cfe8f6c88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;11]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f6cfe8f6b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;12]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f6cfe902470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;13]" time="0.0007965564727783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f6cfe902b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;14]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f6cfe955e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;15]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f6cfe95f2e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;16]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f6d3d4c1da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;17]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f6d3d4412e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;18]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f6d3d48e3c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;19]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f6cfe902898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;20]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f6cfe902320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;21]" time="0.0007278919219970703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f6cfe90e1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;22]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f6cfe902358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;23]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f6cfe902c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;24]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f6d3d441630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;25]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f6d3d4c1da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;26]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f6cfe95f160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;27]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f6cfe8f6b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;28]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f6cfe90e048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;29]" time="0.0007748603820800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f6cfe90e7f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;30]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f6cfe9555f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;31]" time="0.00041174888610839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f6d3d4564a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;32]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f6d3d441588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;33]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f6cfe902c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;34]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f6cfe902eb8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;35]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f6cfe90e518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;36]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f6cfe90e048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;37]" time="0.0006804466247558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f6cfe90ee10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;38]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f6d3d50e470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;39]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f6cfe9026d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;40]" time="0.0005054473876953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f6cfe9692e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;41]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f6d3d4564a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="237" name="test_diameters_non_negative[&lt;lambda&gt;42]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:237: &lt;py._xmlgen.raw object at 0x7f6cfe8f6cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;0]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f6cfe90eb70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;1]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f6cfe90e8d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;2]" time="0.0007238388061523438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f6cfe917470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;3]" time="0.0004112720489501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f6cfe90eac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;4]" time="0.0004162788391113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f6cfe8f6048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;5]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f6d3d441630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;6]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f6cfe969c88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;7]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f6cfe902940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;8]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f6d3d3e84a8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;9]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f6cfe9172e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;10]" time="0.0007174015045166016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f6cfe917a90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;11]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f6cfe902c88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;12]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f6d3d48e908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;13]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f6d3d456dd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;14]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f6d3d47c470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;15]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f6cfe90e9b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;16]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f6cfe917c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;17]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f6cfe917160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;18]" time="0.0006804466247558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f6cfe9220f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;19]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f6cfe917390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;20]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f6cfe90e908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;21]" time="0.0004253387451171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f6d3d3f9ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;22]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f6d3d456be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;23]" time="0.0005040168762207031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f6cfe9020b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;24]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f6d3d3e8d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;25]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f6cfe922208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;26]" time="0.001024484634399414"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f6cfe922710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;27]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f6d3d48e908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;28]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f6d3d433630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;29]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f6cfe9172b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;30]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f6cfe917438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;31]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f6cfe90e0f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;32]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f6cfe90e1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;33]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f6cfe93a908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;34]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f6cfe8f6438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;35]" time="0.00070953369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f6cfe8f6358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;36]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f6cfe902630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;37]" time="0.0004878044128417969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f6cfe90ecf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;38]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f6cfe917a90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;39]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f6cfe917908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;40]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f6d3d4b2e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;41]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f6d3d40d320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="243" name="test_diameters_values[&lt;lambda&gt;42]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:243: &lt;py._xmlgen.raw object at 0x7f6cfe9227f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;0]" time="0.0007023811340332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f6cfe946e10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;1]" time="0.0004105567932128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f6d3d48e9b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;2]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f6d3d3e8208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;3]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f6cfe917390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;4]" time="0.0004112720489501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f6cfe90e550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;5]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f6cfe902668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;6]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f6cfe9227b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;7]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f6cfe922c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;8]" time="0.0006964206695556641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f6cfe36f198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;9]" time="0.0004210472106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f6cfe922c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;10]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f6d3d41d470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;11]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f6cfe90e908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;12]" time="0.00041365623474121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f6cfe917390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;13]" time="0.0004131793975830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f6d3d3e8c88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;14]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f6d3d40d278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;15]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f6cfe36f080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;16]" time="0.0007007122039794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f6cfe36f6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;17]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f6d3d3afc18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;18]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f6d3d3e8c88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;19]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f6d3d4e9f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;20]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f6cfe902630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;21]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f6cfe9223c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;22]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f6cfe8f6908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;23]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f6cfe36f048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;24]" time="0.0007078647613525391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f6cfe36fcf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;25]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f6cfe9220f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;26]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f6cfe90ec88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;27]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f6cfe917b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;28]" time="0.000484466552734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f6d3d3e8400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;29]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f6d3d40dfd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;30]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f6cfe36f9b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;31]" time="0.0004849433898925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f6cfe36f5c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;32]" time="0.0007574558258056641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f6cfe37a358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;33]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f6cfe36f4e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;34]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f6d3d40d710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;35]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f6d3d456be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;36]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f6d3d3bf6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;37]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f6cfe90e940&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;38]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f6cfe922e80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;39]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f6cfe37a1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;40]" time="0.0007250308990478516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f6cfe37a978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;41]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f6cfe902668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="250" name="test_quadrature_points_wrong_arguments[&lt;lambda&gt;42]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:250: &lt;py._xmlgen.raw object at 0x7f6d3d3bf630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;0]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f6cfe917390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;1]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f6d3d433630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;2]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f6cfe36f080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;3]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f6cfe37a550&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;4]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f6cfe37a4e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;5]" time="0.0009918212890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f6cfe37af98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;6]" time="0.0005080699920654297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f6cfe37a828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;7]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f6cfe36fe80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;8]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f6d3d40df98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;9]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f6d3d3af4e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;10]" time="0.00048804283142089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f6cfe90ee10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;11]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f6cfe902668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;12]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f6cfe3860b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;13]" time="0.0007016658782958984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f6cfe3865f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;14]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f6d3d3bf780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;15]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f6cfe917dd8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;16]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f6d3d40d710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;17]" time="0.0004169940948486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f6cfe36f588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;18]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f6cfe37aa90&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;19]" time="0.00041675567626953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f6cfe37a048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;20]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f6cfe386278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;21]" time="0.0008099079132080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f6cfe386c18&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;22]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f6cfe37a278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;23]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f6cfe36fb38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;24]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f6d3d3e8d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;25]" time="0.0004761219024658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f6cfe9175f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;26]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f6cfe922b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;27]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f6cfe3860f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;28]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f6cfe386470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;29]" time="0.0007481575012207031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f6cfe390278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;30]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f6cfe386358&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;31]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f6cfe922898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;32]" time="0.0004813671112060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f6d3d3d1f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;33]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f6d3d3e8c88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;34]" time="0.00047707557678222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f6d3d367c88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;35]" time="0.0004801750183105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f6cfe37a518&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;36]" time="0.0005383491516113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f6cfe3900f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;37]" time="0.0010025501251220703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f6cfe390898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;38]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f6d3d3af6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;39]" time="0.0005080699920654297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f6d3d3785f8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;40]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f6cfe386c88&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;41]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f6cfe3860b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="265" name="test_quadrature_points_shape[&lt;lambda&gt;42]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:265: &lt;py._xmlgen.raw object at 0x7f6cfe37a898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;0]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f6cfe36fb38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;1]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f6cfe922908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;2]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f6cfe8f6400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;3]" time="0.0007746219635009766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f6cfe922390&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;4]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f6cfe36f4e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;5]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f6cfe37a048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;6]" time="0.0005049705505371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f6cfe386b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;7]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f6d3d378898&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;8]" time="0.0004930496215820312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f6d3d3d1320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;9]" time="0.0005199909210205078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f6d3d3670b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;10]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f6cfe390588&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;11]" time="0.0007712841033935547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f6cfe8f6cc0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;12]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f6d3d3bf6d8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;13]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f6cfe386e10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;14]" time="0.0004947185516357422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f6cfe386ef0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;15]" time="0.00047898292541503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f6cfe95fba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;16]" time="0.0004773139953613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f6d3d38aa58&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;17]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f6cfe390978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;18]" time="0.0004897117614746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f6cfe390da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;19]" time="0.00079345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f6cfe3a0320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;20]" time="0.0005004405975341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f6cfe390b70&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;21]" time="0.0004780292510986328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f6d3d38a710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;22]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f6cfe946e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;23]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f6d3d3782b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;24]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f6cfe386f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;25]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f6d3d367748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;26]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f6cfe3a0208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;27]" time="0.0008440017700195312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f6cfe3a0860&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;28]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f6cfe3860f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;29]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f6d3d378208&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;30]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f6cfe946e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;31]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f6cfe390ac8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;32]" time="0.00047707557678222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f6cfe390e48&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;33]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f6cfe3a0470&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;34]" time="0.0004923343658447266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f6cfe3a0080&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;35]" time="0.0009510517120361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f6cfe3a0e80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;36]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f6cfe3a00f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;37]" time="0.0004680156707763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f6d3d39c908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;38]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f6cfe390438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;39]" time="0.00051116943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f6d3d38a908&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;40]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f6cfe37ae80&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;41]" time="0.0004203319549560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f6cfe386b38&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="275" name="test_quadrature_points_values[&lt;lambda&gt;42]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:275: &lt;py._xmlgen.raw object at 0x7f6cfe90ee10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;0]" time="0.0007345676422119141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f6cfe3a84e0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;1]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f6cfe386f60&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;2]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f6cfe37a320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;3]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f6cfe3906a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;4]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f6d3d39c5c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;5]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f6cfe3a0f98&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;6]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f6cfe3a0cf8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;7]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f6cfe3a83c8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;8]" time="0.0008072853088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f6cfe3a8b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;9]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f6cfe3a0be0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;10]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f6d3d39c5c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;11]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f6cfe390fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;12]" time="0.00048422813415527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f6cfe37a630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;13]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f6d3d41d1d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;14]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f6cfe3a87f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;15]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f6cfe3a8198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;16]" time="0.0007367134094238281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f6cfe334160&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;17]" time="0.0004787445068359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f6cfe3a8198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;18]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f6cfe3a86a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;19]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f6cfe386d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;20]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f6cfe390c50&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;21]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f6d3d39c7b8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;22]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f6cfe3a0128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;23]" time="0.00047516822814941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f6cfe3341d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;24]" time="0.0007205009460449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f6cfe334780&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;25]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f6cfe3a0048&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;26]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f6d3d39cfd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;27]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f6cfe390b00&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;28]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f6cfe386278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;29]" time="0.00041556358337402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f6cfe3a8828&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;30]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f6d3d32c128&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;31]" time="0.0004813671112060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f6cfe3342b0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;32]" time="0.0007429122924804688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f6cfe334da0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;33]" time="0.00041413307189941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f6cfe3a89e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;34]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f6d3d367fd0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;35]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f6cfe390ba8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;36]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f6cfe3a0438&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;37]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f6d3d3412e8&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;38]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f6cfe3341d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;39]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f6cfe334630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;40]" time="0.0009388923645019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f6cfe341400&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;41]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f6cfe3341d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="288" name="test_bounding_box[&lt;lambda&gt;42]" time="0.0004096031188964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:288: &lt;py._xmlgen.raw object at 0x7f6d3d341e10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;0]" time="0.0004200935363769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f6d3d39c5c0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;1]" time="0.00041484832763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f6cfe36fe10&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;2]" time="0.0004134178161621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f6d3d3520f0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;3]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f6cfe3a8198&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;4]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f6cfe341278&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;5]" time="0.0009493827819824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f6cfe341a20&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;6]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f6d3d3e8d30&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;7]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f6d3d341630&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;8]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f6cfe334978&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;9]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f6cfe334748&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;10]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f6cfe3a86a0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;11]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f6cfe3a0f28&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;12]" time="0.0004253387451171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f6cfe390668&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;13]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f6cfe9228d0&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;14]" time="0.0007596015930175781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f6cfe390320&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;15]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f6cfe3a0d68&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;16]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f6cfe3a8710&gt;</skipped></testcase><testcase classname="src.pymortests.affine_grid" file="src/pymortests/affine_grid.py" line="297" name="test_orthogonal_centers[&lt;lambda&gt;17]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/affine_grid.py:297: &lt;py._xmlgen.raw object at 0x7f6cfe3344e0&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem0]" time="0.0004889965057373047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f6d3d39cfd0&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem1]" time="0.0004711151123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f6d3d352390&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem2]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f6d3d2e32b0&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem3]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f6cfe341828&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem4]" time="0.0006926059722900391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f6d3d2e3a90&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem5]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f6d3d341b70&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem6]" time="0.0004143714904785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f6cfe334978&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem7]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f6cfe334748&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem8]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f6cfe3a8400&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem9]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f6cfe390ba8&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem10]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f6cfe341710&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem11]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f6cfe341f60&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem12]" time="0.0007655620574951172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f6cfe34f4e0&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem13]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f6cfe341240&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem14]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f6cfe3a0320&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="8" name="test_pickle[analytical_problem15]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:8: &lt;py._xmlgen.raw object at 0x7f6cfe3a84a8&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem0]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7f6cfe3341d0&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem1]" time="0.0004999637603759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7f6d35a27e80&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem2]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7f6d3d38acf8&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem3]" time="0.0005130767822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7f6cfe34f400&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem4]" time="0.0007226467132568359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7f6cfe34fa20&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem5]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7f6d35a27d30&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem6]" time="0.0004818439483642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7f6d35a37400&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem7]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7f6cfe3a8518&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem8]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7f6cfe3a0320&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem9]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7f6cfe341860&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem10]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7f6cfe34fa90&gt;</skipped></testcase><testcase classname="src.pymortests.analyticalproblem" file="src/pymortests/analyticalproblem.py" line="12" name="test_pickle_without_dumps_function[picklable_analytical_problem11]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/analyticalproblem.py:12: &lt;py._xmlgen.raw object at 0x7f6cfe34f2b0&gt;</skipped></testcase><testcase classname="src.pymortests.basic" file="src/pymortests/basic.py" line="6" name="test_importable" time="0.0008108615875244141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/basic.py:6: &lt;py._xmlgen.raw object at 0x7f6cfe3590b8&gt;</skipped></testcase><testcase classname="src.pymortests.block" file="src/pymortests/block.py" line="13" name="test_apply" time="0.0005292892456054688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/block.py:13: &lt;py._xmlgen.raw object at 0x7f6cfe34f048&gt;</skipped></testcase><testcase classname="src.pymortests.block" file="src/pymortests/block.py" line="39" name="test_apply_adjoint" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/block.py:39: &lt;py._xmlgen.raw object at 0x7f6cfe341be0&gt;</skipped></testcase><testcase classname="src.pymortests.block" file="src/pymortests/block.py" line="65" name="test_block_diagonal" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/block.py:65: &lt;py._xmlgen.raw object at 0x7f6cfe390b00&gt;</skipped></testcase><testcase classname="src.pymortests.block" file="src/pymortests/block.py" line="76" name="test_blk_diag_apply_inverse" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/block.py:76: &lt;py._xmlgen.raw object at 0x7f6cfe3a8cf8&gt;</skipped></testcase><testcase classname="src.pymortests.block" file="src/pymortests/block.py" line="98" name="test_blk_diag_apply_inverse_adjoint" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/block.py:98: &lt;py._xmlgen.raw object at 0x7f6d3d39c320&gt;</skipped></testcase><testcase classname="src.pymortests.cache.TestCache" file="src/pymortests/cache.py" line="57" name="test_runtime" time="0.0005567073822021484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/cache.py:57: &lt;py._xmlgen.raw object at 0x7f6d3d3528d0&gt;</skipped></testcase><testcase classname="src.pymortests.cache.TestCache" file="src/pymortests/cache.py" line="83" name="test_region_api" time="0.00047969818115234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/cache.py:83: &lt;py._xmlgen.raw object at 0x7f6cfe359240&gt;</skipped></testcase><testcase classname="src.pymortests.complex_values" file="src/pymortests/complex_values.py" line="11" name="test_complex" time="0.0008625984191894531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/complex_values.py:11: &lt;py._xmlgen.raw object at 0x7f6cfe359780&gt;</skipped></testcase><testcase classname="src.pymortests.complex_values" file="src/pymortests/complex_values.py" line="65" name="test_real_imag" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/complex_values.py:65: &lt;py._xmlgen.raw object at 0x7f6d35a37f98&gt;</skipped></testcase><testcase classname="src.pymortests.complex_values" file="src/pymortests/complex_values.py" line="82" name="test_scal" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/complex_values.py:82: &lt;py._xmlgen.raw object at 0x7f6cfe3341d0&gt;</skipped></testcase><testcase classname="src.pymortests.complex_values" file="src/pymortests/complex_values.py" line="95" name="test_axpy" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/complex_values.py:95: &lt;py._xmlgen.raw object at 0x7f6cfe390ba8&gt;</skipped></testcase><testcase classname="src.pymortests.complex_values" file="src/pymortests/complex_values.py" line="107" name="test_dot" time="0.0004832744598388672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/complex_values.py:107: &lt;py._xmlgen.raw object at 0x7f6cfe341c88&gt;</skipped></testcase><testcase classname="src.pymortests.complex_values" file="src/pymortests/complex_values.py" line="114" name="test_pairwise_dot" time="0.0004799365997314453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/complex_values.py:114: &lt;py._xmlgen.raw object at 0x7f6cfe34f1d0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic:&apos;0 0 0 0&apos;]" time="0.0005397796630859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f6cfe359470&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic:&apos;1 2 0 3&apos;]" time="0.0004978179931640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f6cfe359240&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic:&apos;--rect 1 2 0 3&apos;]" time="0.0007877349853515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f6cfe359dd8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic:&apos;0 0 2 1&apos;]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f6cfe34fa90&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic:&apos;--fv 0 0 0 0&apos;]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f6cfe341ac8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic:&apos;--fv 1 2 0 3&apos;]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f6cfe3a0ef0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic:&apos;--fv --rect 1 2 0 3&apos;]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f6d3d367898&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic:&apos;--fv 0 0 2 1&apos;]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f6d35a37fd0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic2:&apos;1 20&apos;]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f6cfe359ba8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic2:&apos;--fv 1 20&apos;]" time="0.000537872314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f6cfe3598d0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic_oned:&apos;1 20&apos;]" time="0.0007464885711669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f6cfe362438&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic_oned:&apos;--fv 1 20&apos;]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f6cfe359be0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[burgers:&apos;--num-flux=lax_friedrichs 0.1&apos;]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f6d35a37fd0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[burgers:&apos;--num-flux=engquist_osher 0.1&apos;]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f6cfe334f98&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[burgers:&apos;--num-flux=simplified_engquist_osher 0.1&apos;]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f6cfe3a8400&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[parabolic:&apos;heat 1&apos;]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f6cfe34ff28&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[parabolic:&apos;heat --rect 1&apos;]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f6d2c179ba8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[parabolic:&apos;heat --fv 1&apos;]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f6cfe3622e8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[parabolic:&apos;heat --rect --fv 1&apos;]" time="0.0007295608520507812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f6cfe362a58&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[parabolic:&apos;dar 1&apos;]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f6d2c166a90&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[parabolic:&apos;dar --rect 1&apos;]" time="0.00048804283142089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f6d35a89320&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[elliptic_unstructured:&apos;6.0 16 0.1&apos;]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f6cfe3341d0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock:&apos;--plot-solutions --plot-err --plot-error-sequence 2 2 3 5&apos;]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f6d35a37208&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock:&apos;--fenics 2 2 3 5&apos;]" time="0.0004878044128417969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f6cfe359be0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock:&apos;--greedy-without-estimator 3 1 2 5&apos;]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f6cfe362be0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock:&apos;--alg=pod 2 2 3 5&apos;]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f6cfe362048&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock:&apos;--alg=adaptive_greedy 2 2 10 30&apos;]" time="0.0007581710815429688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f6cfe2ec0b8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock:&apos;--alg=naive --reductor=traditional 2 2 10 5&apos;]" time="0.00048041343688964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f6cfe362908&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock_adaptive:&apos;10&apos;]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f6cfe3594a8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock_adaptive:&apos;--visualize-refinement 10&apos;]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f6d35a37fd0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock_simple:&apos;pymor naive 2 10 10&apos;]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f6cfe334f98&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock_simple:&apos;fenics greedy 2 10 10&apos;]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f6cfe34fba8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock_simple:&apos;ngsolve greedy 2 10 10&apos;]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f6d2c18f3c8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock_simple:&apos;pymor-text adaptive_greedy -1 3 3&apos;]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f6cfe2ec1d0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[thermalblock_gui:&apos;--testing 2 2 3 5&apos;]" time="0.0008075237274169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f6cfe2ec6d8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[burgers_ei:&apos;1 2 2 5 2 5 --plot-ei-err&apos;]" time="0.0004870891571044922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f6d2c18f9b0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[burgers_ei:&apos;1 2 2 5 2 5 --ei-alg=deim&apos;]" time="0.00048065185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f6cfe34fb00&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[parabolic_mor:&apos;pymor greedy 2 3 1&apos;]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f6d35bcd6d8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[parabolic_mor:&apos;pymor pod 2 3 1&apos;]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f6cfe359320&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[parabolic_mor:&apos;fenics adaptive_greedy 2 3 1&apos;]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f6cfe362be0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[heat:&apos;&apos;]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f6cfe362128&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[delay:&apos;&apos;]" time="0.00047087669372558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f6cfe2ec358&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[string_equation:&apos;&apos;]" time="0.0010192394256591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f6cfe2eccf8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[hapod:&apos;--snap=3 0.01 10 100&apos;]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f6cfe334f98&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[hapod:&apos;--snap=3 --threads=2 0.01 10 100&apos;]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f6d2c18f710&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="165" name="test_demos[hapod:&apos;--snap=3 --procs=2 0.01 10 100&apos;]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:165: &lt;py._xmlgen.raw object at 0x7f6cfe362208&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="171" name="test_analyze_pickle1" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:171: &lt;py._xmlgen.raw object at 0x7f6cfe3628d0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="181" name="test_analyze_pickle2" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:181: &lt;py._xmlgen.raw object at 0x7f6cfe359358&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="192" name="test_analyze_pickle3" time="0.00047516822814941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:192: &lt;py._xmlgen.raw object at 0x7f6cfe34fe80&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="203" name="test_analyze_pickle4" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:203: &lt;py._xmlgen.raw object at 0x7f6cfe341550&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic:&apos;0 0 0 0&apos;]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f6d2e30bc88&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic:&apos;1 2 0 3&apos;]" time="0.0007462501525878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f6cfe341588&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic:&apos;--rect 1 2 0 3&apos;]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f6d35bd9898&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic:&apos;0 0 2 1&apos;]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f6cfe359278&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic:&apos;--fv 0 0 0 0&apos;]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f6cfe362320&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic:&apos;--fv 1 2 0 3&apos;]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f6d2c166a90&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic:&apos;--fv --rect 1 2 0 3&apos;]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f6d35a37c50&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic:&apos;--fv 0 0 2 1&apos;]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f6d2c11c128&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic2:&apos;1 20&apos;]" time="0.0004799365997314453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f6cfe2ecc18&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic2:&apos;--fv 1 20&apos;]" time="0.0007512569427490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f6cfe3a8a20&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic_oned:&apos;1 20&apos;]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f6d2c18f668&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic_oned:&apos;--fv 1 20&apos;]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f6cfe362eb8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[burgers:&apos;--num-flux=lax_friedrichs 0.1&apos;]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f6d2c12fa20&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[burgers:&apos;--num-flux=engquist_osher 0.1&apos;]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f6cfe3595f8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[burgers:&apos;--num-flux=simplified_engquist_osher 0.1&apos;]" time="0.0005202293395996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f6cfe341ac8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[parabolic:&apos;heat 1&apos;]" time="0.0005028247833251953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f6cfe2ecb38&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[parabolic:&apos;heat --rect 1&apos;]" time="0.0005030632019042969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f6cfe2fc240&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[parabolic:&apos;heat --fv 1&apos;]" time="0.0010690689086914062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f6cfe2fc780&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[parabolic:&apos;heat --rect --fv 1&apos;]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f6cfe2ec208&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[parabolic:&apos;dar 1&apos;]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f6cfe359e10&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[parabolic:&apos;dar --rect 1&apos;]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f6d2c12f780&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[elliptic_unstructured:&apos;6.0 16 0.1&apos;]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f6cfe362c50&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock:&apos;--plot-solutions --plot-err --plot-error-sequence 2 2 3 5&apos;]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f6d35a37160&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock:&apos;--fenics 2 2 3 5&apos;]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f6cfe3a8a20&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock:&apos;--greedy-without-estimator 3 1 2 5&apos;]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f6cfe2fc128&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock:&apos;--alg=pod 2 2 3 5&apos;]" time="0.0007696151733398438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f6cfe2fccc0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock:&apos;--alg=adaptive_greedy 2 2 10 30&apos;]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f6d35a375f8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock:&apos;--alg=naive --reductor=traditional 2 2 10 5&apos;]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f6cfe362d30&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock_adaptive:&apos;10&apos;]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f6cfe3590b8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock_adaptive:&apos;--visualize-refinement 10&apos;]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f6d2c143780&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock_simple:&apos;pymor naive 2 10 10&apos;]" time="0.0005025863647460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f6cfe2ec710&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock_simple:&apos;fenics greedy 2 10 10&apos;]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f6cfe2fca20&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock_simple:&apos;ngsolve greedy 2 10 10&apos;]" time="0.0004961490631103516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f6cfe2fc358&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock_simple:&apos;pymor-text adaptive_greedy -1 3 3&apos;]" time="0.0008823871612548828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f6cfe304320&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[thermalblock_gui:&apos;--testing 2 2 3 5&apos;]" time="0.0004799365997314453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f6cfe2fc860&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[burgers_ei:&apos;1 2 2 5 2 5 --plot-ei-err&apos;]" time="0.0005002021789550781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f6cfe2ecf28&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[burgers_ei:&apos;1 2 2 5 2 5 --ei-alg=deim&apos;]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f6d2c1436d8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[parabolic_mor:&apos;pymor greedy 2 3 1&apos;]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f6cfe359be0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[parabolic_mor:&apos;pymor pod 2 3 1&apos;]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f6cfe362b00&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[parabolic_mor:&apos;fenics adaptive_greedy 2 3 1&apos;]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f6d2c11c278&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[heat:&apos;&apos;]" time="0.0004942417144775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f6cfe3041d0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[delay:&apos;&apos;]" time="0.0007691383361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f6cfe304940&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[string_equation:&apos;&apos;]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f6d2c12fa20&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[hapod:&apos;--snap=3 0.01 10 100&apos;]" time="0.0004734992980957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f6cfe341588&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[hapod:&apos;--snap=3 --threads=2 0.01 10 100&apos;]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f6d2c143e10&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="213" name="test_thermalblock_ipython[hapod:&apos;--snap=3 --procs=2 0.01 10 100&apos;]" time="0.00048732757568359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:213: &lt;py._xmlgen.raw object at 0x7f6cfe2ecfd0&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="227" name="test_thermalblock_results[thermalblock:&apos;--plot-solutions --plot-err --plot-error-sequence 2 2 3 5&apos;]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:227: &lt;py._xmlgen.raw object at 0x7f6cfe2fca20&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="227" name="test_thermalblock_results[thermalblock:&apos;--fenics 2 2 3 5&apos;]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:227: &lt;py._xmlgen.raw object at 0x7f6cfe304a58&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="227" name="test_thermalblock_results[thermalblock:&apos;--greedy-without-estimator 3 1 2 5&apos;]" time="0.0004942417144775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:227: &lt;py._xmlgen.raw object at 0x7f6cfe304390&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="227" name="test_thermalblock_results[thermalblock:&apos;--alg=pod 2 2 3 5&apos;]" time="0.0007996559143066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:227: &lt;py._xmlgen.raw object at 0x7f6cfe304f60&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="227" name="test_thermalblock_results[thermalblock:&apos;--alg=adaptive_greedy 2 2 10 30&apos;]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:227: &lt;py._xmlgen.raw object at 0x7f6cfe304710&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="227" name="test_thermalblock_results[thermalblock:&apos;--alg=naive --reductor=traditional 2 2 10 5&apos;]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:227: &lt;py._xmlgen.raw object at 0x7f6cfe2fc630&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="240" name="test_burgers_ei_results" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:240: &lt;py._xmlgen.raw object at 0x7f6cfe2ecdd8&gt;</skipped></testcase><testcase classname="src.pymortests.demos" file="src/pymortests/demos.py" line="249" name="test_parabolic_mor_results" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/demos.py:249: &lt;py._xmlgen.raw object at 0x7f6d2c143d68&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;0]" time="0.0005238056182861328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f6cfe362a90&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;1]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f6d2c12fd68&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;2]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f6cfe30f0b8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;3]" time="0.0007882118225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f6cfe30f5f8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;4]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f6d2c1512e8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;5]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f6cfe34f4a8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;6]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f6d2c143c18&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;7]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f6cfe2fcda0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;8]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f6cfe3044e0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;9]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f6cfe304048&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;10]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f6cfe30f080&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;11]" time="0.0007224082946777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f6cfe30fc18&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;12]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f6cfe3045c0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;13]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f6cfe2fc898&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;14]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f6d2c143e10&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;15]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f6d2e4e6278&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;16]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f6cfe3a0d30&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;17]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f6cfe30f0b8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;18]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f6cfe30f4a8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;19]" time="0.0008227825164794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f6cfe319278&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;20]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f6cfe30f198&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;21]" time="0.00046896934509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f6cfe3a0320&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;22]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f6d2c18ffd0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="13" name="test_pickle[&lt;lambda&gt;23]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:13: &lt;py._xmlgen.raw object at 0x7f6cfe341588&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;0]" time="0.0005066394805908203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f6cfe2fc4a8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;1]" time="0.00047898292541503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f6cfe304da0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;2]" time="0.0004811286926269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f6cfe3190f0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;3]" time="0.0007824897766113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f6cfe319898&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;4]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f6d2c143438&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;5]" time="0.00048470497131347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f6cfe359be0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;6]" time="0.00047707557678222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f6d27f5ea20&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;7]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f6d27f72b70&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;8]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f6cfe30fda0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;9]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f6cfe319978&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;10]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f6cfe319390&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;11]" time="0.0010075569152832031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f6cfe319eb8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;12]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f6d27f5ee10&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;13]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f6d35bd9898&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;14]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f6cfe319b70&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;15]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f6cfe319518&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;16]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f6cfe30f7b8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;17]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f6cfe30fbe0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;18]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f6cfe304c50&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;19]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f6cfe2fc160&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;20]" time="0.0007526874542236328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f6cfe304320&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="17" name="test_pickle_without_dumps_function[&lt;lambda&gt;21]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:17: &lt;py._xmlgen.raw object at 0x7f6cfe30f5f8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;0]" time="0.00041365623474121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f6cfe30ff60&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;1]" time="0.0004134178161621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f6cfe3193c8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;2]" time="0.0005671977996826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f6d2c143438&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;3]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f6d2c151ac8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;4]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f6d27f72240&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;5]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f6cfe2ec2b0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;6]" time="0.0007317066192626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f6cfe2ecf60&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;7]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f6d2c096390&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;8]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f6cfe359be0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;9]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f6cfe319a90&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;10]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f6cfe319518&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;11]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f6cfe30fc88&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;12]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f6cfe304e10&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;13]" time="0.0005300045013427734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f6cfe32a400&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;14]" time="0.0007731914520263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f6cfe32a940&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;15]" time="0.0005445480346679688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f6cfe30fa20&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;16]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f6d2c0a7320&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;17]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f6cfe319128&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;18]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f6d2c18fef0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;19]" time="0.00047898292541503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f6d27f72240&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;20]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f6cfe32a4e0&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;21]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f6cfe32a2e8&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;22]" time="0.0008087158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f6cfe32ae80&gt;</skipped></testcase><testcase classname="src.pymortests.discretization" file="src/pymortests/discretization.py" line="21" name="test_pickle_by_solving[&lt;lambda&gt;23]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/discretization.py:21: &lt;py._xmlgen.raw object at 0x7f6cfe32ac50&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function0]" time="0.0005342960357666016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7f6cfe32a828&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function1]" time="0.0005099773406982422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7f6d27f72c18&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function2]" time="0.0004851818084716797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7f6cfe3198d0&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function3]" time="0.00047707557678222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7f6d2c0a7da0&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function4]" time="0.00048422813415527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7f6cfe30f278&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function5]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7f6cfe304710&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function6]" time="0.0008158683776855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7f6cfe2b0518&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function7]" time="0.0004999637603759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7f6cfe30fcc0&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function8]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7f6d2c143e10&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function9]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7f6d2c0bdcc0&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function10]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7f6d2c166a90&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="26" name="test_evaluate[function11]" time="0.0005068778991699219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:26: &lt;py._xmlgen.raw object at 0x7f6cfe32ad30&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="35" name="test_lincomb_function" time="0.0004706382751464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:35: &lt;py._xmlgen.raw object at 0x7f6cfe2ecdd8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function0]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7f6cfe2b0438&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function1]" time="0.0007655620574951172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7f6cfe2b0b38&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function2]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7f6cfe32ad30&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function3]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7f6d27f72eb8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function4]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7f6cfe319a90&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function5]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7f6d2c151ac8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function6]" time="0.00048804283142089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7f6cfe30ff98&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function7]" time="0.00047588348388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7f6cfe2b0860&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function8]" time="0.0005161762237548828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7f6cfe2b02e8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function9]" time="0.0008301734924316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7f6cfe2bd198&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function10]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7f6cfe2b0630&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="58" name="test_pickle[function11]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:58: &lt;py._xmlgen.raw object at 0x7f6cfe304470&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="62" name="test_pickle_without_dumps_function[picklable_function0]" time="0.0004868507385253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:62: &lt;py._xmlgen.raw object at 0x7f6cfe2fc7b8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="62" name="test_pickle_without_dumps_function[picklable_function1]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:62: &lt;py._xmlgen.raw object at 0x7f6d2c0bd5c0&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="62" name="test_pickle_without_dumps_function[picklable_function2]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:62: &lt;py._xmlgen.raw object at 0x7f6cfe362b38&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="62" name="test_pickle_without_dumps_function[picklable_function3]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:62: &lt;py._xmlgen.raw object at 0x7f6cfe32a2b0&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="62" name="test_pickle_without_dumps_function[picklable_function4]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:62: &lt;py._xmlgen.raw object at 0x7f6cfe2bd320&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="62" name="test_pickle_without_dumps_function[picklable_function5]" time="0.0007784366607666016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:62: &lt;py._xmlgen.raw object at 0x7f6cfe2bd7b8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="62" name="test_pickle_without_dumps_function[picklable_function6]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:62: &lt;py._xmlgen.raw object at 0x7f6d27e84ba8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="62" name="test_pickle_without_dumps_function[picklable_function7]" time="0.0006544589996337891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:62: &lt;py._xmlgen.raw object at 0x7f6d27f5e8d0&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function0]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7f6cfe319898&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function1]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7f6cfe30fa20&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function2]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7f6cfe2b0be0&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function3]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7f6cfe2b0e80&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function4]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7f6cfe2bd048&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function5]" time="0.0007867813110351562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7f6cfe2bddd8&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function6]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7f6cfe2b0c18&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function7]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7f6d2c0a7860&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function8]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7f6d2c0b5048&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function9]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7f6d27f72b70&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function10]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7f6cfe32ada0&gt;</skipped></testcase><testcase classname="src.pymortests.function" file="src/pymortests/function.py" line="66" name="test_pickle_by_evaluation[function11]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/function.py:66: &lt;py._xmlgen.raw object at 0x7f6cfe2bda90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;0]" time="0.0005040168762207031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f6cfe2bd6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;1]" time="0.0007472038269042969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f6cfe2c7438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;2]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f6cfe2bd240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;3]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f6cfe32a5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;4]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f6cfe362b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;5]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f6cfe319908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;6]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f6d2c0a7da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;7]" time="0.0004951953887939453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f6cfe2b0cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;8]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f6cfe2c72e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;9]" time="0.0007467269897460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f6cfe2c7a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;10]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f6d2c0a7cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;11]" time="0.0006029605865478516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f6d2c0b5ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;12]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f6d27e845f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;13]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f6d27e8af98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;14]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f6cfe2bd390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;15]" time="0.00041961669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f6cfe2c7b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;16]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f6cfe2c7128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;17]" time="0.0009765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f6cfe2cf0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;18]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f6cfe362d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;19]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f6cfe319ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;20]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f6cfe2c7cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;21]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f6cfe2c7550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;22]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f6cfe2bdc50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;23]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f6cfe2bd780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;24]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f6cfe2b0668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;25]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f6cfe32a668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;26]" time="0.0007109642028808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f6cfe2b0cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;27]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f6cfe2bd898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;28]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f6cfe2c7240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;29]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f6cfe2c7358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;30]" time="0.00047969818115234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f6cfe319fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;31]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f6d27ea9400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;32]" time="0.0004947185516357422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f6cfe32a978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;33]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f6cfe34ff28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;34]" time="0.000713348388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f6d27f5eb70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;35]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f6cfe32a5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;36]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f6d27ea9358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;37]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f6d2c0a7da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;38]" time="0.0004737377166748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f6cfe2c7f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;39]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f6cfe2bd860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;40]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f6cfe2b0d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;41]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f6cfe2cf5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="28" name="test_dim[&lt;lambda&gt;42]" time="0.0007386207580566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:28: &lt;py._xmlgen.raw object at 0x7f6cfe2cfb00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;0]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f6cfe2bd160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;1]" time="0.0004858970642089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f6cfe2c7e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;2]" time="0.0005037784576416016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f6d27fb8080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;3]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f6d27ea9ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;4]" time="0.0004918575286865234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f6d27e8aac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;5]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f6cfe2cf780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;6]" time="0.0004737377166748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f6cfe2cf518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;7]" time="0.0007736682891845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f6cfe2dc080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;8]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f6cfe2cf278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;9]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f6cfe2cf668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;10]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f6d27e84f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;11]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f6d2c0a7cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;12]" time="0.0004966259002685547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f6cfe2c7a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;13]" time="0.0004763603210449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f6cfe30f3c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;14]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f6cfe2dc198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;15]" time="0.0007693767547607422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f6cfe2dc6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;16]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f6cfe2c7ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;17]" time="0.00047969818115234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f6d27f09748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;18]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f6d27ea90b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;19]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f6d27e84cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;20]" time="0.0004849433898925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f6cfe2cf470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;21]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f6cfe2cff60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;22]" time="0.0004169940948486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f6cfe2dc358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;23]" time="0.0007393360137939453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f6cfe2dccc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;24]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f6cfe2cfd30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;25]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f6d2c0bd9e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;26]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f6d27fb8eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;27]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f6d27f09940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;28]" time="0.0004878044128417969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f6cfe2c70f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;29]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f6cfe2dca20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;30]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f6cfe2dc550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;31]" time="0.0007977485656738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f6cfe2e8320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;32]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f6cfe2dc7f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;33]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f6cfe2c77b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;34]" time="0.0004680156707763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f6d27f09f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;35]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f6d2c0b5c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;36]" time="0.00048160552978515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f6cfe9225f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;37]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f6cfe2cf278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;38]" time="0.0004734992980957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f6cfe2e8198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;39]" time="0.0007510185241699219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f6cfe2e8940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;40]" time="0.0004811286926269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f6cfe32a908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;41]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f6d2c0b5dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="34" name="test_size[&lt;lambda&gt;42]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:34: &lt;py._xmlgen.raw object at 0x7f6cfe2bde48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;0]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d27c5bcc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;1]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f6cfe2dcd68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;2]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f6cfe2e8a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;3]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f6cfe2e83c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;4]" time="0.0007097721099853516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f6cfe2e8f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;5]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f6cfe2e86d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;6]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f6cfe2dcb38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;7]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f6cfe2c7cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;8]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d27c67e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;9]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d2c0a7cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;10]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f6cfe32aa90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;11]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f6cfe276080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;12]" time="0.0007579326629638672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f6cfe2765c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;13]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d2c0b5dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;14]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d27f09278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;15]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d27c5b978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;16]" time="0.00047516822814941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f6cfe2dc860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;17]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f6cfe2e8ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;18]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f6cfe2e84e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;19]" time="0.00048160552978515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f6cfe276160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;20]" time="0.0007271766662597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f6cfe276be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;21]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f6cfe2e8ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;22]" time="0.0005042552947998047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f6cfe2dc7b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;23]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d27fba940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;24]" time="0.0004894733428955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d27f09748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;25]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f6cfe2cf668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;26]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f6cfe276940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;27]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f6cfe276438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;28]" time="0.0009441375732421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f6cfe27e240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;29]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d27fba6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;30]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d27c5bac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;31]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f6cfe276f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;32]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f6cfe276860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;33]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f6cfe2e8748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;34]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f6cfe2e89b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;35]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f6cfe2dcd30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;36]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f6cfe37aac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;37]" time="0.0007944107055664062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f6cfe2cfb70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;38]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f6cfe2e8358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;39]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d27fa74a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;40]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f6cfe276c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;41]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f6cfe276e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="44" name="test_subentities_wrong_arguments[&lt;lambda&gt;42]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:44: &lt;py._xmlgen.raw object at 0x7f6d27fba5f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;0]" time="0.0004839897155761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f6d27fb8160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;1]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f6cfe2b0be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;2]" time="0.0007321834564208984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f6d2c0a7cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;3]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f6d27ea9400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;4]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f6d27fba5f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;5]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f6cfe276940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;6]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f6d27fa78d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;7]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f6cfe2e8ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;8]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f6d27f5eb70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;9]" time="0.0004992485046386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f6cfe27e748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;10]" time="0.0008068084716796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f6cfe27ec88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;11]" time="0.0004887580871582031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f6cfe2e8e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;12]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f6cfe276c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;13]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f6cfe2c7ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;14]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f6d27f09748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;15]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f6d27f9ca58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;16]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f6cfe27e908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;17]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f6cfe27e6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;18]" time="0.001188516616821289"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f6cfe28c208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;19]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f6cfe27ebe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;20]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f6d27c5b978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;21]" time="0.00048232078552246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f6d27f9cc50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;22]" time="0.00041937828063964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f6cfe2c7d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;23]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f6cfe276e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;24]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f6cfe2e8940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;25]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f6cfe28c0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;26]" time="0.0007283687591552734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f6cfe28c828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;27]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f6cfe276470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;28]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f6cfe2c7cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;29]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f6d27f9cd30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;30]" time="0.0004940032958984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f6d27efb5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;31]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f6cfe27e0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;32]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f6cfe28c470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;33]" time="0.0004200935363769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f6cfe28c320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;34]" time="0.0007560253143310547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f6cfe28ce48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;35]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f6cfe28c390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;36]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f6cfe27ebe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;37]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f6cfe27e588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;38]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f6d27c5b828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;39]" time="0.0004932880401611328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f6d27fbaa90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;40]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f6cfe2766d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;41]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f6cfe2dcef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="57" name="test_subentities_shape[&lt;lambda&gt;42]" time="0.0008044242858886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:57: &lt;py._xmlgen.raw object at 0x7f6cfe2974a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;0]" time="0.0004870891571044922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f6cfe276780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;1]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f6d27f9cf60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;2]" time="0.0004913806915283203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f6d27efb908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;3]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f6cfe27ef28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;4]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f6cfe28c4e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;5]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f6cfe28ccc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;6]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f6cfe297390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;7]" time="0.0007612705230712891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f6cfe297ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;8]" time="0.0005133152008056641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f6cfe28c128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;9]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f6cfe27e908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;10]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f6d27efbef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;11]" time="0.0005066394805908203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f6cfe276710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;12]" time="0.00048661231994628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f6d27efaf98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;13]" time="0.00048661231994628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f6cfe297c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;14]" time="0.00047397613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f6cfe2970b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;15]" time="0.0007801055908203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f6cfe2a1128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;16]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f6cfe2970b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;17]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f6d27efa0f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;18]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f6cfe276c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;19]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f6d27efb128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;20]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f6cfe27eba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;21]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f6cfe28ca58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;22]" time="0.0006093978881835938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f6cfe2a12b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;23]" time="0.0007419586181640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f6cfe2a1748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;24]" time="0.0005078315734863281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f6cfe28cac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;25]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f6cfe27ee10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;26]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f6d27f9c588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;27]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f6cfe276c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;28]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f6cfe2977b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;29]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f6cfe2e8be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;30]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f6cfe2a1400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;31]" time="0.0007529258728027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f6cfe2a1d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;32]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f6cfe2975c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;33]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f6d27fa74a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;34]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f6d27efb278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;35]" time="0.0005106925964355469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f6cfe28ca58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;36]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f6d27ee1cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;37]" time="0.00047087669372558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f6cfe2a1ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;38]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f6cfe2a15f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;39]" time="0.0010535717010498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f6cfe22c3c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;40]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f6d27ed8518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;41]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f6d27ee1da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="65" name="test_subentities_dtype[&lt;lambda&gt;42]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:65: &lt;py._xmlgen.raw object at 0x7f6cfe2a14e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;0]" time="0.00048732757568359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f6cfe2a1198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;1]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f6cfe297e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;2]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f6cfe28cbe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;3]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f6d2c0bdda0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;4]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f6cfe27e320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;5]" time="0.0008091926574707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f6d27fba6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;6]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f6cfe28cbe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;7]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f6cfe2974a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;8]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f6cfe2a1208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;9]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f6cfe2a1ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;10]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f6d27ee1cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;11]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f6d27efac50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;12]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f6cfe2cfe80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;13]" time="0.0007417201995849609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f6d27f9c240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;14]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f6d27ed85c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;15]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f6cfe2a1c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;16]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f6cfe2a1208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;17]" time="0.00041675567626953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f6cfe297630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;18]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f6cfe28cac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;19]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f6d27fba4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;20]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f6cfe22c8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;21]" time="0.0007016658782958984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f6cfe22ce10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;22]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f6d27ff9b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;23]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f6cfe297fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;24]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f6d27ee1518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;25]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f6cfe2a19e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;26]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f6d27efbb00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;27]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f6cfe22ca90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;28]" time="0.0004241466522216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f6cfe22c828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;29]" time="0.0007956027984619141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f6cfe23a390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;30]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f6cfe22c2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;31]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f6d27ed8320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;32]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f6cfe2a1c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;33]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f6cfe2973c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;34]" time="0.0004203319549560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f6d27fe4198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;35]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f6cfe28c320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;36]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f6cfe23a240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;37]" time="0.0007023811340332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f6cfe23a9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;38]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f6d27ff9828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;39]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f6d27ee1278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;40]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f6d27efbb00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;41]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f6d27efada0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="72" name="test_subentities_entry_value_range[&lt;lambda&gt;42]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:72: &lt;py._xmlgen.raw object at 0x7f6cfe22c2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;0]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f6cfe23a588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;1]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f6cfe23a0f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;2]" time="0.0007176399230957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f6cfe243080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;3]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f6cfe23af28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;4]" time="0.0005328655242919922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f6cfe23a710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;5]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f6cfe22cb00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;6]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f6cfe2a1630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;7]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f6d27ee1fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;8]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f6cfe28ca58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;9]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f6cfe243128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;10]" time="0.0007495880126953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f6cfe243630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;11]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f6d27fe40f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;12]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f6d27ee1f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;13]" time="0.00041365623474121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f6cfe2a1d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;14]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f6cfe22c2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;15]" time="0.00041604042053222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f6cfe23a518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;16]" time="0.0004742145538330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f6d27f9c080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;17]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f6cfe2431d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;18]" time="0.0007658004760742188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f6cfe243c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;19]" time="0.0004119873046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f6cfe23ac18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;20]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f6cfe22cd68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;21]" time="0.00041484832763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f6d2c037da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;22]" time="0.00041103363037109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f6cfe3a8a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;23]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f6d27fe4eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;24]" time="0.0004143714904785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f6cfe2439b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;25]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f6cfe2434a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;26]" time="0.0009362697601318359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f6cfe24e2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;27]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f6cfe2433c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;28]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f6d27fe4a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;29]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f6cfe297ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;30]" time="0.00046896934509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f6d2c037c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;31]" time="0.0005164146423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f6cfe22c9e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;32]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f6cfe23af28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;33]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f6cfe24e128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;34]" time="0.0007519721984863281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f6cfe24e8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;35]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f6cfe2a1cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;36]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f6d2c01f400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;37]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f6d2c037128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;38]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f6d27fe44e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;39]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f6cfe2439b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;40]" time="0.0004868507385253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f6cfe24e9e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;41]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f6cfe24e400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="80" name="test_subentities_entry_values_unique[&lt;lambda&gt;42]" time="0.0010924339294433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:80: &lt;py._xmlgen.raw object at 0x7f6cfe24eef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;0]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f6cfe24e6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;1]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f6cfe243ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;2]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f6cfe243278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;3]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f6cfe28cf60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;4]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f6d2c01f6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;5]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f6cfe2a1668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;6]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f6cfe25c080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;7]" time="0.00103759765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f6cfe25c550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;8]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f6d2c037cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;9]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f6cfe28ce48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;10]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f6cfe24e4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;11]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f6cfe24e358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;12]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f6cfe243fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;13]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f6cfe243c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;14]" time="0.0004832744598388672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f6cfe23aa20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;15]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f6cfe22c128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;16]" time="0.0007665157318115234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f6cfe22c550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;17]" time="0.00048661231994628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f6cfe243080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;18]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f6d27ff9fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;19]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f6cfe24eb00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;20]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f6cfe24e4e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;21]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f6cfe2975c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;22]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f6d2c037668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;23]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f6d27fbaf28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;24]" time="0.0006999969482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f6cfe27e390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;25]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f6d27fe44e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;26]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f6d27f9cef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;27]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f6cfe24eb00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;28]" time="0.0004782676696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f6d2c034320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;29]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f6cfe243080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;30]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f6cfe25c160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;31]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f6cfe25ca58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;32]" time="0.0007956027984619141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f6cfe25cfd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;33]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f6cfe25c048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;34]" time="0.00048279762268066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f6cfe23a2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;35]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f6cfe243eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;36]" time="0.0005095005035400391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f6cfe24e4e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;37]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f6cfe24eb38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;38]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f6d27fe4fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;39]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f6cfe27ef60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;40]" time="0.0007543563842773438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f6cfe265518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;41]" time="0.0004787445068359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f6d2c04e860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="89" name="test_subentities_codim_d_codim_d[&lt;lambda&gt;42]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:89: &lt;py._xmlgen.raw object at 0x7f6cfe24e7f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;0]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f6d2c0349b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;1]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f6cfe243780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;2]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f6cfe25cc18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;3]" time="0.00046944618225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f6cfe25cb70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;4]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f6cfe265438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;5]" time="0.0009355545043945312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f6cfe265b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;6]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f6cfe25cbe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;7]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f6cfe243b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;8]" time="0.0004680156707763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f6d2c034a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;9]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f6cfe24ebe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;10]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f6cfe27e2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;11]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f6cfe265828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;12]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f6cfe2652b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;13]" time="0.0007619857788085938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f6cfe1f3198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;14]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f6cfe2659e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;15]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f6d2c01f550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;16]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f6cfe24e4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;17]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f6d2c034cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;18]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f6cfe23a668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;19]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f6cfe25cb70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;20]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f6cfe1f3358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;21]" time="0.0007336139678955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f6cfe1f37b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;22]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f6cfe25ca90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;23]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f6cfe243b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;24]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f6cfe24ed68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;25]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f6d2c04ee48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;26]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f6cfe265c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;27]" time="0.0005285739898681641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f6cfe1f3400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;28]" time="0.0005369186401367188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f6cfe1f3048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;29]" time="0.0007500648498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f6cfe1f3dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;30]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f6cfe265eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;31]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f6d27f05f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;32]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f6cfe24e7f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;33]" time="0.00047588348388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f6cfe25cac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;34]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f6d27f17710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;35]" time="0.0004925727844238281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f6cfe1f3a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;36]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f6cfe1f30f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;37]" time="0.0007801055908203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f6cfe1fc438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;38]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f6cfe1f39e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;39]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f6d27f170b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;40]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f6cfe243cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;41]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f6d2c034da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="96" name="test_subentities_transitivity[&lt;lambda&gt;42]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:96: &lt;py._xmlgen.raw object at 0x7f6cfe265898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;0]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f6d27f244a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;1]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f6cfe1fc2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;2]" time="0.0007231235504150391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f6cfe1fca58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;3]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f6cfe265940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;4]" time="0.00042247772216796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f6cfe24efd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;5]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f6cfe23a2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;6]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f6d27f170b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;7]" time="0.0004923343658447266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f6cfe1f39e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;8]" time="0.00048542022705078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f6cfe1fcb00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;9]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f6cfe1fc5f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;10]" time="0.0007560253143310547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f6cfe2070b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;11]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f6cfe1fc8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;12]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f6cfe1f3860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;13]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f6d27f17f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;14]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f6cfe23a390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;15]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f6cfe27ef60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;16]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f6d27f3f780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;17]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f6cfe2071d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;18]" time="0.001013040542602539"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f6cfe2076d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;19]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f6d2c04ee48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;20]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f6d27f24240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;21]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f6cfe1fc0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;22]" time="0.000530242919921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f6cfe1fcac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;23]" time="0.00041937828063964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f6cfe1f3f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;24]" time="0.00047516822814941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f6cfe265160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;25]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f6d2c037f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;26]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f6cfe25c390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;27]" time="0.0007619857788085938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f6cfe25c6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;28]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f6d2c01f4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;29]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f6cfe1f3f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;30]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f6cfe1fc898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;31]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f6cfe1fc908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;32]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f6cfe27e2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;33]" time="0.0004138946533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f6d27f3f978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;34]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f6cfe2077b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;35]" time="0.0007128715515136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f6cfe22ca90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;36]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f6cfe24e7f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;37]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f6cfe23a2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;38]" time="0.0004813671112060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f6cfe1fcf98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;39]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f6cfe1f3f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;40]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f6cfe265630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;41]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f6cfe207358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="110" name="test_superentities_wrong_arguments[&lt;lambda&gt;42]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:110: &lt;py._xmlgen.raw object at 0x7f6cfe207be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;0]" time="0.0007266998291015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f6cfe214160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;1]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f6cfe207cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;2]" time="0.0004107952117919922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f6d27c12208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;3]" time="0.0004096031188964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f6cfe1f39b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;4]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f6cfe1fca90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;5]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f6cfe27ef60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;6]" time="0.00041937828063964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f6d27c03208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;7]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f6cfe214048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;8]" time="0.0006830692291259766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f6cfe2146a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;9]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f6d27c034a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;10]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f6cfe1fc908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;11]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f6cfe1f3f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;12]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f6d27f17f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;13]" time="0.0005424022674560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f6cfe207ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;14]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f6cfe207f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;15]" time="0.00041365623474121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f6cfe214358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;16]" time="0.0007135868072509766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f6cfe214cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;17]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f6cfe207940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;18]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f6cfe1f37f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;19]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f6d27c279b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;20]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f6cfe1fceb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;21]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f6d27c03f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;22]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f6cfe214390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;23]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f6cfe214588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;24]" time="0.0007283687591552734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f6cfe221320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;25]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f6cfe214c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;26]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f6cfe24eda0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;27]" time="0.0005679130554199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f6cfe1fccc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;28]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f6d27c279b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;29]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f6cfe265dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;30]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f6cfe207f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;31]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f6cfe221198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;32]" time="0.0007479190826416016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f6cfe221940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;33]" time="0.00048613548278808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f6cfe265588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;34]" time="0.0004825592041015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f6d27f245c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;35]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f6d27c27320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;36]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f6d27f3fb00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;37]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f6cfe2148d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;38]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f6cfe221a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;39]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f6cfe2213c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;40]" time="0.000736236572265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f6cfe221f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;41]" time="0.00041985511779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f6cfe2216d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="125" name="test_superentities_shape[&lt;lambda&gt;42]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:125: &lt;py._xmlgen.raw object at 0x7f6cfe214828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;0]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f6d2c034fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;1]" time="0.0005371570587158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f6d27c27f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;2]" time="0.0004820823669433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f6cfe1f3f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;3]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f6cfe265588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;4]" time="0.00046944618225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f6cfe1ac080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;5]" time="0.0007963180541992188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f6cfe1ac5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;6]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f6d27bb5710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;7]" time="0.0004820823669433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f6d27bc78d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;8]" time="0.0005035400390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f6cfe1fccc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;9]" time="0.0004851818084716797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f6cfe214f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;10]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f6cfe221ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;11]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f6cfe2214e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;12]" time="0.0005271434783935547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f6cfe1ac160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;13]" time="0.0007932186126708984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f6cfe1acbe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;14]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f6cfe2211d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;15]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f6cfe214da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;16]" time="0.000476837158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f6d27c27320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;17]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f6d27bc7f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;18]" time="0.0004837512969970703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f6cfe2070f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;19]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f6cfe1ac940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;20]" time="0.00047850608825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f6cfe1ac438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;21]" time="0.0007784366607666016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f6cfe1b4240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;22]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f6cfe1ac240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;23]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f6cfe207f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;24]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f6d27f170b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;25]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f6d27c27278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;26]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f6cfe214588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;27]" time="0.000476837158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f6cfe221d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;28]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f6cfe1b40b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;29]" time="0.0009832382202148438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f6cfe1b4860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;30]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f6cfe1f3630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;31]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f6d27bb5128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;32]" time="0.000415802001953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f6cfe1acd30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;33]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f6cfe1ac160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;34]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f6cfe2213c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;35]" time="0.0004851818084716797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f6cfe214e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;36]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f6cfe207978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;37]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f6cfe25c3c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;38]" time="0.0010824203491210938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f6d27c03748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;39]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f6cfe221fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;40]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f6d27f244a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;41]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f6cfe1ac320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="135" name="test_superentities_dtype[&lt;lambda&gt;42]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:135: &lt;py._xmlgen.raw object at 0x7f6d27f170b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;0]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f6d27c27518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;1]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f6d27bd8978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;2]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f6cfe1b4a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;3]" time="0.0009765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f6cfe25cc18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;4]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f6cfe1fc7b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;5]" time="0.0004894733428955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f6cfe1ac860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;6]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f6cfe1ac5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;7]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f6cfe221da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;8]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f6cfe214160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;9]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f6cfe1b4940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;10]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f6cfe1b4d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;11]" time="0.0007636547088623047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f6cfe1c32e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;12]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f6cfe1b4c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;13]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f6cfe214160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;14]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f6d27be75c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;15]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f6cfe1ace48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;16]" time="0.0004162788391113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f6cfe24ebe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;17]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f6d27bd8e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;18]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f6cfe1c31d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;19]" time="0.0007789134979248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f6cfe1c3828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;20]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f6d27beb4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;21]" time="0.0004229545593261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f6d27bb5860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;22]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f6cfe1acf60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;23]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f6cfe221358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;24]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f6cfe1b4470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;25]" time="0.0005552768707275391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f6cfe1c3588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;26]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f6cfe1c3048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;27]" time="0.0007159709930419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f6cfe1c3e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;28]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f6cfe1c3a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;29]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f6cfe1b4c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;30]" time="0.00048661231994628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f6cfe1b4198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;31]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f6cfe221e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;32]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f6cfe1ac9e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;33]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f6d27bd86d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;34]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f6d27beb748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;35]" time="0.0007381439208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f6cfe1ce4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;36]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f6d27c27320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;37]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f6cfe1acdd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;38]" time="0.0024068355560302734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f6cfe2146d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;39]" time="0.0004937648773193359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f6cfe1b4f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;40]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f6cfe1c3400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;41]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f6cfe1c3be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="142" name="test_superentities_entry_value_range[&lt;lambda&gt;42]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:142: &lt;py._xmlgen.raw object at 0x7f6cfe1ce390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;0]" time="0.0007359981536865234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f6cfe1ceac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;1]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f6cfe1c3400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;2]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f6cfe1b4cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;3]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f6d27c12160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;4]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f6cfe1ac940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;5]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f6d27beb9e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;6]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f6cfe1cec88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;7]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f6cfe1ce0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;8]" time="0.000766754150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f6cfe1d9128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;9]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f6cfe1ce128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;10]" time="0.0004138946533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f6cfe1cec18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;11]" time="0.00047469139099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f6cfe1ac358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;12]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f6cfe2142b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;13]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f6d27b8c400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;14]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f6cfe1c3f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;15]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f6cfe1d92b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;16]" time="0.0007357597351074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f6cfe1d9748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;17]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f6cfe1c3780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;18]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f6cfe1b4d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;19]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f6cfe221da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;20]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f6d27beb4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;21]" time="0.0005373954772949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f6cfe1ce978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;22]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f6d27bd8a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;23]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f6cfe1d9400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;24]" time="0.0007996559143066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f6cfe1d9d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;25]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f6cfe1ce978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;26]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f6cfe1ac9e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;27]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f6cfe1b4eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;28]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f6cfe1c39e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;29]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f6d27bae278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;30]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f6cfe1d9ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;31]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f6cfe1d95f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;32]" time="0.0007059574127197266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f6cfe1e43c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;33]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f6cfe1d9438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;34]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f6d27bae1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;35]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f6cfe1c3c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;36]" time="0.0005156993865966797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f6cfe221be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;37]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f6d27bebf28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;38]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f6cfe1cea20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;39]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f6cfe1e4240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;40]" time="0.0010411739349365234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f6cfe1e49e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;41]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f6d27b8c9e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="150" name="test_superentities_entry_values_unique[&lt;lambda&gt;42]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:150: &lt;py._xmlgen.raw object at 0x7f6d27baecf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;0]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f6cfe1d9ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;1]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f6cfe1d97b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;2]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f6cfe1ce6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;3]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f6cfe1c33c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;4]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f6cfe1b4710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;5]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f6cfe207898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;6]" time="0.0007996559143066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f6d27fba4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;7]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f6cfe1c3f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;8]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f6cfe1ce588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;9]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f6cfe1d9160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;10]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f6cfe1d9c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;11]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f6d27baeef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;12]" time="0.00046896934509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f6d27b3e6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;13]" time="0.0004878044128417969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f6cfe1e4780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;14]" time="0.0008046627044677734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f6d27b3e1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;15]" time="0.0004942417144775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f6d27baef98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;16]" time="0.0004839897155761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f6cfe1d9438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;17]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f6d27b51240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;18]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f6cfe1ce518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;19]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f6cfe1b4400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;20]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f6cfe1e4b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;21]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f6cfe1e4ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;22]" time="0.0007252693176269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f6cfe172470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;23]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f6cfe1e4a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;24]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f6cfe1c3f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;25]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f6cfe1ceb00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;26]" time="0.0005233287811279297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f6d27b51828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;27]" time="0.00047588348388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f6cfe1d9b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;28]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f6d27baec50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;29]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f6cfe172390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;30]" time="0.0007543563842773438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f6cfe1729b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;31]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f6cfe1d9f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;32]" time="0.0004949569702148438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f6d27b51390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;33]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f6cfe1ce860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;34]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f6cfe1c3f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;35]" time="0.0004849433898925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f6cfe1e4240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;36]" time="0.0004849433898925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f6cfe172588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;37]" time="0.0005013942718505859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f6cfe172208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;38]" time="0.0008666515350341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f6cfe17a080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;39]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f6cfe1727f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;40]" time="0.00047707557678222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f6cfe1e4f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;41]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f6cfe1b4390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="159" name="test_superentities_entries_sorted[&lt;lambda&gt;42]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:159: &lt;py._xmlgen.raw object at 0x7f6cfe1c3898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;0]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f6d27b51ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;1]" time="0.00047850608825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f6cfe1d9ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;2]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f6cfe17a128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;3]" time="0.0008037090301513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f6cfe17a630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;4]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f6cfe1d9400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;5]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f6cfe1ce518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;6]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f6d27b60a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;7]" time="0.0004820823669433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f6cfe1e47f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;8]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f6cfe1721d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;9]" time="0.0005028247833251953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f6cfe172278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;10]" time="0.0005037784576416016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f6cfe17a1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;11]" time="0.0007910728454589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f6cfe17ac50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;12]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f6cfe172c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;13]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f6cfe1e4f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;14]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f6d27b60ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;15]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f6d27b51f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;16]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f6cfe1d9eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;17]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f6cfe17a9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;18]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f6cfe17a4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;19]" time="0.0007140636444091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f6cfe1872b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;20]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f6cfe17a780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;21]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f6cfe1d9320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;22]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f6d27b70e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;23]" time="0.00048160552978515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f6d27b60ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;24]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f6cfe1b4390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;25]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f6cfe1728d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;26]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f6cfe187128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;27]" time="0.0009646415710449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f6cfe1878d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;28]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f6d27b052b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;29]" time="0.00048470497131347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f6cfe1c32e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;30]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f6d27baec50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;31]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f6cfe1d9eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;32]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f6cfe17ae10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;33]" time="0.00048613548278808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f6cfe1879e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;34]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f6cfe187400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;35]" time="0.000774383544921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f6cfe187ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;36]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f6cfe187400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;37]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f6cfe17af60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;38]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f6cfe17a8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;39]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f6cfe1ac358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;40]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f6cfe1b4400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;41]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f6d27b050b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="172" name="test_superentities_codim_d_codim_d[&lt;lambda&gt;42]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:172: &lt;py._xmlgen.raw object at 0x7f6cfe193080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;0]" time="0.0007452964782714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f6cfe193550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;1]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f6d27b05c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;2]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f6cfe1cee80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;3]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f6cfe1d9ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;4]" time="0.00046944618225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f6cfe17aeb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;5]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f6cfe187160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;6]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f6cfe187e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;7]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f6cfe1934a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;8]" time="0.0010142326354980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f6cfe193b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;9]" time="0.00048232078552246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f6cfe1ce518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;10]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f6d27b050b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;11]" time="0.00048422813415527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f6cfe187400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;12]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f6cfe187940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;13]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f6cfe17aa58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;14]" time="0.00041985511779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f6cfe1725f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;15]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f6cfe1e4438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;16]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f6cfe207630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;17]" time="0.0007431507110595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f6d27b9c908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;18]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f6cfe1725f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;19]" time="0.0004973411560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f6cfe17ae80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;20]" time="0.0004169940948486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f6cfe1874e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;21]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f6d27b27a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;22]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f6d27b05be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;23]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f6d27baec50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;24]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f6cfe1939b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;25]" time="0.0006978511810302734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f6cfe1cee80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;26]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f6d27b05898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;27]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f6cfe1876d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;28]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f6cfe187550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;29]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f6cfe17aa58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;30]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f6cfe1e4940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;31]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f6cfe193048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;32]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f6cfe1a10b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;33]" time="0.0007009506225585938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f6cfe1a15f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;34]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f6cfe1939e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;35]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f6cfe172908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;36]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f6cfe17ac88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;37]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f6cfe187be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;38]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f6d27b608d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;39]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f6d27b51ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;40]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f6cfe1a1128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;41]" time="0.0007302761077880859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f6cfe1a1b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="179" name="test_superentities_each_entry_superentity[&lt;lambda&gt;42]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:179: &lt;py._xmlgen.raw object at 0x7f6d27b055f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;0]" time="0.00046896934509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f6d27b3e3c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;1]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f6d27b9cc50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;2]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f6cfe1e4940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;3]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f6cfe193f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;4]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f6cfe1a1be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;5]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f6cfe1a14a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;6]" time="0.0007753372192382812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f6cfe1aa198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;7]" time="0.0004780292510986328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f6cfe1a11d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;8]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f6cfe193dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;9]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f6cfe1e4588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;10]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f6d27ac6e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;11]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f6d27b604e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;12]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f6cfe1ce860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;13]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f6cfe1aa048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;14]" time="0.0008263587951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f6cfe1aa7b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;15]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f6d27ad90f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;16]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f6cfe187cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;17]" time="0.0005013942718505859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f6cfe17af60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;18]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f6cfe1932b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;19]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f6cfe1a1c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;20]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f6cfe1aa400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;21]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f6cfe1aa080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;22]" time="0.0007531642913818359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f6cfe1aadd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;23]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f6cfe1a19b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;24]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f6cfe193cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;25]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f6cfe17a320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;26]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f6cfe1ce860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;27]" time="0.0005071163177490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f6d27ab8908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;28]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f6cfe1aaa58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;29]" time="0.00048661231994628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f6cfe1aa358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;30]" time="0.0008347034454345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f6cfe136438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;31]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f6cfe1aa9e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;32]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f6d27ad9c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;33]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f6d27b271d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;34]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f6cfe17aa58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;35]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f6cfe172eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;36]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f6cfe1a19e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;37]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f6cfe1362b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;38]" time="0.0007390975952148438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f6cfe136a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;39]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f6cfe172eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;40]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f6d27b9cb00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;41]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f6d27b271d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="191" name="test_superentities_each_superentity_has_entry[&lt;lambda&gt;42]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:191: &lt;py._xmlgen.raw object at 0x7f6d27ad9a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;0]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f6cfe1aa9e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;1]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f6cfe136b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;2]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f6cfe1365f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;3]" time="0.0007171630859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f6cfe13e0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;4]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f6cfe1365f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;5]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f6cfe1ce860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;6]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f6cfe1aa2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;7]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f6d27ad9fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;8]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f6d27b9cc50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;9]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f6cfe172eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;10]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f6cfe13e1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;11]" time="0.0007567405700683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f6cfe13e6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;12]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f6d27aeb240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;13]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f6cfe17a390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;14]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f6d27ab8908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;15]" time="0.000415802001953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f6cfe1ce860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;16]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f6cfe1368d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;17]" time="0.0004169940948486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f6cfe136fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;18]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f6cfe13e278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;19]" time="0.0009646415710449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f6cfe13ecf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;20]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f6d27ad9e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;21]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f6cfe172eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;22]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f6cfe136ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;23]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f6cfe1aa2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;24]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f6cfe1aa7b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;25]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f6cfe1a1668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;26]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f6d27b144a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;27]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f6cfe207278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;28]" time="0.000751495361328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f6d27ab8128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;29]" time="0.0004105567932128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f6cfe1a1cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;30]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f6cfe1aaf28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;31]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f6cfe136dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;32]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f6cfe136940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;33]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f6d27b05a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;34]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f6d27a809e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;35]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f6cfe13ec18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;36]" time="0.0007443428039550781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f6d27a80fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;37]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f6d27aeb588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;38]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f6cfe1360b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;39]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f6cfe1aaf60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;40]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f6cfe1a14a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;41]" time="0.0004165172576904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f6cfe1938d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="203" name="test_superentity_indices_wrong_arguments[&lt;lambda&gt;42]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:203: &lt;py._xmlgen.raw object at 0x7f6cfe13eb38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;0]" time="0.000415802001953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f6cfe151240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;1]" time="0.000682830810546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f6cfe151780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;2]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f6cfe13e9e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;3]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f6cfe1a1cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;4]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f6cfe1aadd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;5]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f6cfe136b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;6]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f6d27b9cc50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;7]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f6cfe1513c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;8]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f6cfe151128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;9]" time="0.0006937980651855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f6cfe151cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;10]" time="0.0004911422729492188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f6cfe136588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;11]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f6d27a8e550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;12]" time="0.00047516822814941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f6cfe1aae80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;13]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f6d27ab81d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;14]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f6cfe13e748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;15]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f6cfe151a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;16]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f6cfe151470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;17]" time="0.0007314682006835938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f6cfe158320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;18]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f6cfe151860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;19]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f6cfe13ef60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;20]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f6cfe1a1eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;21]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f6cfe1aaf28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;22]" time="0.00041556358337402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f6d27ab1320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;23]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f6d27ad9fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;24]" time="0.0004811286926269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f6cfe1581d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;25]" time="0.0007102489471435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f6cfe158940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;26]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f6cfe136588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;27]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f6d27a8e7f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;28]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f6cfe1934a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;29]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f6cfe13e128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;30]" time="0.0004761219024658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f6cfe1518d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;31]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f6cfe158a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;32]" time="0.00048732757568359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f6cfe1583c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;33]" time="0.00069427490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f6cfe158f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;34]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f6cfe1586d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;35]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f6cfe1516a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;36]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f6d27ab81d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;37]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f6d27a9def0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;38]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f6d27a8e2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;39]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f6d27ab15c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;40]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f6cfe164080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;41]" time="0.0007052421569824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f6cfe1645c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="218" name="test_superentity_indices_shape[&lt;lambda&gt;42]" time="0.00041103363037109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:218: &lt;py._xmlgen.raw object at 0x7f6d27ab1cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;0]" time="0.00041174888610839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f6cfe1aa390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;1]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f6cfe1a18d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;2]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f6cfe1512b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;3]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f6cfe158d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;4]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f6cfe158080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;5]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f6cfe164160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;6]" time="0.0007135868072509766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f6cfe164be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;7]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f6cfe158eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;8]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f6cfe1516a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;9]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f6cfe13e6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;10]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f6d27a8e2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;11]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f6d27ab1e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;12]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f6cfe164940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;13]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f6cfe164438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;14]" time="0.0008080005645751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f6cfe0ed240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;15]" time="0.0004792213439941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f6cfe1642b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;16]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f6cfe17aa58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;17]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f6d27a9dda0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;18]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f6cfe13e390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;19]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f6d27a54978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;20]" time="0.000484466552734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f6cfe158cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;21]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f6cfe0ed0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;22]" time="0.0007476806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f6cfe0ed860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;23]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f6d27a54fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;24]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f6cfe151e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;25]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f6cfe1aaf28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;26]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f6d27ad9e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;27]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f6cfe164c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;28]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f6cfe0ed940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;29]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f6cfe0ed358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;30]" time="0.0010149478912353516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f6cfe0ede80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;31]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f6d27a8e208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;32]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f6d27a646d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;33]" time="0.0004875659942626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f6cfe0edb00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;34]" time="0.0004839897155761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f6cfe0ed518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;35]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f6cfe164198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;36]" time="0.0004825592041015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f6cfe164780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;37]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f6cfe158d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;38]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f6cfe151ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;39]" time="0.0007073879241943359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f6cfe158358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;40]" time="0.0005319118499755859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f6cfe1640f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;41]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f6cfe164080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="225" name="test_superentity_indices_dtype[&lt;lambda&gt;42]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:225: &lt;py._xmlgen.raw object at 0x7f6cfe0ed390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;0]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f6d27a64cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;1]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f6d27a54f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;2]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f6d27a9db00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;3]" time="0.00047850608825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f6d27a80dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;4]" time="0.0006923675537109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f6cfe13e2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;5]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f6d27ab17b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;6]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f6d27a64828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;7]" time="0.00041365623474121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f6cfe0edc88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;8]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f6cfe0ed128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;9]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f6cfe164e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;10]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f6cfe158630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;11]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f6cfe0fe3c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;12]" time="0.0007143020629882812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f6cfe0fe908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;13]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f6cfe164dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;14]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f6cfe0edb70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;15]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f6cfe0edc88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;16]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f6d27a54c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;17]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f6cfe1a18d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;18]" time="0.0004773139953613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f6cfe0fe5f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;19]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f6cfe0fe2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;20]" time="0.0006947517395019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f6cfe0fee48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;21]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f6cfe0fec50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;22]" time="0.0004076957702636719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f6cfe0fe710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;23]" time="0.0004241466522216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f6cfe1aae80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;24]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f6cfe0ed2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;25]" time="0.00041961669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f6d27a07a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;26]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f6cfe1647f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;27]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f6cfe1586d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;28]" time="0.0007243156433105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f6cfe1044a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;29]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f6cfe164a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;30]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f6cfe0edb70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;31]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f6d27a64a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;32]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f6d27a72e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;33]" time="0.00046896934509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f6cfe0fe7f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;34]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f6cfe13e390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;35]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f6cfe1043c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;36]" time="0.0007982254028320312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f6cfe104ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;37]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f6cfe0fe7f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;38]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f6d27a54828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;39]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f6cfe0ed240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;40]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f6d27a07dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;41]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f6cfe164cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="232" name="test_superentity_indices_valid_entries[&lt;lambda&gt;42]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:232: &lt;py._xmlgen.raw object at 0x7f6cfe104c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;0]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f6cfe104128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;1]" time="0.0007088184356689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f6cfe110128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;2]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f6cfe104668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;3]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f6cfe158940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;4]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f6d27a07358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;5]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f6cfe0ed358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;6]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f6d27a9dda0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;7]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f6cfe0fe828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;8]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f6cfe1102b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;9]" time="0.0007517337799072266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f6cfe110748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;10]" time="0.0004229545593261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f6cfe0fe080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;11]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f6d27a14748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;12]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f6cfe164c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;13]" time="0.0004143714904785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f6d27a29b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;14]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f6cfe104080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;15]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f6cfe104128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;16]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f6cfe110400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;17]" time="0.0006966590881347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f6cfe110d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;18]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f6cfe104d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;19]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f6d27a07898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;20]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f6cfe0ed6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;21]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f6d27a64cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;22]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f6cfe0fed68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;23]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f6cfe110ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;24]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f6cfe1105f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;25]" time="0.0007321834564208984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f6cfe1193c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;26]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f6cfe110c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;27]" time="0.0004870891571044922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f6cfe0fea90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;28]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f6cfe0edfd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;29]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f6d279b95c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;30]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f6d27a29860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;31]" time="0.00041604042053222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f6cfe104fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;32]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f6cfe119240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;33]" time="0.0007016658782958984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f6cfe1199e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;34]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f6d27a07dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;35]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f6d279b97b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;36]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f6cfe0ed2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;37]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f6cfe0fea58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;38]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f6cfe110438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;39]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f6cfe119b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;40]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f6cfe119588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;41]" time="0.00106048583984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f6cfe124048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="244" name="test_neighbours_wrong_arguments[&lt;lambda&gt;42]" time="0.00041937828063964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:244: &lt;py._xmlgen.raw object at 0x7f6cfe0ed748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;0]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f6d279b9860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;1]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f6cfe119668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;2]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f6cfe119940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;3]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f6cfe110390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;4]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f6cfe110e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;5]" time="0.00046944618225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f6cfe104d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;6]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f6cfe0fe9e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;7]" time="0.0007882118225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f6cfe104d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;8]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f6cfe110438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;9]" time="0.00047707557678222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f6cfe119278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;10]" time="0.0004799365997314453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f6cfe119be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;11]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f6d27a29908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;12]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f6cfe1aae80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;13]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f6cfe0fe978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;14]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f6d27a80fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;15]" time="0.0007441043853759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f6d27a54eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;16]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f6cfe0ed748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;17]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f6d279b97b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;18]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f6cfe119a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;19]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f6cfe119eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;20]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f6cfe110c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;21]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f6cfe104cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;22]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f6cfe124550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;23]" time="0.0007767677307128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f6cfe124a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;24]" time="0.0004165172576904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f6cfe110dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;25]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f6cfe119278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;26]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f6d27a29470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;27]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f6d279b9908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;28]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f6cfe164198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;29]" time="0.000415802001953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f6cfe124710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;30]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f6cfe1244a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;31]" time="0.0007073879241943359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f6cfe0b2080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;32]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f6cfe124f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;33]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f6cfe1246a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;34]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f6d279c9cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;35]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f6d27a076a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;36]" time="0.0005009174346923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f6cfe119278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;37]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f6cfe110160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;38]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f6cfe0b2128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;39]" time="0.0007734298706054688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f6cfe0b2630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;40]" time="0.000476837158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f6d279dfe10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;41]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f6cfe119748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="266" name="test_neighbours_shape[&lt;lambda&gt;42]" time="0.0004944801330566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:266: &lt;py._xmlgen.raw object at 0x7f6d279c92b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;0]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f6cfe124c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;1]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f6cfe124b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;2]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f6d279ec240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;3]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f6cfe0b22e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;4]" time="0.0007331371307373047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f6cfe0b2c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;5]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f6cfe124e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;6]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f6d27a14748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;7]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f6cfe158358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;8]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f6cfe119080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;9]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f6d279df438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;10]" time="0.0004894733428955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f6cfe0b29b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;11]" time="0.00048804283142089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f6cfe0b24e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;12]" time="0.0008461475372314453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f6cfe0bd2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;13]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f6cfe0b2780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;14]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f6cfe1104e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;15]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f6cfe119240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;16]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f6d27a54eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;17]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f6d279806a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;18]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f6cfe124588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;19]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f6cfe0bd128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;20]" time="0.0007150173187255859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f6cfe0bd8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;21]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f6cfe124668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;22]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f6d27980940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;23]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f6cfe1196a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;24]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f6cfe110160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;25]" time="0.0004184246063232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f6cfe0b2e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;26]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f6cfe0bd9e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;27]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f6cfe0bd400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;28]" time="0.0007374286651611328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f6cfe0bdef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;29]" time="0.00048065185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f6cfe0bd6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;30]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f6cfe0b2e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;31]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f6cfe110748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;32]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f6cfe119240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;33]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f6d27980940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;34]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f6d27991160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;35]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f6cfe0c6080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;36]" time="0.0006957054138183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f6cfe0c6550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;37]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f6d27991a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;38]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f6d279b9908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;39]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f6d279dfeb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;40]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f6cfe0b2e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;41]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f6cfe0bd978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="274" name="test_neighbours_dtype[&lt;lambda&gt;42]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:274: &lt;py._xmlgen.raw object at 0x7f6cfe0bdac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;0]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f6cfe0c64a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;1]" time="0.0007765293121337891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f6cfe0c6b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;2]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f6cfe0bd208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;3]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f6cfe0b2780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;4]" time="0.0004849433898925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f6d27a54eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;5]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f6d279b9cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;6]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f6cfe124ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;7]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f6cfe0c6048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;8]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f6cfe0c6358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;9]" time="0.0010287761688232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f6cfe0d31d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;10]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f6d279b9cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;11]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f6d279a0da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;12]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f6cfe0c6080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;13]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f6cfe0c6ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;14]" time="0.0004210472106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f6cfe0bdbe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;15]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f6cfe0b2e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;16]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f6cfe124588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;17]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f6cfe1517b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;18]" time="0.0007359981536865234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f6cfe124ba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;19]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f6cfe0b2a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;20]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f6cfe0bd198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;21]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f6cfe0c6048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;22]" time="0.0004994869232177734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f6cfe0c6748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;23]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f6d27991f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;24]" time="0.0004169940948486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f6d27933518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;25]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f6cfe104518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;26]" time="0.0007212162017822266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f6cfe13e7b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;27]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f6d279339b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;28]" time="0.00048804283142089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f6d27980d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;29]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f6cfe0c6fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;30]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f6d279ec780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;31]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f6cfe0bdd30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;32]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f6cfe124be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;33]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f6cfe0d36d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;34]" time="0.0007393360137939453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f6cfe0d3c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;35]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f6cfe0bd048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;36]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f6cfe119a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;37]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f6cfe0c6cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;38]" time="0.0004961490631103516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f6d279919e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;39]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f6d27933278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;40]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f6cfe0d3898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;41]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f6cfe0d3630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="281" name="test_neighbours_entry_value_range[&lt;lambda&gt;42]" time="0.0007457733154296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:281: &lt;py._xmlgen.raw object at 0x7f6cfe0e0198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;0]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f6cfe0d3630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;1]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f6cfe1104e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;2]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f6d27991a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;3]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f6cfe0c6dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;4]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f6cfe0bdb00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;5]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f6cfe0b2d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;6]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f6cfe0e0048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;7]" time="0.0007810592651367188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f6cfe0e07b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;8]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f6cfe0bd940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;9]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f6d279a0da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;10]" time="0.00046944618225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f6d279919e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;11]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f6d27953b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;12]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f6cfe0d3898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;13]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f6cfe0e0400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;14]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f6cfe0e0048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;15]" time="0.0008106231689453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f6cfe0e0dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;16]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f6cfe0d3550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;17]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f6d27933518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;18]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f6cfe0c6b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;19]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f6cfe0bd2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;20]" time="0.00049591064453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f6cfe0b2e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;21]" time="0.0004894733428955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f6cfe0e0a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;22]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f6cfe0e0470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;23]" time="0.0008044242858886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f6cfe06e438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;24]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f6cfe0e0a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;25]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f6d27942470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;26]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f6d27991e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;27]" time="0.0004913806915283203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f6d279339b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;28]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f6d27966438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;29]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f6cfe0d3cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;30]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f6cfe06e2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;31]" time="0.0007410049438476562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f6cfe06ea58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;32]" time="0.0004858970642089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f6d27953e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;33]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f6d27933518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;34]" time="0.0004775524139404297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f6d279919e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;35]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f6cfe0b26a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;36]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f6cfe0e09e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;37]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f6cfe06eb00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;38]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f6cfe06e5f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;39]" time="0.0007436275482177734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f6cfe0740b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;40]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f6cfe06e8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;41]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f6cfe0e0630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="289" name="test_neighbours_entry_values_unique[&lt;lambda&gt;42]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:289: &lt;py._xmlgen.raw object at 0x7f6d27942518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;0]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f6d27991748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;1]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f6d27966eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;2]" time="0.0004851818084716797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f6d279536d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;3]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f6cfe0741d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;4]" time="0.0008516311645507812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f6cfe0746d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;5]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f6d27966828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;6]" time="0.00046944618225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f6cfe0c6160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;7]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f6cfe0bd2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;8]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f6cfe0e0e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;9]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f6cfe06ec18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;10]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f6cfe06e128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;11]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f6cfe074278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;12]" time="0.0007462501525878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f6cfe074cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;13]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f6cfe06eb00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;14]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f6cfe0e0c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;15]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f6d27933908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;16]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f6d27966978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;17]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f6cfe0d3ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;18]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f6cfe074a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;19]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f6cfe074550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;20]" time="0.0010142326354980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f6cfe083358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;21]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f6d279664e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;22]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f6d279806a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;23]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f6cfe074ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;24]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f6cfe0747f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;25]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f6cfe06e2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;26]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f6cfe06e4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;27]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f6cfe0e0208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;28]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f6cfe0d3ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;29]" time="0.00075531005859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f6cfe0e0a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;30]" time="0.00047087669372558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f6cfe06eb38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;31]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f6cfe074d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;32]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f6cfe074b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;33]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f6cfe0c6908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;34]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f6d27909b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;35]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f6cfe0d3898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;36]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f6cfe207278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;37]" time="0.000728607177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f6cfe110160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;38]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f6cfe0d3eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;39]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f6cfe0c6b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;40]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f6cfe0742b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;41]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f6cfe074748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="298" name="test_neighbours_each_entry_neighbour[&lt;lambda&gt;42]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:298: &lt;py._xmlgen.raw object at 0x7f6cfe06edd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;0]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f6cfe0e0e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;1]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f6cfe083860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;2]" time="0.0008413791656494141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f6cfe083da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;3]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f6cfe06ef98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;4]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f6cfe074cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;5]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f6cfe0bd828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;6]" time="0.00047969818115234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f6d27909400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;7]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f6cfe0d32b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;8]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f6cfe083a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;9]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f6cfe0837b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;10]" time="0.0007741451263427734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f6cfe092320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;11]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f6cfe083668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;12]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f6d27933908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;13]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f6d27909f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;14]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f6cfe074b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;15]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f6cfe06ec88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;16]" time="0.0004818439483642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f6d2792b7b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;17]" time="0.0006930828094482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f6cfe0921d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;18]" time="0.000774383544921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f6cfe092940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;19]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f6d2792bc50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;20]" time="0.0004887580871582031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f6cfe074e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;21]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f6d27909208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;22]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f6d27a14358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;23]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f6cfe083978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;24]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f6cfe092a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;25]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f6cfe092048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;26]" time="0.0007562637329101562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f6cfe092f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;27]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f6cfe0927b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;28]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f6cfe0832b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;29]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f6cfe0d3cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;30]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f6d27909a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;31]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f6cfe06e0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;32]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f6d278bcb00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;33]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f6cfe09e080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;34]" time="0.0007436275482177734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f6cfe09e5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;35]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f6cfe0e0ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;36]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f6cfe074748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;37]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f6d27966390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;38]" time="0.0004153251647949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f6cfe083cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;39]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f6cfe092240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;40]" time="0.0004143714904785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f6cfe092b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;41]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f6cfe09e160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="314" name="test_neighbours_each_neighbour_has_entry[&lt;lambda&gt;42]" time="0.0007157325744628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:314: &lt;py._xmlgen.raw object at 0x7f6cfe09ebe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;0]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f6cfe092780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;1]" time="0.00047850608825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f6cfe0839e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;2]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f6cfe0c6710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;3]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f6d2792bcf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;4]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f6d278bc5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;5]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f6cfe09e940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;6]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f6cfe09e438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;7]" time="0.0007579326629638672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f6cfe0a6240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;8]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f6cfe09e748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;9]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f6d278bc860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;10]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f6d2792bc50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;11]" time="0.0005023479461669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f6cfe0c62b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;12]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f6cfe083860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;13]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f6cfe092208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;14]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f6cfe0a60b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;15]" time="0.0007786750793457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f6cfe0a6860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;16]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f6d27909d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;17]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f6d27966438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;18]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f6d278e2a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;19]" time="0.0004830360412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f6d278bcc50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;20]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f6cfe09ef60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;21]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f6cfe0a6940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;22]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f6cfe0a6358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;23]" time="0.0007922649383544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f6cfe0a6e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;24]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f6cfe0a6390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;25]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f6cfe09ea90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;26]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f6cfe09ecf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;27]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f6d278e2630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;28]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f6d2792bb00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;29]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f6d27933908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;30]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f6d278cb550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;31]" time="0.0009737014770507812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f6cfe0324e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;32]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f6d278f12e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;33]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f6d278bcc50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;34]" time="0.0004189014434814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f6cfe0a6128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;35]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f6cfe0a6cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;36]" time="0.0005910396575927734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f6cfe09ecf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;37]" time="0.0004868507385253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f6cfe09e5f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;38]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f6cfe092390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;39]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f6cfe0830f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;40]" time="0.00074005126953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f6cfe0fe978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;41]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f6cfe09e630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="335" name="test_neighbours_not_neighbour_of_itself[&lt;lambda&gt;42]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:335: &lt;py._xmlgen.raw object at 0x7f6d278cbf60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;0]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f6cfe0a6978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;1]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f6d278bcef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;2]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f6d278f1da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;3]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f6cfe074dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;4]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f6d279184a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;5]" time="0.0007135868072509766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f6cfe124a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;6]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f6d278f12e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;7]" time="0.00048470497131347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f6d278827f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;8]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f6cfe0a6780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;9]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f6d278cbf60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;10]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f6cfe092cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;11]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f6cfe032160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;12]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f6cfe0329e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;13]" time="0.0007357597351074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f6cfe032f28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;14]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f6cfe09ec50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;15]" time="0.00046944618225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f6cfe0a6278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;16]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f6d278bcf98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;17]" time="0.00047516822814941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f6d27882dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;18]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f6d278f1438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;19]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f6cfe032d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;20]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f6cfe032240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;21]" time="0.0007255077362060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f6cfe0424a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;22]" time="0.00041556358337402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f6cfe032b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;23]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f6d278f14e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;24]" time="0.00041222572326660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f6d27882c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;25]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f6cfe0a6748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;26]" time="0.0004165172576904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f6cfe0926d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;27]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f6cfe09eac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;28]" time="0.0004253387451171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f6cfe0423c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;29]" time="0.0007481575012207031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f6cfe042ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;30]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f6d278949e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;31]" time="0.00048661231994628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f6cfe0a6a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;32]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f6d278e2828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;33]" time="0.00046944618225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f6cfe074dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;34]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f6cfe0320b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;35]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f6cfe0427b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;36]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f6cfe042240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;37]" time="0.0008051395416259766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f6cfe04c128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;38]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f6cfe042400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;39]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f6cfe0e0208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;40]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f6cfe06e7f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;41]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f6d278e2eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="345" name="test_boundary_mask_wrong_arguments[&lt;lambda&gt;42]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:345: &lt;py._xmlgen.raw object at 0x7f6cfe0a65f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;0]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f6cfe0925f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;1]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f6cfe04c2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;2]" time="0.0010116100311279297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f6cfe04c748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;3]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f6d278944a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;4]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f6cfe0a6748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;5]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f6d27882c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;6]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f6cfe032a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;7]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f6cfe0420b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;8]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f6cfe0429e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;9]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f6cfe04c400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;10]" time="0.0007331371307373047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f6cfe04cd68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;11]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f6cfe042be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;12]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f6cfe032860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;13]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f6d278e2390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;14]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f6cfe092cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;15]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f6d278aa470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;16]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f6cfe04cac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;17]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f6cfe04c5f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;18]" time="0.0007634162902832031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f6cfe0573c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;19]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f6cfe04c4e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;20]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f6d278aa320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;21]" time="0.0004119873046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f6cfe0a6978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;22]" time="0.0004863739013671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f6d278f1588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;23]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f6cfe032898&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;24]" time="0.00046896934509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f6cfe042d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;25]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f6cfe057240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;26]" time="0.0010673999786376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f6cfe0579e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;27]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f6cfe042940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;28]" time="0.0004832744598388672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f6d278f1438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;29]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f6d278949e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;30]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f6d278aa3c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;31]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f6cfe04c550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;32]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f6cfe057b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;33]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f6cfe057588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;34]" time="0.0007252693176269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f6cfe060080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;35]" time="0.00041675567626953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f6cfe057588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;36]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f6cfe04c390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;37]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f6d278aacf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;38]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f6d278e2fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;39]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f6cfe0326a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;40]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f6d27847278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;41]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f6cfe060160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="353" name="test_boundary_mask_shape[&lt;lambda&gt;42]" time="0.0010309219360351562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:353: &lt;py._xmlgen.raw object at 0x7f6cfe060668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;0]" time="0.0004734992980957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f6d278949e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;1]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f6d278aa7b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;2]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f6cfe057630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;3]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f6cfe057160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;4]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f6cfe04cef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;5]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f6cfe0423c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;6]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f6d278f1438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;7]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f6d27918748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;8]" time="0.0007343292236328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f6cfe032198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;9]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f6cfe09ea20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;10]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f6cfe04cf60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;11]" time="0.00046896934509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f6cfe057c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;12]" time="0.0004169940948486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f6d27856f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;13]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f6d278aaa58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;14]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f6d278471d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;15]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f6cfe060748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;16]" time="0.0007982254028320312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f6cfe083c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;17]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f6d278aa5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;18]" time="0.0006301403045654297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f6d27856d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;19]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f6cfe0576a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;20]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f6cfe04cbe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;21]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f6cfe042710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;22]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f6cfe0602e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;23]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f6cfe060b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;24]" time="0.0007276535034179688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f6cfdfef0f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;25]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f6cfe060c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;26]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f6cfe09e198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;27]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f6cfe04cc50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;28]" time="0.0004849433898925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f6cfe0573c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;29]" time="0.0004782676696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f6d2786aac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;30]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f6d278aa320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;31]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f6cfe083c18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;32]" time="0.0007817745208740234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f6cfdfef630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;33]" time="0.0005042552947998047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f6d27856d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;34]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f6cfe0a65f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;35]" time="0.00047779083251953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f6cfe057240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;36]" time="0.0004811286926269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f6cfe0424a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;37]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f6cfe060ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;38]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f6d278f1a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;39]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f6cfdfef588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;40]" time="0.0007181167602539062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f6cfdfefc50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;41]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f6cfe060080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="359" name="test_boundary_mask_dtype[&lt;lambda&gt;42]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:359: &lt;py._xmlgen.raw object at 0x7f6cfe04c668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;0]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f6cfe0575f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;1]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f6d2786ab70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;2]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f6d278479b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;3]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f6cfdfef048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;4]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f6cfdfef438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;5]" time="0.0007832050323486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f6cfdff82b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;6]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f6cfdfef1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;7]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f6cfe083470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;8]" time="0.0004706382751464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f6d2786a438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;9]" time="0.0004680156707763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f6cfe0574a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;10]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f6cfe042b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;11]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f6cfe060080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;12]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f6cfdff8128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;13]" time="0.0007569789886474609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f6cfdff88d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;14]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f6d277f92e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;15]" time="0.0004124641418457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f6cfe057a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;16]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f6d2780d550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;17]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f6d27847518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;18]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f6cfdfefe80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;19]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f6cfdff89e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;20]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f6cfdff8400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;21]" time="0.0007212162017822266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f6cfdff8ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;22]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f6cfdff8358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;23]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f6cfdfef1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;24]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f6cfdfefda0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;25]" time="0.0004150867462158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f6cfe0a6240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;26]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f6cfe042710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;27]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f6cfe04c390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;28]" time="0.00041222572326660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f6cfe006048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;29]" time="0.0006921291351318359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f6cfe006550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;30]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f6cfe04cda0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;31]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f6d2780d748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;32]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f6d27847518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;33]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f6cfdfefe80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;34]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f6cfdff8160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;35]" time="0.00048542022705078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f6cfdff8da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;36]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f6cfe0064a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;37]" time="0.0007045269012451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f6cfe006b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;38]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f6cfdff87f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;39]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f6cfdfefda0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;40]" time="0.0004153251647949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f6d2786a438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;41]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f6d2780d748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="365" name="test_boundary_mask_entries_codim1[&lt;lambda&gt;42]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:365: &lt;py._xmlgen.raw object at 0x7f6cfe060358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;0]" time="0.00042247772216796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f6cfe006080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;1]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f6cfe006358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;2]" time="0.0006794929504394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f6cfe00f1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;3]" time="0.0004115104675292969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f6cfe0064a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;4]" time="0.0004096031188964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f6cfe060e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;5]" time="0.00041794776916503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f6cfe042e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;6]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f6d2786ac18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;7]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f6cfdfef240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;8]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f6cfdff8b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;9]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f6cfe00f048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;10]" time="0.0010340213775634766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f6cfe00f7f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;11]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f6d2786af60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;12]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f6d277f9438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;13]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f6cfe006908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;14]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f6cfe006d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;15]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f6cfdff8b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;16]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f6cfdfef278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;17]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f6d27856d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;18]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f6d279180b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;19]" time="0.0007369518280029297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f6cfe060978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;20]" time="0.0004138946533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f6cfdff8be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;21]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f6d2782cef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;22]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f6cfe006358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;23]" time="0.00041937828063964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f6d277bf518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;24]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f6d2780ddd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;25]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f6d2781c2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;26]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f6cfe00f978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;27]" time="0.0006964206695556641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f6cfe104710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;28]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f6cfe04cda0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;29]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f6d277bf5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;30]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f6cfe006c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;31]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f6cfdff8908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;32]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f6cfdfefb70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;33]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f6cfe00f550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;34]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f6cfe00fcf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;35]" time="0.0007033348083496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f6cfe01d278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;36]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f6cfe00fb00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;37]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f6cfdfef0f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;38]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f6cfdff8e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;39]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f6cfe006c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;40]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f6d277bf5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;41]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f6d2780dfd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="374" name="test_boundary_mask_entries_codim0[&lt;lambda&gt;42]" time="0.0004253387451171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:374: &lt;py._xmlgen.raw object at 0x7f6cfe01d160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;0]" time="0.0011372566223144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f6cfe01d7b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;1]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f6d2780d160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;2]" time="0.0004088878631591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f6cfe006198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;3]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f6d2782c9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;4]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f6cfdfef6a0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;5]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f6cfe00f470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;6]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f6cfe060160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;7]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f6cfe01d198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;8]" time="0.0007274150848388672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f6cfe01ddd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;9]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f6cfe00f1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;10]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f6cfdff8470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;11]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f6cfe006b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;12]" time="0.00047469139099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f6d277bf860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;13]" time="0.0005004405975341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f6d2781c940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;14]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f6cfe01da58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;15]" time="0.0004982948303222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f6cfe01d358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;16]" time="0.0007352828979492188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f6cfe02a438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;17]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f6cfe01d9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;18]" time="0.00041365623474121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f6d2781ca90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;19]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f6d277bfda0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;20]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f6cfe006be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;21]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f6cfdff8f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;22]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f6cfe00fcf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;23]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f6cfe02a2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;24]" time="0.000705718994140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f6cfe02aa58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;25]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f6d277cd518&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;26]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f6cfe006c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;27]" time="0.0004899501800537109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f6d277e3f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;28]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f6d2780d748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;29]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f6cfe01d9b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;30]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f6cfe02ab00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;31]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f6cfe02a5f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;32]" time="0.0007429122924804688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f6cfdfb20b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;33]" time="0.00041222572326660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f6cfe02a940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;34]" time="0.0004096031188964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f6cfe01d160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;35]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f6d2781cb38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;36]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f6d277e3f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;37]" time="0.0004863739013671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f6cfdff8b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;38]" time="0.0004229545593261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f6d277f14e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;39]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f6cfdfb21d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;40]" time="0.0007498264312744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f6cfdfb26d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;41]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f6d277f1ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="384" name="test_boundary_mask_entries_codim_d[&lt;lambda&gt;42]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:384: &lt;py._xmlgen.raw object at 0x7f6cfdff89e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;0]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f6d277e3588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;1]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f6cfe01df60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;2]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f6cfe02ac18&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;3]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f6cfe02ac50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;4]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f6cfdfb2278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;5]" time="0.0007178783416748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f6cfdfb2cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;6]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f6cfe02acc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;7]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f6cfe01d630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;8]" time="0.0005002021789550781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f6d277e3e10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;9]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f6cfdff8b00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;10]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f6cfe00f240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;11]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f6cfdfb2a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;12]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f6cfdfb2550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;13]" time="0.0007183551788330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f6cfdfbf358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;14]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f6cfdfb2978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;15]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f6cfdfeff60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;16]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f6d2782cf98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;17]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f6d277bfef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;18]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f6cfe01d630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;19]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f6cfe02ae80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;20]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f6cfdfbf1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;21]" time="0.0009849071502685547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f6cfdfbf978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;22]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f6d27784e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;23]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f6d27795748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;24]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f6cfdfb2908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;25]" time="0.0005714893341064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f6cfdfb2470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;26]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f6cfe02ae80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;27]" time="0.0004799365997314453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f6cfe01d5f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;28]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f6cfe00f470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;29]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f6cfe060358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;30]" time="0.0007390975952148438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f6cfe00f4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;31]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f6cfe01d198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;32]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f6cfe02af60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;33]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f6cfdfb2470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;34]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f6d27795dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;35]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f6d277f1978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;36]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f6d27784b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;37]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f6cfdfbf5f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;38]" time="0.0007979869842529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f6d27784d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;39]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f6d27795550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;40]" time="0.00046944618225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f6cfdfb2be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;41]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f6cfdfb2b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="395" name="test_boundaries_wrong_arguments[&lt;lambda&gt;42]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:395: &lt;py._xmlgen.raw object at 0x7f6cfe02aa58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;0]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f6cfe00f9e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;1]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f6cfdfbf550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;2]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f6cfdfbfe80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;3]" time="0.0007374286651611328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f6cfdfcd400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;4]" time="0.0004241466522216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f6cfdfbf358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;5]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f6cfe00fa58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;6]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f6cfe02a390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;7]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f6cfdfb2320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;8]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f6d27795748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;9]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f6d277f1ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;10]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f6cfdfcd2e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;11]" time="0.0006988048553466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f6cfdfcd940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;12]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f6d27795dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;13]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f6cfdfb2b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;14]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f6cfe02a588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;15]" time="0.00047588348388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f6cfe01d7f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;16]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f6cfdfbf550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;17]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f6cfdfcda58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;18]" time="0.00048232078552246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f6cfdfcd0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;19]" time="0.0007085800170898438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f6cfdfcdf60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;20]" time="0.0004165172576904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f6cfdfcd6d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;21]" time="0.000408172607421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f6cfdfbfd30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;22]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f6d277389b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;23]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f6cfe00f748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;24]" time="0.00041961669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f6d277a4550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;25]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f6d277e3588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;26]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f6cfdfd9080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;27]" time="0.0007092952728271484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f6cfdfd95c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;28]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f6cfdfb2b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;29]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f6d277a42b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;30]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f6d27738470&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;31]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f6cfdfbf2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;32]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f6cfdfcd4e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;33]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f6cfdfcd198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;34]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f6cfdfd9160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;35]" time="0.0007016658782958984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f6cfdfd9be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;36]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f6cfdfcdcf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;37]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f6d277495c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;38]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f6d27738668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;39]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f6d277a45f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;40]" time="0.0004229545593261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f6cfdfb2550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;41]" time="0.0004210472106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f6cfdfd9940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="403" name="test_boundaries_shape[&lt;lambda&gt;42]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:403: &lt;py._xmlgen.raw object at 0x7f6cfdfd9438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;0]" time="0.0007078647613525391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f6cfdfe3240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;1]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f6cfdfd9748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;2]" time="0.00041985511779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f6d27795dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;3]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f6d277a4208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;4]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f6d27738cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;5]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f6d27749a58&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;6]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f6cfdfcd7f0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;7]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f6cfdfe30b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;8]" time="0.0007081031799316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f6cfdfe3860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;9]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f6cfdfbf780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;10]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f6d27738860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;11]" time="0.0006296634674072266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f6d277a45f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;12]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f6d27757fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;13]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f6cfdfd9d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;14]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f6cfdfe3940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;15]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f6cfdfe3358&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;16]" time="0.0007388591766357422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f6cfdfe3e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;17]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f6cfdfe3390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;18]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f6cfdfd9080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;19]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f6cfdfd9cc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;20]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f6d277e3588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;21]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f6d27749da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;22]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f6d2776c828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;23]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f6cfdfcdcc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;24]" time="0.0007004737854003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f6cfdf6d4e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;25]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f6cfdfbfa20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;26]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f6cfe02a588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;27]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f6cfdfb2b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;28]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f6cfdfd9c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;29]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f6cfdfe3a20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;30]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f6cfdfe3d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;31]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f6cfdf6d3c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;32]" time="0.0010151863098144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f6cfdf6db00&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;33]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f6cfe02aef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;34]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f6d2776c828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;35]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f6cfdfe39b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;36]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f6cfdfe3e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;37]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f6cfdfd9c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;38]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f6cfdfcd0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;39]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f6cfdfbfa20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;40]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f6d2786a780&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;41]" time="0.0007908344268798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f6d277959e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="409" name="test_boundaries_dtype[&lt;lambda&gt;42]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:409: &lt;py._xmlgen.raw object at 0x7f6cfdfcdcc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;0]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f6cfdfd94a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;1]" time="0.0004742145538330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f6cfdfe3128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;2]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f6d2776ca20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;3]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f6d27749c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;4]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f6cfdfb2128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;5]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f6cfdf6d908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;6]" time="0.0007443428039550781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f6cfe02aef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;7]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f6d27856d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;8]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f6cfdfe3da0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;9]" time="0.0004870891571044922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f6d2770f550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;10]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f6d27784fd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;11]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f6cfdfbf2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;12]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f6cfdf6dcc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;13]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f6cfdf7c048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;14]" time="0.0008268356323242188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f6cfdf7c588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;15]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f6cfdf6d198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;16]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f6cfdfcdb38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;17]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f6cfdfd9be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;18]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f6cfdfe3128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;19]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f6d2776ca20&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;20]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f6d276fc438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;21]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f6cfdf7c0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;22]" time="0.0008108615875244141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f6cfdf7cac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;23]" time="0.0005042552947998047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f6d2776c828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;24]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f6cfdfe3278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;25]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f6cfdfd9710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;26]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f6cfdfcd198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;27]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f6cfdf6d198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;28]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f6cfdf7cb70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;29]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f6cfdf7c438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;30]" time="0.0007653236389160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f6cfdf86128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;31]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f6cfdf7c080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;32]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f6cfdf6d278&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;33]" time="0.0004799365997314453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f6cfdfcd630&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;34]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f6d2770ffd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;35]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f6cfdfe34e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;36]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f6d276fc438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;37]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f6cfdf862b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;38]" time="0.0007500648498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f6cfdf86748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;39]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f6d27749e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;40]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f6cfdfe3c88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;41]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f6cfdfd9f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="415" name="test_boundaries_entry_value_range[&lt;lambda&gt;42]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:415: &lt;py._xmlgen.raw object at 0x7f6cfdf6dcf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;0]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f6cfdf7c1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;1]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f6cfdf7c908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;2]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f6cfdf86400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;3]" time="0.0007464885711669922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f6cfdf86d68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;4]" time="0.00047397613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f6cfdf7ce80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;5]" time="0.00041985511779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f6cfdf6df28&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;6]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f6cfdfd9748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;7]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f6cfdfe3f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;8]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f6d2771fb38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;9]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f6cfdf86ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;10]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f6cfdf865f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;11]" time="0.0007886886596679688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f6cfdf903c8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;12]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f6cfdf86438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;13]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f6d2771f208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;14]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f6cfdfe3128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;15]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f6cfdfd9748&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;16]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f6cfdf6de80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;17]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f6cfdf7c908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;18]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f6cfdf90240&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;19]" time="0.0007500648498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f6cfdf909e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;20]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f6d2772ec50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;21]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f6d2770fe80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;22]" time="0.0004775524139404297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f6d2771f5f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;23]" time="0.00041747093200683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f6d276c27b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;24]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f6cfdf86ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;25]" time="0.0005004405975341797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f6cfdf90b70&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;26]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f6cfdf90588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;27]" time="0.00072479248046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f6cfdf9b048&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;28]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f6cfdf90828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;29]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f6cfdf864e0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;30]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f6d276c2e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;31]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f6d2771fbe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;32]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f6d2770fbe0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;33]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f6cfdfcd198&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;34]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f6cfdf9b160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;35]" time="0.0007860660552978516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f6cfdf9b668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;36]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f6cfdfd95c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;37]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f6d2776ceb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;38]" time="0.0004799365997314453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f6d276c2c50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;39]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f6cfdf86eb8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;40]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f6cfdf90a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;41]" time="0.0004799365997314453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f6cfdf900b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="422" name="test_boundaries_entries[&lt;lambda&gt;42]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:422: &lt;py._xmlgen.raw object at 0x7f6cfdf9b208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;0]" time="0.0010497570037841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f6cfdf9bc88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;1]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f6d276c2f98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;2]" time="0.0004909038543701172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f6cfdfbf2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;3]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f6cfdf90e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;4]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f6cfdf909e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;5]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f6cfdf86dd8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;6]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f6cfdf7c8d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;7]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f6cfdf6d1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;8]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f6cfe060828&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;9]" time="0.0007474422454833984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f6d2776cd68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;10]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f6cfdf7cd68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;11]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f6cfdf86390&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;12]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f6cfdf90a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;13]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f6d2770fa90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;14]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f6d276d2128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;15]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f6d2771f940&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;16]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f6cfdf9bba8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;17]" time="0.0006992816925048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f6d276c2cf8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;18]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f6d276e5b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;19]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f6cfdf90860&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;20]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f6cfdf909e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;21]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f6cfdf7ccc0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;22]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f6cfdf6d5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;23]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f6cfdf9bac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;24]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f6cfdfab1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;25]" time="0.000797271728515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f6cfdfab710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;26]" time="0.0004169940948486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f6cfdf9be10&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;27]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f6cfdf7c080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;28]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f6d276755f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;29]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f6cfdf90a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;30]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f6d276d2710&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;31]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f6d276c2128&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;32]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f6cfdfab0b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;33]" time="0.0007989406585693359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f6cfdfabc50&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;34]" time="0.00047087669372558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f6cfdfd9f60&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;35]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f6cfdf90e48&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;36]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f6cfdf86be0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;37]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f6cfdf7cc88&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;38]" time="0.00046896934509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f6cfdf9bfd0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;39]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f6cfdfab588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;40]" time="0.0004787445068359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f6cfdfab208&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;41]" time="0.0007679462432861328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f6cfdf342b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="428" name="test_pickle[&lt;lambda&gt;42]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:428: &lt;py._xmlgen.raw object at 0x7f6cfdfab2b0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;0]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f6cfdf9bd68&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;1]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f6cfdf6d1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;2]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f6d27675b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;3]" time="0.0004680156707763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f6cfdf90668&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;4]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f6d276e5b38&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;5]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f6cfdf34160&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;6]" time="0.0007076263427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f6cfdf348d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;7]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f6cfdf90ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;8]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f6d27675a90&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;9]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f6cfdf7c5c0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;10]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f6d27684e80&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;11]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f6cfdfab588&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;12]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f6cfdf349e8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;13]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f6cfdf34400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;14]" time="0.0007755756378173828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f6cfdf34ef0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;15]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f6cfdf346d8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;16]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f6cfdfab1d0&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;17]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f6d27696400&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;18]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f6cfdf9bf98&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;19]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f6d27675d30&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;20]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f6cfdf900b8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;21]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f6cfdf3f080&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;22]" time="0.0007216930389404297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f6cfdf3f550&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;23]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f6cfdf90438&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;24]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f6d276755f8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;25]" time="0.00041413307189941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f6cfdf9b908&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;26]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f6cfdfab320&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;27]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f6cfdf34978&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;28]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f6cfdf34ac8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;29]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f6cfdf3f4a8&gt;</skipped></testcase><testcase classname="src.pymortests.grid" file="src/pymortests/grid.py" line="432" name="test_visualize[&lt;lambda&gt;30]" time="0.0007359981536865234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/grid.py:432: &lt;py._xmlgen.raw object at 0x7f6cfdf3fb70&gt;</skipped></testcase><testcase classname="src.pymortests.gui" file="src/pymortests/gui.py" line="26" name="test_visualize_patch[backend_gridtype0]" time="0.0005288124084472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/gui.py:26: &lt;py._xmlgen.raw object at 0x7f6cfdf34b38&gt;</skipped></testcase><testcase classname="src.pymortests.gui" file="src/pymortests/gui.py" line="26" name="test_visualize_patch[backend_gridtype1]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/gui.py:26: &lt;py._xmlgen.raw object at 0x7f6d27696d30&gt;</skipped></testcase><testcase classname="src.pymortests.gui" file="src/pymortests/gui.py" line="26" name="test_visualize_patch[backend_gridtype2]" time="0.00041675567626953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/gui.py:26: &lt;py._xmlgen.raw object at 0x7f6cfdf9bd68&gt;</skipped></testcase><testcase classname="src.pymortests.la" file="src/pymortests/la.py" line="13" name="test_induced" time="0.0004901885986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/la.py:13: &lt;py._xmlgen.raw object at 0x7f6d276750b8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[scipy-1-200]" time="0.0004734992980957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7f6cfdf86dd8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[scipy-1-300]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7f6cfdf3f908&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[scipy-2-200]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7f6cfdf3f6a0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[scipy-2-300]" time="0.0007529258728027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7f6cfdf482b0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[slycot-1-200]" time="0.0005018711090087891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7f6cfdf3f1d0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[slycot-1-300]" time="0.0004761219024658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7f6d241a03c8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[slycot-2-200]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7f6d27675fd0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[slycot-2-300]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7f6cfdf9b860&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[pymess_lyap-1-200]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7f6cfdfab128&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[pymess_lyap-1-300]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7f6cfdf34b38&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[pymess_lyap-2-200]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7f6cfdf48160&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[pymess_lyap-2-300]" time="0.0007567405700683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7f6cfdf488d0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[pymess_lradi-1-200]" time="0.00047087669372558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7f6cfdfab2e8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[pymess_lradi-1-300]" time="0.00047469139099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7f6cfdf9bd68&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[pymess_lradi-2-200]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7f6cfdf90860&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[pymess_lradi-2-300]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7f6d241a0c18&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[lradi-1-200]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7f6cfdf3f048&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[lradi-1-300]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7f6cfdf489b0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[lradi-2-200]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7f6cfdf48320&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="72" name="test_cgf_dense[lradi-2-300]" time="0.0010783672332763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:72: &lt;py._xmlgen.raw object at 0x7f6cfdf48ef0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[slycot-1-200]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7f6d27684e80&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[slycot-1-300]" time="0.0005116462707519531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7f6d27696a90&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[slycot-2-200]" time="0.0004992485046386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7f6cfdf48080&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[slycot-2-300]" time="0.0005002021789550781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7f6cfdf48550&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[pymess_lyap-1-200]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7f6cfdf3f400&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[pymess_lyap-1-300]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7f6cfdf3ff60&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[pymess_lyap-2-200]" time="0.0005180835723876953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7f6cfdf349e8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[pymess_lyap-2-300]" time="0.0004851818084716797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7f6cfdfab780&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[pymess_lradi-1-200]" time="0.0008151531219482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7f6cfdf342b0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[pymess_lradi-1-300]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7f6cfdf3f550&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[pymess_lradi-2-200]" time="0.0005035400390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7f6cfdf3fe10&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[pymess_lradi-2-300]" time="0.0005021095275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7f6cfdf48160&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[lradi-1-200]" time="0.0004913806915283203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7f6cfdf48fd0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[lradi-1-300]" time="0.0005087852478027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7f6d27696208&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[lradi-2-200]" time="0.0004801750183105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7f6cfdf90668&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="92" name="test_cgf_dense_E[lradi-2-300]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:92: &lt;py._xmlgen.raw object at 0x7f6d276fc240&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[scipy-1-200]" time="0.0008211135864257812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7f6cfdf9b860&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[scipy-1-300]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7f6d276e57f0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[scipy-2-200]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7f6d27696208&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[scipy-2-300]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7f6cfdf48550&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[slycot-1-200]" time="0.0005130767822265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7f6cfdf3f400&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[slycot-1-300]" time="0.0004932880401611328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7f6d241c0550&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[slycot-2-200]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7f6cfdf34940&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[slycot-2-300]" time="0.0005102157592773438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7f6cfdf59438&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[pymess_lyap-1-200]" time="0.0007700920104980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7f6cfdf59978&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[pymess_lyap-1-300]" time="0.0004775524139404297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7f6d241c0fd0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[pymess_lyap-2-200]" time="0.0004763603210449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7f6cfe2bd278&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[pymess_lyap-2-300]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7f6cfdf48320&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[pymess_lradi-1-200]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7f6d241afd30&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[pymess_lradi-1-300]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7f6d27684f28&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[pymess_lradi-2-200]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7f6cfdf59160&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[pymess_lradi-2-300]" time="0.0004849433898925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7f6cfdf59320&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[lradi-1-200]" time="0.0007755756378173828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7f6cfdf59eb8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[lradi-1-300]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7f6cfdf59d30&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[lradi-2-200]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7f6cfdf59630&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="120" name="test_cgf_sparse[lradi-2-300]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:120: &lt;py._xmlgen.raw object at 0x7f6cfdf7c5c0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[slycot-1-200]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7f6d2414b240&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[slycot-1-300]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7f6cfdf48438&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[slycot-2-200]" time="0.0004754066467285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7f6cfdf3ffd0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[slycot-2-300]" time="0.0004975795745849609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7f6cfdf34b38&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[pymess_lyap-1-200]" time="0.0007987022399902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7f6cfdf62518&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[pymess_lyap-1-300]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7f6cfdf3fa58&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[pymess_lyap-2-200]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7f6cfdf48438&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[pymess_lyap-2-300]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7f6d2414b8d0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[pymess_lradi-1-200]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7f6d27696208&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[pymess_lradi-1-300]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7f6cfdf59128&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[pymess_lradi-2-200]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7f6cfdf9b860&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[pymess_lradi-2-300]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7f6cfdf62438&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[lradi-1-200]" time="0.0007650852203369141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7f6cfdf62b38&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[lradi-1-300]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7f6cfdf59dd8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[lradi-2-200]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7f6d241afd30&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="141" name="test_cgf_sparse_E[lradi-2-300]" time="0.0004780292510986328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:141: &lt;py._xmlgen.raw object at 0x7f6cfdf48e10&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[scipy-1-200]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7f6d2415d940&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[scipy-1-300]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7f6cfdf3f748&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[scipy-2-200]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7f6cfdf62828&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[scipy-2-300]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7f6cfdf62278&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[slycot-1-200]" time="0.0007555484771728516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7f6cfdf6b198&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[slycot-1-300]" time="0.0004203319549560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7f6cfdf626a0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[slycot-2-200]" time="0.00041937828063964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7f6cfdf3f7f0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[slycot-2-300]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7f6d2416e240&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[pymess_lyap-1-200]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7f6cfdf48cf8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[pymess_lyap-1-300]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7f6d276e5dd8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[pymess_lyap-2-200]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7f6cfdf592e8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[pymess_lyap-2-300]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7f6cfdf6b320&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[pymess_lradi-1-200]" time="0.0007808208465576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7f6cfdf6b7b8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[pymess_lradi-1-300]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7f6cfdf59358&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[pymess_lradi-2-200]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7f6cfdf48e10&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[pymess_lradi-2-300]" time="0.00047707557678222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7f6d2415d4a8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[lradi-1-200]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7f6d2416e978&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[lradi-1-300]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7f6cfdf62748&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[lradi-2-200]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7f6cfdf62a58&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="169" name="test_ogf_dense[lradi-2-300]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:169: &lt;py._xmlgen.raw object at 0x7f6cfdf6b048&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[slycot-1-200]" time="0.0007765293121337891"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7f6cfdf6bdd8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[slycot-1-300]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7f6cfdf62e80&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[slycot-2-200]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7f6d2416ec18&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[slycot-2-300]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7f6d2415d550&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[pymess_lyap-1-200]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7f6cfdf7c5c0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[pymess_lyap-1-300]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7f6cfdf59f28&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[pymess_lyap-2-200]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7f6cfdf6ba90&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[pymess_lyap-2-300]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7f6cfdf6b6d8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[pymess_lradi-1-200]" time="0.0008053779602050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7f6cfdef5438&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[pymess_lradi-1-300]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7f6cfdf6bb38&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[pymess_lradi-2-200]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7f6cfdf59ba8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[pymess_lradi-2-300]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7f6cfdf48400&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[lradi-1-200]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7f6d2415d4a8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[lradi-1-300]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7f6d2416eeb8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[lradi-2-200]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7f6cfdf62fd0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="189" name="test_ogf_dense_E[lradi-2-300]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:189: &lt;py._xmlgen.raw object at 0x7f6cfdef52b0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[scipy-1-200]" time="0.0007421970367431641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7f6cfdef5a58&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[scipy-1-300]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7f6d276c2cf8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[scipy-2-200]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7f6cfdf342e8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[scipy-2-300]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7f6cfdf7c5c0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[slycot-1-200]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7f6d2410f4a8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[slycot-1-300]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7f6cfdf6bb38&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[slycot-2-200]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7f6cfdef5be0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[slycot-2-300]" time="0.0004241466522216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7f6cfdef5128&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[pymess_lyap-1-200]" time="0.0010173320770263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7f6cfdeff0b8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[pymess_lyap-1-300]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7f6cfdf48438&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[pymess_lyap-2-200]" time="0.000476837158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7f6d2416ecc0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[pymess_lyap-2-300]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7f6cfdef5f98&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[pymess_lradi-1-200]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7f6cfdef5780&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[pymess_lradi-1-300]" time="0.00048089027404785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7f6cfdf6ba90&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[pymess_lradi-2-200]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7f6cfdf62e10&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[pymess_lradi-2-300]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7f6cfdf62550&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[lradi-1-200]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7f6cfdf59358&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[lradi-1-300]" time="0.0008149147033691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7f6cfdf59ba8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[lradi-2-200]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7f6cfdf6b358&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="217" name="test_ogf_sparse[lradi-2-300]" time="0.0004210472106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:217: &lt;py._xmlgen.raw object at 0x7f6cfdf6b978&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[slycot-1-200]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7f6cfdef52e8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[slycot-1-300]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7f6cfdf3f748&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[slycot-2-200]" time="0.000514984130859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7f6cfdf48710&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[slycot-2-300]" time="0.0004200935363769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7f6d2410f748&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[pymess_lyap-1-200]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7f6cfdf86dd8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[pymess_lyap-1-300]" time="0.0007574558258056641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7f6d276849e8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[pymess_lyap-2-200]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7f6d2411f780&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[pymess_lyap-2-300]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7f6d2417f5f8&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[pymess_lradi-1-200]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7f6cfdef5978&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[pymess_lradi-1-300]" time="0.0004723072052001953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7f6cfdef5780&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[pymess_lradi-2-200]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7f6cfdf6bf98&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[pymess_lradi-2-300]" time="0.0004763603210449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7f6cfdf9b908&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[lradi-1-200]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7f6cfdeff5c0&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[lradi-1-300]" time="0.0008168220520019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7f6cfdeffb00&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[lradi-2-200]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7f6cfdf6bf98&gt;</skipped></testcase><testcase classname="src.pymortests.lyapunov" file="src/pymortests/lyapunov.py" line="238" name="test_ogf_sparse_E[lradi-2-300]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/lyapunov.py:238: &lt;py._xmlgen.raw object at 0x7f6cfdef5358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="21" name="test_selection_op" time="0.000522613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:21: &lt;py._xmlgen.raw object at 0x7f6cfdef5940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="53" name="test_lincomb_op" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:53: &lt;py._xmlgen.raw object at 0x7f6cfdf48710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;0]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f6d2411f240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;1]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f6cfdeff8d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;2]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f6cfdeff240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;3]" time="0.0008058547973632812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f6cfdf0d0b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;4]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f6cfdeff240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;5]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f6cfdeff828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;6]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f6d0960ae80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;7]" time="0.0004680156707763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f6d2412d400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;8]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f6cfdef5da0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;9]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f6cfdf62b00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;10]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f6cfdf0d1d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;11]" time="0.0007817745208740234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f6cfdf0d6d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;12]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f6cfdf62320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;13]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f6cfdef5128&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;14]" time="0.00046515464782714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f6d2417f5f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;15]" time="0.0004799365997314453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f6d2410f358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;16]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f6cfdeff860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;17]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f6cfdeffc18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;18]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f6cfdf0d198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;19]" time="0.0007793903350830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f6cfdf0dcf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;20]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f6cfdeff9e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;21]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f6d27918898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;22]" time="0.0004706382751464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f6cfdf48710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;23]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f6cfdef5438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;24]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f6cfdf6bef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;25]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f6cfdf0d1d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;26]" time="0.00047898292541503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f6cfdf0d588&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;27]" time="0.0007216930389404297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f6cfdf17358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;28]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f6cfdf0da20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;29]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f6d2414bb70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;30]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f6cfdef5438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;31]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f6d2417fdd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;32]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f6d093b1208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;33]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f6cfdeffe80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;34]" time="0.0004813671112060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f6cfdf171d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;35]" time="0.0008382797241210938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f6cfdf17978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;36]" time="0.00048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f6d093b1400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;37]" time="0.0004999637603759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f6d2417fdd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;38]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f6d2412dbe0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;39]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f6d241afdd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="77" name="test_pickle[&lt;lambda&gt;40]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:77: &lt;py._xmlgen.raw object at 0x7f6cfdf0dbe0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;0]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f6cfdf17550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;1]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f6cfdf174e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;2]" time="0.0007712841033935547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f6cfdf17f98&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;3]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f6cfdf17668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;4]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f6cfdf0dc18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;5]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f6cfdf6b9b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;6]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f6cfdf624e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;7]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f6d2411f780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;8]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f6d093b10b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;9]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f6cfdf240b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;10]" time="0.0007541179656982422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f6cfdf245f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;11]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f6d093b1c88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;12]" time="0.0004928112030029297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f6d2412da90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;13]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f6cfdf6bf98&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;14]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f6cfdf0dc18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;15]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f6cfdf175f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;16]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f6cfdf170b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;17]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f6cfdf24278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;18]" time="0.0008406639099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f6cfdf24c18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;19]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f6cfdf17cf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;20]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f6cfdf0db00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;21]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f6cfdf624e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;22]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f6d2411f780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;23]" time="0.0004811286926269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f6cfdeff390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;24]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f6cfdf240f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;25]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f6cfdf24470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;26]" time="0.0010051727294921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f6cfdeae278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;27]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f6d2416ef60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;28]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f6d093d8588&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;29]" time="0.0005362033843994141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f6cfdf24ef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;30]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f6cfdf240f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;31]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f6cfdf17cf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;32]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f6cfdf17978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;33]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f6cfdf0d860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;34]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f6cfdeffac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;35]" time="0.0007829666137695312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f6cfdeffef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;36]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f6cfdf17320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;37]" time="0.00047397613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f6cfdf24160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;38]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f6cfdf24748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="81" name="test_pickle_without_dumps_function[&lt;lambda&gt;39]" time="0.0004792213439941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:81: &lt;py._xmlgen.raw object at 0x7f6d093d8c18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;0]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f6d09367b70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;1]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f6d093b1400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;2]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f6cfdf59978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;3]" time="0.0007586479187011719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f6cfdfabc50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;4]" time="0.0004897117614746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f6d09367780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;5]" time="0.00048804283142089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f6d095f1cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;6]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f6cfdf242b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;7]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f6cfdf24438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;8]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f6cfdf179b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;9]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f6d2786a780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;10]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f6cfdeae780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;11]" time="0.0008127689361572266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f6cfdeaecc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;12]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f6cfdf17780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;13]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f6cfdf240b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;14]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f6d093d8ac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;15]" time="0.0004878044128417969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f6d09377be0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;16]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f6d093b10b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;17]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f6cfdeaea20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;18]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f6cfdeae080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;19]" time="0.0007214546203613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f6cfdebd240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;20]" time="0.00041556358337402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f6cfdeaeb38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;21]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f6d093b16a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;22]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f6d095f1d68&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;23]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f6cfdf24cf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;24]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f6d0938b6a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;25]" time="0.0004982948303222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f6cfdf170b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;26]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f6cfdebd0f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;27]" time="0.0007431507110595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f6cfdebd860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;28]" time="0.0004756450653076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f6d0938b898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;29]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f6cfdf24160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;30]" time="0.00041985511779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f6d093d86d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;31]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f6cfdef58d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;32]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f6cfdeae8d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;33]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f6cfdebd908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;34]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f6cfdebd358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;35]" time="0.0007383823394775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f6cfdebde80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;36]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f6cfdebd390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;37]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f6cfdeae7b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;38]" time="0.0004143714904785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f6cfdeaee10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;39]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f6d09367978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="85" name="test_apply[&lt;lambda&gt;40]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:85: &lt;py._xmlgen.raw object at 0x7f6cfdf24cf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;0]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f6d0938b6a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;1]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f6cfdf0d0f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;2]" time="0.0007426738739013672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f6cfdec34e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;3]" time="0.0005445480346679688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f6d0938bbe0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;4]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f6cfdf240b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;5]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f6d09367390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;6]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f6cfdeae128&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;7]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f6cfdebd4e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;8]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f6cfdebdcc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;9]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f6cfdec33c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;10]" time="0.0007281303405761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f6cfdec3b00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;11]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f6cfdebd668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;12]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f6cfdeaeda0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;13]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f6d093670f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;14]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f6cfdf0d400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;15]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f6d0932d5f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;16]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f6cfdec37f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;17]" time="0.0004143714904785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f6cfdec3198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;18]" time="0.0007224082946777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f6cfdecf160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;19]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f6cfdec3860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;20]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f6d0932da90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;21]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f6d0938b898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;22]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f6cfdf240b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;23]" time="0.00048351287841796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f6cfdeaeeb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;24]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f6cfdebdb38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;25]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f6cfdecf1d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;26]" time="0.0007557868957519531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f6cfdecf780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;27]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f6cfdebd9b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;28]" time="0.0004100799560546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f6cfdeae588&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;29]" time="0.0004968643188476562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f6cfdeffef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;30]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f6d0932dc88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;31]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f6cfdec3208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;32]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f6cfdf17f60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;33]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f6cfdecf2b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;34]" time="0.0007207393646240234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f6cfdecfda0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;35]" time="0.0004146099090576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f6cfdec37b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;36]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f6d0938b748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;37]" time="0.00041937828063964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f6d09377f28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;38]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f6cfdf59358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;39]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f6d0933b550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="96" name="test_mul[&lt;lambda&gt;40]" time="0.00041604042053222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:96: &lt;py._xmlgen.raw object at 0x7f6cfdecf1d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;0]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f6cfdecf630&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;1]" time="0.0009360313415527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f6cfdedb400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;2]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f6cfdf24cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;3]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f6d0932df28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;4]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f6cfdecf4e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;5]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f6cfdecf780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;6]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f6cfdec3ef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;7]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f6cfdf0d400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;8]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f6cfdebde80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;9]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f6cfdeaecf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;10]" time="0.0007207393646240234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f6cfdeae588&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;11]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f6cfdf0d400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;12]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f6cfdec3c88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;13]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f6cfdecf208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;14]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f6cfdecf908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;15]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f6d093b1400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;16]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f6d0933b9e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;17]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f6cfdeff9b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;18]" time="0.0007421970367431641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f6cfdf59eb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;19]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f6d0934d9e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;20]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f6d0932d7f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;21]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f6cfdecf550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;22]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f6cfdec32b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;23]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f6cfdf0dbe0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;24]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f6cfdeae4e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;25]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f6cfdedb908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;26]" time="0.0007190704345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f6cfdedbe48&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;27]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f6cfdec3e48&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;28]" time="0.00041484832763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f6cfdecfd68&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;29]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f6d0932dfd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;30]" time="0.00041675567626953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f6d0935f6a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;31]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f6d0934ddd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;32]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f6cfdedbba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;33]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f6cfdedb208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;34]" time="0.0008950233459472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f6cfdee93c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;35]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f6cfdedbc88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;36]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f6d0933b9e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;37]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f6d0935f6a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;38]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f6cfdecfb70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;39]" time="0.0004820823669433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f6cfdec3b00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="103" name="test_rmul[&lt;lambda&gt;40]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:103: &lt;py._xmlgen.raw object at 0x7f6cfdebd438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;0]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f6cfdee9278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;1]" time="0.0006866455078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f6cfdee99e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;2]" time="0.0004131793975830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f6cfdec3f60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;3]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f6cfdecf550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;4]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f6d0935ff28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;5]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f6cfdeff668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;6]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f6cfdedb780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;7]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f6cfdee9b38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;8]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f6cfdee9080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;9]" time="0.0006673336029052734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f6cfde72048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;10]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f6cfdee9908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;11]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f6d0934d898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;12]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f6cfdedbeb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;13]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f6d0935f0b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;14]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f6d09399fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;15]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f6cfdec3b38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;16]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f6cfde72160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;17]" time="0.0007102489471435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f6cfde72668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;18]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f6d092ed390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;19]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f6d0938b748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;20]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f6cfdedbcc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;21]" time="0.0004241466522216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f6d0934df28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;22]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f6cfdee9198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;23]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f6cfdee9080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;24]" time="0.00041747093200683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f6cfde722e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;25]" time="0.0007231235504150391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f6cfde72c88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;26]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f6cfdee9d68&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;27]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f6cfdedb278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;28]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f6d0935fdd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;29]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f6d0938b748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;30]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f6d092edf28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;31]" time="0.0004134178161621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f6cfde72198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;32]" time="0.00041604042053222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f6cfde724e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;33]" time="0.0006601810455322266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f6cfde7d2e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;34]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f6cfde72a58&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;35]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f6d092edf28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;36]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f6d0938b358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;37]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f6cfdeffb38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;38]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f6d09302be0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;39]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f6cfdee9cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="110" name="test_neg[&lt;lambda&gt;40]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:110: &lt;py._xmlgen.raw object at 0x7f6cfde7d160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;0]" time="0.0006806850433349609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f6cfde7d908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;1]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f6d09302e80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;2]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f6cfdedb6d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;3]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f6d09311748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;4]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f6cfdebd860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;5]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f6cfde72940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;6]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f6cfde7da20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;7]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f6cfde7d438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;8]" time="0.0007681846618652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f6cfde7df28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;9]" time="0.0004153251647949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f6cfde7da90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;10]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f6cfde722e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;11]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f6cfdec3b00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;12]" time="0.0004107952117919922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f6d09311a20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;13]" time="0.0004189014434814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f6cfdedb908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;14]" time="0.00041484832763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f6d092a57f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;15]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f6cfde8a048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;16]" time="0.001062154769897461"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f6cfde8a588&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;17]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f6d0938b358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;18]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f6d09311208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;19]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f6cfde7d4a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;20]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f6cfde7dfd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;21]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f6cfde72eb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;22]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f6cfde72048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;23]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f6cfdeffb38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;24]" time="0.00041365623474121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f6cfdedb160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;25]" time="0.0007491111755371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f6cfdedb470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;26]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f6cfdebd6a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;27]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f6cfde72eb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;28]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f6cfde7d748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;29]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f6cfde7d128&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;30]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f6d0935f400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;31]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f6d092a5e80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;32]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f6d2786a780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;33]" time="0.0007071495056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f6cfdeae4e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;34]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f6d0935f9e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;35]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f6cfde7d978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;36]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f6cfde7dcf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;37]" time="0.00041937828063964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f6cfde72e80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;38]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f6cfdee9cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;39]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f6cfde8a630&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="116" name="test_apply2[&lt;lambda&gt;40]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:116: &lt;py._xmlgen.raw object at 0x7f6cfde8aa90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;0]" time="0.0007305145263671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f6cfde8afd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;1]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f6cfde8a748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;2]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f6cfdee98d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;3]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f6cfde72f60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;4]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f6d092b5550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;5]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f6cfde7dcf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;6]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f6d0935fb38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;7]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f6cfdeae2e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;8]" time="0.0007402896881103516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f6cfde96550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;9]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f6cfdecf1d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;10]" time="0.0004203319549560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f6cfde7d2e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;11]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f6cfdebd278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;12]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f6cfdee99b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;13]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f6cfde8ac88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;14]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f6cfde8aef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;15]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f6cfde96470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;16]" time="0.0007486343383789062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f6cfde96b70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;17]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f6cfdeffb38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;18]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f6cfde72e80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;19]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f6d092b59e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;20]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f6cfde7db38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;21]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f6d09302e80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;22]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f6cfde96898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;23]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f6cfde96320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;24]" time="0.0007381439208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f6cfdea31d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;25]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f6cfde96940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;26]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f6d0935f9e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;27]" time="0.00041484832763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f6cfde7db38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;28]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f6cfdebdba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;29]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f6cfde729b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;30]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f6cfde8ab70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;31]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f6cfdea3048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;32]" time="0.0007092952728271484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f6cfdea37f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;33]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f6cfdeffb38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;34]" time="0.0004711151123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f6d092b5160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;35]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f6d092d86a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;36]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f6cfde7d630&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;37]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f6cfde96780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;38]" time="0.000415802001953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f6cfdea3518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;39]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f6cfdea3048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="126" name="test_pairwise_apply2[&lt;lambda&gt;40]" time="0.0008132457733154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:126: &lt;py._xmlgen.raw object at 0x7f6cfdea3e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;0]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f6cfde96e80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;1]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f6cfde7d208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;2]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f6d092d85f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;3]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f6d092b5be0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;4]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f6cfde8a630&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;5]" time="0.0005350112915039062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f6cfdea3b70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;6]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f6cfdea38d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;7]" time="0.00077056884765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f6cfde2e470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;8]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f6cfdea3940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;9]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f6cfde8a8d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;10]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f6cfde72048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;11]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f6d092d8358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;12]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f6d0927b160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;13]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f6cfde96fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;14]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f6cfde2e2e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;15]" time="0.0006995201110839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f6cfde2ea90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;16]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f6d09302e80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;17]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f6d0935fb38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;18]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f6d092b50b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;19]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f6d092c5b38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;20]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f6cfdea3940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;21]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f6cfde2ec18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;22]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f6cfde2e160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;23]" time="0.0007061958312988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f6cfde360f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;24]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f6cfde2e978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;25]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f6cfdedb4e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;26]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f6cfdea3b00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;27]" time="0.00047087669372558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f6d092b54a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;28]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f6d0927bfd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;29]" time="0.00047850608825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f6d093025f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;30]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f6cfde36208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;31]" time="0.0011196136474609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f6cfde36710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;32]" time="0.0004949569702148438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f6d092d8b38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;33]" time="0.0004811286926269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f6d092c5b38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;34]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f6cfde2e320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;35]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f6cfde2eef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;36]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f6cfdea36a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;37]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f6d092a5fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;38]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f6d093027f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;39]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f6cfde8a438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="135" name="test_apply_adjoint[&lt;lambda&gt;40]" time="0.0007891654968261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:135: &lt;py._xmlgen.raw object at 0x7f6cfdec34a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;0]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f6cfdea32e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;1]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f6cfdee98d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;2]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f6cfde2e390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;3]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f6d0928a400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;4]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f6cfde72e80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;5]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f6d0927bd30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;6]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f6cfde367f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;7]" time="0.0007658004760742188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f6cfdedbe10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;8]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f6cfde72390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;9]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f6d0928ab38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;10]" time="0.0004737377166748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f6cfde2e438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;11]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f6cfdea3e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;12]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f6cfde96f98&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;13]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f6cfde367b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;14]" time="0.00048804283142089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f6cfde36c18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;15]" time="0.0007598400115966797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f6cfde45198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;16]" time="0.000507354736328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f6cfde36240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;17]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f6cfde96b70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;18]" time="0.00047516822814941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f6cfdea32e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;19]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f6cfde2ec18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;20]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f6cfde2ec88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;21]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f6d0927b6a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;22]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f6cfde45080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;23]" time="0.0010793209075927734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f6cfde456d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;24]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f6cfde72048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;25]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f6cfde2ee10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;26]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f6cfde8a8d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;27]" time="0.00041937828063964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f6cfde96b70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;28]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f6cfde361d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;29]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f6cfde36cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;30]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f6cfde45048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;31]" time="0.0007526874542236328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f6cfde45cf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;32]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f6cfde36978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;33]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f6cfde96ba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;34]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f6d0929bfd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;35]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f6cfde2ec88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;36]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f6d0927b208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;37]" time="0.0004899501800537109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f6cfde459b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;38]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f6cfde455c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;39]" time="0.0007650852203369141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f6cfde50358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="151" name="test_apply_adjoint_2[&lt;lambda&gt;40]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:151: &lt;py._xmlgen.raw object at 0x7f6cfde45278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;0]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f6d0928a898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;1]" time="0.0004980564117431641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f6cfde2e470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;2]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f6cfdea3cf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;3]" time="0.0004763603210449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f6d0922e400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;4]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f6cfde363c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;5]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f6cfde501d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;6]" time="0.0007059574127197266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f6cfde50978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;7]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f6cfde96470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;8]" time="0.0004911422729492188"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f6cfdea3908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;9]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f6d0927bb38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;10]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f6d0928a550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;11]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f6cfde45eb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;12]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f6cfde50550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;13]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f6cfde504e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;14]" time="0.0009372234344482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f6cfde50f98&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;15]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f6cfde500b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;16]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f6cfde45ba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;17]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f6cfde45b70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;18]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f6d0929bbe0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;19]" time="0.00041937828063964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f6d0922e358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;20]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f6d0924f400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;21]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f6cfde5b0b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;22]" time="0.000728607177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f6cfde5b5f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;23]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f6d0924fa90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;24]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f6cfdea30f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;25]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f6cfde2e470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;26]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f6cfde45ef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;27]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f6cfde50b00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;28]" time="0.00047850608825683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f6d0923c0b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;29]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f6cfde5b278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;30]" time="0.0007350444793701172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f6cfde5bc18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;31]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f6cfde50b00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;32]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f6cfde453c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;33]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f6cfde2e7f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;34]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f6d0922e358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;35]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f6cfde36f60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;36]" time="0.0004150867462158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f6cfde5b0f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;37]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f6cfde5b470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;38]" time="0.0007288455963134766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f6cfde64278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;39]" time="0.00048065185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f6cfde5b358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="162" name="test_H[&lt;lambda&gt;40]" time="0.00043010711669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:162: &lt;py._xmlgen.raw object at 0x7f6cfde36f60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;0]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f6cfdea3cf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;1]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f6d0929bb38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;2]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f6cfde50198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;3]" time="0.0004088878631591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f6d0925d898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;4]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f6cfde640f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;5]" time="0.0009343624114990234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f6cfde64898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;6]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f6d0929bbe0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;7]" time="0.0004153251647949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f6d0924fdd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;8]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f6cfde5bcf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;9]" time="0.0004146099090576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f6cfde5b668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;10]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f6cfde50550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;11]" time="0.00041413307189941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f6cfde45898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;12]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f6cfde36a58&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;13]" time="0.0004184246063232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f6d2412d7f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;14]" time="0.0007650852203369141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f6cfde36550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;15]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f6cfdf6b978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;16]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f6cfde5bc50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;17]" time="0.0004916191101074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f6cfde5b7b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;18]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f6d0924fdd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;19]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f6cfde2e160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;20]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f6d0925d2b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;21]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f6cfde64588&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;22]" time="0.000720977783203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f6d0925d898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;23]" time="0.0004153251647949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f6d092b50b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;24]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f6d0924f9e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;25]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f6cfde5b278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;26]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f6cfde50390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;27]" time="0.0004856586456298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f6cfde45eb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;28]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f6cfde64978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;29]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f6cfde64da0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;30]" time="0.0007674694061279297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f6cfddf4320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;31]" time="0.0004253387451171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f6cfde64be0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;32]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f6cfde45eb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;33]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f6cfde50978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;34]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f6cfde5bd68&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;35]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f6d09202400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;36]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f6d091f2940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;37]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f6cfddf4208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;38]" time="0.0007467269897460938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f6cfddf4860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;39]" time="0.00048470497131347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f6d091f2b38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="173" name="test_apply_inverse[&lt;lambda&gt;40]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:173: &lt;py._xmlgen.raw object at 0x7f6d09202550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;0]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f6cfde5b5f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;1]" time="0.0004754066467285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f6cfde45cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;2]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f6cfde64438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;3]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f6cfddf4470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;4]" time="0.0004818439483642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f6cfddf4080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;5]" time="0.0007197856903076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f6cfddf4e80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;6]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f6cfddf40f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;7]" time="0.0004100799560546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f6cfde64c18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;8]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f6cfde64978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;9]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f6d09211fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;10]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f6cfde5b8d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;11]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f6d09202b38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;12]" time="0.0004849433898925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f6cfdea30f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;13]" time="0.0007817745208740234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f6cfddfe4e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;14]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f6d09202c88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;15]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f6cfde5b470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;16]" time="0.0004200935363769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f6cfde457b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;17]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f6cfde64a58&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;18]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f6cfddf4f98&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;19]" time="0.0004839897155761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f6cfddf4cf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;20]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f6cfddfe3c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;21]" time="0.0007524490356445312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f6cfddfeb00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;22]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f6cfddf4780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;23]" time="0.00047469139099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f6cfde64978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;24]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f6cfde50c88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;25]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f6cfde5b5f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;26]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f6d0925d898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;27]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f6cfddfe7f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;28]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f6cfddfe198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;29]" time="0.0007965564727783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f6cfde07160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;30]" time="0.0005366802215576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f6cfddfe390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;31]" time="0.0004825592041015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f6d09202e80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;32]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f6cfde5b4a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;33]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f6cfde50c88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;34]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f6d091a5358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;35]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f6cfddf4fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;36]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f6cfde071d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;37]" time="0.0007417201995849609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f6cfde07780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;38]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f6cfde64438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;39]" time="0.0004124641418457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f6d091a54a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="186" name="test_apply_inverse_adjoint[&lt;lambda&gt;40]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:186: &lt;py._xmlgen.raw object at 0x7f6d091b5208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;0]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f6cfde5bc50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;1]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f6cfddfe208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;2]" time="0.0004799365997314453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f6cfddfe9e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;3]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f6cfde072b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;4]" time="0.000743865966796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f6cfde07da0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;5]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f6cfddfecc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;6]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f6d091f2a90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;7]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f6cfde457b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;8]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f6d091a5358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;9]" time="0.0005042552947998047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f6cfddf4cf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;10]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f6cfde071d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;11]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f6cfde07630&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;12]" time="0.0007462501525878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f6cfde11400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;13]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f6cfde071d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;14]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f6cfddf4518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;15]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f6d091b50b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;16]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f6cfde5bc50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;17]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f6cfddfed30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;18]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f6d091c86a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;19]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f6cfde11278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;20]" time="0.0015573501586914062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f6cfde11a20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;21]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f6cfde45eb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;22]" time="0.0004734992980957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f6d091a5550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;23]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f6cfde07978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;24]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f6cfde07748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;25]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f6cfddfe828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;26]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f6cfddf4588&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;27]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f6cfde647b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;28]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f6cfde360b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;29]" time="0.0007536411285400391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f6d091f2b38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;30]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f6cfddf4cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;31]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f6cfddfec18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;32]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f6cfde077f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;33]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f6d091b55f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;34]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f6d09211be0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;35]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f6d091c8a90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;36]" time="0.0004210472106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f6cfde117f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;37]" time="0.0007264614105224609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f6cfde5b8d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;38]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f6d091d5a90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;39]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f6cfde07b70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="204" name="test_project[&lt;lambda&gt;40]" time="0.00046062469482421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:204: &lt;py._xmlgen.raw object at 0x7f6cfde077b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;0]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f6cfddfe198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;1]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f6cfde64400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;2]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f6cfde11a90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;3]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f6cfde11f28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;4]" time="0.0007333755493164062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f6cfde204a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;5]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f6cfde11a90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;6]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f6d09167940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;7]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f6cfddfefd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;8]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f6cfde07748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;9]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f6d091d5358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;10]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f6d091c89e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;11]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f6cfde203c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;12]" time="0.0006990432739257812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f6cfde209e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;13]" time="0.0004229545593261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f6d091d5550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;14]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f6cfde07978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;15]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f6cfddfe160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;16]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f6cfde64390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;17]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f6cfde11ba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;18]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f6cfde20b38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;19]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f6cfde20278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;20]" time="0.0008871555328369141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f6cfddac048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;21]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f6cfde20908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;22]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f6cfde11da0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;23]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f6d09167f28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;24]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f6cfddfe400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;25]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f6cfde07f28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;26]" time="0.00048732757568359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f6d09179940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;27]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f6cfddac160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;28]" time="0.0007495880126953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f6cfddac668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;29]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f6d09211be0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;30]" time="0.0004107952117919922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f6cfde077b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;31]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f6cfddf4be0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;32]" time="0.00041556358337402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f6cfde11ba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;33]" time="0.0004210472106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f6cfde20828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;34]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f6cfde20278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;35]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f6cfddac2e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;36]" time="0.000713348388671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f6cfddacc88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;37]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f6cfde20d68&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;38]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f6cfde11c50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;39]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f6cfddf4400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="214" name="test_project_2[&lt;lambda&gt;40]" time="0.0005059242248535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:214: &lt;py._xmlgen.raw object at 0x7f6d091d56a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;0]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f6d09179a90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;1]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f6cfddac198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;2]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f6cfddac4e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;3]" time="0.0007572174072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f6cfddb42e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;4]" time="0.00041985511779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f6cfddac7b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;5]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f6d09179940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;6]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f6d091b5208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;7]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f6cfddf4eb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;8]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f6cfde11e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;9]" time="0.0004925727844238281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f6cfde20dd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;10]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f6cfddb4160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;11]" time="0.0007462501525878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f6cfddb4908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;12]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f6cfde64320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;13]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f6cfddf4eb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;14]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f6d091a5e80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;15]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f6d0919b400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;16]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f6cfddac3c8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;17]" time="0.0004832744598388672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f6cfddb4a20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;18]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f6cfddb4438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;19]" time="0.0007448196411132812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f6cfddb4f28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;20]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f6cfddb4438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;21]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f6cfddac4a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;22]" time="0.000415802001953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f6cfddacdd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;23]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f6d09179208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;24]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f6cfddfec18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;25]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f6cfde640f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;26]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f6cfddc0048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;27]" time="0.0007424354553222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f6cfddc0588&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;28]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f6d09167be0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;29]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f6cfde077f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;30]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f6d0919ba90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;31]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f6cfddac320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;32]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f6cfddb4128&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;33]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f6cfddb4e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;34]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f6cfddc00f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;35]" time="0.0009851455688476562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f6cfddc0ba8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="230" name="test_project_with_product[&lt;lambda&gt;36]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:230: &lt;py._xmlgen.raw object at 0x7f6d09179a90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;0]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f6d09167d30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;1]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f6cfddb4b00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;2]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f6cfddb4940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;3]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f6cfddacdd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;4]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f6cfde20908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;5]" time="0.00048470497131347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f6cfde112b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;6]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f6cfde364e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;7]" time="0.0007450580596923828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f6cfde45160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;8]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f6cfde20dd8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;9]" time="0.0004138946533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f6cfddaceb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;10]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f6cfddb4128&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;11]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f6cfddb4ac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;12]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f6cfddfe400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;13]" time="0.0004706382751464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f6d09179a90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;14]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f6cfddc09e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;15]" time="0.0007181167602539062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f6d0919b9e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;16]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f6cfde07978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;17]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f6cfddb48d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;18]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f6d091895c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;19]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f6d091c8fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;20]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f6cfde11c88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;21]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f6cfddc08d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;22]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f6cfddd00f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;23]" time="0.0007104873657226562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f6cfddd0630&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;24]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f6cfddc0a20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;25]" time="0.0004253387451171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f6cfde209b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;26]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f6cfddaca58&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;27]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f6d0913d6a0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;28]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f6cfddb4ef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;29]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f6cfde07a58&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;30]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f6cfddd0128&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;31]" time="0.0007731914520263672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f6cfddd0b70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;32]" time="0.0004780292510986328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f6cfddb4fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;33]" time="0.0004253387451171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f6d0913de80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;34]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f6cfddaccc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;35]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f6cfde201d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="240" name="test_project_with_product_2[&lt;lambda&gt;36]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:240: &lt;py._xmlgen.raw object at 0x7f6cfddc0f28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;0]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f6cfddd0860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;1]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f6cfddd04e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;2]" time="0.0007412433624267578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f6cfddd71d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;3]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f6cfddd0128&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;4]" time="0.00041174888610839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f6cfddc08d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;5]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f6d0914c2b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;6]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f6cfde20d30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;7]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f6d0913db38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;8]" time="0.0004875659942626953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f6cfddb4470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;9]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f6cfddd7080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;10]" time="0.0007970333099365234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f6cfddd77f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;11]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f6cfddb42b0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;12]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f6d0913d9e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;13]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f6d0914c0b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;14]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f6d0915fe10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;15]" time="0.00041675567626953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f6cfddd0240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;16]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f6cfddd7518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;17]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f6cfddd7080&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;18]" time="0.0007541179656982422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f6cfddd7e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;19]" time="0.0004811286926269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f6cfddd0710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;20]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f6cfddc0a20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;21]" time="0.0006048679351806641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f6d0914c550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;22]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f6d0913d940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;23]" time="0.0004761219024658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f6cfddb4978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;24]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f6cfddd7b70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;25]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f6cfddd78d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;26]" time="0.000736236572265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f6cfdde5470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;27]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f6cfddd7b70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;28]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f6cfddfe400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;29]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f6cfddaccc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;30]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f6cfddc0c18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;31]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f6d090f0630&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;32]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f6cfddd04e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;33]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f6cfdde52e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;34]" time="0.0007379055023193359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f6cfdde5a90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;35]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f6d0915fb70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;36]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f6d0914c5f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;37]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f6cfddac1d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;38]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f6cfddb4a20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;39]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f6cfddd7b70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="256" name="test_jacobian[&lt;lambda&gt;40]" time="0.0004210472106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:256: &lt;py._xmlgen.raw object at 0x7f6cfdde5c18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;0]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f6cfdde5160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;1]" time="0.0009927749633789062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f6cfdd6d0f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;2]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f6cfdde57f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;3]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f6cfddd7630&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;4]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f6cfddd7f98&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;5]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f6d0913da90&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;6]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f6d0914c5f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;7]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f6d0915fb70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;8]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f6cfdd6d208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;9]" time="0.0007231235504150391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f6cfdd6d710&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;10]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f6d090f0cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;11]" time="0.00048279762268066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f6cfddc0f28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;12]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f6d09179b38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;13]" time="0.0004680156707763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f6cfddd7b00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;14]" time="0.0004780292510986328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f6cfdde5908&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;15]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f6cfdde51d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;16]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f6cfdd6d390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;17]" time="0.001079559326171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f6cfdd6dd30&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;18]" time="0.0004200935363769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f6d0914c5f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;19]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f6d09113780&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;20]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f6cfdde5860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;21]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f6cfdde54a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;22]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f6cfddd7278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;23]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f6cfddd06d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;24]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f6cfddc0240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;25]" time="0.0004210472106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f6d092d84a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;26]" time="0.00075531005859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f6cfddb4e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;27]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f6cfddd04a8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;28]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f6cfddd7c50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;29]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f6cfdde5518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;30]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f6d09113198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;31]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f6d090f0fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;32]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f6d09101cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;33]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f6cfdd6dc50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;34]" time="0.0007109642028808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f6d093118d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;35]" time="0.00041794776916503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f6d090a5198&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;36]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f6cfdde5940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;37]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f6d09167f28&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;38]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f6cfddd0550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;39]" time="0.0005412101745605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f6cfddc0358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="269" name="test_assemble[&lt;lambda&gt;40]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:269: &lt;py._xmlgen.raw object at 0x7f6cfdd6db70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;0]" time="0.000415802001953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f6cfdd7e278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;1]" time="0.0007266998291015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f6cfdd7e7b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;2]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f6cfdd6d240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;3]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f6cfddd0fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;4]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f6cfdde5eb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;5]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f6d09113978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;6]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f6d090f0978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;7]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f6cfdd7e4e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;8]" time="0.000476837158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f6cfdd7e160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;9]" time="0.0008199214935302734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f6cfdd7ecf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;10]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f6d09179940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;11]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f6cfdde5c88&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;12]" time="0.00048279762268066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f6cfddd7e48&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;13]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f6d090b6a20&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;14]" time="0.000484466552734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f6cfdd6de48&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;15]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f6cfdd7eac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;16]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f6cfdd7e5c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;17]" time="0.0008301734924316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f6cfdd86358&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;18]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f6cfdd7ea58&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;19]" time="0.00048422813415527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f6cfdd6d0b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;20]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f6d090b6978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;21]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f6cfddd7400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;22]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f6cfdde5438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;23]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f6d0915f8d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;24]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f6cfdd86208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;25]" time="0.0007431507110595703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f6cfdd86978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;26]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f6d09113eb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;27]" time="0.0004146099090576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f6cfddd7eb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;28]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f6cfddd0f98&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;29]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f6cfdd6df60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;30]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f6cfdd7e860&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;31]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f6cfdd86550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;32]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f6cfdd86048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;33]" time="0.0007646083831787109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f6cfdd86f98&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;34]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f6cfdd86828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;35]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f6cfdd7e240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;36]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f6cfdd6d8d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;37]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f6cfddc0cc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;38]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f6d090c5978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;39]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f6cfdde5eb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="298" name="test_restricted[&lt;lambda&gt;40]" time="0.0004229545593261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:298: &lt;py._xmlgen.raw object at 0x7f6cfdd900b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;0]" time="0.0007131099700927734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f6cfdd905f8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;1]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f6cfdde5550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;2]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f6cfddd7400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;3]" time="0.00041413307189941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f6d090b6d68&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;4]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f6cfdd7ee10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;5]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f6cfdd860b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;6]" time="0.0004165172576904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f6cfdd86048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;7]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f6cfdd90278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;8]" time="0.0007085800170898438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f6cfdd90c18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;9]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f6cfdd86cf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;10]" time="0.00048041343688964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f6cfdd7e518&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;11]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f6d090b6ac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;12]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f6d090c5390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;13]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f6cfdde5550&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;14]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f6cfdd900f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;15]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f6cfdd90470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;16]" time="0.0007102489471435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f6cfdd9e278&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;17]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f6cfdd90748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;18]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f6cfdde57b8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;19]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f6cfddd0b38&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;20]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f6d090b6ac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;21]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f6cfdd7efd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;22]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f6cfdd86e10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;23]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f6cfdd9e0f0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;24]" time="0.0007178783416748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f6cfdd9e898&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;25]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f6d09069828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;26]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f6cfdd7e5c0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;27]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f6d090d6eb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;28]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f6d090a54e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;29]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f6cfdd90da0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;30]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f6cfdd9e978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;31]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f6cfdd9e390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;32]" time="0.0011429786682128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f6cfdd9eeb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;33]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f6cfddc0da0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;34]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f6d09069240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;35]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f6cfdd9ecc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;36]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f6cfdd9e9e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;37]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f6cfdd90470&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;38]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f6cfdd90c18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;39]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f6cfdd86fd0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="314" name="test_InverseOperator[&lt;lambda&gt;40]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:314: &lt;py._xmlgen.raw object at 0x7f6cfdd7ecf8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;0]" time="0.0007102489471435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f6cfdd86748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;1]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f6cfdd90630&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;2]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f6cfdd90ef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;3]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f6cfdd9e668&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;4]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f6d09078438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;5]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f6d09069438&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;6]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f6cfde118d0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;7]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f6d09101eb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;8]" time="0.0007183551788330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f6cfdd6df98&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;9]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f6d090c5c18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;10]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f6d09069b70&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;11]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f6cfdd9e748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;12]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f6cfdd90b00&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;13]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f6d0908c390&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;14]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f6cfdd86320&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;15]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f6cfdd2e400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;16]" time="0.0007357597351074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f6cfdd2e940&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;17]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f6d0908c978&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;18]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f6cfdd90ef0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;19]" time="0.0004763603210449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f6cfdd9e6d8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;20]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f6d09069d68&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;21]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f6cfddc0240&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;22]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f6cfdd2e4e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;23]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f6cfdd2e2e8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;24]" time="0.0007498264312744141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f6cfdd2ee80&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;25]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f6cfdd2ec50&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;26]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f6cfdd2e208&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;27]" time="0.0004119873046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f6d090d6eb8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;28]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f6cfdd9ef60&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;29]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f6cfdd90160&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;30]" time="0.0004241466522216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f6d0908c828&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;31]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f6cfdd86048&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;32]" time="0.0007305145263671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f6cfdd364e0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;33]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f6d0908ce10&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;34]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f6cfdd9ecc0&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;35]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f6d09069ac8&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;36]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f6d0909a588&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;37]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f6cfdd2e748&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;38]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f6cfdd6dc18&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;39]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f6cfdd36400&gt;</skipped></testcase><testcase classname="src.pymortests.operators" file="src/pymortests/operators.py" line="339" name="test_InverseAdjointOperator[&lt;lambda&gt;40]" time="0.001104116439819336"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/operators.py:339: &lt;py._xmlgen.raw object at 0x7f6cfdd36b00&gt;</skipped></testcase><testcase classname="src.pymortests.parameters" file="src/pymortests/parameters.py" line="18" name="test_uniform" time="0.0005478858947753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/parameters.py:18: &lt;py._xmlgen.raw object at 0x7f6cfdd2e860&gt;</skipped></testcase><testcase classname="src.pymortests.parameters" file="src/pymortests/parameters.py" line="25" name="test_randomly" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/parameters.py:25: &lt;py._xmlgen.raw object at 0x7f6d090b6c18&gt;</skipped></testcase><testcase classname="src.pymortests.playground" file="src/pymortests/playground.py" line="12" name="test_eval" time="0.0005097389221191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/playground.py:12: &lt;py._xmlgen.raw object at 0x7f6cfdd9e6d8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="49" name="test_scipy[1-1-10]" time="0.0005292892456054688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:49: &lt;py._xmlgen.raw object at 0x7f6cfdd90cc0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="49" name="test_scipy[1-1-100]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:49: &lt;py._xmlgen.raw object at 0x7f6cfdd86320&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="49" name="test_scipy[1-2-10]" time="0.00047659873962402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:49: &lt;py._xmlgen.raw object at 0x7f6cfdd367b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="49" name="test_scipy[1-2-100]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:49: &lt;py._xmlgen.raw object at 0x7f6cfdd36320&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="49" name="test_scipy[2-1-10]" time="0.0007264614105224609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:49: &lt;py._xmlgen.raw object at 0x7f6cfdd3e208&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="49" name="test_scipy[2-1-100]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:49: &lt;py._xmlgen.raw object at 0x7f6cfdd36048&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="49" name="test_scipy[2-2-10]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:49: &lt;py._xmlgen.raw object at 0x7f6cfdd86048&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="49" name="test_scipy[2-2-100]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:49: &lt;py._xmlgen.raw object at 0x7f6cfdd90b38&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="78" name="test_scipy_trans[1-1-10]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:78: &lt;py._xmlgen.raw object at 0x7f6cfdd9e6d8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="78" name="test_scipy_trans[1-1-100]" time="0.0004210472106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:78: &lt;py._xmlgen.raw object at 0x7f6d0909ac88&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="78" name="test_scipy_trans[1-2-10]" time="0.0004711151123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:78: &lt;py._xmlgen.raw object at 0x7f6cfdd2e748&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="78" name="test_scipy_trans[1-2-100]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:78: &lt;py._xmlgen.raw object at 0x7f6cfdd3e0b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="78" name="test_scipy_trans[2-1-10]" time="0.0007028579711914062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:78: &lt;py._xmlgen.raw object at 0x7f6cfdd3e828&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="78" name="test_scipy_trans[2-1-100]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:78: &lt;py._xmlgen.raw object at 0x7f6cfdd2e208&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="78" name="test_scipy_trans[2-2-10]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:78: &lt;py._xmlgen.raw object at 0x7f6d0909a438&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="78" name="test_scipy_trans[2-2-100]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:78: &lt;py._xmlgen.raw object at 0x7f6cfdd90ef0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="107" name="test_pymess[pymess_care-1-1-1000]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:107: &lt;py._xmlgen.raw object at 0x7f6cfdd86048&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="107" name="test_pymess[pymess_care-1-2-1000]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:107: &lt;py._xmlgen.raw object at 0x7f6cfdd36048&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="107" name="test_pymess[pymess_care-2-1-1000]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:107: &lt;py._xmlgen.raw object at 0x7f6cfdd3e438&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="107" name="test_pymess[pymess_care-2-2-1000]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:107: &lt;py._xmlgen.raw object at 0x7f6cfdd3e2e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="107" name="test_pymess[pymess_lrnm-1-1-1000]" time="0.0007071495056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:107: &lt;py._xmlgen.raw object at 0x7f6cfdd3ee48&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="107" name="test_pymess[pymess_lrnm-1-2-1000]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:107: &lt;py._xmlgen.raw object at 0x7f6cfdd3e2b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="107" name="test_pymess[pymess_lrnm-2-1-1000]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:107: &lt;py._xmlgen.raw object at 0x7f6d090410f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="107" name="test_pymess[pymess_lrnm-2-2-1000]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:107: &lt;py._xmlgen.raw object at 0x7f6cfdd36208&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="133" name="test_pymess_trans[pymess_care-1-1-1000]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:133: &lt;py._xmlgen.raw object at 0x7f6cfdd860b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="133" name="test_pymess_trans[pymess_care-1-2-1000]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:133: &lt;py._xmlgen.raw object at 0x7f6d090d6eb8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="133" name="test_pymess_trans[pymess_care-2-1-1000]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:133: &lt;py._xmlgen.raw object at 0x7f6cfdd2efd0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="133" name="test_pymess_trans[pymess_care-2-2-1000]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:133: &lt;py._xmlgen.raw object at 0x7f6d0903f358&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="133" name="test_pymess_trans[pymess_lrnm-1-1-1000]" time="0.0007550716400146484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:133: &lt;py._xmlgen.raw object at 0x7f6cfdd4d4a8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="133" name="test_pymess_trans[pymess_lrnm-1-2-1000]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:133: &lt;py._xmlgen.raw object at 0x7f6cfdd90cc0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="133" name="test_pymess_trans[pymess_lrnm-2-1-1000]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:133: &lt;py._xmlgen.raw object at 0x7f6cfdd9e860&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="133" name="test_pymess_trans[pymess_lrnm-2-2-1000]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:133: &lt;py._xmlgen.raw object at 0x7f6d09037c50&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="159" name="test_pymess_E[pymess_care-1-1-1000]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:159: &lt;py._xmlgen.raw object at 0x7f6cfdd36a20&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="159" name="test_pymess_E[pymess_care-1-2-1000]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:159: &lt;py._xmlgen.raw object at 0x7f6cfdd3e390&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="159" name="test_pymess_E[pymess_care-2-1-1000]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:159: &lt;py._xmlgen.raw object at 0x7f6cfdd3ec50&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="159" name="test_pymess_E[pymess_care-2-2-1000]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:159: &lt;py._xmlgen.raw object at 0x7f6cfdd4d358&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="159" name="test_pymess_E[pymess_lrnm-1-1-1000]" time="0.0008082389831542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:159: &lt;py._xmlgen.raw object at 0x7f6cfdd4dac8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="159" name="test_pymess_E[pymess_lrnm-1-2-1000]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:159: &lt;py._xmlgen.raw object at 0x7f6cfdd3e4a8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="159" name="test_pymess_E[pymess_lrnm-2-1-1000]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:159: &lt;py._xmlgen.raw object at 0x7f6cfdd36d30&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="159" name="test_pymess_E[pymess_lrnm-2-2-1000]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:159: &lt;py._xmlgen.raw object at 0x7f6cfde11048&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="189" name="test_pymess_E_trans[pymess_care-1-1-1000]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:189: &lt;py._xmlgen.raw object at 0x7f6d090c5c18&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="189" name="test_pymess_E_trans[pymess_care-1-2-1000]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:189: &lt;py._xmlgen.raw object at 0x7f6cfdd2e4a8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="189" name="test_pymess_E_trans[pymess_care-2-1-1000]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:189: &lt;py._xmlgen.raw object at 0x7f6cfdd4dc50&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="189" name="test_pymess_E_trans[pymess_care-2-2-1000]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:189: &lt;py._xmlgen.raw object at 0x7f6cfdd4d048&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="189" name="test_pymess_E_trans[pymess_lrnm-1-1-1000]" time="0.0010290145874023438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:189: &lt;py._xmlgen.raw object at 0x7f6cfdd54128&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="189" name="test_pymess_E_trans[pymess_lrnm-1-2-1000]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:189: &lt;py._xmlgen.raw object at 0x7f6d0902be80&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="189" name="test_pymess_E_trans[pymess_lrnm-2-1-1000]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:189: &lt;py._xmlgen.raw object at 0x7f6d0903fe80&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="189" name="test_pymess_E_trans[pymess_lrnm-2-2-1000]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:189: &lt;py._xmlgen.raw object at 0x7f6cfdd4dc88&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[False-1-1-10]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7f6cfdd4d0b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[False-1-1-100]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7f6cfdd3e978&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[False-1-2-10]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7f6cfdd3e1d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[False-1-2-100]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7f6cfdd36a20&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[False-2-1-10]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7f6cfdd2ee80&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[False-2-1-100]" time="0.0007624626159667969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7f6cfdd364a8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[False-2-2-10]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7f6cfdd3e240&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[False-2-2-100]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7f6cfdd3e4e0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[True-1-1-10]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7f6cfdd4d5c0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[True-1-1-100]" time="0.0004978179931640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7f6d08fd8c18&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[True-1-2-10]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7f6d0902b518&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[True-1-2-100]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7f6d0908c0f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[True-2-1-10]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7f6cfddd7b00&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[True-2-1-100]" time="0.0007925033569335938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7f6cfdd9ef60&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[True-2-2-10]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7f6d090c5780&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="219" name="test_slycot[True-2-2-100]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:219: &lt;py._xmlgen.raw object at 0x7f6d09037be0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[False-1-1-10]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7f6cfdd4d8d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[False-1-1-100]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7f6cfdd4d390&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[False-1-2-10]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7f6cfdd3ef60&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[False-1-2-100]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7f6cfdd36c18&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[False-2-1-10]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7f6cfdd54630&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[False-2-1-100]" time="0.0007977485656738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7f6cfdd54b70&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[False-2-2-10]" time="0.0004837512969970703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7f6cfdd3ef60&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[False-2-2-100]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7f6cfdd4d550&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[True-1-1-10]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7f6d08fd8fd0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[True-1-1-100]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7f6d09037630&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[True-1-2-10]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7f6d0908cac8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[True-1-2-100]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7f6cfdd548d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[True-2-1-10]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7f6cfdd54208&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[True-2-1-100]" time="0.0007700920104980469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7f6cfdd640f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[True-2-2-10]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7f6cfdd54c50&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="252" name="test_slycot_trans[True-2-2-100]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:252: &lt;py._xmlgen.raw object at 0x7f6cfdd54780&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[False-1-1-10]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7f6d08fc00f0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[False-1-1-100]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7f6d08fd8438&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[False-1-2-10]" time="0.0004942417144775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7f6cfdd4d9e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[False-1-2-100]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7f6cfdd3ecc0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[False-2-1-10]" time="0.00048422813415527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7f6cfdd64208&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[False-2-1-100]" time="0.0007343292236328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7f6cfdd64710&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[False-2-2-10]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7f6cfdd3ee48&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[False-2-2-100]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7f6cfdd4d8d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[True-1-1-10]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7f6d0903f470&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[True-1-1-100]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7f6d08fc0ef0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[True-1-2-10]" time="0.00046825408935546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7f6cfdd54400&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[True-1-2-100]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7f6cfdd54f28&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[True-2-1-10]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7f6cfdd641d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[True-2-1-100]" time="0.000759124755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7f6cfdd64d30&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[True-2-2-10]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7f6cfdd549e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="285" name="test_slycot_E[True-2-2-100]" time="0.0004801750183105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:285: &lt;py._xmlgen.raw object at 0x7f6d08fc0668&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[False-1-1-10]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7f6d08fd10b8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[False-1-1-100]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7f6cfdd4da90&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[False-1-2-10]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7f6cfdd3ee10&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[False-1-2-100]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7f6cfdd64208&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[False-2-1-10]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7f6cfdd645c0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[False-2-1-100]" time="0.0007488727569580078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7f6cfdcee390&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[False-2-2-10]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7f6cfdd649e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[False-2-2-100]" time="0.0004892349243164062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7f6cfdd3e2e8&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[True-1-1-10]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7f6cfdd4d8d0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[True-1-1-100]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7f6d09037c50&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[True-1-2-10]" time="0.00047469139099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7f6d090c5c18&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[True-1-2-100]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7f6cfdd54c88&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[True-2-1-10]" time="0.0004706382751464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7f6cfdcee208&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[True-2-1-100]" time="0.0007579326629638672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7f6cfdcee9b0&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[True-2-2-10]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7f6d090c5780&gt;</skipped></testcase><testcase classname="src.pymortests.riccati" file="src/pymortests/riccati.py" line="322" name="test_slycot_E_trans[True-2-2-100]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/riccati.py:322: &lt;py._xmlgen.raw object at 0x7f6d09037c50&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="48" name="test_generic_solvers[generic_lgmres]" time="0.0004813671112060547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:48: &lt;py._xmlgen.raw object at 0x7f6d08fbb358&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="48" name="test_generic_solvers[generic_least_squares_lsmr]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:48: &lt;py._xmlgen.raw object at 0x7f6cfdd36588&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="48" name="test_generic_solvers[generic_least_squares_lsqr]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:48: &lt;py._xmlgen.raw object at 0x7f6cfdd649e8&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="55" name="test_numpy_dense_solvers" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:55: &lt;py._xmlgen.raw object at 0x7f6cfdceea20&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[generic_least_squares_lsqr]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7f6cfdcee0b8&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[scipy_spsolve]" time="0.0007441043853759766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7f6cfdcf9048&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[scipy_lgmres]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7f6cfdcee860&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[scipy_least_squares_lsmr]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7f6cfdd3e2e8&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[scipy_bicgstab_spilu]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7f6cfdd64400&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[scipy_least_squares_lsqr]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7f6d08ef3240&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[pyamg_rs]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7f6d08fbb358&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[pyamg_solve]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7f6d08fd1a20&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[generic_lgmres]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7f6cfdcf9160&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[generic_least_squares_lsmr]" time="0.0007312297821044922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7f6cfdcf9668&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[pyamg_sa]" time="0.00048065185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7f6d0902bf28&gt;</skipped></testcase><testcase classname="src.pymortests.solver" file="src/pymortests/solver.py" line="62" name="test_numpy_sparse_solvers[scipy_bicgstab]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/solver.py:62: &lt;py._xmlgen.raw object at 0x7f6cfdd4df28&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[1-1-100]" time="0.0005383491516113281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7f6cfdd64c50&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[1-1-1000]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7f6cfdd3e2e8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[1-10-100]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7f6cfdcee550&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[1-10-1000]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7f6cfdceeb70&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[1-20-100]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7f6cfdcf9128&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[1-20-1000]" time="0.0007402896881103516"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7f6cfdcf9cc0&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[2-1-100]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7f6cfdcee828&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[2-1-1000]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7f6cfdd64ef0&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[2-10-100]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7f6d08ef3748&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[2-10-1000]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7f6cfdd4dc88&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[2-20-100]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7f6cfdd54668&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="47" name="test_sylv_schur_V[2-20-1000]" time="0.0004901885986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:47: &lt;py._xmlgen.raw object at 0x7f6cfdcf9978&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[1-1-100]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7f6cfdcf9550&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[1-1-1000]" time="0.0010554790496826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7f6cfdd03320&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[1-10-100]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7f6d08ef33c8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[1-10-1000]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7f6d08f260f0&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[1-20-100]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7f6cfdcf9828&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[1-20-1000]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7f6cfdcf9e10&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[2-1-100]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7f6cfdceee10&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[2-1-1000]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7f6cfdd64f28&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[2-10-100]" time="0.00047469139099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7f6cfdd640b8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[2-10-1000]" time="0.0004801750183105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7f6cfdd54b70&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[2-20-100]" time="0.0008835792541503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7f6cfdd64da0&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="75" name="test_sylv_schur_V_E[2-20-1000]" time="0.0004954338073730469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:75: &lt;py._xmlgen.raw object at 0x7f6cfdcee550&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[1-1-100]" time="0.00048613548278808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7f6cfdcee828&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[1-1-1000]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7f6cfdcf9978&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[1-10-100]" time="0.0004985332489013672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7f6d08f26400&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[1-10-1000]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7f6d08ef33c8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[1-20-100]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7f6d08f382b0&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[1-20-1000]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7f6cfdd2e978&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[2-1-100]" time="0.0007417201995849609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7f6cfdd7eb00&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[2-1-1000]" time="0.00047397613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7f6d08f385c0&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[2-10-100]" time="0.00047397613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7f6d08ff3470&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[2-10-1000]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7f6cfdcf92e8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[2-20-100]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7f6cfdcf9208&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="108" name="test_sylv_schur_W[2-20-1000]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:108: &lt;py._xmlgen.raw object at 0x7f6cfdceeeb8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[1-1-100]" time="0.00047087669372558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7f6cfdd640f0&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[1-1-1000]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7f6cfdd03828&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[1-10-100]" time="0.0007381439208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7f6cfdd03d68&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[1-10-1000]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7f6cfdceeeb8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[1-20-100]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7f6cfdcf9048&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[1-20-1000]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7f6cfdcf9780&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[2-1-100]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7f6d09009b70&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[2-1-1000]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7f6d08f382b0&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[2-10-100]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7f6cfdd03ac8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[2-10-1000]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7f6cfdd03128&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[2-20-100]" time="0.0007750988006591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7f6cfdd112e8&gt;</skipped></testcase><testcase classname="src.pymortests.sylvester" file="src/pymortests/sylvester.py" line="136" name="test_sylv_schur_W_E[2-20-1000]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/sylvester.py:136: &lt;py._xmlgen.raw object at 0x7f6cfdd03588&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="34" name="test_to_matrix_NumpyMatrixOperator" time="0.0004942417144775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:34: &lt;py._xmlgen.raw object at 0x7f6cfdd4df28&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="45" name="test_to_matrix_BlockOperator" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:45: &lt;py._xmlgen.raw object at 0x7f6d09009ac8&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="68" name="test_to_matrix_BlockDiagonalOperator" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:68: &lt;py._xmlgen.raw object at 0x7f6cfdcf99b0&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="86" name="test_to_matrix_AdjointOperator" time="0.0004973411560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:86: &lt;py._xmlgen.raw object at 0x7f6d090143c8&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="127" name="test_to_matrix_ComponentProjection" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:127: &lt;py._xmlgen.raw object at 0x7f6cfdd64710&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="138" name="test_to_matrix_Concatenation" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:138: &lt;py._xmlgen.raw object at 0x7f6cfdd111d0&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="165" name="test_to_matrix_IdentityOperator" time="0.0007226467132568359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdd11940&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="173" name="test_to_matrix_LincombOperator" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:173: &lt;py._xmlgen.raw object at 0x7f6d0908ce10&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="202" name="test_to_matrix_VectorArrayOperator" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:202: &lt;py._xmlgen.raw object at 0x7f6cfdcf9898&gt;</skipped></testcase><testcase classname="src.pymortests.to_matrix" file="src/pymortests/to_matrix.py" line="214" name="test_to_matrix_ZeroOperator" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/to_matrix.py:214: &lt;py._xmlgen.raw object at 0x7f6d08f382b0&gt;</skipped></testcase><testcase classname="src.pymortests.tools.TestGaussQuadrature" file="src/pymortests/tools.py" line="27" name="test_polynomials" time="0.0005295276641845703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:27: &lt;py._xmlgen.raw object at 0x7f6d07f127b8&gt;</skipped></testcase><testcase classname="src.pymortests.tools.TestGaussQuadrature" file="src/pymortests/tools.py" line="38" name="test_other_functions" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:38: &lt;py._xmlgen.raw object at 0x7f6cfdd035f8&gt;</skipped></testcase><testcase classname="src.pymortests.tools.TestGaussQuadrature" file="src/pymortests/tools.py" line="46" name="test_weights" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:46: &lt;py._xmlgen.raw object at 0x7f6cfdd11a90&gt;</skipped></testcase><testcase classname="src.pymortests.tools.TestGaussQuadrature" file="src/pymortests/tools.py" line="51" name="test_points" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:51: &lt;py._xmlgen.raw object at 0x7f6cfdd110f0&gt;</skipped></testcase><testcase classname="src.pymortests.tools.TestCmp" file="src/pymortests/tools.py" line="61" name="test_props" time="0.0007512569427490234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:61: &lt;py._xmlgen.raw object at 0x7f6cfdd11f98&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;0]" time="0.0004096031188964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f6cfdd11ac8&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;1]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f6cfdd03240&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;2]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f6d07f63dd8&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;3]" time="0.0004200935363769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f6cfdd36e80&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;4]" time="0.0004146099090576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f6d09014470&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;5]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f6cfdcee358&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;6]" time="0.00041413307189941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f6cfdd180f0&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;7]" time="0.0007073879241943359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f6cfdd185f8&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;8]" time="0.00048422813415527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f6cfdcf9898&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;9]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f6d08ff32b0&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;10]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f6d07f122e8&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;11]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f6cfdd03f98&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;12]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f6cfdd11400&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;13]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f6cfdd11e80&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;14]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f6cfdd18278&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;15]" time="0.0006930828094482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f6cfdd18c18&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;16]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f6cfdd114a8&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;17]" time="0.0004799365997314453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f6cfdd03588&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;18]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f6d09009780&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;19]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f6d09014a90&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;20]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f6cfdcf96a0&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;21]" time="0.00041961669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f6cfdd18128&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;22]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f6cfdd18470&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="87" name="test_vtkio[&lt;lambda&gt;23]" time="0.0006809234619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:87: &lt;py._xmlgen.raw object at 0x7f6cfdd25278&gt;</skipped></testcase><testcase classname="src.pymortests.tools.TestTiming" file="src/pymortests/tools.py" line="102" name="testTimingContext" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:102: &lt;py._xmlgen.raw object at 0x7f6cfdd18748&gt;</skipped></testcase><testcase classname="src.pymortests.tools.TestTiming" file="src/pymortests/tools.py" line="112" name="testTimingDecorator" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:112: &lt;py._xmlgen.raw object at 0x7f6cfdcf9fd0&gt;</skipped></testcase><testcase classname="src.pymortests.tools.TestTiming" file="src/pymortests/tools.py" line="115" name="testTiming" time="0.0004792213439941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:115: &lt;py._xmlgen.raw object at 0x7f6d09014eb8&gt;</skipped></testcase><testcase classname="src.pymortests.tools" file="src/pymortests/tools.py" line="123" name="testDeprecated" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/tools.py:123: &lt;py._xmlgen.raw object at 0x7f6d07f12550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;0]" time="0.0005397796630859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdd03c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;1]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdd11748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;2]" time="0.0004680156707763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdd25128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;3]" time="0.001132965087890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdd258d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;4]" time="0.0004134178161621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdd11828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;5]" time="0.0004184246063232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdd4df28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;6]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdd365f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;7]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdd64d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;8]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdd189e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;9]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdd259e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;10]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdd252e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;11]" time="0.0008003711700439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdd25ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;12]" time="0.0004897117614746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdd252e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;13]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdd18748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;14]" time="0.0005443096160888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdd18d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;15]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6d090142e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;16]" time="0.0004189014434814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6d07f12588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;17]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdd11ba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;18]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6d08fef278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;19]" time="0.0010325908660888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdcac550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;20]" time="0.0004165172576904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6d08ff3390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;21]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6d0900b9b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;22]" time="0.00041985511779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdd25160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;23]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdd25d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;24]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdd18d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;25]" time="0.00041675567626953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdd18630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[0-&lt;lambda&gt;26]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdd11320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;0]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdd033c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;1]" time="0.0007796287536621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdd110f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;2]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdd18320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;3]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdd258d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;4]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdd25748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;5]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6d0900b390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;6]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6d07f63dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;7]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdd03400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;8]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdd54358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;9]" time="0.0007729530334472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6d0902b320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;10]" time="0.00047898292541503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdd034a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;11]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6d0900b390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;12]" time="0.0004830360412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6d08fefb38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;13]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdd25c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;14]" time="0.0004730224609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdd18320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;15]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdcac240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;16]" time="0.0004665851593017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdcaca58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;17]" time="0.0008258819580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdcacf98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;18]" time="0.0005168914794921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdcac438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;19]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdd11208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;20]" time="0.0004646778106689453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdd25d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;21]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdd252e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;22]" time="0.0005769729614257812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6d07eecdd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;23]" time="0.0004780292510986328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdd365f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;24]" time="0.0005273818969726562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6d0902bd30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;25]" time="0.0008418560028076172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdcc0518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[1-&lt;lambda&gt;26]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6d0900b400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;0]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6d07eece80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;1]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdd25748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;2]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdd182b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;3]" time="0.0004897117614746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdcacc50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;4]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdcace80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;5]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdcc0438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;6]" time="0.0008406639099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdcc0b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;7]" time="0.0004837512969970703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdd7ee10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;8]" time="0.000492095947265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6d08ef3240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;9]" time="0.0004992485046386719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdd25780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;10]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6d090145f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;11]" time="0.0005354881286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdcee358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;12]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdcc0860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;13]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdcc02e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;14]" time="0.0007457733154296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdcc8198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;15]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdcc0320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;16]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdcc0c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;17]" time="0.0004189014434814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6d07eece80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;18]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdd25d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;19]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6d07f19f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;20]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdcaca20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;21]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdcc8320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;22]" time="0.0007717609405517578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdcc87b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;23]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6d07f19c88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;24]" time="0.00049591064453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdd18630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;25]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6d07eecd30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="152" name="test_empty[2-&lt;lambda&gt;26]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:152: &lt;py._xmlgen.raw object at 0x7f6cfdcc0be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;0]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcc0358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;1]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdd03eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;2]" time="0.0004894733428955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcc8048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;3]" time="0.0007424354553222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcc8dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;4]" time="0.00041484832763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6d0900be80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;5]" time="0.0004105567932128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcc0908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;6]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdd25780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;7]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdd180f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;8]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcac908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;9]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcc8a90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;10]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcc86d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;11]" time="0.0007321834564208984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcd5438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;12]" time="0.00047397613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcc89b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;13]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6d07f197f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;14]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdd18630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;15]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcc05f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;16]" time="0.00041747093200683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6d0900be80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;17]" time="0.0004150867462158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6d07f0d748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;18]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcd52b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;19]" time="0.0007030963897705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcd5a58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;20]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcee358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;21]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcc0e10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;22]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6d090b6c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;23]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcaceb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;24]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcc8320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;25]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcd5be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[0-&lt;lambda&gt;26]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcd5128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;0]" time="0.0007965564727783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcdd0b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;1]" time="0.000492095947265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcd5908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;2]" time="0.00042247772216796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcc85c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;3]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcac710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;4]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6d07f19e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;5]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcc05f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;6]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6d07f3b8d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;7]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcdd1d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;8]" time="0.0010373592376708984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcdd6d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;9]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6d0902bd30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;10]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6d07ef4588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;11]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcd5c88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;12]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcd50f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;13]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcc8470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;14]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6d07f1a128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;15]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6d0900bcc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;16]" time="0.0004153251647949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcac320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;17]" time="0.0007240772247314453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcac5f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;18]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcc86d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;19]" time="0.0004737377166748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6d07f0d6a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;20]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcd5f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;21]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6d07ef4cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;22]" time="0.0004801750183105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdd18630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;23]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6d07f3b780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;24]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcdd7b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;25]" time="0.0006964206695556641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdd112e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[1-&lt;lambda&gt;26]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdd18630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;0]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6d07ef4780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;1]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcd5b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;2]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6d07f1a128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;3]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcc0e10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;4]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcdd780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;5]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcddbe0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;6]" time="0.000732421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcea160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;7]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcddba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;8]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcc0b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;9]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcc8780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;10]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcd5e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;11]" time="0.0004706382751464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6d07ef4f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;12]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6d07f3ba20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;13]" time="0.00047087669372558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcea048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;14]" time="0.0007426738739013672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcea6a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;15]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdd64c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;16]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6d07ef4ac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;17]" time="0.0004711151123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcd5668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;18]" time="0.0004696846008300781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcc8470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;19]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcdd390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;20]" time="0.000476837158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcaccc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;21]" time="0.0004749298095703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcea320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;22]" time="0.0007359981536865234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdceacc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;23]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcdda58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;24]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcc8198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;25]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6cfdcd5d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="165" name="test_zeros[2-&lt;lambda&gt;26]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:165: &lt;py._xmlgen.raw object at 0x7f6d07ef4390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;0]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6d07e85978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;1]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdcea048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;2]" time="0.0004589557647705078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdcea518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;3]" time="0.0009355545043945312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdc77320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;4]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdcea3c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;5]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6d07e85198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;6]" time="0.0004742145538330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6d07f3b780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;7]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdcd5f28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;8]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6d07f0d4a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;9]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdcddf60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;10]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdc77198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;11]" time="0.0007405281066894531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdc77940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;12]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdcddc50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;13]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdcd5198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;14]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6d07f3ba20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;15]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdceaba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;16]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdcea7b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;17]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdc77a58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;18]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdc77390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;19]" time="0.0007803440093994141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdc77f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;20]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdc77e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;21]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdc77668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;22]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdcea7f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;23]" time="0.00041961669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6d07f3b780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;24]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdcc8be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;25]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdcdd390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[0-&lt;lambda&gt;26]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdc81080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;0]" time="0.0008487701416015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdc815c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;1]" time="0.0004184246063232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdcddf28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;2]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdcd5080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;3]" time="0.000476837158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6d07e85cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;4]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdcea048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;5]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdc771d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;6]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6d07ea7c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;7]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdc81240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;8]" time="0.0007703304290771484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdc81be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;9]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdc77b00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;10]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdceafd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;11]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6d07e85cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;12]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6d07ebcfd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;13]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdcdd208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;14]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdc810b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;15]" time="0.0004901885986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdc81438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;16]" time="0.0007648468017578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdc8c240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;17]" time="0.0004086494445800781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdc81710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;18]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdcddcf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;19]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdcc8be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;20]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6d07e85b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;21]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdc77fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;22]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6d07e4b9b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;23]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdc8c0b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;24]" time="0.0010221004486083984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdc8c860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;25]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6d07ef4978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[1-&lt;lambda&gt;26]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6d07ebc470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;0]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdc812b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;1]" time="0.0004291534423828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdc815f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;2]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdc77048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;3]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdcea4e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;4]" time="0.00048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdcddc50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;5]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdd2ee80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;6]" time="0.0007195472717285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdcdd3c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;7]" time="0.00041747093200683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6d07f19c88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;8]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdc77630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;9]" time="0.00046515464782714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdc81f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;10]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdc81d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;11]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdcd5c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;12]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6d07e4b3c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;13]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdc8c9e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;14]" time="0.0007278919219970703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdcac320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;15]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6d07ebc470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;16]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdc81eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;17]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdc81400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;18]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6d07f19128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;19]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6d07e5d710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;20]" time="0.00041675567626953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdc8c908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;21]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdc8cd68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;22]" time="0.0007357597351074219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdc9a2e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;23]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdc8cba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;24]" time="0.0004918575286865234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6d07e5d320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;25]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6cfdceae48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="182" name="test_from_numpy[2-&lt;lambda&gt;26]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:182: &lt;py._xmlgen.raw object at 0x7f6d07f0d898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;0]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdc81b00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;1]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6d07e4bf98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;2]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdc9a1d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;3]" time="0.0007414817810058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdc9a828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;4]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6d07ebc128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;5]" time="0.0004913806915283203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdc81f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;6]" time="0.00047087669372558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdc77d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;7]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6d07e5d5c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;8]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdc8c8d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;9]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdc9a550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;10]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdc9a048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;11]" time="0.0007398128509521484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdc9ae48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;12]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdc8cc18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;13]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6d07e5d668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;14]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdcd5080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;15]" time="0.0004253387451171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6d07e4b320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;16]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6d07e81a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;17]" time="0.0004241466522216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdc9ac18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;18]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdc9a518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;19]" time="0.0007374286651611328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdca64a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;20]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdc9a978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;21]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6d07e816a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;22]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdc812e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;23]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdc77320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;24]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6d07e5d9b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;25]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdc8cdd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[0-&lt;lambda&gt;26]" time="0.00048613548278808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdca6358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;0]" time="0.0007710456848144531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdca6ac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;1]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6d07e5d9b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;2]" time="0.0004899501800537109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdcd5080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;3]" time="0.0004761219024658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6d07e4bc50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;4]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6d07e136d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;5]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdc9a978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;6]" time="0.00044608116149902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdca6c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;7]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdca6048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;8]" time="0.0007998943328857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdc2f128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;9]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdca6320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;10]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdc9acc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;11]" time="0.00048661231994628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6d07e132e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;12]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6d07e816a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;13]" time="0.00041747093200683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdc81cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;14]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6d07e5d668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;15]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdc2f278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;16]" time="0.000766754150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdc2f748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;17]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdc77d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;18]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdc81cf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;19]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6d07e13f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;20]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdc9ad68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;21]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdca60b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;22]" time="0.0004150867462158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdca69b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;23]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdc2f3c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;24]" time="0.000774383544921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdc2fd68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;25]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdca67b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[1-&lt;lambda&gt;26]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6d07e13780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;0]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6d07e816a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;1]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdcea6d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;2]" time="0.0004711151123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdc8ca58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;3]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdc2f198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;4]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdc2f5c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;5]" time="0.0007522106170654297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdc3d3c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;6]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdc2fa20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;7]" time="0.0004706382751464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdc774a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;8]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6d07e4bcf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;9]" time="0.000484466552734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6d07ebc908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;10]" time="0.0004825592041015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdc9ad30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;11]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdca6da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;12]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdc3d240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;13]" time="0.0011086463928222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdc3d9e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;14]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6d07ebc470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;15]" time="0.0005116462707519531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6d07e238d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;16]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdc2f470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;17]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdc2ff60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;18]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdca6be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;19]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdc9ad30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;20]" time="0.0004734992980957031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdc8ca58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;21]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6d07e85b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;22]" time="0.0007796287536621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdc8c0b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;23]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdc9ad30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;24]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdca6048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;25]" time="0.0004725456237792969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6cfdc2f198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="194" name="test_shape[2-&lt;lambda&gt;26]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:194: &lt;py._xmlgen.raw object at 0x7f6d07e23978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;0]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6d07e816a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;1]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6d07e330f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;2]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc3d748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;3]" time="0.0007619857788085938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6d07ebc908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;4]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc81a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;5]" time="0.000431060791015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc2fdd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;6]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc2f780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;7]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdca69e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;8]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc8cc18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;9]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc3db38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;10]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc3def0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;11]" time="0.0007436275482177734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc48470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;12]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc3d898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;13]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc9acc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;14]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdca6048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;15]" time="0.0004119873046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc2f748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;16]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc81a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;17]" time="0.0004112720489501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6d07e33588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;18]" time="0.0004184246063232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc48358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;19]" time="0.0008275508880615234"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc489b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;20]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6d07e3f320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;21]" time="0.0004634857177734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6d07e23438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;22]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc77860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;23]" time="0.00048160552978515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc9a320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;24]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc3d8d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;25]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc48588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[0-&lt;lambda&gt;26]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc481d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;0]" time="0.0007276535034179688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc48fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;1]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc487f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;2]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc3dd30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;3]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc8ce10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;4]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdca6f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;5]" time="0.0004138946533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdceacf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;6]" time="0.0004150867462158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6d07e3fc50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;7]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc53128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;8]" time="0.0007104873657226562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc53630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;9]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6d07e3f278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;10]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc2f5f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;11]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc8cc18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;12]" time="0.0004336833953857422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc3ddd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;13]" time="0.00046944618225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc48390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;14]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc48128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;15]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc532b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;16]" time="0.0007374286651611328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc53c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;17]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc48d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;18]" time="0.00043272972106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc3dd30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;19]" time="0.0005207061767578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc9acc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;20]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc2f0f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;21]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6d07e3fa58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;22]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc53160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;23]" time="0.0004761219024658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc534a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;24]" time="0.0007426738739013672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc5d2b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;25]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc536a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[1-&lt;lambda&gt;26]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6d07e23ac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;0]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdceacf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;1]" time="0.000476837158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc9a320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;2]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6d07de9da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;3]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc48ba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;4]" time="0.00046563148498535156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc5d128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;5]" time="0.0007102489471435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc5d8d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;6]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc3d710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;7]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc9a2e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;8]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6d07e3fb00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;9]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc53e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;10]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc53208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;11]" time="0.00047516822814941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc5d9b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;12]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc5d3c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;13]" time="0.0007662773132324219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc5def0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;14]" time="0.00041985511779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc5d6a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;15]" time="0.0004894733428955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6d07df8668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;16]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc53828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;17]" time="0.00041961669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc53f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;18]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdca6320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;19]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc3d5c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;20]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc48278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;21]" time="0.0007035732269287109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc65550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;22]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6d07de99b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;23]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc2f898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;24]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc53ac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;25]" time="0.0004150867462158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6d07df83c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="204" name="test_space[2-&lt;lambda&gt;26]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:204: &lt;py._xmlgen.raw object at 0x7f6cfdc5da20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;0]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdc5de10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;1]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdc65470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;2]" time="0.0010237693786621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdc65b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;3]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6d07e3f9b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;4]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6d07de9908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;5]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdc5d978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;6]" time="0.00046896934509277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdc5def0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;7]" time="0.000514984130859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdc53208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;8]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdc48eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;9]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdc3df28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;10]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6d07e85b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;11]" time="0.0007469654083251953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdcc0358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;12]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdc48eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;13]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdc53208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;14]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdc5d2b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;15]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdc5d438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;16]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6d07e3f278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;17]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6d07df81d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;18]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdc65978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;19]" time="0.0007202625274658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6d07d9bc88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;20]" time="0.00048613548278808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6d07de9908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;21]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdc5da20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;22]" time="0.00051116943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdc53358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;23]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdc489b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;24]" time="0.00041985511779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdc3dcc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;25]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdc65278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[0-&lt;lambda&gt;26]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdbf50b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;0]" time="0.000732421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdbf55f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;1]" time="0.0004851818084716797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdc659b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;2]" time="0.00046253204345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6d07e13780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;3]" time="0.00047469139099121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6d07e33198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;4]" time="0.0004436969757080078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6d07d89470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;5]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdc5d9e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;6]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6d07df87b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;7]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdbf50f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;8]" time="0.0007288455963134766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdbf5b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;9]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdc77f28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;10]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdc53048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;11]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdc48860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;12]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6d07daf5f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;13]" time="0.0004849433898925781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdc65ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;14]" time="0.0004563331604003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdbf5828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;15]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdbf54a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;16]" time="0.0007584095001220703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdc00198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;17]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdbf52e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;18]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdc65278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;19]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6d07dafd30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;20]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6d07e33198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;21]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdc5d438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;22]" time="0.0004253387451171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6d07df87b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;23]" time="0.0004737377166748047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdc00048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;24]" time="0.0007567405700683594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdc007b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;25]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6d07e3f278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[1-&lt;lambda&gt;26]" time="0.0004584789276123047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdc537b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;0]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6d07daff28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;1]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdc659b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;2]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdbf5be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;3]" time="0.0004286766052246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdbf5e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;4]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdc00080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;5]" time="0.0007383823394775391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdc00dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;6]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdbf5eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;7]" time="0.0004763603210449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdc65dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;8]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdc53048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;9]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdc5d940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;10]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6d07dc1160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;11]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdc00a90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;12]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdc006d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;13]" time="0.0007610321044921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdc0d438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;14]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdc009b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;15]" time="0.00048041343688964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6d07dc1a90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;16]" time="0.00045371055603027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdc53cf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;17]" time="0.0004863739013671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6d07daf6a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;18]" time="0.0004899501800537109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6d07d505f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;19]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdbf5470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;20]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdc0d2b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;21]" time="0.0007112026214599609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdc0da58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;22]" time="0.0004475116729736328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdc65cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;23]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6d07e33438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;24]" time="0.0004661083221435547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdc53cf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;25]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6d07dc1e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="210" name="test_getitem_repeated[2-&lt;lambda&gt;26]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:210: &lt;py._xmlgen.raw object at 0x7f6cfdc00048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;0]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc0dbe0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;1]" time="0.00048613548278808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc0d128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;2]" time="0.0007109642028808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc160b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;3]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc0d940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;4]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc005f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;5]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc00eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;6]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc77860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;7]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc3d860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;8]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc65278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;9]" time="0.000415802001953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc161d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;10]" time="0.0007085800170898438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc166d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;11]" time="0.000469207763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6d07d50a90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;12]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc53358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;13]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6d07dc1a90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;14]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc005f8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;15]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc0d080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;16]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc0dc18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;17]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc16358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;18]" time="0.0010082721710205078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc16cf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;19]" time="0.0005052089691162109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc5d7f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;20]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6d07d50a90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;21]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc0db00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;22]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6d07dc14a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;23]" time="0.0004124641418457031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc00e10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;24]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdbf5b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;25]" time="0.00041961669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6d07e81eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[0-&lt;lambda&gt;26]" time="0.0004169940948486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6d07daf0b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;0]" time="0.0007503032684326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6d07e816a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;1]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdbf5f28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;2]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc00e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;3]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc0da58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;4]" time="0.00047326087951660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc3d668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;5]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6d07d89320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;6]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6d07d77630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;7]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc16c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;8]" time="0.0007231235504150391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6d07d77cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;9]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc5d940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;10]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc0d2b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;11]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc0d710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;12]" time="0.00047707557678222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdca67b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;13]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc65f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;14]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc16b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;15]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc25240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;16]" time="0.0007545948028564453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc25780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;17]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc16860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;18]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdbf5860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;19]" time="0.0004210472106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc009b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;20]" time="0.0004210472106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc0da90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;21]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6d07d50940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;22]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6d07d77cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;23]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc25128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;24]" time="0.0007231235504150391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc25cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;25]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc5d780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[1-&lt;lambda&gt;26]" time="0.00042319297790527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc0de80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;0]" time="0.000415802001953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc00e10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;1]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6d07d1a828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;2]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc16eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;3]" time="0.0004169940948486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc25a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;4]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc25358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;5]" time="0.0007288455963134766"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdbae320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;6]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc25860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;7]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc16080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;8]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6d07d1a8d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;9]" time="0.0004687309265136719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc53828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;10]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc0d438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;11]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6d07d0a240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;12]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdbae1d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;13]" time="0.0007524490356445312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdbae940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;14]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6d07dc1898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;15]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc006a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;16]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6d07d1af60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;17]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc16860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;18]" time="0.00047397613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc25a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;19]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdbaea58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;20]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdbae390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;21]" time="0.0007517337799072266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdbaef60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;22]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdbae710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;23]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc25630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;24]" time="0.0004200935363769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc16198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;25]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6d07d1aeb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="221" name="test_copy[2-&lt;lambda&gt;26]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:221: &lt;py._xmlgen.raw object at 0x7f6cfdc0dc18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;0]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6d07d298d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;1]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdbb9080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;2]" time="0.0007421970367431641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdbb95c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;3]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6d07d89470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;4]" time="0.00048542022705078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdc00160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;5]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6d07d1ab70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;6]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdc25e10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;7]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdbaec88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;8]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdbae048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;9]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdbb9240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;10]" time="0.0007679462432861328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdbb9be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;11]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdbaec18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;12]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdc25898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;13]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdc65240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;14]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdc5d780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;15]" time="0.0004229545593261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6d07ccf470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;16]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdbb90b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;17]" time="0.00046753883361816406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdbb9438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;18]" time="0.0008871555328369141"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdbc5240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;19]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdbb9630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;20]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6d07ccfa58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;21]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6d07d29828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;22]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6d07d1a978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;23]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdc25b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;24]" time="0.00046944618225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdbaed30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;25]" time="0.0004200935363769531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdbc50b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[0-&lt;lambda&gt;26]" time="0.0007243156433105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdbc5860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;0]" time="0.0005636215209960938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdc65f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;1]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6d07d1ae10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;2]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6d07d29978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;3]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6d07ccf710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;4]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdbb9a58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;5]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdbc5908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;6]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdbc5320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;7]" time="0.0009655952453613281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdbc5e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;8]" time="0.0005061626434326172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdc0da90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;9]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdc65e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;10]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdbc5b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;11]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdbc56d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;12]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdbb9ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;13]" time="0.0004887580871582031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdbb9cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;14]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdbae710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;15]" time="0.0004596710205078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdc25160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;16]" time="0.0007297992706298828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdbae2e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;17]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdbb9ba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;18]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdbc5d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;19]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdbc5da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;20]" time="0.00046372413635253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6d07cdf9b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;21]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6d07d1a978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;22]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6d07ccfda0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;23]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdc163c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;24]" time="0.0007550716400146484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdc16588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;25]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6d07ccfda0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[1-&lt;lambda&gt;26]" time="0.0004334449768066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6d07cdf5c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;0]" time="0.0004885196685791016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdbc5908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;1]" time="0.0004894733428955078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdbc56d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;2]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdbb9cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;3]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdbaef98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;4]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdbd43c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;5]" time="0.0008003711700439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdbd4908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;6]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdbb9dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;7]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdbc56d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;8]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6d07cdfa58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;9]" time="0.00041937828063964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6d07d50160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;10]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6d07cef710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;11]" time="0.00041794776916503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdbd44a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;12]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdbd42b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;13]" time="0.0007734298706054688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdbd4e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;14]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6d07cef3c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;15]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdc65e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;16]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdbc5358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;17]" time="0.00044727325439453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdbaef98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;18]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdbb9278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;19]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdbd4c88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;20]" time="0.00047707557678222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdbd45c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;21]" time="0.0007252693176269531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdbdd4a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;22]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdbd4c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;23]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdbb90b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;24]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6cfdbc52e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;25]" time="0.00041413307189941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6d07cdfef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="242" name="test_copy_repeated_index[2-&lt;lambda&gt;26]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:242: &lt;py._xmlgen.raw object at 0x7f6d07d296d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdc164a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbdd390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.0007419586181640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbddac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.000438690185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdc0de80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbaedd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbc5be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07d00898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.0004150867462158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbd4cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.0004489421844482422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbddc50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbdd160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.0007565021514892578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbe5128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbdd358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbd40b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07d00128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.0004229545593261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbc5940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbae710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07cef5c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.001744985580444336"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbe5278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.0007627010345458984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbe5748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.0004203319549560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07cdfa58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07c5a9b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbc5390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbd4a58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbdd0b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.00046515464782714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbdd9b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.0004801750183105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbe53c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.0007944107055664062"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbe5d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbdd7b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbd42e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbb9748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.0004572868347167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07c6c710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.00048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07cefda0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbe5198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbe55c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.0007314682006835938"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb713c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.000415802001953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbe5b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07cefef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07c6c710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbc5cf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbd4128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbdd3c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb71240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.0008876323699951172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb719e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbb9dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbc5cf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07c6cda0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07cefcf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbe54a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb71b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.0004253387451171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb710b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.0010144710540771484"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb7c048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07c6c3c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbc5f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.00045609474182128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb716a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb71668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.00046634674072265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbe5f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbe5dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbddc50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbd4e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.0007426738739013672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbdde10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.00041365623474121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbe5dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07d001d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.0004177093505859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb71eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.0004169940948486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07c7b908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07d29588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07cdf710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.0004341602325439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07d0ad68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.0008749961853027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdc161d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.0004482269287109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07cefda0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07c7bfd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb71b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb71470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbe5d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbdd4e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.0004677772521972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb7c550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.0011279582977294922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb7ca90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbe5d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb71d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07c7bda0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbc5f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07c6c5c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb7c7f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.0004909038543701172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb7c0f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.0007395744323730469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb7cfd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb7c470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.00047397613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb7c780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07c0d9b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07c5a908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb71e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbe5c88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb8b128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.0007085800170898438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb8b630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbe5c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07c7bfd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.0004680156707763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07c6c128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07c0dc50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.0004494190216064453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb7c8d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.00047397613525390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdc16208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb8b0f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.0008089542388916016"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb8bc50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb7cbe0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.0004658699035644531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07c0d908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07c7b668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb71400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07c1f278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb8b128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.0004150867462158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb8b4e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.0008170604705810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb942b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.0004241466522216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb8b400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbe5c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.0004458427429199219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07d003c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07c7bfd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.0004329681396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07c0d908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb7cb00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb94128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.0007390975952148438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb948d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07c5a908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.00040841102600097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07c6c5c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.00044536590576171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07d003c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.00041985511779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbddda0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb8b908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.000415802001953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb949b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.0004184246063232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb943c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.0007417201995849609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb94ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb946a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb8bb70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.00045490264892578125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbe5588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07c1f7b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdc65e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07c2f470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb7cb38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.0007677078247070312"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdba2550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07c2f518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07c7b320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.0004229545593261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07c1fc50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.0004487037658691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb8b828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb94a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb94e10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdba2470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.0007271766662597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdba2b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb94b00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb8be80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.0004105567932128906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07c1fc50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdcac710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07c2fc50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.0004611015319824219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdba2278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.0004570484161376953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdba22b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.0009720325469970703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbaa1d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb719b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07c3f470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdba2320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.0004210472106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdba2c88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb94dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdc16550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb8b048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdc25780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.0007073879241943359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb8b828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb94f98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdba2b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.00045680999755859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdba2160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07c1f9b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.0004622936248779297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07d003c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07c2fc50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbdd9b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.0007236003875732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07c0dc50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.0004153251647949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07c2fcf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07c3f860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdba2da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.0004165172576904297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdba2828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.00042247772216796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb942e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.0004253387451171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb8b710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbaa6d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.0007622241973876953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbaac18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.0004210472106933594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb948d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.000461578369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdba2b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdba2a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07c2f7b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07bcf5c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.0004112720489501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbaa978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbaa240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.0007190704345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb3b198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbaa6a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdc25780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbdd4e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.00042247772216796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07c3fb00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.00041365623474121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdba2710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.000476837158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb94cf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb3b048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.0006968975067138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb3b7b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb94fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.00044274330139160156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdba2eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07c2f908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07bcf518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbaa7f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.0004134178161621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07c0db00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.0004112720489501953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb3b048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.0006766319274902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb3bdd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbaa438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.0004203319549560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07bcfda0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07c3ffd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbe5c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.00041413307189941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07bdf128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.0004100799560546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb3ba90&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.0004127025604248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb3b320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.0007045269012451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb46438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb3b9b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.00042128562927246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07bdf128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.0004839897155761719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07c1f518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07c3ffd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07bcfef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.00043654441833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbaaf98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0005400180816650391"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb462b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.0006988048553466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb46a58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbaa358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.0005440711975097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07c3fb00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.0004138946533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07ccfef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.00041413307189941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07bdf518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.0004115104675292969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb3b240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.00041365623474121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb46be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb46128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.0007171630859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb500b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb46358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.0004253387451171875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb3b5c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.00041556358337402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb8bc88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.00042629241943359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07ccfef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07bcfba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.000423431396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07bf2278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb501d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.0007016658782958984"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb506d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.0004303455352783203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07bf2278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.00043201446533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07bcfcf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.000415802001953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07bdf9b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb3b320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb46780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.0004131793975830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb46128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb50358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.0006728172302246094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb50cf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb464e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb3b320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdba2630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07bcffd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.0004315376281738281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbaa518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.0004208087921142578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb50208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.0004298686981201172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb50550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.0009055137634277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb5c358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.0004127025604248047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdba26a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.0004088878631591797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07c02668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb50898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb50e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb46ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.0004794597625732422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb3bac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.00044989585876464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb8b2b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.00045871734619140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbaa278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.0006988048553466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb8b518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.00040531158447265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb46b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb506a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.0004706382751464844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb508d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07c02320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.00042057037353515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07ccfef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.0004143714904785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07bf2128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.0004367828369140625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb7c320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.0006647109985351562"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdbd4e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07bf2ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6d07c021d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb50898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.0004203319549560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb50ac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb46e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb8b4e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb5c860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="264" name="test_append[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.0006837844848632812"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:264: &lt;py._xmlgen.raw object at 0x7f6cfdb5cda0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;0]" time="0.000446319580078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdb462e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;1]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdb50d30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;2]" time="0.0004544258117675781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6d07c02c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;3]" time="0.0004296302795410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6d07c3f9b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;4]" time="0.00044918060302734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6d07bf2ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;5]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdb5cb00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;6]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdb5c160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;7]" time="0.0008199214935302734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdaec320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;8]" time="0.0004172325134277344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdb5c5c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;9]" time="0.00041222572326660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6d07bcfe48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;10]" time="0.0004169940948486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6d07c5a908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;11]" time="0.0004169940948486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6d07c02668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;12]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdb502e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;13]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdb46eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;14]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdaec1d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;15]" time="0.0007529258728027344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdaec940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;16]" time="0.0004143714904785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdb3bac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;17]" time="0.0004146099090576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6d07c02a58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;18]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdba2eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;19]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6d07bbb550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;20]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdb5c6a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;21]" time="0.0004382133483886719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdaeca58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;22]" time="0.0004181861877441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdaec048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;23]" time="0.0007421970367431641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdaecf60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;24]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdaec080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;25]" time="0.0004830360412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdb5ce48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[0-&lt;lambda&gt;26]" time="0.00047135353088378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6d07bdf1d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;0]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6d07bbb898&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;1]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6d07c029b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;2]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6d07ba6f28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;3]" time="0.0004591941833496094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdafa080&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;4]" time="0.0007195472717285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdafa5c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;5]" time="0.00041222572326660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdb50be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;6]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6d07b917b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;7]" time="0.0004215240478515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6d07bbb9e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;8]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdb5ca58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;9]" time="0.0004801750183105469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdaec710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;10]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdaece80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;11]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdafa240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;12]" time="0.0007879734039306641"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdafabe0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;13]" time="0.00042939186096191406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdaec208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;14]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdb5c6d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;15]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6d07bbbe80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;16]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdb50cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;17]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdb3b7f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;18]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdafa0b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;19]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdafa438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;20]" time="0.0007569789886474609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdb03240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;21]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdafa630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;22]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdb3bbe0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;23]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6d07b4c208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;24]" time="0.0004830360412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6d07b917b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;25]" time="0.0004534721374511719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdb5cef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[1-&lt;lambda&gt;26]" time="0.00043320655822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdaec208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;0]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdb030b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;1]" time="0.0007605552673339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdb03860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;2]" time="0.0004191398620605469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdb5cc88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;3]" time="0.00041556358337402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdbae7b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;4]" time="0.0004343986511230469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6d07c02fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;5]" time="0.00044155120849609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6d07ba6f28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;6]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdafad30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;7]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdb03908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;8]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdb03320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;9]" time="0.00075531005859375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdb03e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;10]" time="0.0004754066467285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdb03358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;11]" time="0.00041604042053222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdafaf60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;12]" time="0.0004265308380126953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdafadd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;13]" time="0.0004680156707763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6d07b4c9e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;14]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6d07bbb2b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;15]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6d07b5b748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;16]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdaec4e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;17]" time="0.00099945068359375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdb0e4e0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;18]" time="0.0005016326904296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6d07c02278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;19]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6d07b4c7f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;20]" time="0.0004925727844238281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdb03470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;21]" time="0.0004379749298095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdb03da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;22]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdafada0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;23]" time="0.0004551410675048828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdb46b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;24]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdaec908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;25]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdb5c470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="290" name="test_append_self[2-&lt;lambda&gt;26]" time="0.0008003711700439453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:290: &lt;py._xmlgen.raw object at 0x7f6cfdb5cd68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;0]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdaec748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;1]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdafa780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;2]" time="0.000453948974609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdb03a58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;3]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdb035c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;4]" time="0.00048065185546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6d07b4c940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;5]" time="0.00046539306640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6d07b5bd30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;6]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdbaaf60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;7]" time="0.000736236572265625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdc25748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;8]" time="0.00046324729919433594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6d07b5be80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;9]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6d07b7eba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;10]" time="0.00046706199645996094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdb03518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;11]" time="0.0004456043243408203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdafa6a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;12]" time="0.00047516822814941406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdaec978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;13]" time="0.0004742145538330078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdb0e668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;14]" time="0.00044846534729003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdb0e9e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;15]" time="0.0007741451263427734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdb0ef28&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;16]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6d07b6a630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;17]" time="0.00045180320739746094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdb035c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;18]" time="0.0004439353942871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdb03cc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;19]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6d07b4c358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;20]" time="0.00048613548278808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6d07b5bd30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;21]" time="0.0004241466522216797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdb0ed68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;22]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdb0e208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;23]" time="0.0007455348968505859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdb1a4a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;24]" time="0.00047016143798828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdb0eda0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;25]" time="0.00046181678771972656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6d07bbb2b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[0-&lt;lambda&gt;26]" time="0.00045228004455566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6d07b4cb38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;0]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdb03f98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;1]" time="0.00041961669921875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdaeccc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;2]" time="0.00044798851013183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6d07b11470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;3]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdb1a390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;4]" time="0.0007894039154052734"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdb1aac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;5]" time="0.0004401206970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdaec710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;6]" time="0.0004305839538574219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdb03eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;7]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6d07b7ef98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;8]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6d07b917b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;9]" time="0.00044655799865722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdb0e208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;10]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdb1a7b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;11]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdb1a208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;12]" time="0.0007350444793701172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdb25128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;13]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdb1a9e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;14]" time="0.0004229545593261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdb0e7b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;15]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdb0ed30&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;16]" time="0.00045943260192871094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6d07b7eef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;17]" time="0.0004391670227050781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdb03eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;18]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdaec908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;19]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdb25278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;20]" time="0.0007190704345703125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdb25748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;21]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdaec710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;22]" time="0.0004553794860839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdb03518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;23]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6d07b5bc88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;24]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdc25748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;25]" time="0.0004668235778808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdb1a5c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[1-&lt;lambda&gt;26]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdb1ac88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;0]" time="0.0004258155822753906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdb253c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;1]" time="0.0007240772247314453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdb25d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;2]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdb1a2b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;3]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdb0e7b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;4]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6d07bbbfd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;5]" time="0.0004546642303466797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdb03828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;6]" time="0.0004131793975830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6d07b11860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;7]" time="0.0004239082336425781"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdb25198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;8]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdb255c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;9]" time="0.0007646083831787109"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdab23c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;10]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdb25b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;11]" time="0.0004818439483642578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6d07b117b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;12]" time="0.0004477500915527344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6d07b7efd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;13]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdb0e668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;14]" time="0.0004506111145019531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6d07b22668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;15]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdb1acc0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;16]" time="0.0004761219024658203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdab2240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;17]" time="0.0007083415985107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdab29e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;18]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6d07b229b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;19]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6d07bbb2b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;20]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdaecf60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;21]" time="0.0004394054412841797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6d07b32710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;22]" time="0.0005600452423095703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdb25198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;23]" time="0.0004744529724121094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdab2b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;24]" time="0.0004868507385253906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdab20b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;25]" time="0.0006973743438720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdab9048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="306" name="test_del[2-&lt;lambda&gt;26]" time="0.0004131793975830078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:306: &lt;py._xmlgen.raw object at 0x7f6cfdab28d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;0]" time="0.0004324913024902344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdb25358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;1]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6d07b323c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;2]" time="0.00044465065002441406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdafa780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;3]" time="0.000457763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdb5cc88&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;4]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6d07b22da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;5]" time="0.00042366981506347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdab9160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;6]" time="0.0009679794311523438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdab9668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;7]" time="0.0004470348358154297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdafa400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;8]" time="0.00044226646423339844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6d07b40240&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;9]" time="0.0004220008850097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdab2e48&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;10]" time="0.0004413127899169922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdab2400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;11]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdb25b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;12]" time="0.0004096031188964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdb1afd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;13]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdbaa7f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;14]" time="0.0004100799560546875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6d07c02278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;15]" time="0.0007123947143554688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdb0e2b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;16]" time="0.0004508495330810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6d07b11908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;17]" time="0.0004513263702392578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdb25be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;18]" time="0.0004248619079589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdab2ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;19]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdab2470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;20]" time="0.00044035911560058594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6d07ad6668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;21]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6d07b22b00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;22]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdab9710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;23]" time="0.0007061958312988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdb5c470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;24]" time="0.00041604042053222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6d07ad65c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;25]" time="0.0004355907440185547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6d07b32860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[0-&lt;lambda&gt;26]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdab2550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;0]" time="0.0004153251647949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdb25f98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;1]" time="0.0004448890686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdb1ada0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;2]" time="0.0004246234893798828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdab9278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;3]" time="0.00043487548828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdab9b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;4]" time="0.0007004737854003906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdac60f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;5]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdab9c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;6]" time="0.00043964385986328125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6d07b11ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;7]" time="0.0004169940948486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdb25160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;8]" time="0.0004189014434814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdab2e10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;9]" time="0.0004184246063232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6d07b321d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;10]" time="0.0004649162292480469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdb03eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;11]" time="0.0004138946533203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdb5ceb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;12]" time="0.0007073879241943359"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdac6630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;13]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6d07b229b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;14]" time="0.00041985511779785156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6d07b32278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;15]" time="0.0004782676696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdab2ba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;16]" time="0.0004532337188720703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdb1ab00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;17]" time="0.0004601478576660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdab9a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;18]" time="0.0004565715789794922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdab9f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;19]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdac6550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;20]" time="0.0006949901580810547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdac6c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;21]" time="0.0004673004150390625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdab9be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;22]" time="0.0004417896270751953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdb1a4a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;23]" time="0.00042724609375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdab2ba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;24]" time="0.00041604042053222656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6d07ad6fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;25]" time="0.00042748451232910156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6d07ae6c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[1-&lt;lambda&gt;26]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdac6978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;0]" time="0.00045108795166015625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdac6400&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;1]" time="0.0007545948028564453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdad52b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;2]" time="0.0004353523254394531"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdac6320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;3]" time="0.00043463706970214844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6d07ae6128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;4]" time="0.00043892860412597656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6d07b32860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;5]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdb25198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;6]" time="0.00045299530029296875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6d07af9668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;7]" time="0.0004582405090332031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdab9a20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;8]" time="0.0004863739013671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdad5128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;9]" time="0.0007386207580566406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdad58d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;10]" time="0.0004363059997558594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdb1a908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;11]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdb25588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;12]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdab2e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;13]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6d07ae6b00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;14]" time="0.00046443939208984375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdac6208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;15]" time="0.00042510032653808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdad59b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;16]" time="0.0004372596740722656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdad53c8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;17]" time="0.0007112026214599609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdad5ef0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;18]" time="0.0004608631134033203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdad56a0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;19]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6d07b22cf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;20]" time="0.0004467964172363281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdac6e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;21]" time="0.00045990943908691406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6d07ae6c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;22]" time="0.0004279613494873047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdb25da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;23]" time="0.0004146099090576172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdb1a6d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;24]" time="0.0004222393035888672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6d07b11128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;25]" time="0.0007107257843017578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6cfdae0550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="323" name="test_scal[2-&lt;lambda&gt;26]" time="0.0004374980926513672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:323: &lt;py._xmlgen.raw object at 0x7f6d07af9ba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.0004496574401855469"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdab2dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.0004277229309082031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdac6d68&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdb03828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.00041222572326660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdad5630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.0004153251647949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdad5e10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.00042819976806640625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdae0470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.0007150173187255859"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdae0b70&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.0004425048828125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdad51d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.000476837158203125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdb03828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.0004684925079345703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6d07ad6da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdab27f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.00046515464782714844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdab9be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdae0278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.0004558563232421875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdae02b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.0007152557373046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdae61d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.0004150867462158203"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdae0438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.0004260540008544922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdab9da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdab2dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.00042700767517089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6d07ad6710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6d07a87668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.00043511390686035156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdad55c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.0004515647888183594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdae6048&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.0009553432464599609"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdae67f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdb25828&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.00042176246643066406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6d07a73668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.0004119873046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdae0780&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.0004169940948486328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdae0a58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.0004119873046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdad5e10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.0004203319549560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdac6f98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.00047206878662109375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6d07ad6908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.00043845176696777344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdb7cac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.0007042884826660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdab92e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdac6198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.0004520416259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdad5f60&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.0004525184631347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdae0f98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.0004451274871826172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6d07a73b00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.0004410743713378906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdab2390&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.00045013427734375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6d07ae6128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdae6940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.0006670951843261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6d07c3ff98&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.00045800209045410156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdb1a6d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6d07a73b00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.00048613548278808594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdae0978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.0004703998565673828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdad5fd0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.0004603862762451172"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdac60b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdae6518&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdae6cf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.0007205009460449219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfda76278&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.0004322528839111328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdae6a58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdac6c18&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.0004203319549560547"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdad5710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.00043129920959472656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdae0630&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.00041794776916503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6d07a73cf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.00043392181396484375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6d07a87668&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.00043582916259765625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfda76160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.0007123947143554688"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfda767b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.0004267692565917969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6d07a73320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.00041222572326660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6d07a051d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.0004184246063232422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdae0588&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.0004153251647949219"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdac6c50&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.0004420280456542969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdae6550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6d07ad6da0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.0004189014434814453"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfda76160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.0007014274597167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfda76dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.0004227161407470703"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdae64a8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.0004432201385498047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdad5e10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdae0358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.0004429817199707031"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6d07a057b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.00043082237243652344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdb1a6d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.00045752525329589844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfda76b38&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.00043773651123046875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfda76860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.0006933212280273438"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfda84438&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfda76978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.00045037269592285156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6d07a73cf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.0004527568817138672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6d07a055c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.00043702125549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdad5eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.0004680156707763672"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdae6940&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.0004718303680419922"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6d07a14710&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.00044417381286621094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfda842b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.0007014274597167969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfda84a58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.00041484832763671875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdab9748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.00041222572326660156"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdad5e10&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.0004630088806152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdab2e80&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.00041937828063964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdb1a6d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.0004642009735107422"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfda76860&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.00045561790466308594"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfda84be0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfda84128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.0007331371307373047"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfda8d0b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.00042557716369628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfda847b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.0004284381866455078"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6d07a271d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.00041675567626953125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfda76470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.0004444122314453125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6d07a05ba8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.00041556358337402344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdad5eb8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.00044345855712890625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdac60f0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.0004405975341796875"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfda8d1d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.0007469654083251953"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfda8d6d8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.0004317760467529297"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdae62e8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.0004360675811767578"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdae0470&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.0004699230194091797"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfda765c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.0004620552062988281"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6d07a27908&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfda84748&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.0004715919494628906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfda84198&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.00046944618225097656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfda8d358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.0007300376892089844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfda8dcf8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfda842b0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.0004878044128417969"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfda76ac8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.00044083595275878906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6d07a73b00&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.0004398822784423828"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdae00b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.00048160552978515625"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6d07a14a58&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.00045418739318847656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfda8d208&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.00046133995056152344"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfda8d550&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.0006966590881347656"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfda98358&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.0004229545593261719"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfda8da20&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.00041794776916503906"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6d07a14320&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.00042891502380371094"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfdae00b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.0004096031188964844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfda76160&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.00047278404235839844"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6d07a275c0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.00042438507080078125"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfda84dd8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.00041866302490234375"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfda981d0&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.0011637210845947266"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6cfda98978&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.0004627704620361328"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6d07a057b8&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.0004639625549316406"><skipped message="Suite splitting in effect" type="pytest.skip">src/pymortests/vectorarray.py:361: &lt;py._xmlgen.raw object at 0x7f6d07a36128&gt;</skipped></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.02874588966369629"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.030338525772094727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.031418800354003906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.04322028160095215"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.015516519546508789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.004951953887939453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.07093667984008789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.11578679084777832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.28748202323913574"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.0497441291809082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.03512978553771973"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.009288311004638672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.04155468940734863"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.07211446762084961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.078582763671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.08021092414855957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.04648542404174805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.008450984954833984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.32465362548828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.20706582069396973"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.49957942962646484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.10085558891296387"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.018051862716674805"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.006566047668457031"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.1977996826171875"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.35101962089538574"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="1.0257720947265625"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.09951925277709961"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.01854562759399414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.00516963005065918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.028176069259643555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.03164339065551758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.03217935562133789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.04306936264038086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.015792131423950195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.004984378814697266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.06761574745178223"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.11597871780395508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.2892129421234131"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.050417184829711914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.035155534744262695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.009466171264648438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.04138016700744629"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.07176446914672852"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.07724523544311523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.0818631649017334"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.044904470443725586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.008354425430297852"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.24654436111450195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.2079932689666748"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.5105247497558594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.10432314872741699"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.01702141761779785"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.005842447280883789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.22437047958374023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.38008570671081543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="1.1645092964172363"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.10733866691589355"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.01902461051940918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.005136251449584961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.027794599533081055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.0301206111907959"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.03065347671508789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.043225765228271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.015262603759765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.004756927490234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.06693053245544434"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.11663365364074707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.2886974811553955"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.05162835121154785"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.03437972068786621"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.009418487548828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.0413510799407959"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.07098531723022461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.07700729370117188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.08032655715942383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.0484623908996582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.008232593536376953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.24896597862243652"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.20224475860595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.509162425994873"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.10263895988464355"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.016942977905273438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.006169557571411133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.25008535385131836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.42353320121765137"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="1.2936956882476807"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.11412382125854492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.01946115493774414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.005465984344482422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.028566837310791016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.030645370483398438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.030840158462524414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.04354238510131836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.015194416046142578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.0047512054443359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.06922364234924316"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.11508822441101074"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.2902700901031494"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.049623966217041016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.03599834442138672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.009191274642944336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.04105973243713379"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.07142090797424316"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.07634663581848145"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.08397126197814941"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.045870304107666016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.008445978164672852"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.23756623268127441"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.1995406150817871"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.5155601501464844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.10146713256835938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.01672220230102539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.006040096282958984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.27778005599975586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.46770381927490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="1.4329252243041992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.11778378486633301"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.01868295669555664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.0053021907806396484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.027982473373413086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.0313115119934082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.030948162078857422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.04311060905456543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.015260457992553711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.0047376155853271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.06905770301818848"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.11603283882141113"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.291363000869751"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.04972267150878906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.03507280349731445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.009406805038452148"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.041352272033691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.07207846641540527"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.07697725296020508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.08140039443969727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.046831369400024414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.008168697357177734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.2391502857208252"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.20493483543395996"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.5220725536346436"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.10311508178710938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.017487287521362305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.006341218948364258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.3122372627258301"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.5215272903442383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="1.5731170177459717"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="361" name="test_axpy[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.12639641761779785"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.052576541900634766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.13925600051879883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.10689234733581543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.12101626396179199"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.12939214706420898"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.10425448417663574"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.04166412353515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.12382292747497559"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.2874791622161865"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.5590100288391113"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="1.5887694358825684"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.12742042541503906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.10596060752868652"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.3076822757720947"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.1653454303741455"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.29672932624816895"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.3367276191711426"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.36237382888793945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.135361909866333"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.3047826290130615"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.9665083885192871"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.9528608322143555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="2.6856234073638916"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.2574949264526367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.04773402214050293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.21452808380126953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="1.4857232570648193"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="2.8326895236968994"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="11.69677448272705"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.4029655456542969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.051492929458618164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.1366567611694336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.10472369194030762"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.12126541137695312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.1271977424621582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.1030569076538086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.04103446006774902"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.12253522872924805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.2810053825378418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.5530920028686523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="1.5866966247558594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.12397193908691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.10296487808227539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.30431032180786133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.16770029067993164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.2985200881958008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.34590721130371094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.3682875633239746"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.13554978370666504"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.2984912395477295"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.9940516948699951"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.9519221782684326"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="2.7088472843170166"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.2637794017791748"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.047240495681762695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.24243569374084473"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="2.2598748207092285"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="4.096025705337524"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="15.389041662216187"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.4882223606109619"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.051850318908691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.13797354698181152"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.10712790489196777"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.12485170364379883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.13018465042114258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.10686302185058594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.04241204261779785"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.1253528594970703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.2935373783111572"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.5690736770629883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="1.5940485000610352"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.13185977935791016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.10485625267028809"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.31020331382751465"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.16596651077270508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.299943208694458"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.346498966217041"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.36929798126220703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.1361696720123291"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.3082118034362793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.9943897724151611"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.9557924270629883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="2.6847829818725586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.2582225799560547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.04646182060241699"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.2592628002166748"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="2.8368794918060303"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="5.043895959854126"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="18.723499536514282"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.566516637802124"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.05680084228515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.1494615077972412"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.11010432243347168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.12737560272216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.1335141658782959"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.10988855361938477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.043456315994262695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.13196468353271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.30518579483032227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.5951309204101562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="1.7755942344665527"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.1522204875946045"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.12253570556640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.36705565452575684"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.1958932876586914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.3595116138458252"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.4043583869934082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.4339792728424072"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.18142938613891602"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.40643882751464844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="1.6353130340576172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="1.2266252040863037"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="2.766596794128418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.25473570823669434"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.0467221736907959"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.2727701663970947"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="3.4221136569976807"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="5.873411417007446"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="21.627121448516846"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.5931758880615234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.05118441581726074"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.13550138473510742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.10524201393127441"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.12019705772399902"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.12563824653625488"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.10265803337097168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.04096531867980957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.12264776229858398"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.2794961929321289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.5641801357269287"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="1.566378116607666"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.12643885612487793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.10303640365600586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.3047068119049072"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.16396379470825195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.2933692932128906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.32993364334106445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.35839056968688965"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.1370701789855957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.2965729236602783"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.9683322906494141"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.9507431983947754"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="2.6610612869262695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.257063627243042"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.046343088150024414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.29884839057922363"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="3.917654037475586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="6.842052459716797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="25.7285635471344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.692619800567627"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.05318331718444824"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.14206933975219727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.10925674438476562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.12439608573913574"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.13046646118164062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.10526061058044434"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.041521549224853516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.1240682601928711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.29178404808044434"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.5649347305297852"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="1.566326379776001"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.12372541427612305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.1027684211730957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.30582523345947266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.16559958457946777"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.29697537422180176"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.33702754974365234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.3584327697753906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.1369624137878418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.30197763442993164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.9685039520263672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.9510407447814941"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="2.6665680408477783"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.26250576972961426"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.046381473541259766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.3245210647583008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="4.504887580871582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="7.669884920120239"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="28.482959032058716"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.735421895980835"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.05071425437927246"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.13709640502929688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.10521912574768066"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.1206810474395752"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.12773966789245605"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.10431408882141113"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.041451454162597656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.12319469451904297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.2849857807159424"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.5595629215240479"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="1.601935625076294"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.12532424926757812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.10353231430053711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.30937981605529785"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.16829299926757812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.29584670066833496"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.33399200439453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.3641841411590576"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.13815069198608398"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.2983896732330322"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.9579501152038574"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.9667704105377197"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="2.7071194648742676"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.26573967933654785"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.047040700912475586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.34479498863220215"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="5.030813455581665"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="8.642529010772705"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="31.854967832565308"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.8211507797241211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.05169367790222168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.13985919952392578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.1061239242553711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.1241610050201416"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.1267094612121582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.1025381088256836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.04074692726135254"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.12622356414794922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.2881944179534912"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.5619499683380127"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="1.5733742713928223"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.12435626983642578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.10242557525634766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.3053560256958008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.1645677089691162"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.3057584762573242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.33684277534484863"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.3688821792602539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.13631033897399902"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.2985239028930664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.9671194553375244"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.9503211975097656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="2.7009379863739014"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.26347994804382324"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.045809030532836914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.36211442947387695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="5.515178918838501"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="9.419983148574829"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="34.862043380737305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.8612706661224365"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.052068471908569336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.13911151885986328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.11496567726135254"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.12197756767272949"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.12559747695922852"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.10170960426330566"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.039464473724365234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.11941742897033691"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.2788219451904297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.5482885837554932"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="1.563218116760254"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.13425326347351074"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.10203909873962402"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.3028707504272461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.16280388832092285"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.29660654067993164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.3352055549621582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.358243465423584"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.13160490989685059"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.29765772819519043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.9622340202331543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.9416446685791016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="2.638972759246826"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.2530629634857178"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.04590797424316406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.3865985870361328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="6.078892469406128"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="10.21973466873169"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="39.161943674087524"><system-err>no more timer available, reusing last one
</system-err></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="409" name="test_axpy_one_x[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.9359807968139648"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;0]" time="0.019646406173706055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;1]" time="0.020647764205932617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;2]" time="0.03925895690917969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;3]" time="0.041231393814086914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;4]" time="0.040760040283203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;5]" time="0.016592979431152344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;6]" time="0.016745328903198242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;7]" time="0.04290914535522461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;8]" time="0.22387075424194336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;9]" time="0.4377632141113281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;10]" time="0.03592538833618164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;11]" time="0.06948137283325195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;12]" time="0.06918597221374512"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;13]" time="0.055693864822387695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;14]" time="0.07620024681091309"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;15]" time="0.11055707931518555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;16]" time="0.11675071716308594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;17]" time="0.04788064956665039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;18]" time="0.047386884689331055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;19]" time="0.14042425155639648"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;20]" time="0.39447450637817383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;21]" time="0.8714492321014404"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;22]" time="0.018329858779907227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;23]" time="0.0187227725982666"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;24]" time="0.1788475513458252"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;25]" time="4.597995042800903"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[0-&lt;lambda&gt;26]" time="10.647436618804932"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;0]" time="0.018961668014526367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;1]" time="0.019643068313598633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;2]" time="0.038024187088012695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;3]" time="0.03999209403991699"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;4]" time="0.04021883010864258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;5]" time="0.01639866828918457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;6]" time="0.016434192657470703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;7]" time="0.04093217849731445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;8]" time="0.2181563377380371"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;9]" time="0.4256629943847656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;10]" time="0.0345454216003418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;11]" time="0.06821107864379883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;12]" time="0.06864118576049805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;13]" time="0.05544614791870117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;14]" time="0.07382655143737793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;15]" time="0.1030123233795166"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;16]" time="0.11362719535827637"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;17]" time="0.04596567153930664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;18]" time="0.04756593704223633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;19]" time="0.13947010040283203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;20]" time="0.3918139934539795"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;21]" time="0.8428699970245361"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;22]" time="0.018010377883911133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;23]" time="0.018350601196289062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;24]" time="0.18050312995910645"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;25]" time="4.6214683055877686"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[1-&lt;lambda&gt;26]" time="10.658949375152588"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;0]" time="0.017739057540893555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;1]" time="0.018461942672729492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;2]" time="0.03670835494995117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;3]" time="0.038495779037475586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;4]" time="0.04230332374572754"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;5]" time="0.016187191009521484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;6]" time="0.016170978546142578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;7]" time="0.039984703063964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;8]" time="0.2187666893005371"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;9]" time="0.4292480945587158"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;10]" time="0.0347752571105957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;11]" time="0.0687408447265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;12]" time="0.07195210456848145"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;13]" time="0.05727672576904297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;14]" time="0.07717704772949219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;15]" time="0.10859179496765137"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;16]" time="0.1197652816772461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;17]" time="0.04609513282775879"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;18]" time="0.04655337333679199"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;19]" time="0.14391779899597168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;20]" time="0.38738441467285156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;21]" time="0.8432869911193848"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;22]" time="0.018279314041137695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;23]" time="0.018395662307739258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;24]" time="0.1742081642150879"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;25]" time="4.6579718589782715"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="457" name="test_axpy_self[2-&lt;lambda&gt;26]" time="10.753650903701782"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.002911090850830078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.0015387535095214844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.0040018558502197266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.004174709320068359"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.005963563919067383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.005041360855102539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.002379179000854492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.001416921615600586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.0056972503662109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.00708770751953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.02151775360107422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.005472898483276367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.004457712173461914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.002195119857788086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.005142688751220703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.008539915084838867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.009301185607910156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.014422893524169922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.006632804870605469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.002342700958251953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.04791760444641113"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.020243406295776367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.06634020805358887"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.007919788360595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.002492666244506836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.002290010452270508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.026981830596923828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.034947872161865234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.1265583038330078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.008210182189941406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.002709627151489258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.0014781951904296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.003968954086303711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.004224061965942383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.005919456481933594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.0050508975982666016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.0023958683013916016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.001430511474609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.0057795047760009766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.0070323944091796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.022089719772338867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.005446434020996094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.004485368728637695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.0022444725036621094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.0051937103271484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.008541584014892578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.009305953979492188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.014435768127441406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.006628513336181641"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.0023882389068603516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.04308652877807617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.01984572410583496"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.0682525634765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.008046388626098633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.0025746822357177734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.003178119659423828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.045021772384643555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.040795087814331055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.1804654598236084"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.00944828987121582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.0027472972869873047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.0014545917510986328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.00396275520324707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.004213571548461914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.005845546722412109"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.005075931549072266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.00232696533203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.0014109611511230469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.005922794342041016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.007168769836425781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.021943092346191406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.005496501922607422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.004498004913330078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.0022156238555908203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.005216121673583984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.008569002151489258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.009356260299682617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.014473676681518555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.006496906280517578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.002340555191040039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.04424738883972168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.020868301391601562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.06942200660705566"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.008820772171020508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.0035305023193359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.0032036304473876953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.04552006721496582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.04123520851135254"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.18463945388793945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.011081933975219727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.0029952526092529297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.0017046928405761719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.004449129104614258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.004486799240112305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.006433725357055664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.005522966384887695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.002542257308959961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.0016362667083740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.006185770034790039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.007893085479736328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.023389816284179688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.006585836410522461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.004748106002807617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.0022573471069335938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.0053043365478515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.008642911911010742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.009493827819824219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.014826536178588867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.007593870162963867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.0024580955505371094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.04541659355163574"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.021694183349609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.06923842430114746"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.008524417877197266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.0026481151580810547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.0024209022521972656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.02798604965209961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.06106281280517578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.18236351013183594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.010647773742675781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.00274658203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.0015387535095214844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.0041997432708740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.004346132278442383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.006143808364868164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.00511622428894043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.002393007278442383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.0015034675598144531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.00587916374206543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.007465839385986328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.0228579044342041"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.006558418273925781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.004647731781005859"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.0023183822631835938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.0054035186767578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.009066343307495117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.009954214096069336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.017020702362060547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.008394241333007812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.0034401416778564453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.043570756912231445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.021120786666870117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.07116365432739258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.009366273880004883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.0037140846252441406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.0033626556396484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.04891848564147949"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.06557893753051758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.24027204513549805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.011710405349731445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.005331516265869141"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.0016942024230957031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.004426240921020508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.0044481754302978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.0062656402587890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.005157947540283203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.002557516098022461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.0015637874603271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.006055593490600586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.007715702056884766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.022989511489868164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.006591081619262695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.004966020584106445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.002437591552734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.005353212356567383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.008748531341552734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.009491205215454102"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.014739036560058594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.006666421890258789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.0025479793548583984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.04335308074951172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.02158641815185547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.07008504867553711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.00859379768371582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.002668619155883789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.0032918453216552734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.04906296730041504"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.06466341018676758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.2395772933959961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.012418031692504883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.0040435791015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.0017323493957519531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.0043256282806396484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.0044956207275390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.006479740142822266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.0057408809661865234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.002658367156982422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.0016472339630126953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.0063135623931884766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.007945775985717773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.023016929626464844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.006696462631225586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.0047054290771484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.002359628677368164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.0056400299072265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.009677886962890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.011551856994628906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.016279935836791992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.0076770782470703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.0024237632751464844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.044378042221069336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.021767377853393555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.07157492637634277"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.009284496307373047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.0038521289825439453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.002595186233520508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.028826475143432617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.06070995330810547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.18790364265441895"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.01097416877746582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.002849578857421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0016338825225830078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.0043828487396240234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.004458904266357422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.006402015686035156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.0054285526275634766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.002570629119873047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.0016193389892578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.006110429763793945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.007756233215332031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.023200273513793945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.00689697265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.004996776580810547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.0025064945220947266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.0055315494537353516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.008783102035522461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.009656190872192383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.014678478240966797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.006710052490234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.002448558807373047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.04416251182556152"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.021211862564086914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.07227087020874023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.008905649185180664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.0037360191345214844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.0033500194549560547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.04793047904968262"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.06411361694335938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.23633885383605957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.013376712799072266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.0040476322174072266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.0016984939575195312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.0042383670806884766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.004511833190917969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.006325960159301758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.00559687614440918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.0025892257690429688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.0015549659729003906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.006311178207397461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.008153438568115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.02305293083190918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.006613969802856445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.004637718200683594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.0023190975189208984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.005343437194824219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.008687496185302734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.009635448455810547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.0158083438873291"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.0077266693115234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.0024614334106445312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.04366278648376465"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.021426677703857422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.07075190544128418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.009037494659423828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.0036482810974121094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.003211498260498047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.04684567451477051"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.06320381164550781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.24003171920776367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="513" name="test_pairwise_dot[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.011647939682006836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;0]" time="0.005556344985961914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;1]" time="0.004376649856567383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;2]" time="0.00745844841003418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;3]" time="0.009297370910644531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;4]" time="0.01107478141784668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;5]" time="0.0038552284240722656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;6]" time="0.00376129150390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;7]" time="0.008237838745117188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;8]" time="0.02739715576171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;9]" time="0.054229021072387695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;10]" time="0.008949041366577148"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;11]" time="0.015691757202148438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;12]" time="0.015216827392578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;13]" time="0.011907577514648438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;14]" time="0.014344930648803711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;15]" time="0.02392101287841797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;16]" time="0.027406692504882812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;17]" time="0.009289741516113281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;18]" time="0.008019447326660156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;19]" time="0.011530160903930664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;20]" time="0.0412142276763916"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;21]" time="0.0834195613861084"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;22]" time="0.004667758941650391"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;23]" time="0.003942251205444336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;24]" time="0.00853419303894043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;25]" time="0.04788637161254883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[0-&lt;lambda&gt;26]" time="0.10262727737426758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;0]" time="0.005422353744506836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;1]" time="0.004296541213989258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;2]" time="0.007634401321411133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;3]" time="0.009701728820800781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;4]" time="0.011384725570678711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;5]" time="0.0051686763763427734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;6]" time="0.003971576690673828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;7]" time="0.008359909057617188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;8]" time="0.028044700622558594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;9]" time="0.05424690246582031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;10]" time="0.008662223815917969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;11]" time="0.015357255935668945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;12]" time="0.01493215560913086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;13]" time="0.011335611343383789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;14]" time="0.013767242431640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;15]" time="0.023082494735717773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;16]" time="0.028369665145874023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;17]" time="0.009424686431884766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;18]" time="0.009070396423339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;19]" time="0.012614011764526367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;20]" time="0.04175066947937012"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;21]" time="0.08447742462158203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;22]" time="0.00476384162902832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;23]" time="0.003986358642578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;24]" time="0.009495258331298828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;25]" time="0.07345438003540039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[1-&lt;lambda&gt;26]" time="0.15992331504821777"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;0]" time="0.0051310062408447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;1]" time="0.00429224967956543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;2]" time="0.007394552230834961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;3]" time="0.009521007537841797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;4]" time="0.010901212692260742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;5]" time="0.0037322044372558594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;6]" time="0.0036077499389648438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;7]" time="0.007605075836181641"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;8]" time="0.027663707733154297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;9]" time="0.05338644981384277"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;10]" time="0.008749961853027344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;11]" time="0.015127182006835938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;12]" time="0.015197515487670898"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;13]" time="0.011687278747558594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;14]" time="0.014170408248901367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;15]" time="0.023771286010742188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;16]" time="0.027910470962524414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;17]" time="0.00961613655090332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;18]" time="0.008016109466552734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;19]" time="0.011855363845825195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;20]" time="0.04018974304199219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;21]" time="0.08456087112426758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;22]" time="0.00495600700378418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;23]" time="0.003994464874267578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;24]" time="0.009584665298461914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;25]" time="0.07113909721374512"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="528" name="test_pairwise_dot_self[2-&lt;lambda&gt;26]" time="0.15684223175048828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.003939390182495117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.0021178722381591797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.007613420486450195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.009575843811035156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.015458345413208008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.010683059692382812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.004106044769287109"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.002183675765991211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.03379034996032715"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.06578922271728516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.9685003757476807"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.010911941528320312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.004800081253051758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.003494739532470703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.010445594787597656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.01596236228942871"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.021607637405395508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.032440900802612305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.00856781005859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.004364490509033203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.08774733543395996"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.06873655319213867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.792628288269043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.014017581939697266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.004085063934326172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.003229856491088867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.0453181266784668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.07515263557434082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.6552674770355225"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.014137983322143555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.004194498062133789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.002199411392211914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.007743120193481445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.009736776351928711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.014226198196411133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.008963823318481445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.003026723861694336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.003569364547729492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.03355097770690918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.06543731689453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.9646692276000977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.011102914810180664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.0050487518310546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.003579378128051758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.010584115982055664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.017071247100830078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.021338701248168945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.03207826614379883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.008170127868652344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.0033898353576660156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.0856783390045166"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.06963014602661133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.7963962554931641"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.01381373405456543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.003838777542114258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.004187583923339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.06625866889953613"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.07942700386047363"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.71726393699646"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.015428304672241211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.00409245491027832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.0021893978118896484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.007498979568481445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.009541511535644531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.014290571212768555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.008971929550170898"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.0030024051666259766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.002130270004272461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.03363800048828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.06510066986083984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.969822883605957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.011087656021118164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.005964517593383789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.0036263465881347656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.01020956039428711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.015801191329956055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.021802902221679688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.032814979553222656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.008327722549438477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.0034601688385009766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.0897061824798584"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.06929540634155273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.8063366413116455"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.014258861541748047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.004108428955078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.004178047180175781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.06440186500549316"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.07826542854309082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.7127466201782227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.01567840576171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.004327058792114258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.002261638641357422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.007850408554077148"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.010169029235839844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.014722347259521484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.010511636734008789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.0040853023529052734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.002318143844604492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.034536123275756836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.06673145294189453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.9725897312164307"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.011259794235229492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.0049915313720703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.0035996437072753906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.010772705078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.016885042190551758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.021375656127929688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.031981468200683594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.008114814758300781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.0034537315368652344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.08730792999267578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.07136273384094238"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.798182487487793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.014309167861938477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.004244327545166016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.0032494068145751953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.045899391174316406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.09731173515319824"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.7100303173065186"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.015521526336669922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.0041925907135009766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.002367258071899414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.007879972457885742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.009708881378173828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.013964176177978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.009075164794921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.0028793811798095703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.002110719680786133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.03444695472717285"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.06673502922058105"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.9676520824432373"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.011078834533691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.005934476852416992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.003639698028564453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.010372400283813477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.015789270401000977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.02138352394104004"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.03163623809814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.008088111877441406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.0034918785095214844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.08524870872497559"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.06928634643554688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.8008112907409668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.014091730117797852"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.004162311553955078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.004138946533203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.06632328033447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.10178208351135254"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.7636468410491943"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.015820980072021484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.004328250885009766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.0022437572479248047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.007814645767211914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.009776115417480469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.014486312866210938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.008980035781860352"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.00392460823059082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.002100706100463867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.03381490707397461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.06584024429321289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.9675185680389404"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.010946273803710938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.005075216293334961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.0036230087280273438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.010589599609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.017294645309448242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.02213120460510254"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.0325465202331543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.008344888687133789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.004445552825927734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.08729100227355957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.07000279426574707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.7903499603271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.014105558395385742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.004214286804199219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.004076480865478516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.06528258323669434"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.10162878036499023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.773329496383667"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.015667438507080078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.004172801971435547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.002164125442504883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.007688045501708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.009397268295288086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.013858318328857422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.008623600006103516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.0029082298278808594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.002105236053466797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.03355073928833008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.06506848335266113"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.9642138481140137"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.010557174682617188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.004861354827880859"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.003637552261352539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.010737419128417969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.017078876495361328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.021622657775878906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.03176689147949219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.00805211067199707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.0033283233642578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.0876169204711914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.06939458847045898"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.7936999797821045"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.013777971267700195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.0041561126708984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.0033082962036132812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.04635906219482422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.0975954532623291"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.7079133987426758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.015147686004638672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.004342555999755859"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0023207664489746094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.008022308349609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.009961605072021484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.014642953872680664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.010327577590942383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.0038652420043945312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.0022034645080566406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.03399181365966797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.06592297554016113"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.960803747177124"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.010596275329589844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.004877567291259766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.0035386085510253906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.010263919830322266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.01663827896118164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.02104663848876953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.03164052963256836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.00823664665222168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.0034265518188476562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.08653044700622559"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.0683128833770752"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.794609546661377"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.01383209228515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.004143953323364258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.003846883773803711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.06402707099914551"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.10274767875671387"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.7659845352172852"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.0159146785736084"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.004204511642456055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.002231597900390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.007712364196777344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.009766340255737305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.014077425003051758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.008483171463012695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.0028374195098876953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.002141714096069336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.03435850143432617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.06536054611206055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.9632244110107422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.010842084884643555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.005888700485229492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.0036635398864746094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.010677576065063477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.015602350234985352"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.0213472843170166"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.032245635986328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.008487701416015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.0038650035858154297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.08684134483337402"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.06927251815795898"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.7936937808990479"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.013735532760620117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.004111766815185547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.003880023956298828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.06594419479370117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.10113263130187988"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.7653622627258301"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="546" name="test_dot[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.015909433364868164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;0]" time="0.005042076110839844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;1]" time="0.0040590763092041016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;2]" time="0.007512092590332031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;3]" time="0.014691829681396484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;4]" time="0.018061161041259766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;5]" time="0.004942893981933594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;6]" time="0.003725767135620117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;7]" time="0.015744447708129883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;8]" time="0.4365568161010742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;9]" time="2.2491087913513184"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;10]" time="0.007671833038330078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;11]" time="0.0179898738861084"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;12]" time="0.01818990707397461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;13]" time="0.011471271514892578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;14]" time="0.019362211227416992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;15]" time="0.03364706039428711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;16]" time="0.041625022888183594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;17]" time="0.00911402702331543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;18]" time="0.007867097854614258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;19]" time="0.019894838333129883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;20]" time="0.3447115421295166"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;21]" time="1.768831729888916"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;22]" time="0.004614353179931641"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;23]" time="0.003844022750854492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;24]" time="0.012791633605957031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;25]" time="0.27598071098327637"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[0-&lt;lambda&gt;26]" time="1.3012454509735107"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;0]" time="0.0048999786376953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;1]" time="0.003931999206542969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;2]" time="0.007466554641723633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;3]" time="0.014914274215698242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;4]" time="0.01907634735107422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;5]" time="0.0048370361328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;6]" time="0.0037126541137695312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;7]" time="0.016017675399780273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;8]" time="0.4333221912384033"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;9]" time="2.257744073867798"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;10]" time="0.0073931217193603516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;11]" time="0.01820230484008789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;12]" time="0.019794225692749023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;13]" time="0.012119054794311523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;14]" time="0.01882791519165039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;15]" time="0.03158402442932129"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;16]" time="0.04186105728149414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;17]" time="0.009373188018798828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;18]" time="0.008831501007080078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;19]" time="0.02108287811279297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;20]" time="0.3460092544555664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;21]" time="1.7696843147277832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;22]" time="0.004787921905517578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;23]" time="0.003970623016357422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;24]" time="0.014102697372436523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;25]" time="0.2964041233062744"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[1-&lt;lambda&gt;26]" time="1.3492062091827393"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;0]" time="0.005019187927246094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;1]" time="0.004120826721191406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;2]" time="0.008091211318969727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;3]" time="0.014959335327148438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;4]" time="0.01822042465209961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;5]" time="0.004960536956787109"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;6]" time="0.0036132335662841797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;7]" time="0.015903949737548828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;8]" time="0.43460798263549805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;9]" time="2.2420358657836914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;10]" time="0.0073812007904052734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;11]" time="0.017833232879638672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;12]" time="0.018471479415893555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;13]" time="0.011453866958618164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;14]" time="0.017721891403198242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;15]" time="0.031777381896972656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;16]" time="0.04261445999145508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;17]" time="0.009302139282226562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;18]" time="0.009256839752197266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;19]" time="0.02069830894470215"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;20]" time="0.3489186763763428"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;21]" time="1.779736042022705"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;22]" time="0.004688739776611328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;23]" time="0.003907680511474609"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;24]" time="0.014108657836914062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;25]" time="0.30039215087890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="561" name="test_dot_self[2-&lt;lambda&gt;26]" time="1.3512353897094727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;0]" time="0.0034117698669433594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;1]" time="0.0025680065155029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;2]" time="0.004029273986816406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;3]" time="0.012071609497070312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;4]" time="0.021990060806274414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;5]" time="0.004126071929931641"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;6]" time="0.003187894821166992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;7]" time="0.00532841682434082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;8]" time="0.019757747650146484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;9]" time="0.03904128074645996"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;10]" time="0.00757598876953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;11]" time="0.009727001190185547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;12]" time="0.008717775344848633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;13]" time="0.005859851837158203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;14]" time="0.0093841552734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;15]" time="0.04109692573547363"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;16]" time="0.08053350448608398"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;17]" time="0.00994253158569336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;18]" time="0.008624076843261719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;19]" time="0.023798227310180664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;20]" time="0.041385650634765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;21]" time="0.07903528213500977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;22]" time="0.025472402572631836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;23]" time="0.025805234909057617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;24]" time="0.03195309638977051"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;25]" time="0.07811856269836426"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[0-&lt;lambda&gt;26]" time="0.13921022415161133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;0]" time="0.0037994384765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;1]" time="0.004010677337646484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;2]" time="0.0061206817626953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;3]" time="0.013084888458251953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;4]" time="0.021858692169189453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;5]" time="0.004124879837036133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;6]" time="0.0030248165130615234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;7]" time="0.005305290222167969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;8]" time="0.020070552825927734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;9]" time="0.03934168815612793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;10]" time="0.0056133270263671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;11]" time="0.009468317031860352"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;12]" time="0.00872039794921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;13]" time="0.006108283996582031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;14]" time="0.009713172912597656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;15]" time="0.03993034362792969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;16]" time="0.07900452613830566"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;17]" time="0.009112358093261719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;18]" time="0.008298397064208984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;19]" time="0.023748159408569336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;20]" time="0.04127144813537598"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;21]" time="0.07866168022155762"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;22]" time="0.024313688278198242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;23]" time="0.024993181228637695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;24]" time="0.03269481658935547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;25]" time="0.0786137580871582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[1-&lt;lambda&gt;26]" time="0.14121079444885254"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;0]" time="0.003498077392578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;1]" time="0.0027735233306884766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;2]" time="0.00426936149597168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;3]" time="0.012245893478393555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;4]" time="0.021663188934326172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;5]" time="0.003995180130004883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;6]" time="0.0028820037841796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;7]" time="0.0051615238189697266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;8]" time="0.019566059112548828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;9]" time="0.039328813552856445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;10]" time="0.005674839019775391"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;11]" time="0.009291648864746094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;12]" time="0.008752822875976562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;13]" time="0.006109714508056641"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;14]" time="0.009412288665771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;15]" time="0.03924846649169922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;16]" time="0.07831716537475586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;17]" time="0.00871133804321289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;18]" time="0.007824420928955078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;19]" time="0.023585081100463867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;20]" time="0.04067063331604004"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;21]" time="0.07687067985534668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;22]" time="0.02379155158996582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;23]" time="0.023772239685058594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;24]" time="0.0315852165222168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;25]" time="0.07602238655090332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="579" name="test_lincomb_1d[2-&lt;lambda&gt;26]" time="0.1402416229248047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;0]" time="0.007655143737792969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;1]" time="0.006900310516357422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;2]" time="0.008526802062988281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;3]" time="0.01047658920288086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;4]" time="0.010594367980957031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;5]" time="0.008751392364501953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;6]" time="0.008968591690063477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;7]" time="0.015282869338989258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;8]" time="0.046682119369506836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;9]" time="0.08266544342041016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;10]" time="0.01594233512878418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;11]" time="0.020244359970092773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;12]" time="0.018672466278076172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;13]" time="0.014047861099243164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;14]" time="0.019886016845703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;15]" time="0.02996683120727539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;16]" time="0.03213953971862793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;17]" time="0.031031370162963867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;18]" time="0.033010244369506836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;19]" time="0.10700821876525879"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;20]" time="0.09290528297424316"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;21]" time="0.1522529125213623"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;22]" time="0.126922607421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;23]" time="0.12687134742736816"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;24]" time="0.15774059295654297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;25]" time="0.2600553035736084"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[0-&lt;lambda&gt;26]" time="0.39355945587158203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;0]" time="0.007691860198974609"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;1]" time="0.0068776607513427734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;2]" time="0.008762836456298828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;3]" time="0.010338068008422852"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;4]" time="0.011186838150024414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;5]" time="0.008693218231201172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;6]" time="0.008724689483642578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;7]" time="0.014622926712036133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;8]" time="0.04695272445678711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;9]" time="0.08513212203979492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;10]" time="0.016267776489257812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;11]" time="0.019364595413208008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;12]" time="0.01889348030090332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;13]" time="0.014147758483886719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;14]" time="0.021060705184936523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;15]" time="0.02978515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;16]" time="0.039269447326660156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;17]" time="0.031635284423828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;18]" time="0.03353548049926758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;19]" time="0.10471677780151367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;20]" time="0.09400606155395508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;21]" time="0.15179061889648438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;22]" time="0.12293648719787598"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;23]" time="0.12455606460571289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;24]" time="0.15845036506652832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;25]" time="0.26184535026550293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[1-&lt;lambda&gt;26]" time="0.40009427070617676"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;0]" time="0.007688760757446289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;1]" time="0.0069997310638427734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;2]" time="0.008911848068237305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;3]" time="0.010691404342651367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;4]" time="0.010914802551269531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;5]" time="0.009325027465820312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;6]" time="0.00913548469543457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;7]" time="0.015120506286621094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;8]" time="0.04700446128845215"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;9]" time="0.08449435234069824"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;10]" time="0.015979766845703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;11]" time="0.019051074981689453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;12]" time="0.01860642433166504"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;13]" time="0.015438079833984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;14]" time="0.02050924301147461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;15]" time="0.03069019317626953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;16]" time="0.032776832580566406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;17]" time="0.03174853324890137"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;18]" time="0.034300804138183594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;19]" time="0.10602188110351562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;20]" time="0.09430241584777832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;21]" time="0.15392613410949707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;22]" time="0.12620806694030762"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;23]" time="0.1264190673828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;24]" time="0.1564171314239502"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;25]" time="0.2576937675476074"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="593" name="test_lincomb_2d[2-&lt;lambda&gt;26]" time="0.40122461318969727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;0]" time="0.0033299922943115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;1]" time="0.0023849010467529297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;2]" time="0.003506898880004883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;3]" time="0.004271984100341797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;4]" time="0.0047986507415771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;5]" time="0.0022199153900146484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;6]" time="0.0021448135375976562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;7]" time="0.0031137466430664062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;8]" time="0.00396275520324707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;9]" time="0.005033254623413086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;10]" time="0.0029401779174804688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;11]" time="0.005115032196044922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;12]" time="0.00493311882019043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;13]" time="0.004286527633666992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;14]" time="0.005064249038696289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;15]" time="0.006956577301025391"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;16]" time="0.008543014526367188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;17]" time="0.0031092166900634766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;18]" time="0.0028603076934814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;19]" time="0.005124568939208984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;20]" time="0.011655807495117188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;21]" time="0.022143125534057617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;22]" time="0.0028972625732421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;23]" time="0.0021851062774658203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;24]" time="0.004309892654418945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;25]" time="0.026720285415649414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[0-&lt;lambda&gt;26]" time="0.05792069435119629"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;0]" time="0.0032274723052978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;1]" time="0.002348661422729492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;2]" time="0.0034334659576416016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;3]" time="0.004170894622802734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;4]" time="0.0048978328704833984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;5]" time="0.0022420883178710938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;6]" time="0.0022246837615966797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;7]" time="0.003434896469116211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;8]" time="0.004362821578979492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;9]" time="0.0055217742919921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;10]" time="0.0031042098999023438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;11]" time="0.005231380462646484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;12]" time="0.005112409591674805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;13]" time="0.004298686981201172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;14]" time="0.004936695098876953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;15]" time="0.00708770751953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;16]" time="0.00870060920715332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;17]" time="0.003082275390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;18]" time="0.002923250198364258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;19]" time="0.005226612091064453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;20]" time="0.011974573135375977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;21]" time="0.024790525436401367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;22]" time="0.0030667781829833984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;23]" time="0.0023572444915771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;24]" time="0.004311800003051758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;25]" time="0.026830196380615234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[1-&lt;lambda&gt;26]" time="0.0578913688659668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;0]" time="0.0032622814178466797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;1]" time="0.002273082733154297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;2]" time="0.0033414363861083984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;3]" time="0.004225492477416992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;4]" time="0.004736185073852539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;5]" time="0.002066373825073242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;6]" time="0.0020682811737060547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;7]" time="0.0031404495239257812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;8]" time="0.00411534309387207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;9]" time="0.005315303802490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;10]" time="0.002846240997314453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;11]" time="0.004809141159057617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;12]" time="0.004759073257446289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;13]" time="0.003968954086303711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;14]" time="0.004697322845458984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;15]" time="0.008029460906982422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;16]" time="0.008487224578857422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;17]" time="0.003014087677001953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;18]" time="0.002778768539428711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;19]" time="0.005043745040893555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;20]" time="0.01180124282836914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;21]" time="0.023160219192504883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;22]" time="0.002907991409301758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;23]" time="0.002238035202026367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;24]" time="0.00426793098449707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;25]" time="0.026803970336914062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="608" name="test_lincomb_wrong_coefficients[2-&lt;lambda&gt;26]" time="0.05802035331726074"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;0]" time="0.006623029708862305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;1]" time="0.005420684814453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;2]" time="0.006514072418212891"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;3]" time="0.0072481632232666016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;4]" time="0.007939338684082031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;5]" time="0.004643678665161133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;6]" time="0.0044786930084228516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;7]" time="0.007061004638671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;8]" time="0.026224851608276367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;9]" time="0.05002737045288086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;10]" time="0.009328365325927734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;11]" time="0.0100555419921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;12]" time="0.009817123413085938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;13]" time="0.008002996444702148"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;14]" time="0.010099649429321289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;15]" time="0.014260530471801758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;16]" time="0.016394615173339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;17]" time="0.011130094528198242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;18]" time="0.010159969329833984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;19]" time="0.017824888229370117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;20]" time="0.047348976135253906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;21]" time="0.10024476051330566"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;22]" time="0.0060765743255615234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;23]" time="0.005108356475830078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;24]" time="0.021142244338989258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;25]" time="0.4067802429199219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[0-&lt;lambda&gt;26]" time="0.9469122886657715"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;0]" time="0.007288455963134766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;1]" time="0.0054931640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;2]" time="0.0066509246826171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;3]" time="0.007581233978271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;4]" time="0.007955551147460938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;5]" time="0.004853725433349609"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;6]" time="0.004697561264038086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;7]" time="0.00714874267578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;8]" time="0.02623128890991211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;9]" time="0.05008292198181152"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;10]" time="0.009347677230834961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;11]" time="0.011065483093261719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;12]" time="0.009798526763916016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;13]" time="0.008232593536376953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;14]" time="0.010144710540771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;15]" time="0.014072656631469727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;16]" time="0.01643967628479004"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;17]" time="0.011495828628540039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;18]" time="0.01037454605102539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;19]" time="0.01754927635192871"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;20]" time="0.04780125617980957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;21]" time="0.09505486488342285"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;22]" time="0.005732059478759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;23]" time="0.004729509353637695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;24]" time="0.020120859146118164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;25]" time="0.42276787757873535"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[1-&lt;lambda&gt;26]" time="0.9892487525939941"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;0]" time="0.006257057189941406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;1]" time="0.0057544708251953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;2]" time="0.006657838821411133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;3]" time="0.0075609683990478516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;4]" time="0.008014202117919922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;5]" time="0.004786014556884766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;6]" time="0.00463104248046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;7]" time="0.0075070858001708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;8]" time="0.02654290199279785"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;9]" time="0.05198979377746582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;10]" time="0.00937652587890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;11]" time="0.010532140731811523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;12]" time="0.01020050048828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;13]" time="0.00825357437133789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;14]" time="0.010448694229125977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;15]" time="0.015468835830688477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;16]" time="0.016802072525024414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;17]" time="0.011224746704101562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;18]" time="0.010930538177490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;19]" time="0.01719355583190918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;20]" time="0.047304391860961914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;21]" time="0.09857177734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;22]" time="0.005865573883056641"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;23]" time="0.00487065315246582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;24]" time="0.02104043960571289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;25]" time="0.4269847869873047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="627" name="test_l1_norm[2-&lt;lambda&gt;26]" time="0.9842033386230469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;0]" time="0.006465435028076172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;1]" time="0.005552530288696289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;2]" time="0.006409883499145508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;3]" time="0.007530689239501953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;4]" time="0.007977962493896484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;5]" time="0.004633665084838867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;6]" time="0.0044553279876708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;7]" time="0.007317304611206055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;8]" time="0.027886629104614258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;9]" time="0.049567461013793945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;10]" time="0.009395360946655273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;11]" time="0.009826898574829102"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;12]" time="0.009554386138916016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;13]" time="0.007923126220703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;14]" time="0.010302543640136719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;15]" time="0.01430654525756836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;16]" time="0.01664257049560547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;17]" time="0.012289762496948242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;18]" time="0.011597633361816406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;19]" time="0.02083444595336914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;20]" time="0.050269365310668945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;21]" time="0.10628604888916016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;22]" time="0.005980014801025391"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;23]" time="0.004842519760131836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;24]" time="0.018050193786621094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;25]" time="0.3748593330383301"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[0-&lt;lambda&gt;26]" time="0.8655214309692383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;0]" time="0.006856441497802734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;1]" time="0.006689548492431641"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;2]" time="0.006783962249755859"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;3]" time="0.007791996002197266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;4]" time="0.008077621459960938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;5]" time="0.004594564437866211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;6]" time="0.004576921463012695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;7]" time="0.007256984710693359"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;8]" time="0.02748417854309082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;9]" time="0.05239248275756836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;10]" time="0.009340763092041016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;11]" time="0.010386943817138672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;12]" time="0.010013818740844727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;13]" time="0.008240699768066406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;14]" time="0.01037287712097168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;15]" time="0.015666484832763672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;16]" time="0.016527175903320312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;17]" time="0.012048006057739258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;18]" time="0.011886119842529297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;19]" time="0.021585702896118164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;20]" time="0.05131816864013672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;21]" time="0.11098694801330566"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;22]" time="0.00616002082824707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;23]" time="0.005017518997192383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;24]" time="0.01858687400817871"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;25]" time="0.4007456302642822"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[1-&lt;lambda&gt;26]" time="0.9352407455444336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;0]" time="0.006684303283691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;1]" time="0.005693912506103516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;2]" time="0.006961822509765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;3]" time="0.00796961784362793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;4]" time="0.008159875869750977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;5]" time="0.004683017730712891"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;6]" time="0.004541158676147461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;7]" time="0.007354021072387695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;8]" time="0.026840686798095703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;9]" time="0.05108952522277832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;10]" time="0.009349822998046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;11]" time="0.010083913803100586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;12]" time="0.01003265380859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;13]" time="0.008094072341918945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;14]" time="0.010424137115478516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;15]" time="0.014323949813842773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;16]" time="0.016766786575317383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;17]" time="0.011604547500610352"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;18]" time="0.010727643966674805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;19]" time="0.02288675308227539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;20]" time="0.052449941635131836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;21]" time="0.11036872863769531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;22]" time="0.005808830261230469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;23]" time="0.0048944950103759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;24]" time="0.018857717514038086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;25]" time="0.40705299377441406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="649" name="test_l2_norm[2-&lt;lambda&gt;26]" time="0.9304530620574951"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;0]" time="0.006356000900268555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;1]" time="0.0057222843170166016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;2]" time="0.006680011749267578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;3]" time="0.007892131805419922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;4]" time="0.008161067962646484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;5]" time="0.005211353302001953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;6]" time="0.00485539436340332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;7]" time="0.007676124572753906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;8]" time="0.02794814109802246"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;9]" time="0.052477359771728516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;10]" time="0.009836673736572266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;11]" time="0.011835336685180664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;12]" time="0.011359691619873047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;13]" time="0.008355855941772461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;14]" time="0.010361909866333008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;15]" time="0.014136075973510742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;16]" time="0.016745328903198242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;17]" time="0.011344194412231445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;18]" time="0.009835958480834961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;19]" time="0.020125150680541992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;20]" time="0.0519411563873291"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;21]" time="0.1068887710571289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;22]" time="0.006249666213989258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;23]" time="0.004870414733886719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;24]" time="0.01819467544555664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;25]" time="0.3790578842163086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[0-&lt;lambda&gt;26]" time="0.877495288848877"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;0]" time="0.006655216217041016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;1]" time="0.005633831024169922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;2]" time="0.006592512130737305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;3]" time="0.007426738739013672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;4]" time="0.007700920104980469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;5]" time="0.004758358001708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;6]" time="0.0046422481536865234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;7]" time="0.007367849349975586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;8]" time="0.027524948120117188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;9]" time="0.05220389366149902"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;10]" time="0.00952911376953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;11]" time="0.011144638061523438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;12]" time="0.010113716125488281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;13]" time="0.008945465087890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;14]" time="0.010253429412841797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;15]" time="0.01554727554321289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;16]" time="0.016763687133789062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;17]" time="0.011743783950805664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;18]" time="0.01144266128540039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;19]" time="0.0220034122467041"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;20]" time="0.05305886268615723"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;21]" time="0.10986471176147461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;22]" time="0.005781888961791992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;23]" time="0.004894733428955078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;24]" time="0.018776655197143555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;25]" time="0.3951113224029541"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[1-&lt;lambda&gt;26]" time="0.9295403957366943"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;0]" time="0.006345510482788086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;1]" time="0.005491495132446289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;2]" time="0.006652355194091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;3]" time="0.007504701614379883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;4]" time="0.0077512264251708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;5]" time="0.004733562469482422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;6]" time="0.004644632339477539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;7]" time="0.007454395294189453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;8]" time="0.02794504165649414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;9]" time="0.05345416069030762"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;10]" time="0.009590387344360352"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;11]" time="0.011244773864746094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;12]" time="0.01106119155883789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;13]" time="0.00953817367553711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;14]" time="0.011464595794677734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;15]" time="0.015165090560913086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;16]" time="0.01714348793029785"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;17]" time="0.01174306869506836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;18]" time="0.010937213897705078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;19]" time="0.022203683853149414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;20]" time="0.05191969871520996"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;21]" time="0.10766720771789551"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;22]" time="0.005969524383544922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;23]" time="0.004937648773193359"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;24]" time="0.018177032470703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;25]" time="0.39505720138549805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="671" name="test_l2_norm2[2-&lt;lambda&gt;26]" time="0.9193494319915771"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;0]" time="0.0051593780517578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;1]" time="0.005446910858154297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;2]" time="0.006536722183227539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;3]" time="0.008224725723266602"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;4]" time="0.006098508834838867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;5]" time="0.0039103031158447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;6]" time="0.004607677459716797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;7]" time="0.00681757926940918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;8]" time="0.02337646484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;9]" time="0.02680802345275879"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;10]" time="0.010012388229370117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;11]" time="0.011305093765258789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;12]" time="0.009062528610229492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;13]" time="0.009566545486450195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;14]" time="0.01063394546508789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;15]" time="0.01507258415222168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;16]" time="0.017241239547729492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;17]" time="0.02245306968688965"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;18]" time="0.022981882095336914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;19]" time="0.04961037635803223"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;20]" time="0.06146049499511719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;21]" time="0.1139676570892334"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;22]" time="0.005647897720336914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;23]" time="0.00545048713684082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;24]" time="0.02033543586730957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;25]" time="0.3950772285461426"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[0-&lt;lambda&gt;26]" time="0.8399550914764404"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;0]" time="0.0054187774658203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;1]" time="0.005663871765136719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;2]" time="0.006855964660644531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;3]" time="0.0077245235443115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;4]" time="0.006407260894775391"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;5]" time="0.004143476486206055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;6]" time="0.00465846061706543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;7]" time="0.006862640380859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;8]" time="0.023864269256591797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;9]" time="0.026920795440673828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;10]" time="0.00959467887878418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;11]" time="0.009988546371459961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;12]" time="0.00793910026550293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;13]" time="0.008123159408569336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;14]" time="0.010423898696899414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;15]" time="0.01453256607055664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;16]" time="0.017313003540039062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;17]" time="0.022554874420166016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;18]" time="0.02328944206237793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;19]" time="0.04952263832092285"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;20]" time="0.062323570251464844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;21]" time="0.1139230728149414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;22]" time="0.005576610565185547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;23]" time="0.005280256271362305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;24]" time="0.02041316032409668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;25]" time="0.4191877841949463"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[1-&lt;lambda&gt;26]" time="0.8479115962982178"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;0]" time="0.0054073333740234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;1]" time="0.0057523250579833984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;2]" time="0.006768465042114258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;3]" time="0.007947921752929688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;4]" time="0.0064847469329833984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;5]" time="0.004148960113525391"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;6]" time="0.004821062088012695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;7]" time="0.00717616081237793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;8]" time="0.02412557601928711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;9]" time="0.027191162109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;10]" time="0.00992584228515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;11]" time="0.011406660079956055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;12]" time="0.007968902587890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;13]" time="0.008429527282714844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;14]" time="0.010859251022338867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;15]" time="0.0159912109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;16]" time="0.01765131950378418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;17]" time="0.02274608612060547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;18]" time="0.023343563079833984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;19]" time="0.05115461349487305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;20]" time="0.06257176399230957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;21]" time="0.11463069915771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;22]" time="0.00567317008972168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;23]" time="0.005480766296386719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;24]" time="0.020586490631103516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;25]" time="0.4152719974517822"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="693" name="test_sup_norm[2-&lt;lambda&gt;26]" time="0.844365119934082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;0]" time="0.002801179885864258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;1]" time="0.011819124221801758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;2]" time="0.013000249862670898"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;3]" time="0.01594710350036621"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;4]" time="0.0039327144622802734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;5]" time="0.0017626285552978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;6]" time="0.009847164154052734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;7]" time="0.014695167541503906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;8]" time="0.06378746032714844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;9]" time="0.015643596649169922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;10]" time="0.03264355659484863"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;11]" time="0.03772282600402832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;12]" time="0.004158735275268555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;13]" time="0.032164812088012695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;14]" time="0.0380549430847168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;15]" time="0.047841787338256836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;16]" time="0.05437922477722168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;17]" time="0.05359983444213867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;18]" time="0.054367780685424805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;19]" time="0.12266039848327637"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;20]" time="0.5312213897705078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;21]" time="1.1662778854370117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;22]" time="0.0028285980224609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;23]" time="0.01210641860961914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;24]" time="0.1118924617767334"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;25]" time="3.234245538711548"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[0-&lt;lambda&gt;26]" time="0.7535781860351562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;0]" time="0.002943754196166992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;1]" time="0.011978626251220703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;2]" time="0.013098716735839844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;3]" time="0.016211986541748047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;4]" time="0.003949642181396484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;5]" time="0.001741647720336914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;6]" time="0.009771347045898438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;7]" time="0.01529240608215332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;8]" time="0.06458306312561035"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;9]" time="0.016150712966918945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;10]" time="0.03288865089416504"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;11]" time="0.03824806213378906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;12]" time="0.004000186920166016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;13]" time="0.032377004623413086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;14]" time="0.03809332847595215"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;15]" time="0.047844886779785156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;16]" time="0.05463695526123047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;17]" time="0.05503344535827637"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;18]" time="0.05591917037963867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;19]" time="0.12373709678649902"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;20]" time="0.5362036228179932"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;21]" time="1.1755309104919434"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;22]" time="0.002673625946044922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;23]" time="0.012232542037963867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;24]" time="0.11106681823730469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;25]" time="3.209406614303589"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[1-&lt;lambda&gt;26]" time="0.7569100856781006"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;0]" time="0.0025026798248291016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;1]" time="0.012059450149536133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;2]" time="0.013755559921264648"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;3]" time="0.016215085983276367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;4]" time="0.0038547515869140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;5]" time="0.0017256736755371094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;6]" time="0.009906291961669922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;7]" time="0.015172481536865234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;8]" time="0.06506037712097168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;9]" time="0.016436338424682617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;10]" time="0.03359699249267578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;11]" time="0.03828096389770508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;12]" time="0.004115104675292969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;13]" time="0.03410983085632324"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;14]" time="0.039260149002075195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;15]" time="0.049126386642456055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;16]" time="0.05579066276550293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;17]" time="0.05522727966308594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;18]" time="0.056266069412231445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;19]" time="0.1249237060546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;20]" time="0.533205509185791"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;21]" time="1.1674466133117676"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;22]" time="0.0026085376739501953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;23]" time="0.012130022048950195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;24]" time="0.11287403106689453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;25]" time="3.228912591934204"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="716" name="test_dofs[2-&lt;lambda&gt;26]" time="0.7657697200775146"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;0]" time="0.0039386749267578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;1]" time="0.003021240234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;2]" time="0.003804445266723633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;3]" time="0.00411677360534668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;4]" time="0.004652500152587891"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;5]" time="0.002996683120727539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;6]" time="0.0030188560485839844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;7]" time="0.003628969192504883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;8]" time="0.004324197769165039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;9]" time="0.005159854888916016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;10]" time="0.004686117172241211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;11]" time="0.005429506301879883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;12]" time="0.005142927169799805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;13]" time="0.00478363037109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;14]" time="0.00538325309753418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;15]" time="0.007252216339111328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;16]" time="0.009050130844116211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;17]" time="0.008813858032226562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;18]" time="0.00876760482788086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;19]" time="0.015149354934692383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;20]" time="0.016869783401489258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;21]" time="0.02685689926147461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;22]" time="0.00398707389831543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;23]" time="0.0032558441162109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;24]" time="0.004808187484741211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;25]" time="0.02744293212890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[0-&lt;lambda&gt;26]" time="0.060536861419677734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;0]" time="0.0039937496185302734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;1]" time="0.002995014190673828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;2]" time="0.003507852554321289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;3]" time="0.003921985626220703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;4]" time="0.004568338394165039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;5]" time="0.0029931068420410156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;6]" time="0.002906322479248047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;7]" time="0.0034034252166748047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;8]" time="0.004343986511230469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;9]" time="0.0054395198822021484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;10]" time="0.004584074020385742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;11]" time="0.005379438400268555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;12]" time="0.00536656379699707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;13]" time="0.004665374755859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;14]" time="0.005362987518310547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;15]" time="0.007425546646118164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;16]" time="0.008971452713012695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;17]" time="0.00873565673828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;18]" time="0.008607625961303711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;19]" time="0.01446843147277832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;20]" time="0.015958309173583984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;21]" time="0.027674198150634766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;22]" time="0.003958225250244141"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;23]" time="0.0032787322998046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;24]" time="0.005570650100708008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;25]" time="0.03150534629821777"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[1-&lt;lambda&gt;26]" time="0.06065082550048828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;0]" time="0.004055976867675781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;1]" time="0.0030889511108398438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;2]" time="0.0036916732788085938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;3]" time="0.003920078277587891"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;4]" time="0.004500389099121094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;5]" time="0.0028946399688720703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;6]" time="0.0028619766235351562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;7]" time="0.003589153289794922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;8]" time="0.004257678985595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;9]" time="0.00566864013671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;10]" time="0.004649162292480469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;11]" time="0.005522251129150391"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;12]" time="0.005370140075683594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;13]" time="0.004767417907714844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;14]" time="0.0053441524505615234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;15]" time="0.007207632064819336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;16]" time="0.009018421173095703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;17]" time="0.008965730667114258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;18]" time="0.008936166763305664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;19]" time="0.014708280563354492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;20]" time="0.016834020614624023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;21]" time="0.027115583419799805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;22]" time="0.004086494445800781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;23]" time="0.0033435821533203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;24]" time="0.00567173957824707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;25]" time="0.02845597267150879"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="752" name="test_components_wrong_dof_indices[2-&lt;lambda&gt;26]" time="0.06076478958129883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;0]" time="0.0017058849334716797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;1]" time="0.0025696754455566406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;2]" time="0.006102800369262695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;3]" time="0.03179335594177246"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;4]" time="0.0017352104187011719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;5]" time="0.0012881755828857422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;6]" time="0.0022361278533935547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;7]" time="0.006331205368041992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;8]" time="0.03482961654663086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;9]" time="0.002242565155029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;10]" time="0.004433631896972656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;11]" time="0.015323162078857422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;12]" time="0.0019335746765136719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;13]" time="0.010373353958129883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;14]" time="0.014560461044311523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;15]" time="0.0689096450805664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;16]" time="0.1428365707397461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;17]" time="0.008998632431030273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;18]" time="0.008739233016967773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;19]" time="0.02757740020751953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;20]" time="0.09587621688842773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;21]" time="0.20521807670593262"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;22]" time="0.0018215179443359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;23]" time="0.002662181854248047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;24]" time="0.009059906005859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;25]" time="0.06944155693054199"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[0-&lt;lambda&gt;26]" time="0.055793046951293945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;0]" time="0.0018017292022705078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;1]" time="0.0025985240936279297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;2]" time="0.006203413009643555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;3]" time="0.03222942352294922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;4]" time="0.001753091812133789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;5]" time="0.0012786388397216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;6]" time="0.002233266830444336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;7]" time="0.006247282028198242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;8]" time="0.03421425819396973"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;9]" time="0.0029442310333251953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;10]" time="0.004309654235839844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;11]" time="0.014459609985351562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;12]" time="0.001995563507080078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;13]" time="0.00986337661743164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;14]" time="0.013364315032958984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;15]" time="0.06558060646057129"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;16]" time="0.13979363441467285"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;17]" time="0.008929967880249023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;18]" time="0.008676528930664062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;19]" time="0.02860260009765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;20]" time="0.09735751152038574"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;21]" time="0.20882177352905273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;22]" time="0.0018129348754882812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;23]" time="0.0028073787689208984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;24]" time="0.010384082794189453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;25]" time="0.09075307846069336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[1-&lt;lambda&gt;26]" time="0.055300235748291016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;0]" time="0.0017018318176269531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;1]" time="0.002567291259765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;2]" time="0.006113767623901367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;3]" time="0.0319523811340332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;4]" time="0.0016930103302001953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;5]" time="0.0012907981872558594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;6]" time="0.002324342727661133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;7]" time="0.0061457157135009766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;8]" time="0.03415513038635254"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;9]" time="0.0032732486724853516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;10]" time="0.004327297210693359"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;11]" time="0.01488041877746582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;12]" time="0.0019752979278564453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;13]" time="0.010271787643432617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;14]" time="0.014759302139282227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;15]" time="0.06612086296081543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;16]" time="0.1383199691772461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;17]" time="0.00931096076965332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;18]" time="0.008806705474853516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;19]" time="0.028542280197143555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;20]" time="0.09608793258666992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;21]" time="0.21001935005187988"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;22]" time="0.0019085407257080078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;23]" time="0.0026814937591552734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;24]" time="0.010198116302490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;25]" time="0.0892488956451416"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="766" name="test_amax[2-&lt;lambda&gt;26]" time="0.0550837516784668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;0]" time="0.0034029483795166016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;1]" time="0.002562999725341797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;2]" time="0.002904176712036133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;3]" time="0.00407862663269043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;4]" time="0.004843235015869141"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;5]" time="0.002167224884033203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;6]" time="0.0020897388458251953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;7]" time="0.01555943489074707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;8]" time="0.2709357738494873"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;9]" time="1.4238786697387695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;10]" time="0.004626274108886719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;11]" time="0.00453948974609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;12]" time="0.004385232925415039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;13]" time="0.003695964813232422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;14]" time="0.004954814910888672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;15]" time="0.008093118667602539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;16]" time="0.012096166610717773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;17]" time="0.002888202667236328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;18]" time="0.0025212764739990234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;19]" time="0.01817488670349121"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;20]" time="0.21011638641357422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;21]" time="1.113525152206421"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;22]" time="0.00293731689453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;23]" time="0.0021948814392089844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;24]" time="0.010107994079589844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;25]" time="0.16891980171203613"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[0-&lt;lambda&gt;26]" time="0.8385233879089355"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;0]" time="0.003394603729248047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;1]" time="0.0024819374084472656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;2]" time="0.0028257369995117188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;3]" time="0.0039103031158447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;4]" time="0.004459381103515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;5]" time="0.0022063255310058594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;6]" time="0.002155780792236328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;7]" time="0.01573920249938965"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;8]" time="0.2667553424835205"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;9]" time="1.4214041233062744"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;10]" time="0.004784107208251953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;11]" time="0.00479888916015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;12]" time="0.004375457763671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;13]" time="0.0037343502044677734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;14]" time="0.004838466644287109"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;15]" time="0.008248090744018555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;16]" time="0.014272451400756836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;17]" time="0.003088235855102539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;18]" time="0.0028367042541503906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;19]" time="0.018012285232543945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;20]" time="0.208449125289917"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;21]" time="1.1033992767333984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;22]" time="0.0029914379119873047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;23]" time="0.0024280548095703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;24]" time="0.010229349136352539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;25]" time="0.17158842086791992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[1-&lt;lambda&gt;26]" time="0.8313772678375244"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;0]" time="0.0030548572540283203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;1]" time="0.002398967742919922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;2]" time="0.002832651138305664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;3]" time="0.004021167755126953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;4]" time="0.00455164909362793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;5]" time="0.002254962921142578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;6]" time="0.0022225379943847656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;7]" time="0.015952110290527344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;8]" time="0.2691812515258789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;9]" time="1.4259917736053467"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;10]" time="0.004822731018066406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;11]" time="0.004794597625732422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;12]" time="0.004393339157104492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;13]" time="0.003599882125854492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;14]" time="0.004664182662963867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;15]" time="0.007896661758422852"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;16]" time="0.011151552200317383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;17]" time="0.002920389175415039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;18]" time="0.0027794837951660156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;19]" time="0.017551898956298828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;20]" time="0.2041940689086914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;21]" time="1.4082698822021484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;22]" time="0.003039836883544922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;23]" time="0.002251148223876953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;24]" time="0.01027536392211914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;25]" time="0.1706850528717041"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="785" name="test_gramian[2-&lt;lambda&gt;26]" time="0.8275113105773926"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.0024013519287109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.0017769336700439453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.0022301673889160156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.0017306804656982422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.0016832351684570312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.0014925003051757812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.0015399456024169922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.0015234947204589844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.0018851757049560547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.004816770553588867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.009267807006835938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.0023043155670166016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.0018851757049560547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.001924753189086914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.0018353462219238281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.0022840499877929688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.002451658248901367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.0023164749145507812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.002053976058959961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.0020461082458496094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.028343677520751953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.0180661678314209"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.05051398277282715"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.004541635513305664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.0014579296112060547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.0023047924041748047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.02452254295349121"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.12602734565734863"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.32739973068237305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.0102081298828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.0016891956329345703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.0015523433685302734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.0015652179718017578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.0017337799072265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.0014865398406982422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.0013935565948486328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.0013535022735595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.0013964176177978516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.0017840862274169922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.004805803298950195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.009529352188110352"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.001802682876586914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.001859426498413086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.0019998550415039062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.0019292831420898438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.002282857894897461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.002592325210571289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.002474069595336914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.002130746841430664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.002171039581298828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.026514530181884766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.018143892288208008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.051264286041259766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.00399327278137207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.0013971328735351562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.002336740493774414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.02498626708984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.12422037124633789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.32741546630859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.010164976119995117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.0022666454315185547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.0016241073608398438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.0015807151794433594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.0018062591552734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.0017681121826171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.0016040802001953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.0014743804931640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.0015153884887695312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.0020372867584228516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.005094766616821289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.00987863540649414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.0018465518951416016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.00202178955078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.0021026134490966797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.0020875930786132812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.002444028854370117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.0026192665100097656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.0024919509887695312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.0022699832916259766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.0022101402282714844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.02583026885986328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.018044471740722656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.05094265937805176"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.0038297176361083984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.001402139663696289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.0021975040435791016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.024114131927490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.12194609642028809"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.3276174068450928"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.009945154190063477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.0022039413452148438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.0015976428985595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.0015103816986083984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.0016345977783203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.0015382766723632812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.0013778209686279297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.0013530254364013672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.0013647079467773438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.0016636848449707031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.004831790924072266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.0091705322265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.0017039775848388672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.001855611801147461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.001956462860107422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.0018877983093261719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.0023164749145507812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.0024743080139160156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.0023217201232910156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.002072572708129883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.0021593570709228516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.026149272918701172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.018006086349487305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.05137944221496582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.0039141178131103516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.0014235973358154297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.0022804737091064453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.024430036544799805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.12502741813659668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.327648401260376"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.010126829147338867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.0016319751739501953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.001573324203491211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.0015485286712646484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.001651763916015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.0015752315521240234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.00148773193359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.0014319419860839844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.0014462471008300781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.0018391609191894531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.005140781402587891"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.009893178939819336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.0018417835235595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.0018405914306640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.0019979476928710938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.0019364356994628906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.002334117889404297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.0025806427001953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.0025300979614257812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.0021390914916992188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.0021369457244873047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.02573990821838379"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.01822829246520996"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.05136418342590332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.004140377044677734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.0015077590942382812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.002385854721069336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.023955583572387695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.12258529663085938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.33144426345825195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.01075434684753418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.0017132759094238281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.0018770694732666016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.0015208721160888672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.0016908645629882812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.0014743804931640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.0014147758483886719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.0013735294342041016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.0014777183532714844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.0019502639770507812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.0051424503326416016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.01002955436706543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.002590656280517578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.0020568370819091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.0022344589233398438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.002111673355102539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.002519369125366211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.0027053356170654297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.0025703907012939453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.0022356510162353516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.0023179054260253906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.026004314422607422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.018118619918823242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.0512845516204834"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.003866910934448242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.0014004707336425781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.0022275447845458984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.023949384689331055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.1217646598815918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.33008313179016113"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.0098876953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.0022275447845458984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.001617431640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.001514434814453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.0015900135040283203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.001550912857055664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.0014197826385498047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.001413583755493164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.0013680458068847656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.0017731189727783203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.004880428314208984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.009241104125976562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.0018954277038574219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.001890420913696289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.002000570297241211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.001931905746459961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.0023889541625976562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.0025606155395507812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.0024116039276123047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.00212860107421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.0021233558654785156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.0256044864654541"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.018500328063964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.04983091354370117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.0040454864501953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.0014731884002685547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.002342700958251953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.024769306182861328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.12820768356323242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.3288686275482178"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.010477066040039062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.0017156600952148438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0015795230865478516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.0016121864318847656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.001634836196899414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.0015101432800292969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.0014369487762451172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.001367807388305664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.0014493465423583984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.0018873214721679688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.004921436309814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.009646415710449219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.0017142295837402344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.0018689632415771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.002016782760620117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.0020017623901367188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.0024056434631347656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.002766847610473633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.0024261474609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.0021860599517822266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.002249002456665039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.02555561065673828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.018517732620239258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.05207395553588867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.004004478454589844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.0014755725860595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.002360105514526367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.02415752410888672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.1235053539276123"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.5090470314025879"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.009958982467651367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.0016362667083740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.0014994144439697266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.0014786720275878906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.0016016960144042969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.0015399456024169922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.0014488697052001953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.0013697147369384766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.0014050006866455078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.0019059181213378906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.004954099655151367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.010096073150634766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.0017876625061035156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.0019450187683105469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.0021119117736816406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.002027273178100586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.0023517608642578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.0025806427001953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.002446889877319336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.002153635025024414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.002182483673095703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.02524590492248535"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.018674850463867188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.05230307579040527"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.0040972232818603516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.0014998912811279297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.0024328231811523438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.023801088333129883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.12234354019165039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.3276948928833008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="791" name="test_add[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.00977182388305664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.001979827880859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.0015187263488769531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.001369476318359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.0014393329620361328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.0013325214385986328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.0012831687927246094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.0012521743774414062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.0012660026550292969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.001554727554321289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.0033524036407470703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.005796194076538086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.0014805793762207031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.001542806625366211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.0016896724700927734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.0016779899597167969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.0018706321716308594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.002118349075317383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.0019352436065673828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.0020825862884521484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.0020139217376708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.025339603424072266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.017229318618774414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.04530191421508789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.0037326812744140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.0013885498046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.0022771358489990234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.02321910858154297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.07841253280639648"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.21775221824645996"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.0075953006744384766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.0015299320220947266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.0015430450439453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.0015513896942138672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.0015499591827392578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.0014865398406982422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.0015573501586914062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.0013644695281982422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.0013971328735351562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.0017657279968261719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.0034971237182617188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.006490945816040039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.0015892982482910156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.001649618148803711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.0017647743225097656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.0017614364624023438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.0020606517791748047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.0022971630096435547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.002094268798828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.002016782760620117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.0020303726196289062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.025469303131103516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.015097618103027344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.04392576217651367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.003612041473388672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.001310586929321289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.002289295196533203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.023038387298583984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.07629227638244629"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.21417617797851562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.007257223129272461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.0014951229095458984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.0014452934265136719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.001428842544555664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.0015215873718261719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.0013780593872070312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.0013086795806884766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.0012793540954589844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.0012829303741455078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.0016324520111083984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.0033740997314453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.0062558650970458984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.0015554428100585938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.0018682479858398438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.0016808509826660156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.0017118453979492188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.0019452571868896484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.002155780792236328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.002008199691772461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.001947641372680664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.0019447803497314453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.025316953659057617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.015037298202514648"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.042839765548706055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.003527402877807617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.001220703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.002100706100463867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.02252197265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.07745003700256348"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.22150707244873047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.007084846496582031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.001476287841796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.0014095306396484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.0013518333435058594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.0014657974243164062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.0013375282287597656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.0013616085052490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.001256704330444336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.001325845718383789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.0015864372253417969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.003630399703979492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.006238460540771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.0014388561248779297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.0016069412231445312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.0017600059509277344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.0016796588897705078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.0019648075103759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.0022652149200439453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.0020689964294433594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.0019693374633789062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.002038240432739258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.025112390518188477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.016634225845336914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.04567432403564453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.0035867691040039062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.0013442039489746094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.00225067138671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.023602724075317383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.09828352928161621"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.269866943359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.008509397506713867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.0014739036560058594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.0014922618865966797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.001435995101928711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.001567840576171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.0013949871063232422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.001354217529296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.0013337135314941406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.0012891292572021484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.0017478466033935547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.0036096572875976562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.006761789321899414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.0015912055969238281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.0016520023345947266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.0018000602722167969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.0017516613006591797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.0020639896392822266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.0022835731506347656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.0020971298217773438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.0020551681518554688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.002036571502685547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.0274660587310791"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.016449451446533203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.046280622482299805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.0037059783935546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.001444101333618164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.0023009777069091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.024933815002441406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.09996151924133301"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.2677419185638428"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.008032798767089844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.00144195556640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.00138092041015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.0014312267303466797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.0014917850494384766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.0013642311096191406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.0013308525085449219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.0012755393981933594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.0012676715850830078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.0016710758209228516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.003557920455932617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.006549835205078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.0014965534210205078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.0017147064208984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.00183868408203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.0017743110656738281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.002161741256713867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.0023648738861083984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.0022246837615966797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.002009153366088867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.0020079612731933594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.025164127349853516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.016012907028198242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.04557347297668457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.003702878952026367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.001371145248413086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.0023539066314697266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.024013042449951172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.1016845703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.27227139472961426"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.008576393127441406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.0016019344329833984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.0014684200286865234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.0014617443084716797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.0014989376068115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.0014109611511230469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.0013341903686523438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.0012753009796142578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.0012977123260498047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.0015900135040283203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.003629446029663086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.006360530853271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.0015532970428466797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.0017392635345458984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.0018777847290039062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.0017485618591308594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.002067089080810547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.0023038387298583984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.0021758079528808594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.0020155906677246094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.0020461082458496094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.026383638381958008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.01690983772277832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.046851158142089844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.0035877227783203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.0013508796691894531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.0022859573364257812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.023159265518188477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.09885120391845703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.27193593978881836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.008519887924194336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.0014739036560058594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0014448165893554688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.001394510269165039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.0015399456024169922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.0014538764953613281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.0013074874877929688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.0013012886047363281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.001317739486694336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.001691579818725586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.0036983489990234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.0072138309478759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.001522064208984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.0017688274383544922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.0019311904907226562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.0018334388732910156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.002064943313598633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.0023543834686279297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.002063751220703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.001981496810913086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.0019452571868896484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.025650978088378906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.01594686508178711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.04595136642456055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.003725290298461914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.0014469623565673828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.0023314952850341797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.02429032325744629"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.100189208984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.27509355545043945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.00844264030456543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.0014891624450683594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.0014111995697021484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.0014743804931640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.0015749931335449219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.001421213150024414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.0013561248779296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.0013418197631835938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.0013575553894042969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.0016970634460449219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.0037088394165039062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.006946086883544922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.0015704631805419922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.00171661376953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.0019419193267822266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.0017943382263183594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.0020477771759033203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.002307891845703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.0020682811737060547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.0020024776458740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.0020203590393066406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.025501251220703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.01716899871826172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.047846078872680664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.0036089420318603516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.0013699531555175781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.002315521240234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.024179697036743164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.10200834274291992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.2715775966644287"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="804" name="test_iadd[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.008479595184326172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.002178192138671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.0016868114471435547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.0016107559204101562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.0017006397247314453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.001583099365234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.0014116764068603516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.0013513565063476562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.0014672279357910156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.0017547607421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.004951000213623047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.009244441986083984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.0016684532165527344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.0017747879028320312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.002031564712524414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.0019135475158691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.002427816390991211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.002565622329711914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.0024497509002685547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.0021736621856689453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.0023157596588134766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.02661919593811035"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.017915010452270508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.04951930046081543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.003926515579223633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.0014529228210449219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.0023069381713867188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.02453756332397461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.1233828067779541"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.32128190994262695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.009873628616333008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.0016295909881591797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.0015211105346679688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.0015246868133544922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.0016613006591796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.0015392303466796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.0014107227325439453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.0013682842254638672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.001425027847290039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.0018754005432128906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.0047817230224609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.009355545043945312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.0017266273498535156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.0018429756164550781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.002051830291748047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.0019495487213134766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.002435922622680664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.0025250911712646484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.002487659454345703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.0021331310272216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.002268552780151367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.02625131607055664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.01819324493408203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.05054759979248047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.0038852691650390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.001379251480102539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.0024292469024658203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.028063058853149414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.12537908554077148"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.3270223140716553"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.0103302001953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.002331256866455078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.0018312931060791016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.0017027854919433594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.0017724037170410156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.0016314983367919922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.001535177230834961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.0015041828155517578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.0014841556549072266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.0019142627716064453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.005067110061645508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.009717941284179688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.001847982406616211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.0019068717956542969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.0021436214447021484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.001960277557373047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.0023767948150634766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.002668619155883789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.0025043487548828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.0021889209747314453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.0022547245025634766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.025705575942993164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.018439769744873047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.05086994171142578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.003997325897216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.0013911724090576172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.002308368682861328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.02362060546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.12197351455688477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.3248300552368164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.010188817977905273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.0023047924041748047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.001627206802368164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.0015826225280761719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.0015707015991210938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.0015475749969482422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.0013952255249023438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.0013611316680908203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.0014519691467285156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.0018367767333984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.004903316497802734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.009669303894042969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.0016872882843017578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.0017695426940917969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.001986265182495117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.0017914772033691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.0023910999298095703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.0025739669799804688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.0024652481079101562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.0021626949310302734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.002249002456665039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.026323795318603516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.018846750259399414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.0511171817779541"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.003884553909301758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.0014154911041259766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.00237274169921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.02460503578186035"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.12422370910644531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.32869958877563477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.010571002960205078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.0022618770599365234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.001699209213256836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.0016715526580810547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.0017619132995605469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.001622915267944336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.0016269683837890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.0016090869903564453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.0015079975128173828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.0020923614501953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.00528717041015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.010431289672851562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.0019233226776123047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.0020856857299804688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.0022318363189697266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.0021402835845947266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.002626180648803711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.002885580062866211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.0026760101318359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.0023093223571777344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.0024611949920654297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.026202917098999023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.017960548400878906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.050649404525756836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.003798246383666992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.0013685226440429688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.002288341522216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.023815155029296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.12440299987792969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.3245720863342285"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.009668350219726562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.0017499923706054688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.0014901161193847656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.0016224384307861328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.0017058849334716797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.0015704631805419922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.0014824867248535156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.0014123916625976562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.0014607906341552734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.001987457275390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.005078315734863281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.009871244430541992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.0017299652099609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.0018668174743652344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.002101898193359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.001943826675415039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.002496957778930664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.00273895263671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.0026731491088867188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.002236604690551758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.002306699752807617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.026361703872680664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.018954753875732422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.0512080192565918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.0041005611419677734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.001537322998046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.002421140670776367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.024895429611206055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.12189364433288574"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.32585692405700684"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.009965658187866211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.001741170883178711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.0017042160034179688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.0016710758209228516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.0017528533935546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.0015687942504882812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.001420736312866211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.0014584064483642578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.0014777183532714844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.0018851757049560547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.005175590515136719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.009727954864501953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.0017404556274414062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.0018002986907958984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.002000093460083008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.002024412155151367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.0024938583374023438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.0024764537811279297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.0024459362030029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.0020766258239746094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.002185821533203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.025659561157226562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.017810344696044922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.05038857460021973"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.0037298202514648438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.0013492107391357422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.0022859573364257812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.02379155158996582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.12157225608825684"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.3226642608642578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.009981393814086914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.002285003662109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0016071796417236328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.0015993118286132812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.001592874526977539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.0015480518341064453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.00142669677734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.0014150142669677734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.0013895034790039062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.0019354820251464844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.004904270172119141"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.009646892547607422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.0017495155334472656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.0018284320831298828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.002037525177001953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.0018019676208496094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.0023810863494873047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.002548694610595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.002363920211791992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.002081155776977539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.0020325183868408203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.02535843849182129"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.01851201057434082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.05019855499267578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.0037598609924316406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.0014195442199707031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.002393484115600586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.024510860443115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.12392783164978027"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.329740047454834"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.009642601013183594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.001665353775024414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.0016071796417236328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.00167083740234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.001692056655883789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.0015354156494140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.0015227794647216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.0013937950134277344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.001445770263671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.0019996166229248047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.005097150802612305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.010050535202026367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.0017168521881103516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.0018191337585449219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.0020613670349121094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.0019974708557128906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.0023686885833740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.0025691986083984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.0024039745330810547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.0021162033081054688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.0021085739135742188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.02550816535949707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.017626047134399414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.05059027671813965"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.004093647003173828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.0014009475708007812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.0024008750915527344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.0241701602935791"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.12552571296691895"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.3226430416107178"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="816" name="test_sub[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.009612798690795898"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.0014429092407226562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.0014190673828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.0013921260833740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.0015392303466796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.0014941692352294922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.0014057159423828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.0012671947479248047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.0012755393981933594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.0015780925750732422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.0032587051391601562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.006711006164550781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.001611471176147461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.0016579627990722656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.001766204833984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.001753091812133789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.0019125938415527344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.002167940139770508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.0021305084228515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.0019822120666503906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.0020062923431396484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.025174856185913086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.016298770904541016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.04450583457946777"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.003612995147705078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.0013561248779296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.0023164749145507812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.023087739944458008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.07756900787353516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.21785402297973633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.00757288932800293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.0014538764953613281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.0014874935150146484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.0014374256134033203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.0015022754669189453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.0014071464538574219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.001421213150024414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.0013659000396728516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.001360177993774414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.0017199516296386719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.0034723281860351562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.006467342376708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.001604318618774414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.0017361640930175781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.001842498779296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.001739501953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.001987457275390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.0023908615112304688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.002254962921142578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.002091646194458008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.002160787582397461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.02614617347717285"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.01652240753173828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.04532504081726074"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.003668546676635742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.0013463497161865234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.0021407604217529297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.022539854049682617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.07722949981689453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.21882176399230957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.007590770721435547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.0016016960144042969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.0014772415161132812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.0014240741729736328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.0014929771423339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.001447916030883789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.001355886459350586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.0013530254364013672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.0013208389282226562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.001672506332397461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.0034143924713134766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.006468772888183594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.0015647411346435547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.0017132759094238281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.0017859935760498047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.0017175674438476562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.002033233642578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.002248525619506836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.0020711421966552734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.0019910335540771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.002287626266479492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.025336265563964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.015789270401000977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.04625058174133301"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.003727436065673828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.0013706684112548828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.0022668838500976562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.023674488067626953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.07883334159851074"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.21976733207702637"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.007465839385986328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.0015060901641845703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.0015006065368652344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.0013997554779052734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.0015523433685302734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.0014736652374267578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.001445770263671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.0013108253479003906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.0013458728790283203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.001577138900756836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.003725767135620117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.006253719329833984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.0014803409576416016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.0016467571258544922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.0017731189727783203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.0017211437225341797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.002031087875366211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.002213716506958008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.0020787715911865234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.0020143985748291016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.002016305923461914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.025440454483032227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.016591787338256836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.04606127738952637"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.0037665367126464844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.0013802051544189453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.002454042434692383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.023583173751831055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.09867262840270996"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.26633524894714355"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.008655309677124023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.0015437602996826172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.0015387535095214844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.0015287399291992188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.0015835762023925781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.001491546630859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.0013594627380371094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.001308441162109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.0013189315795898438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.0017125606536865234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.0036356449127197266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.006807565689086914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.0017001628875732422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.0019047260284423828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.002050161361694336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.0018575191497802734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.0021431446075439453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.0023810863494873047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.002154111862182617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.0021376609802246094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.002146482467651367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.02555060386657715"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.016505718231201172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.04613757133483887"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.003876924514770508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.001474142074584961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.0024492740631103516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.02376532554626465"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.09862446784973145"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.27123260498046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.008217096328735352"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.002061128616333008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.0014529228210449219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.0014007091522216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.0015556812286376953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.0014324188232421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.0014264583587646484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.0013353824615478516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.0013644695281982422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.0016973018646240234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.0036373138427734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.006721973419189453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.001626729965209961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.0016841888427734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.001798391342163086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.0017480850219726562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.002000570297241211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.00226593017578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.0021560192108154297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.002056121826171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.0021445751190185547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.0251767635345459"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.016019344329833984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.04623723030090332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.003589630126953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.0013608932495117188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.0022025108337402344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.02305293083190918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.09889483451843262"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.27289867401123047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.0086212158203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.0015163421630859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.0014004707336425781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.0014235973358154297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.0015244483947753906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.0014472007751464844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.001378774642944336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.0014066696166992188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.0013303756713867188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.0016398429870605469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.0036242008209228516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.00628209114074707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.0014638900756835938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.0016279220581054688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.001737833023071289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.0016684532165527344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.001985788345336914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.0023050308227539062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.0020754337310791016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.0020661354064941406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.0021092891693115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.025578022003173828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.016381025314331055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.04581141471862793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.0035996437072753906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.0013954639434814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.0023758411407470703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.023906230926513672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.0979013442993164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.26859545707702637"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.008262157440185547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.0014786720275878906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0013866424560546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.0013899803161621094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.001558065414428711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.0013911724090576172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.0013897418975830078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.0012664794921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.0013077259063720703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.0016112327575683594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.0036284923553466797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.00661778450012207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.0014913082122802734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.001617431640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.0017647743225097656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.0016758441925048828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.002107381820678711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.0023322105407714844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.002159595489501953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.002017498016357422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.0021021366119384766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.025754213333129883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.0168759822845459"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.04633665084838867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.003763437271118164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.0014195442199707031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.002254486083984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.023822307586669922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.10028862953186035"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.27105021476745605"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.008472919464111328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.0015385150909423828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.0014166831970214844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.0014164447784423828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.0015587806701660156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.0014522075653076172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.0013234615325927734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.001325845718383789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.0012977123260498047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.0016269683837890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.003638029098510742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.006658315658569336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.0015304088592529297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.0017254352569580078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.0018723011016845703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.0017104148864746094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.002074718475341797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.002414703369140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.002200603485107422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.0020885467529296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.002141237258911133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.02564406394958496"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.016469717025756836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.04474043846130371"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.003551483154296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.0013153553009033203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.0023040771484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.02359318733215332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.10000014305114746"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.2705204486846924"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="829" name="test_isub[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.008464336395263672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;0]" time="0.0017292499542236328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;1]" time="0.0015482902526855469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;2]" time="0.0014793872833251953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;3]" time="0.0015010833740234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;4]" time="0.0013301372528076172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;5]" time="0.0013799667358398438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;6]" time="0.00124359130859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;7]" time="0.0014591217041015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;8]" time="0.004601001739501953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;9]" time="0.008139848709106445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;10]" time="0.0017430782318115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;11]" time="0.0017857551574707031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;12]" time="0.001741647720336914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;13]" time="0.0016407966613769531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;14]" time="0.001806020736694336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;15]" time="0.002063274383544922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;16]" time="0.00197601318359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;17]" time="0.0018665790557861328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;18]" time="0.0017254352569580078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;19]" time="0.0030596256256103516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;20]" time="0.014551401138305664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;21]" time="0.031009197235107422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;22]" time="0.001855611801147461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;23]" time="0.0013759136199951172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;24]" time="0.004871368408203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;25]" time="0.1170661449432373"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[0-&lt;lambda&gt;26]" time="0.2700018882751465"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;0]" time="0.002178668975830078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;1]" time="0.0015037059783935547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;2]" time="0.0014462471008300781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;3]" time="0.0015306472778320312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;4]" time="0.00139617919921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;5]" time="0.0013175010681152344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;6]" time="0.0013031959533691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;7]" time="0.001506805419921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;8]" time="0.00474238395690918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;9]" time="0.00879049301147461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;10]" time="0.0018973350524902344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;11]" time="0.0020112991333007812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;12]" time="0.001995086669921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;13]" time="0.0018324851989746094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;14]" time="0.002015829086303711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;15]" time="0.0023353099822998047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;16]" time="0.0022430419921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;17]" time="0.002008676528930664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;18]" time="0.0019838809967041016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;19]" time="0.0033111572265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;20]" time="0.0152740478515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;21]" time="0.033209800720214844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;22]" time="0.001971006393432617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;23]" time="0.001367330551147461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;24]" time="0.004791259765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;25]" time="0.1183934211730957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[1-&lt;lambda&gt;26]" time="0.2711751461029053"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;0]" time="0.002208232879638672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;1]" time="0.0015077590942382812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;2]" time="0.0013992786407470703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;3]" time="0.0014579296112060547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;4]" time="0.0013380050659179688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;5]" time="0.0014095306396484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;6]" time="0.0013012886047363281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;7]" time="0.0014202594757080078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;8]" time="0.004668235778808594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;9]" time="0.00859975814819336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;10]" time="0.0017788410186767578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;11]" time="0.0018999576568603516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;12]" time="0.0018210411071777344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;13]" time="0.0016360282897949219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;14]" time="0.0017993450164794922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;15]" time="0.0020627975463867188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;16]" time="0.0020792484283447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;17]" time="0.0018935203552246094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;18]" time="0.0017571449279785156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;19]" time="0.0029747486114501953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;20]" time="0.014241933822631836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;21]" time="0.032117366790771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;22]" time="0.0019109249114990234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;23]" time="0.0012824535369873047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;24]" time="0.004770040512084961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;25]" time="0.11743974685668945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="841" name="test_neg[2-&lt;lambda&gt;26]" time="0.273409366607666"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;0]" time="0.002917051315307617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;1]" time="0.0021588802337646484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;2]" time="0.002139568328857422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;3]" time="0.0022432804107666016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;4]" time="0.0020294189453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;5]" time="0.0018489360809326172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;6]" time="0.0017809867858886719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;7]" time="0.0022940635681152344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;8]" time="0.015609979629516602"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;9]" time="0.03219175338745117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;10]" time="0.004092216491699219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;11]" time="0.0035195350646972656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;12]" time="0.003224611282348633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;13]" time="0.002727508544921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;14]" time="0.0033152103424072266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;15]" time="0.0043032169342041016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;16]" time="0.003989696502685547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;17]" time="0.0023059844970703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;18]" time="0.0021119117736816406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;19]" time="0.004464387893676758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;20]" time="0.034349679946899414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;21]" time="0.08117485046386719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;22]" time="0.002559661865234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;23]" time="0.0018301010131835938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;24]" time="0.015149593353271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;25]" time="0.4859485626220703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[0-&lt;lambda&gt;26]" time="1.1366894245147705"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;0]" time="0.0030748844146728516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;1]" time="0.002134084701538086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;2]" time="0.002088785171508789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;3]" time="0.002273082733154297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;4]" time="0.0019829273223876953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;5]" time="0.0017516613006591797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;6]" time="0.0016536712646484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;7]" time="0.0022869110107421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;8]" time="0.015977144241333008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;9]" time="0.03288912773132324"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;10]" time="0.004125356674194336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;11]" time="0.003762960433959961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;12]" time="0.003583192825317383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;13]" time="0.002893209457397461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;14]" time="0.003639698028564453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;15]" time="0.004533052444458008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;16]" time="0.004457950592041016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;17]" time="0.0026068687438964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;18]" time="0.0027484893798828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;19]" time="0.0049800872802734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;20]" time="0.036853790283203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;21]" time="0.08156156539916992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;22]" time="0.002490520477294922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;23]" time="0.0017542839050292969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;24]" time="0.014397621154785156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;25]" time="0.4860846996307373"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[1-&lt;lambda&gt;26]" time="1.1282904148101807"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;0]" time="0.0030083656311035156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;1]" time="0.0020983219146728516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;2]" time="0.0020971298217773438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;3]" time="0.002229928970336914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;4]" time="0.0019702911376953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;5]" time="0.001827239990234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;6]" time="0.0017323493957519531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;7]" time="0.002281665802001953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;8]" time="0.015436887741088867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;9]" time="0.031725168228149414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;10]" time="0.003986835479736328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;11]" time="0.003445148468017578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;12]" time="0.003265857696533203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;13]" time="0.0026361942291259766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;14]" time="0.003293752670288086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;15]" time="0.004152536392211914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;16]" time="0.003913164138793945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;17]" time="0.0022995471954345703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;18]" time="0.0021774768829345703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;19]" time="0.004379749298095703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;20]" time="0.03389763832092285"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;21]" time="0.07946443557739258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;22]" time="0.0025780200958251953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;23]" time="0.0017933845520019531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;24]" time="0.014669418334960938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;25]" time="0.4821951389312744"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="850" name="test_mul[2-&lt;lambda&gt;26]" time="1.1309289932250977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;0]" time="0.0018148422241210938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;1]" time="0.0012466907501220703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;2]" time="0.0011839866638183594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;3]" time="0.0011415481567382812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;4]" time="0.0011682510375976562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;5]" time="0.0012564659118652344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;6]" time="0.0011186599731445312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;7]" time="0.0011963844299316406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;8]" time="0.0014066696166992188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;9]" time="0.0017087459564208984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;10]" time="0.0012667179107666016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;11]" time="0.0012481212615966797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;12]" time="0.0012614727020263672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;13]" time="0.0012145042419433594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;14]" time="0.0012984275817871094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;15]" time="0.0012354850769042969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;16]" time="0.0013015270233154297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;17]" time="0.0015857219696044922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;18]" time="0.0015070438385009766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;19]" time="0.0023627281188964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;20]" time="0.008716821670532227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;21]" time="0.018674135208129883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;22]" time="0.001794576644897461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;23]" time="0.0012443065643310547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;24]" time="0.002235889434814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;25]" time="0.02417278289794922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[0-&lt;lambda&gt;26]" time="0.05398058891296387"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;0]" time="0.0018343925476074219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;1]" time="0.0013170242309570312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;2]" time="0.001279592514038086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;3]" time="0.0012543201446533203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;4]" time="0.0011935234069824219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;5]" time="0.0012221336364746094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;6]" time="0.0012409687042236328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;7]" time="0.001203775405883789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;8]" time="0.0015642642974853516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;9]" time="0.002279520034790039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;10]" time="0.0014395713806152344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;11]" time="0.0013668537139892578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;12]" time="0.0013735294342041016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;13]" time="0.001348733901977539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;14]" time="0.001331329345703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;15]" time="0.0013566017150878906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;16]" time="0.0013625621795654297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;17]" time="0.0017170906066894531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;18]" time="0.001592874526977539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;19]" time="0.002584695816040039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;20]" time="0.00949406623840332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;21]" time="0.020404577255249023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;22]" time="0.0018758773803710938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;23]" time="0.0013308525085449219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;24]" time="0.0023255348205566406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;25]" time="0.024274587631225586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[1-&lt;lambda&gt;26]" time="0.054157257080078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;0]" time="0.0018320083618164062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;1]" time="0.0012786388397216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;2]" time="0.0011565685272216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;3]" time="0.001222372055053711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;4]" time="0.0011279582977294922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;5]" time="0.0012598037719726562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;6]" time="0.0011861324310302734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;7]" time="0.0011737346649169922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;8]" time="0.0015587806701660156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;9]" time="0.0023522377014160156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;10]" time="0.0014691352844238281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;11]" time="0.0013616085052490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;12]" time="0.0013270378112792969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;13]" time="0.0013785362243652344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;14]" time="0.0013573169708251953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;15]" time="0.0013670921325683594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;16]" time="0.0013384819030761719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;17]" time="0.001646280288696289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;18]" time="0.0016138553619384766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;19]" time="0.0025136470794677734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;20]" time="0.009105920791625977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;21]" time="0.018516063690185547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;22]" time="0.0017642974853515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;23]" time="0.0012297630310058594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;24]" time="0.0020852088928222656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;25]" time="0.02365398406982422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="860" name="test_mul_wrong_factor[2-&lt;lambda&gt;26]" time="0.05570816993713379"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;0]" time="0.002953767776489258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;1]" time="0.002047300338745117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;2]" time="0.0020542144775390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;3]" time="0.0021681785583496094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;4]" time="0.001961231231689453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;5]" time="0.0017499923706054688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;6]" time="0.0016665458679199219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;7]" time="0.002269268035888672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;8]" time="0.015664100646972656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;9]" time="0.03154873847961426"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;10]" time="0.0039691925048828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;11]" time="0.003325939178466797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;12]" time="0.0031576156616210938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;13]" time="0.002590656280517578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;14]" time="0.003331422805786133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;15]" time="0.004304409027099609"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;16]" time="0.0038111209869384766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;17]" time="0.0023169517517089844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;18]" time="0.0021317005157470703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;19]" time="0.004273653030395508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;20]" time="0.03374195098876953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;21]" time="0.08246397972106934"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;22]" time="0.0025818347930908203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;23]" time="0.0018351078033447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;24]" time="0.015306949615478516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;25]" time="0.4827427864074707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[0-&lt;lambda&gt;26]" time="1.1417536735534668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;0]" time="0.0030019283294677734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;1]" time="0.0020041465759277344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;2]" time="0.0020208358764648438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;3]" time="0.002212047576904297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;4]" time="0.001996755599975586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;5]" time="0.001703500747680664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;6]" time="0.0015976428985595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;7]" time="0.0022029876708984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;8]" time="0.015256643295288086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;9]" time="0.03169703483581543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;10]" time="0.004048347473144531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;11]" time="0.00357818603515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;12]" time="0.0033409595489501953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;13]" time="0.002724170684814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;14]" time="0.0034284591674804688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;15]" time="0.0042018890380859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;16]" time="0.0038750171661376953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;17]" time="0.0023109912872314453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;18]" time="0.002129793167114258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;19]" time="0.004508256912231445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;20]" time="0.0355982780456543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;21]" time="0.07866859436035156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;22]" time="0.002446413040161133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;23]" time="0.001743316650390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;24]" time="0.014141559600830078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;25]" time="0.4806830883026123"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[1-&lt;lambda&gt;26]" time="1.1359736919403076"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;0]" time="0.0029571056365966797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;1]" time="0.0020008087158203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;2]" time="0.002017498016357422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;3]" time="0.0022182464599609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;4]" time="0.001979351043701172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;5]" time="0.001691579818725586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;6]" time="0.0016303062438964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;7]" time="0.0022296905517578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;8]" time="0.015743017196655273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;9]" time="0.03156566619873047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;10]" time="0.004007816314697266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;11]" time="0.003509521484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;12]" time="0.0033292770385742188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;13]" time="0.0026998519897460938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;14]" time="0.0033605098724365234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;15]" time="0.004140377044677734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;16]" time="0.003998756408691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;17]" time="0.0023386478424072266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;18]" time="0.002122163772583008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;19]" time="0.0043849945068359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;20]" time="0.03368663787841797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;21]" time="0.07961654663085938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;22]" time="0.002540111541748047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;23]" time="0.001798868179321289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;24]" time="0.01483917236328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;25]" time="0.4834780693054199"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="866" name="test_rmul[2-&lt;lambda&gt;26]" time="1.13216233253479"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;0]" time="0.0025823116302490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;1]" time="0.0018591880798339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;2]" time="0.0017752647399902344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;3]" time="0.001840829849243164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;4]" time="0.001783609390258789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;5]" time="0.0015308856964111328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;6]" time="0.0015306472778320312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;7]" time="0.0019369125366210938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;8]" time="0.010598421096801758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;9]" time="0.022112607955932617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;10]" time="0.003523588180541992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;11]" time="0.0026619434356689453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;12]" time="0.0026009082794189453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;13]" time="0.0022268295288085938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;14]" time="0.002610445022583008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;15]" time="0.003212451934814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;16]" time="0.003539562225341797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;17]" time="0.002038717269897461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;18]" time="0.0019905567169189453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;19]" time="0.0039179325103759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;20]" time="0.027360200881958008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;21]" time="0.06386899948120117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;22]" time="0.0021843910217285156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;23]" time="0.001628875732421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;24]" time="0.011701822280883789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;25]" time="0.365861177444458"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[0-&lt;lambda&gt;26]" time="0.8787360191345215"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;0]" time="0.002634286880493164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;1]" time="0.0018210411071777344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;2]" time="0.001741647720336914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;3]" time="0.0017995834350585938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;4]" time="0.0017609596252441406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;5]" time="0.0014801025390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;6]" time="0.0014598369598388672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;7]" time="0.0018551349639892578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;8]" time="0.010699748992919922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;9]" time="0.022356271743774414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;10]" time="0.003517627716064453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;11]" time="0.002689838409423828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;12]" time="0.002543210983276367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;13]" time="0.002210378646850586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;14]" time="0.0025780200958251953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;15]" time="0.0031578540802001953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;16]" time="0.0030841827392578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;17]" time="0.002014636993408203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;18]" time="0.0018589496612548828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;19]" time="0.003744363784790039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;20]" time="0.026953697204589844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;21]" time="0.06387948989868164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;22]" time="0.0021729469299316406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;23]" time="0.0015959739685058594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;24]" time="0.011954784393310547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;25]" time="0.36423730850219727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[1-&lt;lambda&gt;26]" time="0.8651337623596191"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;0]" time="0.0027132034301757812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;1]" time="0.0018527507781982422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;2]" time="0.0018055438995361328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;3]" time="0.0018520355224609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;4]" time="0.0018284320831298828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;5]" time="0.001550436019897461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;6]" time="0.0015664100646972656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;7]" time="0.0018932819366455078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;8]" time="0.010540008544921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;9]" time="0.022072553634643555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;10]" time="0.0034401416778564453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;11]" time="0.0025932788848876953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;12]" time="0.0024652481079101562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;13]" time="0.002157926559448242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;14]" time="0.0025222301483154297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;15]" time="0.003046274185180664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;16]" time="0.0029876232147216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;17]" time="0.002176046371459961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;18]" time="0.0019142627716064453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;19]" time="0.0036966800689697266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;20]" time="0.026503562927246094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;21]" time="0.062136173248291016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;22]" time="0.0021882057189941406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;23]" time="0.0015180110931396484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;24]" time="0.011263370513916016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;25]" time="0.3634974956512451"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="876" name="test_imul[2-&lt;lambda&gt;26]" time="0.8541412353515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;0]" time="0.0018537044525146484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;1]" time="0.0012125968933105469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;2]" time="0.0011532306671142578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;3]" time="0.0011980533599853516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;4]" time="0.0011987686157226562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;5]" time="0.0012288093566894531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;6]" time="0.0012211799621582031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;7]" time="0.0011937618255615234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;8]" time="0.0014104843139648438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;9]" time="0.0014691352844238281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;10]" time="0.0013391971588134766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;11]" time="0.0013158321380615234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;12]" time="0.0012903213500976562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;13]" time="0.0012440681457519531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;14]" time="0.0012574195861816406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;15]" time="0.0012929439544677734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;16]" time="0.0012738704681396484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;17]" time="0.0015714168548583984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;18]" time="0.0016131401062011719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;19]" time="0.002502918243408203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;20]" time="0.008573055267333984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;21]" time="0.01883244514465332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;22]" time="0.0016989707946777344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;23]" time="0.0011570453643798828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;24]" time="0.0021436214447021484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;25]" time="0.0238497257232666"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[0-&lt;lambda&gt;26]" time="0.053325653076171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;0]" time="0.0018095970153808594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;1]" time="0.0012717247009277344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;2]" time="0.0011887550354003906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;3]" time="0.0012054443359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;4]" time="0.001146078109741211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;5]" time="0.0011878013610839844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;6]" time="0.001146078109741211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;7]" time="0.0011453628540039062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;8]" time="0.001434326171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;9]" time="0.0018162727355957031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;10]" time="0.0013532638549804688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;11]" time="0.0012886524200439453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;12]" time="0.0012922286987304688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;13]" time="0.0012412071228027344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;14]" time="0.0013155937194824219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;15]" time="0.0013759136199951172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;16]" time="0.001298666000366211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;17]" time="0.001569986343383789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;18]" time="0.001482248306274414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;19]" time="0.0023584365844726562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;20]" time="0.00853872299194336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;21]" time="0.01868891716003418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;22]" time="0.0017216205596923828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;23]" time="0.0011980533599853516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;24]" time="0.002099752426147461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;25]" time="0.023249149322509766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[1-&lt;lambda&gt;26]" time="0.05369281768798828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;0]" time="0.0018031597137451172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;1]" time="0.001291513442993164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;2]" time="0.0011954307556152344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;3]" time="0.0012083053588867188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;4]" time="0.0011775493621826172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;5]" time="0.0011911392211914062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;6]" time="0.0011391639709472656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;7]" time="0.0011658668518066406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;8]" time="0.0014412403106689453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;9]" time="0.0018892288208007812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;10]" time="0.001352548599243164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;11]" time="0.001329660415649414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;12]" time="0.001306772232055664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;13]" time="0.0012557506561279297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;14]" time="0.0013196468353271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;15]" time="0.001374959945678711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;16]" time="0.001322031021118164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;17]" time="0.0016167163848876953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;18]" time="0.00153350830078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;19]" time="0.0023915767669677734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;20]" time="0.009624719619750977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;21]" time="0.018507957458496094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;22]" time="0.0017285346984863281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;23]" time="0.0011744499206542969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;24]" time="0.0021076202392578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;25]" time="0.023422956466674805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="886" name="test_imul_wrong_factor[2-&lt;lambda&gt;26]" time="0.05391526222229004"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;0]" time="0.0016906261444091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;1]" time="0.001180887222290039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;2]" time="0.0011105537414550781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;3]" time="0.0011589527130126953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;4]" time="0.0010766983032226562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;5]" time="0.0011320114135742188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;6]" time="0.0011169910430908203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;7]" time="0.0011222362518310547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;8]" time="0.0018124580383300781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;9]" time="0.0026874542236328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;10]" time="0.0014393329620361328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;11]" time="0.0013303756713867188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;12]" time="0.001445770263671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;13]" time="0.0014832019805908203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;14]" time="0.0014255046844482422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;15]" time="0.0017552375793457031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;16]" time="0.001863718032836914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;17]" time="0.00200653076171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;18]" time="0.0302736759185791"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;19]" time="0.022066593170166016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;20]" time="0.003797769546508789"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;21]" time="0.0034024715423583984"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;22]" time="0.0023174285888671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;23]" time="0.029834985733032227"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="895" name="test_append_incompatible[&lt;lambda&gt;24]" time="0.06076765060424805"><system-out> set global mesh
 set global mesh
 Update mesh topology
 Update edges 
 Update faces 
 Update clusters
</system-out></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;0]" time="0.003473520278930664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;1]" time="0.0013988018035888672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;2]" time="0.0049173831939697266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;3]" time="0.0041348934173583984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;4]" time="0.005564689636230469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;5]" time="0.0027246475219726562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;6]" time="0.0013816356658935547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;7]" time="0.005470752716064453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;8]" time="0.010656595230102539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;9]" time="0.018664121627807617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;10]" time="0.005311489105224609"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;11]" time="0.0019834041595458984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;12]" time="0.010175466537475586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;13]" time="0.007205963134765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;14]" time="0.009149551391601562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;15]" time="0.0036346912384033203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;16]" time="0.0022628307342529297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;17]" time="0.006752490997314453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;18]" time="0.03885173797607422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;19]" time="0.03867626190185547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;20]" time="0.0035049915313720703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;21]" time="0.00255584716796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;22]" time="0.007250547409057617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;23]" time="0.03781700134277344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="906" name="test_axpy_incompatible[&lt;lambda&gt;24]" time="0.07733774185180664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;0]" time="0.002213001251220703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;1]" time="0.0012066364288330078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;2]" time="0.0021657943725585938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;3]" time="0.0020325183868408203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;4]" time="0.001962900161743164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;5]" time="0.001468658447265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;6]" time="0.0011267662048339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;7]" time="0.002185821533203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;8]" time="0.0036542415618896484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;9]" time="0.006232500076293945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;10]" time="0.0019843578338623047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;11]" time="0.0013828277587890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;12]" time="0.003571748733520508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;13]" time="0.002814769744873047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;14]" time="0.003344297409057617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;15]" time="0.002079486846923828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;16]" time="0.001827239990234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;17]" time="0.0031251907348632812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;18]" time="0.031237125396728516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;19]" time="0.025957822799682617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;20]" time="0.002134561538696289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;21]" time="0.002245187759399414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;22]" time="0.0038492679595947266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;23]" time="0.03133535385131836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="923" name="test_dot_incompatible[&lt;lambda&gt;24]" time="0.06315779685974121"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;0]" time="0.0021796226501464844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;1]" time="0.0011641979217529297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;2]" time="0.0020923614501953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;3]" time="0.0018458366394042969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;4]" time="0.001997709274291992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;5]" time="0.001398324966430664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;6]" time="0.0011029243469238281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;7]" time="0.0021538734436035156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;8]" time="0.0035767555236816406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;9]" time="0.005860090255737305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;10]" time="0.0019860267639160156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;11]" time="0.0013279914855957031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;12]" time="0.0035436153411865234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;13]" time="0.0031900405883789062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;14]" time="0.0035254955291748047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;15]" time="0.002210378646850586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;16]" time="0.0019283294677734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;17]" time="0.0032563209533691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;18]" time="0.031900882720947266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;19]" time="0.026099205017089844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;20]" time="0.002104520797729492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;21]" time="0.0020864009857177734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;22]" time="0.0038030147552490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;23]" time="0.030144453048706055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="931" name="test_pairwise_dot_incompatible[&lt;lambda&gt;24]" time="0.06342816352844238"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;0]" time="0.0016376972198486328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;1]" time="0.001168966293334961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;2]" time="0.0010249614715576172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;3]" time="0.0010640621185302734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;4]" time="0.0010259151458740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;5]" time="0.001077413558959961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;6]" time="0.0011067390441894531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;7]" time="0.001035928726196289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;8]" time="0.001462697982788086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;9]" time="0.0018451213836669922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;10]" time="0.0013124942779541016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;11]" time="0.0012521743774414062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;12]" time="0.0013186931610107422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;13]" time="0.0013756752014160156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;14]" time="0.0013735294342041016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;15]" time="0.0016977787017822266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;16]" time="0.0018641948699951172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;17]" time="0.0020151138305664062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;18]" time="0.029103517532348633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;19]" time="0.0218353271484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;20]" time="0.0015878677368164062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;21]" time="0.0020236968994140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;22]" time="0.002668142318725586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;23]" time="0.02803206443786621"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="939" name="test_add_incompatible[&lt;lambda&gt;24]" time="0.05834698677062988"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;0]" time="0.001651763916015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;1]" time="0.0010809898376464844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;2]" time="0.001049041748046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;3]" time="0.0010933876037597656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;4]" time="0.0010242462158203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;5]" time="0.001039266586303711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;6]" time="0.001081705093383789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;7]" time="0.0010256767272949219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;8]" time="0.001196146011352539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;9]" time="0.0013349056243896484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;10]" time="0.0012938976287841797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;11]" time="0.0013165473937988281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;12]" time="0.0012502670288085938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;13]" time="0.0012822151184082031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;14]" time="0.0013229846954345703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;15]" time="0.0016787052154541016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;16]" time="0.0017025470733642578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;17]" time="0.0017995834350585938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;18]" time="0.02861475944519043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;19]" time="0.02205038070678711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;20]" time="0.0016684532165527344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;21]" time="0.002070188522338867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;22]" time="0.002603769302368164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;23]" time="0.027779102325439453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="945" name="test_iadd_incompatible[&lt;lambda&gt;24]" time="0.05951642990112305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;0]" time="0.0016782283782958984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;1]" time="0.0011501312255859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;2]" time="0.0010480880737304688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;3]" time="0.0011038780212402344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;4]" time="0.0010273456573486328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;5]" time="0.001087188720703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;6]" time="0.0010814666748046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;7]" time="0.0010938644409179688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;8]" time="0.0014774799346923828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;9]" time="0.001959085464477539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;10]" time="0.001329183578491211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;11]" time="0.001230478286743164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;12]" time="0.0013000965118408203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;13]" time="0.0012204647064208984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;14]" time="0.0013985633850097656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;15]" time="0.0017707347869873047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;16]" time="0.002046823501586914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;17]" time="0.0019867420196533203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;18]" time="0.029045581817626953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;19]" time="0.021605253219604492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;20]" time="0.0015168190002441406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;21]" time="0.002127408981323242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;22]" time="0.0025200843811035156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;23]" time="0.027762889862060547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="951" name="test_sub_incompatible[&lt;lambda&gt;24]" time="0.05870199203491211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;0]" time="0.0016181468963623047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;1]" time="0.0012006759643554688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;2]" time="0.0010962486267089844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;3]" time="0.0011060237884521484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;4]" time="0.0010600090026855469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;5]" time="0.001092672348022461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;6]" time="0.0010786056518554688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;7]" time="0.001058816909790039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;8]" time="0.0012316703796386719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;9]" time="0.0014088153839111328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;10]" time="0.0013213157653808594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;11]" time="0.0011820793151855469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;12]" time="0.0012731552124023438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;13]" time="0.0012576580047607422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;14]" time="0.0012791156768798828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;15]" time="0.0017113685607910156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;16]" time="0.0017876625061035156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;17]" time="0.0018622875213623047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;18]" time="0.02883124351501465"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;19]" time="0.02318286895751953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;20]" time="0.0015857219696044922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;21]" time="0.0020661354064941406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;22]" time="0.002577543258666992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;23]" time="0.027471542358398438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="957" name="test_isub_incompatible[&lt;lambda&gt;24]" time="0.05933380126953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;0]" time="0.0023865699768066406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;1]" time="0.0014960765838623047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;2]" time="0.0014295578002929688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;3]" time="0.0013966560363769531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;4]" time="0.0013728141784667969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;5]" time="0.0013554096221923828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;6]" time="0.0014069080352783203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;7]" time="0.0013573169708251953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;8]" time="0.0015268325805664062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;9]" time="0.0016734600067138672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;10]" time="0.0015227794647216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;11]" time="0.0015788078308105469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;12]" time="0.0015170574188232422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;13]" time="0.0015301704406738281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;14]" time="0.001489400863647461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;15]" time="0.0015423297882080078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;16]" time="0.0016291141510009766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;17]" time="0.0018041133880615234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;18]" time="0.0017671585083007812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;19]" time="0.0026149749755859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;20]" time="0.008677959442138672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;21]" time="0.02024531364440918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;22]" time="0.0020492076873779297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;23]" time="0.0014243125915527344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;24]" time="0.0023474693298339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;25]" time="0.024224519729614258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[0-&lt;lambda&gt;26]" time="0.0544590950012207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;0]" time="0.002174854278564453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;1]" time="0.0014922618865966797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;2]" time="0.0014405250549316406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;3]" time="0.001455068588256836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;4]" time="0.0013904571533203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;5]" time="0.00145721435546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;6]" time="0.001422882080078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;7]" time="0.0015294551849365234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;8]" time="0.0017337799072265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;9]" time="0.0022008419036865234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;10]" time="0.0016987323760986328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;11]" time="0.0017194747924804688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;12]" time="0.0017206668853759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;13]" time="0.001603841781616211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;14]" time="0.0016999244689941406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;15]" time="0.001692056655883789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;16]" time="0.0016772747039794922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;17]" time="0.0019233226776123047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;18]" time="0.0017886161804199219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;19]" time="0.002791166305541992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;20]" time="0.009173393249511719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;21]" time="0.018880128860473633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;22]" time="0.001989126205444336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;23]" time="0.0014312267303466797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;24]" time="0.002415180206298828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;25]" time="0.02363419532775879"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[1-&lt;lambda&gt;26]" time="0.05433082580566406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;0]" time="0.0022399425506591797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;1]" time="0.0015430450439453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;2]" time="0.0015175342559814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;3]" time="0.001493692398071289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;4]" time="0.0014240741729736328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;5]" time="0.0014317035675048828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;6]" time="0.0014209747314453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;7]" time="0.0014007091522216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;8]" time="0.0016825199127197266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;9]" time="0.0021774768829345703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;10]" time="0.0016558170318603516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;11]" time="0.0016777515411376953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;12]" time="0.001653909683227539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;13]" time="0.0015578269958496094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;14]" time="0.001613616943359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;15]" time="0.0017499923706054688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;16]" time="0.001695871353149414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;17]" time="0.001847982406616211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;18]" time="0.0017504692077636719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;19]" time="0.0027408599853515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;20]" time="0.009204864501953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;21]" time="0.01941657066345215"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;22]" time="0.0021767616271972656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;23]" time="0.0015323162078857422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;24]" time="0.0024149417877197266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;25]" time="0.024837255477905273"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="966" name="test_copy_wrong_ind[2-&lt;lambda&gt;26]" time="0.056062936782836914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;0]" time="0.0021750926971435547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;1]" time="0.0015859603881835938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;2]" time="0.0014848709106445312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;3]" time="0.001417398452758789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;4]" time="0.0014705657958984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;5]" time="0.0014231204986572266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;6]" time="0.0013859272003173828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;7]" time="0.0014500617980957031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;8]" time="0.0026035308837890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;9]" time="0.00423121452331543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;10]" time="0.001695871353149414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;11]" time="0.0017495155334472656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;12]" time="0.001722097396850586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;13]" time="0.0016121864318847656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;14]" time="0.001728057861328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;15]" time="0.0016987323760986328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;16]" time="0.0016202926635742188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;17]" time="0.0018091201782226562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;18]" time="0.0018482208251953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;19]" time="0.002643585205078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;20]" time="0.010104894638061523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;21]" time="0.020865917205810547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;22]" time="0.0021054744720458984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;23]" time="0.001482248306274414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;24]" time="0.002613544464111328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;25]" time="0.024738550186157227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[0-&lt;lambda&gt;26]" time="0.058474063873291016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;0]" time="0.0024678707122802734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;1]" time="0.0016384124755859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;2]" time="0.0016026496887207031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;3]" time="0.0016107559204101562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;4]" time="0.0015850067138671875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;5]" time="0.001491546630859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;6]" time="0.0015366077423095703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;7]" time="0.001470804214477539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;8]" time="0.002803802490234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;9]" time="0.0044820308685302734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;10]" time="0.0018126964569091797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;11]" time="0.00173187255859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;12]" time="0.0017461776733398438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;13]" time="0.0015857219696044922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;14]" time="0.0017194747924804688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;15]" time="0.0018110275268554688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;16]" time="0.0018553733825683594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;17]" time="0.0019540786743164062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;18]" time="0.0018458366394042969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;19]" time="0.002840280532836914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;20]" time="0.010354995727539062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;21]" time="0.02173137664794922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;22]" time="0.002137899398803711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;23]" time="0.00144195556640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;24]" time="0.0022902488708496094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;25]" time="0.024452924728393555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[1-&lt;lambda&gt;26]" time="0.05745959281921387"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;0]" time="0.002180814743041992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;1]" time="0.0015146732330322266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;2]" time="0.0014126300811767578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;3]" time="0.0014715194702148438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;4]" time="0.0013577938079833984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;5]" time="0.0014154911041259766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;6]" time="0.0013878345489501953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;7]" time="0.0014748573303222656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;8]" time="0.0026421546936035156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;9]" time="0.004257678985595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;10]" time="0.0016849040985107422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;11]" time="0.0017552375793457031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;12]" time="0.0016472339630126953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;13]" time="0.0015833377838134766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;14]" time="0.001644134521484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;15]" time="0.0018193721771240234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;16]" time="0.0017900466918945312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;17]" time="0.0019969940185546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;18]" time="0.0019028186798095703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;19]" time="0.002803325653076172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;20]" time="0.010158061981201172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;21]" time="0.02185225486755371"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;22]" time="0.0022068023681640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;23]" time="0.001542806625366211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;24]" time="0.0025370121002197266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;25]" time="0.02507305145263672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="973" name="test_remove_wrong_ind[2-&lt;lambda&gt;26]" time="0.0567324161529541"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;0]" time="0.0032279491424560547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;1]" time="0.0022003650665283203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;2]" time="0.0020945072174072266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;3]" time="0.0022096633911132812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;4]" time="0.002152681350708008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;5]" time="0.002061605453491211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;6]" time="0.002053976058959961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;7]" time="0.0024237632751464844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;8]" time="0.005892038345336914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;9]" time="0.011559009552001953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;10]" time="0.0040929317474365234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;11]" time="0.0028886795043945312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;12]" time="0.002783060073852539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;13]" time="0.0026443004608154297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;14]" time="0.0028297901153564453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;15]" time="0.003072500228881836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;16]" time="0.0030236244201660156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;17]" time="0.002550363540649414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;18]" time="0.002591371536254883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;19]" time="0.0035331249237060547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;20]" time="0.014035701751708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;21]" time="0.029723644256591797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;22]" time="0.0030231475830078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;23]" time="0.002112150192260742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;24]" time="0.003213167190551758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;25]" time="0.028695344924926758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[0-&lt;lambda&gt;26]" time="0.06414389610290527"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;0]" time="0.003136873245239258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;1]" time="0.0021932125091552734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;2]" time="0.002253293991088867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;3]" time="0.00228118896484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;4]" time="0.0021915435791015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;5]" time="0.0020797252655029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;6]" time="0.002112865447998047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;7]" time="0.0022401809692382812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;8]" time="0.006133556365966797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;9]" time="0.011893749237060547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;10]" time="0.0041828155517578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;11]" time="0.0030677318572998047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;12]" time="0.0029447078704833984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;13]" time="0.0027930736541748047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;14]" time="0.0029418468475341797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;15]" time="0.003216266632080078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;16]" time="0.0031125545501708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;17]" time="0.0026247501373291016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;18]" time="0.0024547576904296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;19]" time="0.0034584999084472656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;20]" time="0.013686418533325195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;21]" time="0.029224157333374023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;22]" time="0.0030951499938964844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;23]" time="0.002176046371459961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;24]" time="0.003247976303100586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;25]" time="0.02838277816772461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[1-&lt;lambda&gt;26]" time="0.06430816650390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;0]" time="0.0032401084899902344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;1]" time="0.0022575855255126953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;2]" time="0.0022330284118652344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;3]" time="0.002346038818359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;4]" time="0.002307415008544922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;5]" time="0.0021843910217285156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;6]" time="0.002199411392211914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;7]" time="0.0024619102478027344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;8]" time="0.006766080856323242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;9]" time="0.012106657028198242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;10]" time="0.0031938552856445312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;11]" time="0.0030384063720703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;12]" time="0.0030159950256347656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;13]" time="0.0029075145721435547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;14]" time="0.0029418468475341797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;15]" time="0.003268718719482422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;16]" time="0.003216266632080078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;17]" time="0.0025887489318847656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;18]" time="0.0025899410247802734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;19]" time="0.003783702850341797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;20]" time="0.013993263244628906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;21]" time="0.02969050407409668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;22]" time="0.0029065608978271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;23]" time="0.002198934555053711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;24]" time="0.003118276596069336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;25]" time="0.02834773063659668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="981" name="test_scal_wrong_ind[2-&lt;lambda&gt;26]" time="0.06488204002380371"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;0]" time="0.0028100013732910156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;1]" time="0.0019795894622802734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;2]" time="0.00299835205078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;3]" time="0.0038781166076660156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;4]" time="0.0046503543853759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;5]" time="0.0031011104583740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;6]" time="0.0018405914306640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;7]" time="0.0029680728912353516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;8]" time="0.004076719284057617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;9]" time="0.0059163570404052734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;10]" time="0.0021653175354003906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;11]" time="0.004004240036010742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;12]" time="0.003873586654663086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;13]" time="0.0032427310943603516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;14]" time="0.004004001617431641"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;15]" time="0.005637407302856445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;16]" time="0.007303953170776367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;17]" time="0.002417325973510742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;18]" time="0.0023543834686279297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;19]" time="0.0043201446533203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;20]" time="0.011814594268798828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;21]" time="0.023755311965942383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;22]" time="0.002639293670654297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;23]" time="0.0018961429595947266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;24]" time="0.00408625602722168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;25]" time="0.026770830154418945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[0-&lt;lambda&gt;26]" time="0.05902862548828125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;0]" time="0.002901792526245117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;1]" time="0.001943349838256836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;2]" time="0.003046274185180664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;3]" time="0.0039005279541015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;4]" time="0.004662990570068359"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;5]" time="0.001905202865600586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;6]" time="0.0018339157104492188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;7]" time="0.0029213428497314453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;8]" time="0.004174709320068359"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;9]" time="0.0060155391693115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;10]" time="0.0022351741790771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;11]" time="0.004148006439208984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;12]" time="0.00394749641418457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;13]" time="0.0032279491424560547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;14]" time="0.0040934085845947266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;15]" time="0.005843639373779297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;16]" time="0.007453203201293945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;17]" time="0.002513408660888672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;18]" time="0.002213001251220703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;19]" time="0.00433349609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;20]" time="0.011967658996582031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;21]" time="0.02352285385131836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;22]" time="0.0027213096618652344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;23]" time="0.0021333694458007812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;24]" time="0.004015922546386719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;25]" time="0.027466297149658203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[1-&lt;lambda&gt;26]" time="0.059557199478149414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;0]" time="0.002711772918701172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;1]" time="0.0019338130950927734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;2]" time="0.003072977066040039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;3]" time="0.004519224166870117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;4]" time="0.004749298095703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;5]" time="0.0021028518676757812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;6]" time="0.0019555091857910156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;7]" time="0.0032455921173095703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;8]" time="0.004332065582275391"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;9]" time="0.005782365798950195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;10]" time="0.002269268035888672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;11]" time="0.004327535629272461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;12]" time="0.004053831100463867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;13]" time="0.003350973129272461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;14]" time="0.004059553146362305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;15]" time="0.0057811737060546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;16]" time="0.007581233978271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;17]" time="0.002353191375732422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;18]" time="0.002300262451171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;19]" time="0.004372596740722656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;20]" time="0.011698246002197266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;21]" time="0.02283787727355957"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;22]" time="0.0026149749755859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;23]" time="0.0017583370208740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;24]" time="0.00382232666015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;25]" time="0.02676558494567871"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="998" name="test_scal_wrong_coefficients[2-&lt;lambda&gt;26]" time="0.057854652404785156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.003949880599975586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.003394603729248047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.009792327880859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.013466358184814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.019428491592407227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.008976221084594727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.0041925907135009766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.0036957263946533203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.02633976936340332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.04481101036071777"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.13777923583984375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.009867429733276367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.0046269893646240234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.010853290557861328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.011827707290649414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.01970839500427246"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.029338836669921875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.03757429122924805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.004649639129638672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.004288434982299805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.05206179618835449"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.05404257774353027"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.17412185668945312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.011137962341308594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.0039861202239990234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.004720926284790039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.046337127685546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.07112598419189453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.23978066444396973"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.012798309326171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.004120349884033203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.0035631656646728516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.009666919708251953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.013370513916015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.01956009864807129"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.008954763412475586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.0029287338256835938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.003612518310546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.02627873420715332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.044333696365356445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.1406862735748291"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.009871721267700195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.004632234573364258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.011193037033081055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.011941194534301758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.019931316375732422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.030140161514282227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.037537336349487305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.0046482086181640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.004410505294799805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.04987478256225586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.053259849548339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.17148232460021973"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.01083683967590332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.0028688907623291016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.004424571990966797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.045575618743896484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.07049298286437988"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.24381136894226074"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.012572288513183594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.004421234130859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.0036096572875976562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.010076761245727539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.01351785659790039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.01959061622619629"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.008894920349121094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.003020763397216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.0035173892974853516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.025922060012817383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.04409432411193848"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.14011693000793457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.009948015213012695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.005612373352050781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.011474609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.011493444442749023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.019449949264526367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.02880573272705078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.03751659393310547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.004626035690307617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.004293680191040039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.0506746768951416"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.05337929725646973"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.17327165603637695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.010766029357910156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.0028162002563476562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.004633665084838867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.04523205757141113"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.07069897651672363"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.24167847633361816"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.01255655288696289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.004209280014038086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.003576040267944336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.009625434875488281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.013538360595703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.019181013107299805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.008950233459472656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.003975391387939453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.0035343170166015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.02710747718811035"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.04474639892578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.14081287384033203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.009886980056762695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.004650592803955078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.011149406433105469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.011420726776123047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.019643306732177734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.02877974510192871"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.037570953369140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.004437923431396484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.004155158996582031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.04914546012878418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.053800106048583984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.17255043983459473"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.011210441589355469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.0028502941131591797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.0044918060302734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.04605603218078613"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.07171201705932617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.24003958702087402"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.01287531852722168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.003945589065551758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.003592967987060547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.010019540786743164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.01370859146118164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.01961541175842285"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.009114980697631836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.004115104675292969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.003633737564086914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.026272296905517578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.044857025146484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.13798117637634277"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.009757280349731445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.004771232604980469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.011387348175048828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.011759042739868164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.01983022689819336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.028961896896362305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.03785586357116699"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.0046885013580322266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.004370927810668945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.050135135650634766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.05424809455871582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.17522382736206055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.01119232177734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.0041675567626953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.004458427429199219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.04599332809448242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.07289695739746094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.2432706356048584"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.01260685920715332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.00426483154296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.0036013126373291016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.009837150573730469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.013857364654541016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.019520282745361328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.009018182754516602"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.004205942153930664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.003663778305053711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.026418447494506836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.04412508010864258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.13934636116027832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.009625673294067383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.004805088043212891"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.01127767562866211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.01162862777709961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.02008509635925293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.02925395965576172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.03765249252319336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.004689931869506836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.004354238510131836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.04999828338623047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.05307602882385254"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.17243099212646484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.010671615600585938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.0028221607208251953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.004443645477294922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.04593038558959961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.0713655948638916"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.24086451530456543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.012969017028808594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.004281759262084961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.0036780834197998047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.009943246841430664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.013864517211914062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.01920795440673828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.008946895599365234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.002961874008178711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.0034987926483154297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.026447534561157227"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.0444636344909668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.13950824737548828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.010420560836791992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.005853891372680664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.011470317840576172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.011934041976928711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.021074771881103516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.029355287551879883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.03756356239318848"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.0047054290771484375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.0043659210205078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.05007028579711914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.05486440658569336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.17432355880737305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.010831117630004883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.002761363983154297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.004411220550537109"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.04762840270996094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.08042287826538086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.28786802291870117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.013051509857177734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.0048105716705322266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.0038459300994873047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.01016998291015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.013727426528930664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.019503355026245117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.009110450744628906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.0029556751251220703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.0035469532012939453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.0269317626953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.04547548294067383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.15540456771850586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.01022791862487793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.006025791168212891"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.01159214973449707"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.011624574661254883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.019993066787719727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.028947114944458008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.0380091667175293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.004618644714355469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.004997730255126953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.055822134017944336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.05892586708068848"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.1887500286102295"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.01145172119140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.004555225372314453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.004528045654296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.0459592342376709"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.0783848762512207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.2690162658691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.014317750930786133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.0038492679595947266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.0036439895629882812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.009865999221801758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.01392817497253418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.02143549919128418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.009454727172851562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.00431060791015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.0036988258361816406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.026787757873535156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.04734659194946289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.15132641792297363"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.014641761779785156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.005711793899536133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.01158452033996582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.011870145797729492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.019771814346313477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.02865123748779297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.03705859184265137"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.004431247711181641"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.004278659820556641"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.05052304267883301"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.05388283729553223"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.1743617057800293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.011448144912719727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.003997087478637695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.004766225814819336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.04679250717163086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.07188558578491211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.24178242683410645"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1009" name="test_axpy_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.012548446655273438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.002569913864135742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.0014028549194335938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.003206968307495117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.0035562515258789062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.005675077438354492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.0040171146392822266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.0017628669738769531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.0013015270233154297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.0034699440002441406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.003873109817504883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.006970882415771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.004322052001953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.002174854278564453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.0016031265258789062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.0036330223083496094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.004831552505493164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.005690813064575195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.010362386703491211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.0026073455810546875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.0019555091857910156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.027339935302734375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.014566421508789062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.04181528091430664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.006779670715332031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.0017633438110351562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.0022368431091308594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.0233154296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.03215742111206055"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.11235284805297852"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.008247613906860352"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.001836538314819336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.00140380859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.003341197967529297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.0037708282470703125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.006144523620605469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.004408836364746094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.0018856525421142578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.0013527870178222656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.003659963607788086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.003983259201049805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.007674455642700195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.00452876091003418"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.002215862274169922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.0017800331115722656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.0037565231323242188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.005041360855102539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.005881786346435547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.010649442672729492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.002644062042236328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.0021686553955078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.027205705642700195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.014780282974243164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.04205131530761719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.006882190704345703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.0018239021301269531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.002897977828979492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.02379894256591797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.0320131778717041"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.11036109924316406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.008085966110229492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.0018472671508789062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.0013306140899658203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.0032148361206054688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.0037589073181152344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.005894660949707031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.004183053970336914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.0018429756164550781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.0013580322265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.0035905838012695312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.0040166378021240234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.00752568244934082"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.00438380241394043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.002262592315673828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.0018324851989746094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.0037224292755126953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.004755735397338867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.005738019943237305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.010373353958129883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.0025479793548583984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.0020270347595214844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.027595996856689453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.014428853988647461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.042287588119506836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.0068700313568115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.002477407455444336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.0021593570709228516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.023047924041748047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.033190250396728516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.11309385299682617"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.008112430572509766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.0018031597137451172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.0013625621795654297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.0031213760375976562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.003449678421020508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.0057525634765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.00409388542175293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.0017795562744140625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.00128936767578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.0033948421478271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.003972291946411133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.0072443485260009766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.004392862319946289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.0021829605102539062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.001630544662475586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.0036759376525878906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.0048427581787109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.005787372589111328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.010776519775390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.0026199817657470703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.0019369125366210938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.026614665985107422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.014624834060668945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.04222726821899414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.0066754817962646484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.0017902851104736328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.0023326873779296875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.023898839950561523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.0318603515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.11231803894042969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.008217334747314453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.001837015151977539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.0014085769653320312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.0032739639282226562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.0036666393280029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.005858182907104492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.0041615962982177734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.0018389225006103516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.001383066177368164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.003648519515991211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.004041194915771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.007813692092895508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.00444793701171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.0023088455200195312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.0017580986022949219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.003719806671142578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.004820346832275391"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.00560450553894043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.01042485237121582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.002640247344970703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.0020978450775146484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.02702188491821289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.014733552932739258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.043595314025878906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.006644010543823242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.0017974376678466797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.0022962093353271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.0241544246673584"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.033426523208618164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.11095428466796875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.007959604263305664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.0018477439880371094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.001444101333618164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.003233194351196289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.0035741329193115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.005857706069946289"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.004153251647949219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.0017948150634765625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.0014328956604003906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.003707408905029297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.0040836334228515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.0076084136962890625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.004477739334106445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.0022296905517578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.0016939640045166016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.003583192825317383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.0047109127044677734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.005704402923583984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.010476112365722656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.002643585205078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.002069234848022461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.027652978897094727"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.014700174331665039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.04242897033691406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.006604433059692383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.0017685890197753906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.002468109130859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.023817062377929688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.032109737396240234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.11065149307250977"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.00796365737915039"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.0017859935760498047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.0013387203216552734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.003131866455078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.003467559814453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.005787372589111328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.004152774810791016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.0017979145050048828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.0013093948364257812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.0034437179565429688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.0040476322174072266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.0075075626373291016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.004486799240112305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.0022907257080078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.0016455650329589844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.0036194324493408203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.004937648773193359"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.005825996398925781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.010461568832397461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.002543210983276367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.0019927024841308594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.02718949317932129"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.014832019805908203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.04200863838195801"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.006879329681396484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.002518177032470703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.0022819042205810547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.023105382919311523"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.031677961349487305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.11142754554748535"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.008139848709106445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.0018630027770996094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.00138092041015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.0032508373260498047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.003548860549926758"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.0058155059814453125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.004195451736450195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.0018014907836914062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.0014472007751464844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.0037679672241210938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.004246711730957031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.00801849365234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.0044171810150146484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.002223491668701172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.0017483234405517578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.0036525726318359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.004985332489013672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.0057599544525146484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.010355234146118164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.0026438236236572266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.0021486282348632812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.027107954025268555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.014702320098876953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.04331612586975098"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.007120609283447266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.0026628971099853516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.002424001693725586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.02373957633972168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.03422188758850098"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.11265897750854492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.00817251205444336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.002569913864135742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.0014336109161376953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.0033440589904785156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.0037276744842529297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.0061681270599365234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.004487514495849609"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.0018854141235351562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.0014085769653320312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.0036606788635253906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.00411677360534668"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.00903773307800293"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.004721879959106445"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.0022339820861816406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.0016884803771972656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.003645181655883789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.004841804504394531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.0057184696197509766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.010644674301147461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.007091045379638672"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.0030105113983154297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.027593135833740234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.01441812515258789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.04232048988342285"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.006729841232299805"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.002456188201904297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.0023708343505859375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.02350330352783203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.03274345397949219"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.11229610443115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1028" name="test_axpy_wrong_coefficients[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.008170604705810547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.003331422805786133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.00323486328125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.005048274993896484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.005923032760620117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.00706934928894043"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.005204200744628906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.00225830078125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.0033020973205566406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.013128042221069336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.01946234703063965"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.05658578872680664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.0070536136627197266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.003360271453857422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.0057163238525390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.007284879684448242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.009392261505126953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.011637449264526367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.014913558959960938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.0038437843322753906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.004059314727783203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.03665614128112793"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.028654813766479492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.09077858924865723"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.008124589920043945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.0031003952026367188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.004125356674194336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.032800912857055664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.04606342315673828"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.1617748737335205"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.01002955436706543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.0036971569061279297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.0034027099609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.005263328552246094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.0060389041900634766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.007408618927001953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.005218029022216797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.002166748046875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.0031883716583251953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.012791872024536133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.018349170684814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.05723381042480469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.007351875305175781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.0035507678985595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.006129741668701172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.007665157318115234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.009651660919189453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.012164831161499023"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.015096426010131836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.003918886184692383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.004236459732055664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.03646731376647949"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.02840900421142578"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.08974170684814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.0083465576171875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.0031926631927490234"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.004268169403076172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.03324127197265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.045935630798339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.1596052646636963"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.010050535202026367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.003443002700805664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.0032219886779785156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.0052089691162109375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.006300210952758789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.007373332977294922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.005547046661376953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.0024933815002441406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.003400564193725586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.013247251510620117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.018979549407958984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.05878043174743652"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.006868839263916016"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.0034377574920654297"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.006021738052368164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.007563114166259766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.009687423706054688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.0119171142578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.01466822624206543"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.004030942916870117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.00413060188293457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.036812543869018555"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.03055596351623535"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.09099316596984863"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.008125543594360352"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.0022573471069335938"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.00412297248840332"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.032607078552246094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.04577755928039551"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.15888071060180664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.009827613830566406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.0024759769439697266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.0032982826232910156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.005409717559814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.006188392639160156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.007459163665771484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.00522923469543457"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.0021882057189941406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.0032761096954345703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.013172626495361328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.018770456314086914"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.05771207809448242"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.007300138473510742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.003426074981689453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.005887508392333984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.0074710845947265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.00960850715637207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.011808156967163086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.015160799026489258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.004036903381347656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.004157304763793945"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.0372004508972168"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.02890491485595703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.09052610397338867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.008725404739379883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.003333568572998047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.0042340755462646484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.03253054618835449"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.04630017280578613"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.1581592559814453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.009774923324584961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.002420186996459961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.003152608871459961"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.005206108093261719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.006022214889526367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.007517576217651367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.005368232727050781"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.0022957324981689453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.0036263465881347656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.013202190399169922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.01839756965637207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.05706071853637695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.007208108901977539"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.003386259078979492"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.0060062408447265625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.007783651351928711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.009912729263305664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.011987686157226562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.014994382858276367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.003991365432739258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.003993511199951172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.03682971000671387"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.028701066970825195"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.09258365631103516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.008114099502563477"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.002290010452270508"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.004163026809692383"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.03259110450744629"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.04592490196228027"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.16150689125061035"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.009577035903930664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.002497434616088867"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.0033805370330810547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.005259513854980469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.006361246109008789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.00750732421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.005364418029785156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.0023577213287353516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.0033304691314697266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.012917518615722656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.018766403198242188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.05947446823120117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.007181644439697266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.003604888916015625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.006040334701538086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.007577419281005859"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.00961923599243164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.011925220489501953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.014848470687866211"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.004022359848022461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.004241228103637695"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.037502288818359375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.028554201126098633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.09147524833679199"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.008076667785644531"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.0022058486938476562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.004156827926635742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.032944679260253906"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.04578042030334473"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.15650200843811035"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.009531497955322266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.002404928207397461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.003045320510864258"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.005133628845214844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.005958080291748047"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.007157564163208008"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.005209445953369141"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.002167224884033203"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.0031061172485351562"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.012623310089111328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.018617630004882812"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.05697011947631836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.0070569515228271484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.0034027099609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.005925178527832031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.007599830627441406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.00954747200012207"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.011974096298217773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.014674663543701172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.004048824310302734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.004214763641357422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.0369877815246582"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.02870965003967285"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.08955526351928711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.00870966911315918"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.0032873153686523438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.004201650619506836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.03252220153808594"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.04693341255187988"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.1596360206604004"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.009975433349609375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.003359556198120117"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.003259897232055664"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.005372047424316406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.0062825679779052734"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.007393360137939453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.005291461944580078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.0022683143615722656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.0032575130462646484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.013106107711791992"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.01889801025390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.05733752250671387"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.007041454315185547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.0034341812133789062"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.0059397220611572266"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.0077021121978759766"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.009795665740966797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.012059211730957031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.014653205871582031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.004094839096069336"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.004208803176879883"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.03624391555786133"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.028434276580810547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.08981823921203613"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.008227825164794922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.0023102760314941406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.0042340755462646484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.03292226791381836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.04586386680603027"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.1588146686553955"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.009948492050170898"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.0034542083740234375"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.003328084945678711"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.005302906036376953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.006559133529663086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.0074536800384521484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.005413532257080078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.002278566360473633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.0033195018768310547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.012764453887939453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.01825237274169922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.057626962661743164"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.007002115249633789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.00488591194152832"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.006077766418457031"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.0074846744537353516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.009657144546508789"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.012186765670776367"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.01640939712524414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.004050731658935547"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.004289150238037109"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.03728985786437988"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.02860403060913086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.09182906150817871"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.008504152297973633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.003404855728149414"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.004224538803100586"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.03278517723083496"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.045929670333862305"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.16199302673339844"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1039" name="test_pairwise_dot_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.010212421417236328"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;0]" time="0.015190601348876953"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;1]" time="0.002379894256591797"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;2]" time="0.0016281604766845703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;3]" time="0.0015964508056640625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;4]" time="0.0014908313751220703"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;5]" time="0.0020003318786621094"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;6]" time="0.0014104843139648438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;7]" time="0.00177764892578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;8]" time="0.0043942928314208984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;9]" time="0.008979558944702148"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;10]" time="0.005025148391723633"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;11]" time="0.0018916130065917969"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;12]" time="0.001729726791381836"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;13]" time="0.0015933513641357422"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;14]" time="0.0017547607421875"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;15]" time="0.0019445419311523438"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[0-&lt;lambda&gt;16]" time="0.0018780231475830078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;0]" time="0.0014219284057617188"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;1]" time="0.0013680458068847656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;2]" time="0.0014290809631347656"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;3]" time="0.0014507770538330078"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;4]" time="0.0014100074768066406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;5]" time="0.0016551017761230469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;6]" time="0.001367330551147461"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;7]" time="0.0015256404876708984"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;8]" time="0.005359649658203125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;9]" time="0.012976408004760742"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;10]" time="0.002765655517578125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;11]" time="0.0019762516021728516"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;12]" time="0.0018863677978515625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;13]" time="0.0016236305236816406"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;14]" time="0.0019061565399169922"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;15]" time="0.0020346641540527344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[1-&lt;lambda&gt;16]" time="0.001979351043701172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;0]" time="0.0014452934265136719"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;1]" time="0.0014438629150390625"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;2]" time="0.0015285015106201172"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;3]" time="0.0014843940734863281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;4]" time="0.0015058517456054688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;5]" time="0.0013532638549804688"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;6]" time="0.0012865066528320312"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;7]" time="0.0016553401947021484"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;8]" time="0.005979299545288086"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;9]" time="0.013103246688842773"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;10]" time="0.0021889209747314453"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;11]" time="0.0019702911376953125"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;12]" time="0.0018839836120605469"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;13]" time="0.0017437934875488281"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;14]" time="0.0018792152404785156"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;15]" time="0.0020651817321777344"></testcase><testcase classname="src.pymortests.vectorarray" file="src/pymortests/vectorarray.py" line="1047" name="test_pickle[2-&lt;lambda&gt;16]" time="0.001961231231689453"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.00823354721069336"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.0033659934997558594"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.022295713424682617"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.024342060089111328"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.03223705291748047"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.032137393951416016"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.008558034896850586"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.0029442310333251953"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.031317949295043945"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.042766571044921875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.13581466674804688"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.03613018989562988"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.02256011962890625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.006421804428100586"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.030272245407104492"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.04941558837890625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.05398416519165039"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.07538080215454102"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.028913497924804688"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.0062007904052734375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.17191672325134277"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.09457015991210938"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.3082084655761719"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.08473563194274902"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.009613275527954102"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.005057573318481445"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.34320545196533203"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.5656116008758545"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="2.959510564804077"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.18721818923950195"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.009342432022094727"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.0033478736877441406"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.023308753967285156"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.024882793426513672"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.03328990936279297"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.03261971473693848"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.008567571640014648"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.003058910369873047"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.032210350036621094"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.04244279861450195"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.13547468185424805"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.03626728057861328"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.02251744270324707"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.006480693817138672"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.030428647994995117"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.049257755279541016"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.05352950096130371"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.07575440406799316"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.02916717529296875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.0063629150390625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.16869711875915527"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.09530305862426758"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.3069624900817871"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.08403611183166504"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.009203433990478516"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.006108999252319336"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.361530065536499"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.5683999061584473"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="3.0228803157806396"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.18764185905456543"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.00958108901977539"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.004285097122192383"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.02183675765991211"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.024360179901123047"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.0321047306060791"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.032559871673583984"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.008645057678222656"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.004012107849121094"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.03239703178405762"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.04343557357788086"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.13509488105773926"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.03615093231201172"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.02247452735900879"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.006470918655395508"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.030408143997192383"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.050629615783691406"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.05487322807312012"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.07536983489990234"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.02944636344909668"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.006601810455322266"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.1662909984588623"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.09546828269958496"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.3126387596130371"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.08436107635498047"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.008878231048583984"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.005490779876708984"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.3573470115661621"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.5656249523162842"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="3.006826639175415"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.18446707725524902"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.009196281433105469"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.0031280517578125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.02125835418701172"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.024506568908691406"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.0325775146484375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.031738996505737305"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.008513927459716797"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.004084348678588867"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.03105020523071289"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.042955875396728516"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.13337254524230957"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.03590106964111328"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.02228569984436035"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.00644683837890625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.030770301818847656"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.04898715019226074"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.05471348762512207"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.077301025390625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.02945709228515625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.006420135498046875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.1690666675567627"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.09530401229858398"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.3075902462005615"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.08315277099609375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.008978128433227539"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.003931999206542969"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.33574795722961426"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.5800366401672363"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="2.987771987915039"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.18402409553527832"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.009239673614501953"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.0032351016998291016"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.021584272384643555"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.024531841278076172"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.03229069709777832"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.03212475776672363"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.008629083633422852"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.0040934085845947266"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.03182268142700195"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.042198896408081055"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.1339123249053955"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.035323381423950195"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.02200460433959961"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.0064105987548828125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.0298769474029541"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.0487513542175293"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.05324673652648926"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.07545876502990723"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.029616117477416992"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.0065004825592041016"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.16891980171203613"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.09486627578735352"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.31770801544189453"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.08568191528320312"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.009389877319335938"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.004796266555786133"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.3700449466705322"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.5921692848205566"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="3.0831360816955566"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.18812298774719238"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.009179353713989258"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.003263711929321289"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.02161097526550293"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.024413108825683594"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.032312870025634766"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.031757354736328125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.008228778839111328"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.0028753280639648438"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.032303571701049805"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.04269123077392578"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.1347823143005371"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.03528547286987305"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.02226090431213379"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.006753444671630859"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.030802249908447266"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.04952526092529297"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.05433917045593262"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.0763087272644043"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.029007911682128906"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.006389141082763672"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.17113161087036133"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.0978701114654541"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.3113400936126709"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.0848393440246582"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.009321212768554688"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.006219148635864258"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.3591785430908203"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.5947096347808838"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="3.0872092247009277"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.19069981575012207"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.00945138931274414"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.0045359134674072266"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.021383047103881836"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.024188995361328125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.032026052474975586"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.03318667411804199"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.0082244873046875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.004041433334350586"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.03111743927001953"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.04292726516723633"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.13506293296813965"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.03537130355834961"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.022320270538330078"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.0063343048095703125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.030004024505615234"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.04846453666687012"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.05367898941040039"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.0761408805847168"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.030383825302124023"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.006380319595336914"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.16717052459716797"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.09725260734558105"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.525221586227417"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.08349990844726562"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.00940084457397461"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.004367351531982422"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.34362244606018066"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.5885100364685059"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="3.0072062015533447"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.18394732475280762"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.009376764297485352"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.004235267639160156"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.021827220916748047"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.024329423904418945"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.032154083251953125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.03260993957519531"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.00844717025756836"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.002919435501098633"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.03148794174194336"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.043062686920166016"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.13735508918762207"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.03771042823791504"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.02231431007385254"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.0064389705657958984"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.029891014099121094"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.0488133430480957"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.05553841590881348"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.07641243934631348"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.029126644134521484"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.006285905838012695"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.16791892051696777"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.09571027755737305"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.30258989334106445"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.08433079719543457"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.009143829345703125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.00598454475402832"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.36284685134887695"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.5887229442596436"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="3.1674392223358154"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.20134711265563965"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.010194540023803711"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.004694223403930664"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.02404332160949707"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.026107072830200195"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.03409743309020996"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.03278636932373047"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.008907318115234375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.0042645931243896484"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.03346872329711914"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.0456690788269043"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.14422225952148438"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.04060840606689453"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.02395176887512207"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.007058858871459961"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.031423330307006836"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.05254769325256348"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.05676698684692383"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.08232641220092773"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.030676603317260742"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.006957292556762695"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.18135857582092285"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.10190534591674805"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.3315415382385254"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.09111714363098145"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.009806394577026367"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.006226301193237305"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.38385510444641113"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.6184680461883545"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="3.1505472660064697"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="21" name="test_almost_equal[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.20258116722106934"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;0]" time="0.10999417304992676"><system-err>12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 L2ProductP1: Integrate the products of the shape functions on each element
12:39 L2ProductP1: Determine global dofs ...
12:39 L2ProductP1: Boundary treatment ...
12:39 L2ProductP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 L2ProductP1: Integrate the products of the shape functions on each element
12:39 L2ProductP1: Determine global dofs ...
12:39 L2ProductP1: Boundary treatment ...
12:39 L2ProductP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;1]" time="0.07662653923034668"><system-err>12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 L2ProductP1: Integrate the products of the shape functions on each element
12:39 L2ProductP1: Determine global dofs ...
12:39 L2ProductP1: Boundary treatment ...
12:39 L2ProductP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 L2ProductP1: Integrate the products of the shape functions on each element
12:39 L2ProductP1: Determine global dofs ...
12:39 L2ProductP1: Boundary treatment ...
12:39 L2ProductP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;2]" time="0.08330035209655762"><system-err>12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 L2ProductP1: Integrate the products of the shape functions on each element
12:39 L2ProductP1: Determine global dofs ...
12:39 L2ProductP1: Boundary treatment ...
12:39 L2ProductP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
12:39 L2ProductP1: Integrate the products of the shape functions on each element
12:39 L2ProductP1: Determine global dofs ...
12:39 L2ProductP1: Boundary treatment ...
12:39 L2ProductP1: Assemble system matrix ...
12:39 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:39 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:39 DiffusionOperatorP1: Determine global dofs ...
12:39 DiffusionOperatorP1: Boundary treatment ...
12:39 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;3]" time="0.0757448673248291"><system-err>12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 L2ProductP1: Integrate the products of the shape functions on each element
12:40 L2ProductP1: Determine global dofs ...
12:40 L2ProductP1: Boundary treatment ...
12:40 L2ProductP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 L2ProductP1: Integrate the products of the shape functions on each element
12:40 L2ProductP1: Determine global dofs ...
12:40 L2ProductP1: Boundary treatment ...
12:40 L2ProductP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;4]" time="0.08069920539855957"><system-err>12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 L2ProductP1: Integrate the products of the shape functions on each element
12:40 L2ProductP1: Determine global dofs ...
12:40 L2ProductP1: Boundary treatment ...
12:40 L2ProductP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 L2ProductP1: Integrate the products of the shape functions on each element
12:40 L2ProductP1: Determine global dofs ...
12:40 L2ProductP1: Boundary treatment ...
12:40 L2ProductP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;5]" time="0.07678914070129395"><system-err>12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 L2ProductP1: Integrate the products of the shape functions on each element
12:40 L2ProductP1: Determine global dofs ...
12:40 L2ProductP1: Boundary treatment ...
12:40 L2ProductP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 L2ProductP1: Integrate the products of the shape functions on each element
12:40 L2ProductP1: Determine global dofs ...
12:40 L2ProductP1: Boundary treatment ...
12:40 L2ProductP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;6]" time="0.0826869010925293"><system-err>12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 L2ProductP1: Integrate the products of the shape functions on each element
12:40 L2ProductP1: Determine global dofs ...
12:40 L2ProductP1: Boundary treatment ...
12:40 L2ProductP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 L2ProductP1: Integrate the products of the shape functions on each element
12:40 L2ProductP1: Determine global dofs ...
12:40 L2ProductP1: Boundary treatment ...
12:40 L2ProductP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;7]" time="0.07684516906738281"><system-err>12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 L2ProductP1: Integrate the products of the shape functions on each element
12:40 L2ProductP1: Determine global dofs ...
12:40 L2ProductP1: Boundary treatment ...
12:40 L2ProductP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 L2ProductP1: Integrate the products of the shape functions on each element
12:40 L2ProductP1: Determine global dofs ...
12:40 L2ProductP1: Boundary treatment ...
12:40 L2ProductP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;8]" time="0.08219242095947266"><system-err>12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 L2ProductP1: Integrate the products of the shape functions on each element
12:40 L2ProductP1: Determine global dofs ...
12:40 L2ProductP1: Boundary treatment ...
12:40 L2ProductP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 L2ProductP1: Integrate the products of the shape functions on each element
12:40 L2ProductP1: Determine global dofs ...
12:40 L2ProductP1: Boundary treatment ...
12:40 L2ProductP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;9]" time="0.08295798301696777"><system-err>12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 L2ProductP1: Integrate the products of the shape functions on each element
12:40 L2ProductP1: Determine global dofs ...
12:40 L2ProductP1: Boundary treatment ...
12:40 L2ProductP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 L2ProductP1: Integrate the products of the shape functions on each element
12:40 L2ProductP1: Determine global dofs ...
12:40 L2ProductP1: Boundary treatment ...
12:40 L2ProductP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;10]" time="0.08143281936645508"><system-err>12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 L2ProductP1: Integrate the products of the shape functions on each element
12:40 L2ProductP1: Determine global dofs ...
12:40 L2ProductP1: Boundary treatment ...
12:40 L2ProductP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 L2ProductP1: Integrate the products of the shape functions on each element
12:40 L2ProductP1: Determine global dofs ...
12:40 L2ProductP1: Boundary treatment ...
12:40 L2ProductP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;11]" time="0.0762331485748291"><system-err>12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 L2ProductP1: Integrate the products of the shape functions on each element
12:40 L2ProductP1: Determine global dofs ...
12:40 L2ProductP1: Boundary treatment ...
12:40 L2ProductP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 L2ProductP1: Integrate the products of the shape functions on each element
12:40 L2ProductP1: Determine global dofs ...
12:40 L2ProductP1: Boundary treatment ...
12:40 L2ProductP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;12]" time="0.0759894847869873"><system-err>12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 L2ProductP1: Integrate the products of the shape functions on each element
12:40 L2ProductP1: Determine global dofs ...
12:40 L2ProductP1: Boundary treatment ...
12:40 L2ProductP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 L2ProductP1: Integrate the products of the shape functions on each element
12:40 L2ProductP1: Determine global dofs ...
12:40 L2ProductP1: Boundary treatment ...
12:40 L2ProductP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;13]" time="0.07033419609069824"><system-err>12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 L2ProductP1: Integrate the products of the shape functions on each element
12:40 L2ProductP1: Determine global dofs ...
12:40 L2ProductP1: Boundary treatment ...
12:40 L2ProductP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 L2ProductP1: Integrate the products of the shape functions on each element
12:40 L2ProductP1: Determine global dofs ...
12:40 L2ProductP1: Boundary treatment ...
12:40 L2ProductP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;14]" time="0.08116364479064941"><system-err>12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 L2ProductP1: Integrate the products of the shape functions on each element
12:40 L2ProductP1: Determine global dofs ...
12:40 L2ProductP1: Boundary treatment ...
12:40 L2ProductP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
12:40 L2ProductP1: Integrate the products of the shape functions on each element
12:40 L2ProductP1: Determine global dofs ...
12:40 L2ProductP1: Boundary treatment ...
12:40 L2ProductP1: Assemble system matrix ...
12:40 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:40 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:40 DiffusionOperatorP1: Determine global dofs ...
12:40 DiffusionOperatorP1: Boundary treatment ...
12:40 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;15]" time="0.07534909248352051"><system-err>12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
12:41 L2ProductP1: Integrate the products of the shape functions on each element
12:41 L2ProductP1: Determine global dofs ...
12:41 L2ProductP1: Boundary treatment ...
12:41 L2ProductP1: Assemble system matrix ...
12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
12:41 L2ProductP1: Integrate the products of the shape functions on each element
12:41 L2ProductP1: Determine global dofs ...
12:41 L2ProductP1: Boundary treatment ...
12:41 L2ProductP1: Assemble system matrix ...
12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;16]" time="0.07308840751647949"><system-err>12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
12:41 L2ProductP1: Integrate the products of the shape functions on each element
12:41 L2ProductP1: Determine global dofs ...
12:41 L2ProductP1: Boundary treatment ...
12:41 L2ProductP1: Assemble system matrix ...
12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
12:41 L2ProductP1: Integrate the products of the shape functions on each element
12:41 L2ProductP1: Determine global dofs ...
12:41 L2ProductP1: Boundary treatment ...
12:41 L2ProductP1: Assemble system matrix ...
12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;17]" time="0.07106184959411621"><system-err>12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
12:41 L2ProductP1: Integrate the products of the shape functions on each element
12:41 L2ProductP1: Determine global dofs ...
12:41 L2ProductP1: Boundary treatment ...
12:41 L2ProductP1: Assemble system matrix ...
12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
12:41 L2ProductP1: Integrate the products of the shape functions on each element
12:41 L2ProductP1: Determine global dofs ...
12:41 L2ProductP1: Boundary treatment ...
12:41 L2ProductP1: Assemble system matrix ...
12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;18]" time="0.08020472526550293"><system-err>12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
12:41 L2ProductP1: Integrate the products of the shape functions on each element
12:41 L2ProductP1: Determine global dofs ...
12:41 L2ProductP1: Boundary treatment ...
12:41 L2ProductP1: Assemble system matrix ...
12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
12:41 L2ProductP1: Integrate the products of the shape functions on each element
12:41 L2ProductP1: Determine global dofs ...
12:41 L2ProductP1: Boundary treatment ...
12:41 L2ProductP1: Assemble system matrix ...
12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;19]" time="0.07945847511291504"><system-err>12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
12:41 L2ProductP1: Integrate the products of the shape functions on each element
12:41 L2ProductP1: Determine global dofs ...
12:41 L2ProductP1: Boundary treatment ...
12:41 L2ProductP1: Assemble system matrix ...
12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
12:41 L2ProductP1: Integrate the products of the shape functions on each element
12:41 L2ProductP1: Determine global dofs ...
12:41 L2ProductP1: Boundary treatment ...
12:41 L2ProductP1: Assemble system matrix ...
12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;20]" time="0.0846555233001709"><system-err>12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
12:41 L2ProductP1: Integrate the products of the shape functions on each element
12:41 L2ProductP1: Determine global dofs ...
12:41 L2ProductP1: Boundary treatment ...
12:41 L2ProductP1: Assemble system matrix ...
12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
12:41 L2ProductP1: Integrate the products of the shape functions on each element
12:41 L2ProductP1: Determine global dofs ...
12:41 L2ProductP1: Boundary treatment ...
12:41 L2ProductP1: Assemble system matrix ...
12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;21]" time="0.08049702644348145"><system-err>12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
12:41 L2ProductP1: Integrate the products of the shape functions on each element
12:41 L2ProductP1: Determine global dofs ...
12:41 L2ProductP1: Boundary treatment ...
12:41 L2ProductP1: Assemble system matrix ...
12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
12:41 L2ProductP1: Integrate the products of the shape functions on each element
12:41 L2ProductP1: Determine global dofs ...
12:41 L2ProductP1: Boundary treatment ...
12:41 L2ProductP1: Assemble system matrix ...
12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;22]" time="0.08163261413574219"><system-err>12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
12:41 L2ProductP1: Integrate the products of the shape functions on each element
12:41 L2ProductP1: Determine global dofs ...
12:41 L2ProductP1: Boundary treatment ...
12:41 L2ProductP1: Assemble system matrix ...
12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
12:41 L2ProductP1: Integrate the products of the shape functions on each element
12:41 L2ProductP1: Determine global dofs ...
12:41 L2ProductP1: Boundary treatment ...
12:41 L2ProductP1: Assemble system matrix ...
12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;23]" time="0.07781434059143066"><system-err>12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
12:41 L2ProductP1: Integrate the products of the shape functions on each element
12:41 L2ProductP1: Determine global dofs ...
12:41 L2ProductP1: Boundary treatment ...
12:41 L2ProductP1: Assemble system matrix ...
12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
12:41 L2ProductP1: Integrate the products of the shape functions on each element
12:41 L2ProductP1: Determine global dofs ...
12:41 L2ProductP1: Boundary treatment ...
12:41 L2ProductP1: Assemble system matrix ...
12:41 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
12:41 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
12:41 DiffusionOperatorP1: Determine global dofs ...
12:41 DiffusionOperatorP1: Boundary treatment ...
12:41 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;24]" time="0.05427813529968262"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;25]" time="0.05364203453063965"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;26]" time="0.05632328987121582"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;27]" time="0.04964804649353027"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;28]" time="0.04783153533935547"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;29]" time="0.05058693885803223"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;30]" time="0.05070137977600098"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;31]" time="0.04976654052734375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;32]" time="0.1748049259185791"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;33]" time="0.12422823905944824"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;34]" time="0.05409049987792969"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;35]" time="0.12878108024597168"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="41" name="test_almost_equal_product[&lt;lambda&gt;36]" time="0.055211544036865234"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;0]" time="0.01812267303466797"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;1]" time="0.01954936981201172"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;2]" time="0.15372061729431152"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;3]" time="0.23301362991333008"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;4]" time="0.040988922119140625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;5]" time="0.016545772552490234"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;6]" time="0.01686859130859375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;7]" time="0.2412395477294922"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;8]" time="1.6758415699005127"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;9]" time="0.27926111221313477"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;10]" time="0.03747963905334473"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;11]" time="0.42458629608154297"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;12]" time="0.06311655044555664"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;13]" time="0.22797489166259766"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;14]" time="0.4185967445373535"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;15]" time="0.6936941146850586"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;16]" time="0.785348653793335"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;17]" time="0.04631495475769043"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;18]" time="0.04724574089050293"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;19]" time="1.4720196723937988"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;20]" time="4.101396799087524"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;21]" time="9.015451669692993"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;22]" time="0.01627039909362793"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;23]" time="0.017113447189331055"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;24]" time="3.525324583053589"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;25]" time="49.762794971466064"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[0-&lt;lambda&gt;26]" time="7.085129022598267"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;0]" time="0.01578974723815918"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;1]" time="0.016640901565551758"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;2]" time="0.13154292106628418"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;3]" time="0.2094573974609375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;4]" time="0.037397146224975586"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;5]" time="0.013581037521362305"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;6]" time="0.013393878936767578"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;7]" time="0.2205512523651123"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;8]" time="1.5307917594909668"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;9]" time="0.25760722160339355"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;10]" time="0.034865617752075195"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;11]" time="0.3930051326751709"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;12]" time="0.057634592056274414"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;13]" time="0.2128889560699463"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;14]" time="0.3811032772064209"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;15]" time="0.6365218162536621"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;16]" time="0.7202770709991455"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;17]" time="0.04349803924560547"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;18]" time="0.04387211799621582"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;19]" time="1.3925433158874512"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;20]" time="4.177120208740234"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;21]" time="9.322736263275146"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;22]" time="0.015434741973876953"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;23]" time="0.015446662902832031"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;24]" time="3.5526812076568604"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;25]" time="49.980921268463135"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[1-&lt;lambda&gt;26]" time="7.224611282348633"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;0]" time="0.017313718795776367"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;1]" time="0.019161462783813477"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;2]" time="0.13742947578430176"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;3]" time="0.20836257934570312"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;4]" time="0.03765058517456055"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;5]" time="0.015181541442871094"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;6]" time="0.01542210578918457"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;7]" time="0.22373056411743164"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;8]" time="1.5429785251617432"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;9]" time="0.2591361999511719"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;10]" time="0.0355687141418457"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;11]" time="0.402299165725708"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;12]" time="0.0585484504699707"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;13]" time="0.2148585319519043"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;14]" time="0.38768482208251953"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;15]" time="0.6506538391113281"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;16]" time="0.7367949485778809"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;17]" time="0.04379010200500488"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;18]" time="0.04479575157165527"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;19]" time="1.407322645187378"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;20]" time="4.186668634414673"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;21]" time="9.322449922561646"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;22]" time="0.016176700592041016"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;23]" time="0.016904592514038086"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;24]" time="3.573634624481201"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;25]" time="49.63830494880676"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="64" name="test_almost_equal_self[2-&lt;lambda&gt;26]" time="7.129178047180176"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;0]" time="0.2753791809082031"><system-err>16:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:44 DiffusionOperatorP1: Determine global dofs ...
16:44 DiffusionOperatorP1: Boundary treatment ...
16:44 DiffusionOperatorP1: Assemble system matrix ...
16:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:44 DiffusionOperatorP1: Determine global dofs ...
16:44 DiffusionOperatorP1: Boundary treatment ...
16:44 DiffusionOperatorP1: Assemble system matrix ...
16:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:44 DiffusionOperatorP1: Determine global dofs ...
16:44 DiffusionOperatorP1: Boundary treatment ...
16:44 DiffusionOperatorP1: Assemble system matrix ...
16:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:44 DiffusionOperatorP1: Determine global dofs ...
16:44 DiffusionOperatorP1: Boundary treatment ...
16:44 DiffusionOperatorP1: Assemble system matrix ...
16:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:44 DiffusionOperatorP1: Determine global dofs ...
16:44 DiffusionOperatorP1: Boundary treatment ...
16:44 DiffusionOperatorP1: Assemble system matrix ...
16:44 L2ProductP1: Integrate the products of the shape functions on each element
16:44 L2ProductP1: Determine global dofs ...
16:44 L2ProductP1: Boundary treatment ...
16:44 L2ProductP1: Assemble system matrix ...
16:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:44 DiffusionOperatorP1: Determine global dofs ...
16:44 DiffusionOperatorP1: Boundary treatment ...
16:44 DiffusionOperatorP1: Assemble system matrix ...
16:44 L2ProductP1: Integrate the products of the shape functions on each element
16:44 L2ProductP1: Determine global dofs ...
16:44 L2ProductP1: Boundary treatment ...
16:44 L2ProductP1: Assemble system matrix ...
16:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:44 DiffusionOperatorP1: Determine global dofs ...
16:44 DiffusionOperatorP1: Boundary treatment ...
16:44 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;1]" time="0.28434038162231445"><system-err>16:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:44 DiffusionOperatorP1: Determine global dofs ...
16:44 DiffusionOperatorP1: Boundary treatment ...
16:44 DiffusionOperatorP1: Assemble system matrix ...
16:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:44 DiffusionOperatorP1: Determine global dofs ...
16:44 DiffusionOperatorP1: Boundary treatment ...
16:44 DiffusionOperatorP1: Assemble system matrix ...
16:44 L2ProductP1: Integrate the products of the shape functions on each element
16:44 L2ProductP1: Determine global dofs ...
16:44 L2ProductP1: Boundary treatment ...
16:44 L2ProductP1: Assemble system matrix ...
16:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:44 DiffusionOperatorP1: Determine global dofs ...
16:44 DiffusionOperatorP1: Boundary treatment ...
16:44 DiffusionOperatorP1: Assemble system matrix ...
16:44 L2ProductP1: Integrate the products of the shape functions on each element
16:44 L2ProductP1: Determine global dofs ...
16:44 L2ProductP1: Boundary treatment ...
16:44 L2ProductP1: Assemble system matrix ...
16:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:44 DiffusionOperatorP1: Determine global dofs ...
16:44 DiffusionOperatorP1: Boundary treatment ...
16:44 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;2]" time="0.28023576736450195"><system-err>16:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:44 DiffusionOperatorP1: Determine global dofs ...
16:44 DiffusionOperatorP1: Boundary treatment ...
16:44 DiffusionOperatorP1: Assemble system matrix ...
16:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:44 DiffusionOperatorP1: Determine global dofs ...
16:44 DiffusionOperatorP1: Boundary treatment ...
16:44 DiffusionOperatorP1: Assemble system matrix ...
16:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:44 DiffusionOperatorP1: Determine global dofs ...
16:44 DiffusionOperatorP1: Boundary treatment ...
16:44 DiffusionOperatorP1: Assemble system matrix ...
16:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:44 DiffusionOperatorP1: Determine global dofs ...
16:44 DiffusionOperatorP1: Boundary treatment ...
16:44 DiffusionOperatorP1: Assemble system matrix ...
16:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:44 DiffusionOperatorP1: Determine global dofs ...
16:44 DiffusionOperatorP1: Boundary treatment ...
16:44 DiffusionOperatorP1: Assemble system matrix ...
16:44 L2ProductP1: Integrate the products of the shape functions on each element
16:44 L2ProductP1: Determine global dofs ...
16:44 L2ProductP1: Boundary treatment ...
16:44 L2ProductP1: Assemble system matrix ...
16:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:44 DiffusionOperatorP1: Determine global dofs ...
16:44 DiffusionOperatorP1: Boundary treatment ...
16:44 DiffusionOperatorP1: Assemble system matrix ...
16:44 L2ProductP1: Integrate the products of the shape functions on each element
16:44 L2ProductP1: Determine global dofs ...
16:44 L2ProductP1: Boundary treatment ...
16:44 L2ProductP1: Assemble system matrix ...
16:44 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:44 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:44 DiffusionOperatorP1: Determine global dofs ...
16:44 DiffusionOperatorP1: Boundary treatment ...
16:44 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;3]" time="0.2813138961791992"><system-err>16:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:45 DiffusionOperatorP1: Determine global dofs ...
16:45 DiffusionOperatorP1: Boundary treatment ...
16:45 DiffusionOperatorP1: Assemble system matrix ...
16:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:45 DiffusionOperatorP1: Determine global dofs ...
16:45 DiffusionOperatorP1: Boundary treatment ...
16:45 DiffusionOperatorP1: Assemble system matrix ...
16:45 L2ProductP1: Integrate the products of the shape functions on each element
16:45 L2ProductP1: Determine global dofs ...
16:45 L2ProductP1: Boundary treatment ...
16:45 L2ProductP1: Assemble system matrix ...
16:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:45 DiffusionOperatorP1: Determine global dofs ...
16:45 DiffusionOperatorP1: Boundary treatment ...
16:45 DiffusionOperatorP1: Assemble system matrix ...
16:45 L2ProductP1: Integrate the products of the shape functions on each element
16:45 L2ProductP1: Determine global dofs ...
16:45 L2ProductP1: Boundary treatment ...
16:45 L2ProductP1: Assemble system matrix ...
16:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:45 DiffusionOperatorP1: Determine global dofs ...
16:45 DiffusionOperatorP1: Boundary treatment ...
16:45 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;4]" time="0.2822394371032715"><system-err>16:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:45 DiffusionOperatorP1: Determine global dofs ...
16:45 DiffusionOperatorP1: Boundary treatment ...
16:45 DiffusionOperatorP1: Assemble system matrix ...
16:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:45 DiffusionOperatorP1: Determine global dofs ...
16:45 DiffusionOperatorP1: Boundary treatment ...
16:45 DiffusionOperatorP1: Assemble system matrix ...
16:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:45 DiffusionOperatorP1: Determine global dofs ...
16:45 DiffusionOperatorP1: Boundary treatment ...
16:45 DiffusionOperatorP1: Assemble system matrix ...
16:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:45 DiffusionOperatorP1: Determine global dofs ...
16:45 DiffusionOperatorP1: Boundary treatment ...
16:45 DiffusionOperatorP1: Assemble system matrix ...
16:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:45 DiffusionOperatorP1: Determine global dofs ...
16:45 DiffusionOperatorP1: Boundary treatment ...
16:45 DiffusionOperatorP1: Assemble system matrix ...
16:45 L2ProductP1: Integrate the products of the shape functions on each element
16:45 L2ProductP1: Determine global dofs ...
16:45 L2ProductP1: Boundary treatment ...
16:45 L2ProductP1: Assemble system matrix ...
16:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:45 DiffusionOperatorP1: Determine global dofs ...
16:45 DiffusionOperatorP1: Boundary treatment ...
16:45 DiffusionOperatorP1: Assemble system matrix ...
16:45 L2ProductP1: Integrate the products of the shape functions on each element
16:45 L2ProductP1: Determine global dofs ...
16:45 L2ProductP1: Boundary treatment ...
16:45 L2ProductP1: Assemble system matrix ...
16:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:45 DiffusionOperatorP1: Determine global dofs ...
16:45 DiffusionOperatorP1: Boundary treatment ...
16:45 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;5]" time="0.2815728187561035"><system-err>16:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:45 DiffusionOperatorP1: Determine global dofs ...
16:45 DiffusionOperatorP1: Boundary treatment ...
16:45 DiffusionOperatorP1: Assemble system matrix ...
16:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:45 DiffusionOperatorP1: Determine global dofs ...
16:45 DiffusionOperatorP1: Boundary treatment ...
16:45 DiffusionOperatorP1: Assemble system matrix ...
16:45 L2ProductP1: Integrate the products of the shape functions on each element
16:45 L2ProductP1: Determine global dofs ...
16:45 L2ProductP1: Boundary treatment ...
16:45 L2ProductP1: Assemble system matrix ...
16:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:45 DiffusionOperatorP1: Determine global dofs ...
16:45 DiffusionOperatorP1: Boundary treatment ...
16:45 DiffusionOperatorP1: Assemble system matrix ...
16:45 L2ProductP1: Integrate the products of the shape functions on each element
16:45 L2ProductP1: Determine global dofs ...
16:45 L2ProductP1: Boundary treatment ...
16:45 L2ProductP1: Assemble system matrix ...
16:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:45 DiffusionOperatorP1: Determine global dofs ...
16:45 DiffusionOperatorP1: Boundary treatment ...
16:45 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;6]" time="0.2816431522369385"><system-err>16:45 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:45 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:45 DiffusionOperatorP1: Determine global dofs ...
16:45 DiffusionOperatorP1: Boundary treatment ...
16:45 DiffusionOperatorP1: Assemble system matrix ...
16:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:46 DiffusionOperatorP1: Determine global dofs ...
16:46 DiffusionOperatorP1: Boundary treatment ...
16:46 DiffusionOperatorP1: Assemble system matrix ...
16:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:46 DiffusionOperatorP1: Determine global dofs ...
16:46 DiffusionOperatorP1: Boundary treatment ...
16:46 DiffusionOperatorP1: Assemble system matrix ...
16:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:46 DiffusionOperatorP1: Determine global dofs ...
16:46 DiffusionOperatorP1: Boundary treatment ...
16:46 DiffusionOperatorP1: Assemble system matrix ...
16:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:46 DiffusionOperatorP1: Determine global dofs ...
16:46 DiffusionOperatorP1: Boundary treatment ...
16:46 DiffusionOperatorP1: Assemble system matrix ...
16:46 L2ProductP1: Integrate the products of the shape functions on each element
16:46 L2ProductP1: Determine global dofs ...
16:46 L2ProductP1: Boundary treatment ...
16:46 L2ProductP1: Assemble system matrix ...
16:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:46 DiffusionOperatorP1: Determine global dofs ...
16:46 DiffusionOperatorP1: Boundary treatment ...
16:46 DiffusionOperatorP1: Assemble system matrix ...
16:46 L2ProductP1: Integrate the products of the shape functions on each element
16:46 L2ProductP1: Determine global dofs ...
16:46 L2ProductP1: Boundary treatment ...
16:46 L2ProductP1: Assemble system matrix ...
16:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:46 DiffusionOperatorP1: Determine global dofs ...
16:46 DiffusionOperatorP1: Boundary treatment ...
16:46 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;7]" time="0.2849438190460205"><system-err>16:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:46 DiffusionOperatorP1: Determine global dofs ...
16:46 DiffusionOperatorP1: Boundary treatment ...
16:46 DiffusionOperatorP1: Assemble system matrix ...
16:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:46 DiffusionOperatorP1: Determine global dofs ...
16:46 DiffusionOperatorP1: Boundary treatment ...
16:46 DiffusionOperatorP1: Assemble system matrix ...
16:46 L2ProductP1: Integrate the products of the shape functions on each element
16:46 L2ProductP1: Determine global dofs ...
16:46 L2ProductP1: Boundary treatment ...
16:46 L2ProductP1: Assemble system matrix ...
16:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:46 DiffusionOperatorP1: Determine global dofs ...
16:46 DiffusionOperatorP1: Boundary treatment ...
16:46 DiffusionOperatorP1: Assemble system matrix ...
16:46 L2ProductP1: Integrate the products of the shape functions on each element
16:46 L2ProductP1: Determine global dofs ...
16:46 L2ProductP1: Boundary treatment ...
16:46 L2ProductP1: Assemble system matrix ...
16:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:46 DiffusionOperatorP1: Determine global dofs ...
16:46 DiffusionOperatorP1: Boundary treatment ...
16:46 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;8]" time="0.2828552722930908"><system-err>16:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:46 DiffusionOperatorP1: Determine global dofs ...
16:46 DiffusionOperatorP1: Boundary treatment ...
16:46 DiffusionOperatorP1: Assemble system matrix ...
16:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:46 DiffusionOperatorP1: Determine global dofs ...
16:46 DiffusionOperatorP1: Boundary treatment ...
16:46 DiffusionOperatorP1: Assemble system matrix ...
16:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:46 DiffusionOperatorP1: Determine global dofs ...
16:46 DiffusionOperatorP1: Boundary treatment ...
16:46 DiffusionOperatorP1: Assemble system matrix ...
16:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:46 DiffusionOperatorP1: Determine global dofs ...
16:46 DiffusionOperatorP1: Boundary treatment ...
16:46 DiffusionOperatorP1: Assemble system matrix ...
16:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:46 DiffusionOperatorP1: Determine global dofs ...
16:46 DiffusionOperatorP1: Boundary treatment ...
16:46 DiffusionOperatorP1: Assemble system matrix ...
16:46 L2ProductP1: Integrate the products of the shape functions on each element
16:46 L2ProductP1: Determine global dofs ...
16:46 L2ProductP1: Boundary treatment ...
16:46 L2ProductP1: Assemble system matrix ...
16:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:46 DiffusionOperatorP1: Determine global dofs ...
16:46 DiffusionOperatorP1: Boundary treatment ...
16:46 DiffusionOperatorP1: Assemble system matrix ...
16:46 L2ProductP1: Integrate the products of the shape functions on each element
16:46 L2ProductP1: Determine global dofs ...
16:46 L2ProductP1: Boundary treatment ...
16:46 L2ProductP1: Assemble system matrix ...
16:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:46 DiffusionOperatorP1: Determine global dofs ...
16:46 DiffusionOperatorP1: Boundary treatment ...
16:46 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;9]" time="0.2791018486022949"><system-err>16:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:46 DiffusionOperatorP1: Determine global dofs ...
16:46 DiffusionOperatorP1: Boundary treatment ...
16:46 DiffusionOperatorP1: Assemble system matrix ...
16:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:46 DiffusionOperatorP1: Determine global dofs ...
16:46 DiffusionOperatorP1: Boundary treatment ...
16:46 DiffusionOperatorP1: Assemble system matrix ...
16:46 L2ProductP1: Integrate the products of the shape functions on each element
16:46 L2ProductP1: Determine global dofs ...
16:46 L2ProductP1: Boundary treatment ...
16:46 L2ProductP1: Assemble system matrix ...
16:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:46 DiffusionOperatorP1: Determine global dofs ...
16:46 DiffusionOperatorP1: Boundary treatment ...
16:46 DiffusionOperatorP1: Assemble system matrix ...
16:46 L2ProductP1: Integrate the products of the shape functions on each element
16:46 L2ProductP1: Determine global dofs ...
16:46 L2ProductP1: Boundary treatment ...
16:46 L2ProductP1: Assemble system matrix ...
16:46 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:46 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:46 DiffusionOperatorP1: Determine global dofs ...
16:46 DiffusionOperatorP1: Boundary treatment ...
16:46 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;10]" time="0.28138208389282227"><system-err>16:47 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:47 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:47 DiffusionOperatorP1: Determine global dofs ...
16:47 DiffusionOperatorP1: Boundary treatment ...
16:47 DiffusionOperatorP1: Assemble system matrix ...
16:47 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:47 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:47 DiffusionOperatorP1: Determine global dofs ...
16:47 DiffusionOperatorP1: Boundary treatment ...
16:47 DiffusionOperatorP1: Assemble system matrix ...
16:47 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:47 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:47 DiffusionOperatorP1: Determine global dofs ...
16:47 DiffusionOperatorP1: Boundary treatment ...
16:47 DiffusionOperatorP1: Assemble system matrix ...
16:47 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:47 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:47 DiffusionOperatorP1: Determine global dofs ...
16:47 DiffusionOperatorP1: Boundary treatment ...
16:47 DiffusionOperatorP1: Assemble system matrix ...
16:47 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:47 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:47 DiffusionOperatorP1: Determine global dofs ...
16:47 DiffusionOperatorP1: Boundary treatment ...
16:47 DiffusionOperatorP1: Assemble system matrix ...
16:47 L2ProductP1: Integrate the products of the shape functions on each element
16:47 L2ProductP1: Determine global dofs ...
16:47 L2ProductP1: Boundary treatment ...
16:47 L2ProductP1: Assemble system matrix ...
16:47 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:47 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:47 DiffusionOperatorP1: Determine global dofs ...
16:47 DiffusionOperatorP1: Boundary treatment ...
16:47 DiffusionOperatorP1: Assemble system matrix ...
16:47 L2ProductP1: Integrate the products of the shape functions on each element
16:47 L2ProductP1: Determine global dofs ...
16:47 L2ProductP1: Boundary treatment ...
16:47 L2ProductP1: Assemble system matrix ...
16:47 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:47 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:47 DiffusionOperatorP1: Determine global dofs ...
16:47 DiffusionOperatorP1: Boundary treatment ...
16:47 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;11]" time="0.28376269340515137"><system-err>16:47 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:47 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:47 DiffusionOperatorP1: Determine global dofs ...
16:47 DiffusionOperatorP1: Boundary treatment ...
16:47 DiffusionOperatorP1: Assemble system matrix ...
16:47 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:47 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:47 DiffusionOperatorP1: Determine global dofs ...
16:47 DiffusionOperatorP1: Boundary treatment ...
16:47 DiffusionOperatorP1: Assemble system matrix ...
16:47 L2ProductP1: Integrate the products of the shape functions on each element
16:47 L2ProductP1: Determine global dofs ...
16:47 L2ProductP1: Boundary treatment ...
16:47 L2ProductP1: Assemble system matrix ...
16:47 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:47 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:47 DiffusionOperatorP1: Determine global dofs ...
16:47 DiffusionOperatorP1: Boundary treatment ...
16:47 DiffusionOperatorP1: Assemble system matrix ...
16:47 L2ProductP1: Integrate the products of the shape functions on each element
16:47 L2ProductP1: Determine global dofs ...
16:47 L2ProductP1: Boundary treatment ...
16:47 L2ProductP1: Assemble system matrix ...
16:47 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:47 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:47 DiffusionOperatorP1: Determine global dofs ...
16:47 DiffusionOperatorP1: Boundary treatment ...
16:47 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;12]" time="0.2582104206085205"><system-err>16:47 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:47 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:47 DiffusionOperatorP1: Determine global dofs ...
16:47 DiffusionOperatorP1: Boundary treatment ...
16:47 DiffusionOperatorP1: Assemble system matrix ...
16:47 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:47 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:47 DiffusionOperatorP1: Determine global dofs ...
16:47 DiffusionOperatorP1: Boundary treatment ...
16:47 DiffusionOperatorP1: Assemble system matrix ...
16:47 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:47 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:47 DiffusionOperatorP1: Determine global dofs ...
16:47 DiffusionOperatorP1: Boundary treatment ...
16:47 DiffusionOperatorP1: Assemble system matrix ...
16:47 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:47 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:47 DiffusionOperatorP1: Determine global dofs ...
16:47 DiffusionOperatorP1: Boundary treatment ...
16:47 DiffusionOperatorP1: Assemble system matrix ...
16:47 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:47 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:47 DiffusionOperatorP1: Determine global dofs ...
16:47 DiffusionOperatorP1: Boundary treatment ...
16:47 DiffusionOperatorP1: Assemble system matrix ...
16:47 L2ProductP1: Integrate the products of the shape functions on each element
16:47 L2ProductP1: Determine global dofs ...
16:47 L2ProductP1: Boundary treatment ...
16:47 L2ProductP1: Assemble system matrix ...
16:47 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:47 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:47 DiffusionOperatorP1: Determine global dofs ...
16:47 DiffusionOperatorP1: Boundary treatment ...
16:47 DiffusionOperatorP1: Assemble system matrix ...
16:47 L2ProductP1: Integrate the products of the shape functions on each element
16:47 L2ProductP1: Determine global dofs ...
16:47 L2ProductP1: Boundary treatment ...
16:47 L2ProductP1: Assemble system matrix ...
16:47 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:47 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:47 DiffusionOperatorP1: Determine global dofs ...
16:47 DiffusionOperatorP1: Boundary treatment ...
16:47 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;13]" time="0.255263090133667"><system-err>16:47 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:47 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:47 DiffusionOperatorP1: Determine global dofs ...
16:47 DiffusionOperatorP1: Boundary treatment ...
16:47 DiffusionOperatorP1: Assemble system matrix ...
16:47 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:47 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:47 DiffusionOperatorP1: Determine global dofs ...
16:47 DiffusionOperatorP1: Boundary treatment ...
16:47 DiffusionOperatorP1: Assemble system matrix ...
16:47 L2ProductP1: Integrate the products of the shape functions on each element
16:47 L2ProductP1: Determine global dofs ...
16:47 L2ProductP1: Boundary treatment ...
16:47 L2ProductP1: Assemble system matrix ...
16:47 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:47 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:47 DiffusionOperatorP1: Determine global dofs ...
16:47 DiffusionOperatorP1: Boundary treatment ...
16:47 DiffusionOperatorP1: Assemble system matrix ...
16:47 L2ProductP1: Integrate the products of the shape functions on each element
16:47 L2ProductP1: Determine global dofs ...
16:47 L2ProductP1: Boundary treatment ...
16:47 L2ProductP1: Assemble system matrix ...
16:47 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:47 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:47 DiffusionOperatorP1: Determine global dofs ...
16:47 DiffusionOperatorP1: Boundary treatment ...
16:47 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;14]" time="0.2792699337005615"><system-err>16:48 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:48 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:48 DiffusionOperatorP1: Determine global dofs ...
16:48 DiffusionOperatorP1: Boundary treatment ...
16:48 DiffusionOperatorP1: Assemble system matrix ...
16:48 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:48 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:48 DiffusionOperatorP1: Determine global dofs ...
16:48 DiffusionOperatorP1: Boundary treatment ...
16:48 DiffusionOperatorP1: Assemble system matrix ...
16:48 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:48 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:48 DiffusionOperatorP1: Determine global dofs ...
16:48 DiffusionOperatorP1: Boundary treatment ...
16:48 DiffusionOperatorP1: Assemble system matrix ...
16:48 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:48 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:48 DiffusionOperatorP1: Determine global dofs ...
16:48 DiffusionOperatorP1: Boundary treatment ...
16:48 DiffusionOperatorP1: Assemble system matrix ...
16:48 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:48 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:48 DiffusionOperatorP1: Determine global dofs ...
16:48 DiffusionOperatorP1: Boundary treatment ...
16:48 DiffusionOperatorP1: Assemble system matrix ...
16:48 L2ProductP1: Integrate the products of the shape functions on each element
16:48 L2ProductP1: Determine global dofs ...
16:48 L2ProductP1: Boundary treatment ...
16:48 L2ProductP1: Assemble system matrix ...
16:48 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:48 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:48 DiffusionOperatorP1: Determine global dofs ...
16:48 DiffusionOperatorP1: Boundary treatment ...
16:48 DiffusionOperatorP1: Assemble system matrix ...
16:48 L2ProductP1: Integrate the products of the shape functions on each element
16:48 L2ProductP1: Determine global dofs ...
16:48 L2ProductP1: Boundary treatment ...
16:48 L2ProductP1: Assemble system matrix ...
16:48 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:48 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:48 DiffusionOperatorP1: Determine global dofs ...
16:48 DiffusionOperatorP1: Boundary treatment ...
16:48 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;15]" time="0.2841932773590088"><system-err>16:48 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:48 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:48 DiffusionOperatorP1: Determine global dofs ...
16:48 DiffusionOperatorP1: Boundary treatment ...
16:48 DiffusionOperatorP1: Assemble system matrix ...
16:48 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:48 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:48 DiffusionOperatorP1: Determine global dofs ...
16:48 DiffusionOperatorP1: Boundary treatment ...
16:48 DiffusionOperatorP1: Assemble system matrix ...
16:48 L2ProductP1: Integrate the products of the shape functions on each element
16:48 L2ProductP1: Determine global dofs ...
16:48 L2ProductP1: Boundary treatment ...
16:48 L2ProductP1: Assemble system matrix ...
16:48 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:48 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:48 DiffusionOperatorP1: Determine global dofs ...
16:48 DiffusionOperatorP1: Boundary treatment ...
16:48 DiffusionOperatorP1: Assemble system matrix ...
16:48 L2ProductP1: Integrate the products of the shape functions on each element
16:48 L2ProductP1: Determine global dofs ...
16:48 L2ProductP1: Boundary treatment ...
16:48 L2ProductP1: Assemble system matrix ...
16:48 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:48 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:48 DiffusionOperatorP1: Determine global dofs ...
16:48 DiffusionOperatorP1: Boundary treatment ...
16:48 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;16]" time="0.2432248592376709"><system-err>16:48 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:48 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:48 DiffusionOperatorP1: Determine global dofs ...
16:48 DiffusionOperatorP1: Boundary treatment ...
16:48 DiffusionOperatorP1: Assemble system matrix ...
16:48 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:48 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:48 DiffusionOperatorP1: Determine global dofs ...
16:48 DiffusionOperatorP1: Boundary treatment ...
16:48 DiffusionOperatorP1: Assemble system matrix ...
16:48 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:48 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:48 DiffusionOperatorP1: Determine global dofs ...
16:48 DiffusionOperatorP1: Boundary treatment ...
16:48 DiffusionOperatorP1: Assemble system matrix ...
16:48 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:48 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:48 DiffusionOperatorP1: Determine global dofs ...
16:48 DiffusionOperatorP1: Boundary treatment ...
16:48 DiffusionOperatorP1: Assemble system matrix ...
16:48 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:48 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:48 DiffusionOperatorP1: Determine global dofs ...
16:48 DiffusionOperatorP1: Boundary treatment ...
16:48 DiffusionOperatorP1: Assemble system matrix ...
16:48 L2ProductP1: Integrate the products of the shape functions on each element
16:48 L2ProductP1: Determine global dofs ...
16:48 L2ProductP1: Boundary treatment ...
16:48 L2ProductP1: Assemble system matrix ...
16:48 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:48 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:48 DiffusionOperatorP1: Determine global dofs ...
16:48 DiffusionOperatorP1: Boundary treatment ...
16:48 DiffusionOperatorP1: Assemble system matrix ...
16:48 L2ProductP1: Integrate the products of the shape functions on each element
16:48 L2ProductP1: Determine global dofs ...
16:48 L2ProductP1: Boundary treatment ...
16:48 L2ProductP1: Assemble system matrix ...
16:48 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:48 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:48 DiffusionOperatorP1: Determine global dofs ...
16:48 DiffusionOperatorP1: Boundary treatment ...
16:48 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;17]" time="0.2350609302520752"><system-err>16:49 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:49 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:49 DiffusionOperatorP1: Determine global dofs ...
16:49 DiffusionOperatorP1: Boundary treatment ...
16:49 DiffusionOperatorP1: Assemble system matrix ...
16:49 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:49 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:49 DiffusionOperatorP1: Determine global dofs ...
16:49 DiffusionOperatorP1: Boundary treatment ...
16:49 DiffusionOperatorP1: Assemble system matrix ...
16:49 L2ProductP1: Integrate the products of the shape functions on each element
16:49 L2ProductP1: Determine global dofs ...
16:49 L2ProductP1: Boundary treatment ...
16:49 L2ProductP1: Assemble system matrix ...
16:49 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:49 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:49 DiffusionOperatorP1: Determine global dofs ...
16:49 DiffusionOperatorP1: Boundary treatment ...
16:49 DiffusionOperatorP1: Assemble system matrix ...
16:49 L2ProductP1: Integrate the products of the shape functions on each element
16:49 L2ProductP1: Determine global dofs ...
16:49 L2ProductP1: Boundary treatment ...
16:49 L2ProductP1: Assemble system matrix ...
16:49 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:49 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:49 DiffusionOperatorP1: Determine global dofs ...
16:49 DiffusionOperatorP1: Boundary treatment ...
16:49 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;18]" time="0.2775132656097412"><system-err>16:49 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:49 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:49 DiffusionOperatorP1: Determine global dofs ...
16:49 DiffusionOperatorP1: Boundary treatment ...
16:49 DiffusionOperatorP1: Assemble system matrix ...
16:49 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:49 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:49 DiffusionOperatorP1: Determine global dofs ...
16:49 DiffusionOperatorP1: Boundary treatment ...
16:49 DiffusionOperatorP1: Assemble system matrix ...
16:49 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:49 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:49 DiffusionOperatorP1: Determine global dofs ...
16:49 DiffusionOperatorP1: Boundary treatment ...
16:49 DiffusionOperatorP1: Assemble system matrix ...
16:49 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:49 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:49 DiffusionOperatorP1: Determine global dofs ...
16:49 DiffusionOperatorP1: Boundary treatment ...
16:49 DiffusionOperatorP1: Assemble system matrix ...
16:49 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:49 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:49 DiffusionOperatorP1: Determine global dofs ...
16:49 DiffusionOperatorP1: Boundary treatment ...
16:49 DiffusionOperatorP1: Assemble system matrix ...
16:49 L2ProductP1: Integrate the products of the shape functions on each element
16:49 L2ProductP1: Determine global dofs ...
16:49 L2ProductP1: Boundary treatment ...
16:49 L2ProductP1: Assemble system matrix ...
16:49 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:49 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:49 DiffusionOperatorP1: Determine global dofs ...
16:49 DiffusionOperatorP1: Boundary treatment ...
16:49 DiffusionOperatorP1: Assemble system matrix ...
16:49 L2ProductP1: Integrate the products of the shape functions on each element
16:49 L2ProductP1: Determine global dofs ...
16:49 L2ProductP1: Boundary treatment ...
16:49 L2ProductP1: Assemble system matrix ...
16:49 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:49 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:49 DiffusionOperatorP1: Determine global dofs ...
16:49 DiffusionOperatorP1: Boundary treatment ...
16:49 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;19]" time="0.28051090240478516"><system-err>16:49 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:49 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:49 DiffusionOperatorP1: Determine global dofs ...
16:49 DiffusionOperatorP1: Boundary treatment ...
16:49 DiffusionOperatorP1: Assemble system matrix ...
16:49 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:49 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:49 DiffusionOperatorP1: Determine global dofs ...
16:49 DiffusionOperatorP1: Boundary treatment ...
16:49 DiffusionOperatorP1: Assemble system matrix ...
16:49 L2ProductP1: Integrate the products of the shape functions on each element
16:49 L2ProductP1: Determine global dofs ...
16:49 L2ProductP1: Boundary treatment ...
16:49 L2ProductP1: Assemble system matrix ...
16:49 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:49 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:49 DiffusionOperatorP1: Determine global dofs ...
16:49 DiffusionOperatorP1: Boundary treatment ...
16:49 DiffusionOperatorP1: Assemble system matrix ...
16:49 L2ProductP1: Integrate the products of the shape functions on each element
16:49 L2ProductP1: Determine global dofs ...
16:49 L2ProductP1: Boundary treatment ...
16:49 L2ProductP1: Assemble system matrix ...
16:49 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:49 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:49 DiffusionOperatorP1: Determine global dofs ...
16:49 DiffusionOperatorP1: Boundary treatment ...
16:49 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;20]" time="0.2800886631011963"><system-err>16:49 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:49 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:49 DiffusionOperatorP1: Determine global dofs ...
16:49 DiffusionOperatorP1: Boundary treatment ...
16:49 DiffusionOperatorP1: Assemble system matrix ...
16:49 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:49 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:49 DiffusionOperatorP1: Determine global dofs ...
16:49 DiffusionOperatorP1: Boundary treatment ...
16:49 DiffusionOperatorP1: Assemble system matrix ...
16:49 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:49 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:49 DiffusionOperatorP1: Determine global dofs ...
16:49 DiffusionOperatorP1: Boundary treatment ...
16:49 DiffusionOperatorP1: Assemble system matrix ...
16:49 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:49 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:49 DiffusionOperatorP1: Determine global dofs ...
16:49 DiffusionOperatorP1: Boundary treatment ...
16:49 DiffusionOperatorP1: Assemble system matrix ...
16:49 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:49 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:49 DiffusionOperatorP1: Determine global dofs ...
16:49 DiffusionOperatorP1: Boundary treatment ...
16:49 DiffusionOperatorP1: Assemble system matrix ...
16:49 L2ProductP1: Integrate the products of the shape functions on each element
16:49 L2ProductP1: Determine global dofs ...
16:49 L2ProductP1: Boundary treatment ...
16:49 L2ProductP1: Assemble system matrix ...
16:49 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:49 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:49 DiffusionOperatorP1: Determine global dofs ...
16:49 DiffusionOperatorP1: Boundary treatment ...
16:49 DiffusionOperatorP1: Assemble system matrix ...
16:49 L2ProductP1: Integrate the products of the shape functions on each element
16:49 L2ProductP1: Determine global dofs ...
16:49 L2ProductP1: Boundary treatment ...
16:49 L2ProductP1: Assemble system matrix ...
16:49 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:49 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:49 DiffusionOperatorP1: Determine global dofs ...
16:49 DiffusionOperatorP1: Boundary treatment ...
16:49 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;21]" time="0.28212523460388184"><system-err>16:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:50 DiffusionOperatorP1: Determine global dofs ...
16:50 DiffusionOperatorP1: Boundary treatment ...
16:50 DiffusionOperatorP1: Assemble system matrix ...
16:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:50 DiffusionOperatorP1: Determine global dofs ...
16:50 DiffusionOperatorP1: Boundary treatment ...
16:50 DiffusionOperatorP1: Assemble system matrix ...
16:50 L2ProductP1: Integrate the products of the shape functions on each element
16:50 L2ProductP1: Determine global dofs ...
16:50 L2ProductP1: Boundary treatment ...
16:50 L2ProductP1: Assemble system matrix ...
16:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:50 DiffusionOperatorP1: Determine global dofs ...
16:50 DiffusionOperatorP1: Boundary treatment ...
16:50 DiffusionOperatorP1: Assemble system matrix ...
16:50 L2ProductP1: Integrate the products of the shape functions on each element
16:50 L2ProductP1: Determine global dofs ...
16:50 L2ProductP1: Boundary treatment ...
16:50 L2ProductP1: Assemble system matrix ...
16:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:50 DiffusionOperatorP1: Determine global dofs ...
16:50 DiffusionOperatorP1: Boundary treatment ...
16:50 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;22]" time="0.2777721881866455"><system-err>16:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:50 DiffusionOperatorP1: Determine global dofs ...
16:50 DiffusionOperatorP1: Boundary treatment ...
16:50 DiffusionOperatorP1: Assemble system matrix ...
16:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:50 DiffusionOperatorP1: Determine global dofs ...
16:50 DiffusionOperatorP1: Boundary treatment ...
16:50 DiffusionOperatorP1: Assemble system matrix ...
16:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:50 DiffusionOperatorP1: Determine global dofs ...
16:50 DiffusionOperatorP1: Boundary treatment ...
16:50 DiffusionOperatorP1: Assemble system matrix ...
16:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:50 DiffusionOperatorP1: Determine global dofs ...
16:50 DiffusionOperatorP1: Boundary treatment ...
16:50 DiffusionOperatorP1: Assemble system matrix ...
16:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:50 DiffusionOperatorP1: Determine global dofs ...
16:50 DiffusionOperatorP1: Boundary treatment ...
16:50 DiffusionOperatorP1: Assemble system matrix ...
16:50 L2ProductP1: Integrate the products of the shape functions on each element
16:50 L2ProductP1: Determine global dofs ...
16:50 L2ProductP1: Boundary treatment ...
16:50 L2ProductP1: Assemble system matrix ...
16:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:50 DiffusionOperatorP1: Determine global dofs ...
16:50 DiffusionOperatorP1: Boundary treatment ...
16:50 DiffusionOperatorP1: Assemble system matrix ...
16:50 L2ProductP1: Integrate the products of the shape functions on each element
16:50 L2ProductP1: Determine global dofs ...
16:50 L2ProductP1: Boundary treatment ...
16:50 L2ProductP1: Assemble system matrix ...
16:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:50 DiffusionOperatorP1: Determine global dofs ...
16:50 DiffusionOperatorP1: Boundary treatment ...
16:50 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;23]" time="0.2815251350402832"><system-err>16:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:50 DiffusionOperatorP1: Determine global dofs ...
16:50 DiffusionOperatorP1: Boundary treatment ...
16:50 DiffusionOperatorP1: Assemble system matrix ...
16:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:50 DiffusionOperatorP1: Determine global dofs ...
16:50 DiffusionOperatorP1: Boundary treatment ...
16:50 DiffusionOperatorP1: Assemble system matrix ...
16:50 L2ProductP1: Integrate the products of the shape functions on each element
16:50 L2ProductP1: Determine global dofs ...
16:50 L2ProductP1: Boundary treatment ...
16:50 L2ProductP1: Assemble system matrix ...
16:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:50 DiffusionOperatorP1: Determine global dofs ...
16:50 DiffusionOperatorP1: Boundary treatment ...
16:50 DiffusionOperatorP1: Assemble system matrix ...
16:50 L2ProductP1: Integrate the products of the shape functions on each element
16:50 L2ProductP1: Determine global dofs ...
16:50 L2ProductP1: Boundary treatment ...
16:50 L2ProductP1: Assemble system matrix ...
16:50 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
16:50 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
16:50 DiffusionOperatorP1: Determine global dofs ...
16:50 DiffusionOperatorP1: Boundary treatment ...
16:50 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;24]" time="0.28212666511535645"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;25]" time="0.27884912490844727"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;26]" time="0.28375887870788574"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;27]" time="0.22366023063659668"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;28]" time="0.22296690940856934"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;29]" time="0.2331550121307373"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;30]" time="0.23429322242736816"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;31]" time="0.23470544815063477"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;32]" time="0.8217518329620361"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;33]" time="0.613701581954956"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;34]" time="0.24753046035766602"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;35]" time="0.6195294857025146"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="104" name="test_almost_equal_self_product[&lt;lambda&gt;36]" time="0.2834756374359131"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;0]" time="0.004428386688232422"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;1]" time="0.0015704631805419922"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;2]" time="0.006255626678466797"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;3]" time="0.00506281852722168"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;4]" time="0.005166292190551758"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;5]" time="0.002676248550415039"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;6]" time="0.0014147758483886719"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;7]" time="0.005919933319091797"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;8]" time="0.01143503189086914"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;9]" time="0.01918649673461914"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;10]" time="0.006940364837646484"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;11]" time="0.0021440982818603516"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;12]" time="0.015009641647338867"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;13]" time="0.011031150817871094"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;14]" time="0.01305532455444336"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;15]" time="0.006584644317626953"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;16]" time="0.002559661865234375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;17]" time="0.010600090026855469"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;18]" time="0.04380655288696289"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;19]" time="0.04387331008911133"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;20]" time="0.0035326480865478516"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;21]" time="0.002405405044555664"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;22]" time="0.01478266716003418"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;23]" time="0.12019205093383789"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="157" name="test_almost_equal_incompatible[&lt;lambda&gt;24]" time="0.221907377243042"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;0]" time="0.0045318603515625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;1]" time="0.003475666046142578"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;2]" time="0.005372762680053711"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;3]" time="0.007516622543334961"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;4]" time="0.007656097412109375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;5]" time="0.0057220458984375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;6]" time="0.003496408462524414"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;7]" time="0.0034821033477783203"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;8]" time="0.01676034927368164"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;9]" time="0.03494763374328613"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;10]" time="0.11346769332885742"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;11]" time="0.008063077926635742"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;12]" time="0.005371809005737305"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;13]" time="0.009317874908447266"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;14]" time="0.007810354232788086"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;15]" time="0.008871316909790039"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;16]" time="0.013375997543334961"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;17]" time="0.013522863388061523"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;18]" time="0.0041615962982177734"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;19]" time="0.004408597946166992"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;20]" time="0.040566444396972656"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;21]" time="0.04378962516784668"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;22]" time="0.14749908447265625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;23]" time="0.009401559829711914"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;24]" time="0.00460362434387207"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;25]" time="0.004492282867431641"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;26]" time="0.03695821762084961"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;27]" time="0.06272172927856445"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;28]" time="0.21416926383972168"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair0-&lt;lambda&gt;29]" time="0.01056218147277832"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;0]" time="0.003650665283203125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;1]" time="0.0033872127532958984"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;2]" time="0.005502939224243164"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;3]" time="0.007683753967285156"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;4]" time="0.007875680923461914"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;5]" time="0.005896329879760742"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;6]" time="0.0034742355346679688"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;7]" time="0.0035398006439208984"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;8]" time="0.01698017120361328"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;9]" time="0.03495669364929199"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;10]" time="0.11222219467163086"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;11]" time="0.008178234100341797"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;12]" time="0.005357265472412109"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;13]" time="0.009482145309448242"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;14]" time="0.008001327514648438"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;15]" time="0.008922338485717773"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;16]" time="0.013518095016479492"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;17]" time="0.013738393783569336"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;18]" time="0.005193471908569336"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;19]" time="0.00432133674621582"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;20]" time="0.04044055938720703"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;21]" time="0.043831586837768555"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;22]" time="0.145888090133667"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;23]" time="0.009040355682373047"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;24]" time="0.003443479537963867"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;25]" time="0.0045316219329833984"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;26]" time="0.03668999671936035"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;27]" time="0.06169271469116211"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;28]" time="0.21424627304077148"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair1-&lt;lambda&gt;29]" time="0.010940790176391602"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;0]" time="0.003816366195678711"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;1]" time="0.003587484359741211"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;2]" time="0.00553131103515625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;3]" time="0.007900714874267578"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;4]" time="0.008080720901489258"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;5]" time="0.006153106689453125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;6]" time="0.003635406494140625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;7]" time="0.003755331039428711"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;8]" time="0.017186641693115234"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;9]" time="0.035225868225097656"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;10]" time="0.11284208297729492"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;11]" time="0.008419275283813477"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;12]" time="0.0064792633056640625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;13]" time="0.009465217590332031"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;14]" time="0.008185863494873047"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;15]" time="0.00906515121459961"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;16]" time="0.013515949249267578"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;17]" time="0.01385641098022461"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;18]" time="0.005165576934814453"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;19]" time="0.0046422481536865234"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;20]" time="0.041054725646972656"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;21]" time="0.04421043395996094"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;22]" time="0.14679265022277832"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;23]" time="0.009016036987304688"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;24]" time="0.003536701202392578"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;25]" time="0.0045528411865234375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;26]" time="0.0372462272644043"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;27]" time="0.06096601486206055"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;28]" time="0.21894073486328125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair2-&lt;lambda&gt;29]" time="0.010518789291381836"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;0]" time="0.0037183761596679688"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;1]" time="0.0035524368286132812"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;2]" time="0.005639553070068359"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;3]" time="0.007913589477539062"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;4]" time="0.007863998413085938"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;5]" time="0.006003618240356445"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;6]" time="0.003445148468017578"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;7]" time="0.003507852554321289"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;8]" time="0.01718616485595703"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;9]" time="0.034049272537231445"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;10]" time="0.11341381072998047"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;11]" time="0.008230209350585938"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;12]" time="0.006517887115478516"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;13]" time="0.009434938430786133"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;14]" time="0.007964611053466797"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;15]" time="0.009244680404663086"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;16]" time="0.013966560363769531"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;17]" time="0.014242172241210938"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;18]" time="0.00524139404296875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;19]" time="0.0045888423919677734"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;20]" time="0.04098320007324219"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;21]" time="0.044255971908569336"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;22]" time="0.14658141136169434"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;23]" time="0.009160757064819336"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;24]" time="0.003481149673461914"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;25]" time="0.004515409469604492"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;26]" time="0.036727190017700195"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;27]" time="0.061649322509765625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;28]" time="0.2155911922454834"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair3-&lt;lambda&gt;29]" time="0.01076364517211914"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;0]" time="0.003697633743286133"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;1]" time="0.003506898880004883"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;2]" time="0.005495548248291016"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;3]" time="0.00783395767211914"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;4]" time="0.008053302764892578"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;5]" time="0.006019115447998047"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;6]" time="0.003826618194580078"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;7]" time="0.003560304641723633"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;8]" time="0.01694202423095703"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;9]" time="0.03511500358581543"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;10]" time="0.11338162422180176"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;11]" time="0.008150577545166016"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;12]" time="0.005633831024169922"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;13]" time="0.009765863418579102"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;14]" time="0.008073091506958008"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;15]" time="0.009356021881103516"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;16]" time="0.013406753540039062"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;17]" time="0.013825416564941406"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;18]" time="0.005163431167602539"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;19]" time="0.004573822021484375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;20]" time="0.04063224792480469"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;21]" time="0.04389214515686035"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;22]" time="0.14800477027893066"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;23]" time="0.009117841720581055"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;24]" time="0.003506898880004883"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;25]" time="0.004548549652099609"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;26]" time="0.036736488342285156"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;27]" time="0.06151223182678223"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;28]" time="0.21546196937561035"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair4-&lt;lambda&gt;29]" time="0.01052999496459961"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;0]" time="0.004811286926269531"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;1]" time="0.003492116928100586"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;2]" time="0.005456209182739258"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;3]" time="0.007572650909423828"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;4]" time="0.0077326297760009766"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;5]" time="0.0057871341705322266"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;6]" time="0.0033838748931884766"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;7]" time="0.0034694671630859375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;8]" time="0.01693415641784668"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;9]" time="0.034822940826416016"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;10]" time="0.11373043060302734"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;11]" time="0.008126974105834961"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;12]" time="0.0053751468658447266"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;13]" time="0.009458541870117188"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;14]" time="0.007944345474243164"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;15]" time="0.009171485900878906"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;16]" time="0.013619422912597656"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;17]" time="0.013980388641357422"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;18]" time="0.0051381587982177734"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;19]" time="0.004441738128662109"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;20]" time="0.04044294357299805"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;21]" time="0.04360342025756836"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;22]" time="0.14472031593322754"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;23]" time="0.00898432731628418"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;24]" time="0.0034651756286621094"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;25]" time="0.00441741943359375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;26]" time="0.03749656677246094"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;27]" time="0.06259942054748535"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;28]" time="0.21466350555419922"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair5-&lt;lambda&gt;29]" time="0.010733842849731445"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;0]" time="0.0038619041442871094"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;1]" time="0.0035784244537353516"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;2]" time="0.005549907684326172"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;3]" time="0.007711172103881836"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;4]" time="0.008017301559448242"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;5]" time="0.006033420562744141"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;6]" time="0.003466367721557617"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;7]" time="0.0036385059356689453"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;8]" time="0.01686692237854004"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;9]" time="0.033654212951660156"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;10]" time="0.11352157592773438"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;11]" time="0.00851297378540039"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;12]" time="0.005392551422119141"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;13]" time="0.009412050247192383"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;14]" time="0.007972002029418945"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;15]" time="0.008994340896606445"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;16]" time="0.01344442367553711"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;17]" time="0.013819456100463867"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;18]" time="0.0050814151763916016"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;19]" time="0.00423121452331543"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;20]" time="0.04114270210266113"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;21]" time="0.044236183166503906"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;22]" time="0.1458301544189453"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;23]" time="0.008808135986328125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;24]" time="0.0034110546112060547"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;25]" time="0.004464864730834961"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;26]" time="0.036452293395996094"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;27]" time="0.06192588806152344"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;28]" time="0.215287446975708"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair6-&lt;lambda&gt;29]" time="0.010498046875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;0]" time="0.0036394596099853516"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;1]" time="0.003373384475708008"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;2]" time="0.0055577754974365234"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;3]" time="0.007685661315917969"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;4]" time="0.007933378219604492"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;5]" time="0.005956411361694336"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;6]" time="0.0035524368286132812"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;7]" time="0.0036923885345458984"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;8]" time="0.01726245880126953"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;9]" time="0.035337209701538086"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;10]" time="0.11376380920410156"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;11]" time="0.008079767227172852"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;12]" time="0.005370378494262695"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;13]" time="0.009582757949829102"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;14]" time="0.008112192153930664"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;15]" time="0.009322643280029297"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;16]" time="0.01366567611694336"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;17]" time="0.013733386993408203"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;18]" time="0.0049860477447509766"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;19]" time="0.004217624664306641"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;20]" time="0.0419619083404541"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;21]" time="0.0441431999206543"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;22]" time="0.14571022987365723"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;23]" time="0.00890660285949707"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;24]" time="0.003454923629760742"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;25]" time="0.0044558048248291016"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;26]" time="0.036417484283447266"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;27]" time="0.06098031997680664"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;28]" time="0.2137751579284668"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair7-&lt;lambda&gt;29]" time="0.010431766510009766"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;0]" time="0.0037720203399658203"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;1]" time="0.003449678421020508"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;2]" time="0.005475282669067383"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;3]" time="0.007911205291748047"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;4]" time="0.007843494415283203"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;5]" time="0.0059087276458740234"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;6]" time="0.0034668445587158203"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;7]" time="0.0034813880920410156"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;8]" time="0.017063617706298828"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;9]" time="0.0346071720123291"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;10]" time="0.11301469802856445"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;11]" time="0.00794839859008789"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;12]" time="0.005414009094238281"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;13]" time="0.009426116943359375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;14]" time="0.00788426399230957"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;15]" time="0.009171247482299805"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;16]" time="0.013587474822998047"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;17]" time="0.01385498046875"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;18]" time="0.005175352096557617"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;19]" time="0.004522800445556641"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;20]" time="0.040479183197021484"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;21]" time="0.044205427169799805"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;22]" time="0.14709997177124023"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;23]" time="0.0090179443359375"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;24]" time="0.0035173892974853516"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;25]" time="0.004342555999755859"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;26]" time="0.036640167236328125"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;27]" time="0.06151103973388672"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;28]" time="0.21444058418273926"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="166" name="test_almost_equal_wrong_ind[compatible_vector_array_pair8-&lt;lambda&gt;29]" time="0.010828971862792969"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="178" name="test_project_array" time="0.003147125244140625"></testcase><testcase classname="src.pymortests.algorithms.basic" file="src/pymortests/algorithms/basic.py" line="188" name="test_project_array_with_product" time="0.0027282238006591797"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;0]" time="0.0019707679748535156"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;1]" time="0.0018830299377441406"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;2]" time="0.002045154571533203"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;3]" time="0.11455297470092773"><system-err>17:04 gram_schmidt: Orthonormalizing vector 31 again
17:04 gram_schmidt: Removing linear dependent vector 32
17:04 gram_schmidt: Removing linear dependent vector 33
17:04 gram_schmidt: Removing linear dependent vector 34
17:04 gram_schmidt: Removing linear dependent vector 35
17:04 gram_schmidt: Removing linear dependent vector 36
17:04 gram_schmidt: Removing linear dependent vector 37
17:04 gram_schmidt: Removing linear dependent vector 38
17:04 gram_schmidt: Removing linear dependent vector 39
17:04 gram_schmidt: Removing linear dependent vector 40
17:04 gram_schmidt: Removing linear dependent vector 41
17:04 gram_schmidt: Removing linear dependent vector 42
17:04 gram_schmidt: Orthonormalizing vector 31 again
17:04 gram_schmidt: Removing linear dependent vector 32
17:04 gram_schmidt: Removing linear dependent vector 33
17:04 gram_schmidt: Removing linear dependent vector 34
17:04 gram_schmidt: Removing linear dependent vector 35
17:04 gram_schmidt: Removing linear dependent vector 36
17:04 gram_schmidt: Removing linear dependent vector 37
17:04 gram_schmidt: Removing linear dependent vector 38
17:04 gram_schmidt: Removing linear dependent vector 39
17:04 gram_schmidt: Removing linear dependent vector 40
17:04 gram_schmidt: Removing linear dependent vector 41
17:04 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;4]" time="0.022665739059448242"><system-err>17:04 gram_schmidt: Removing vector 0 of norm 0.0
17:04 gram_schmidt: Removing vector 1 of norm 0.0
17:04 gram_schmidt: Removing vector 2 of norm 0.0
17:04 gram_schmidt: Removing vector 3 of norm 0.0
17:04 gram_schmidt: Removing vector 4 of norm 0.0
17:04 gram_schmidt: Removing vector 5 of norm 0.0
17:04 gram_schmidt: Removing vector 6 of norm 0.0
17:04 gram_schmidt: Removing vector 7 of norm 0.0
17:04 gram_schmidt: Removing vector 8 of norm 0.0
17:04 gram_schmidt: Removing vector 9 of norm 0.0
17:04 gram_schmidt: Removing vector 10 of norm 0.0
17:04 gram_schmidt: Removing vector 11 of norm 0.0
17:04 gram_schmidt: Removing vector 12 of norm 0.0
17:04 gram_schmidt: Removing vector 13 of norm 0.0
17:04 gram_schmidt: Removing vector 14 of norm 0.0
17:04 gram_schmidt: Removing vector 15 of norm 0.0
17:04 gram_schmidt: Removing vector 16 of norm 0.0
17:04 gram_schmidt: Removing vector 17 of norm 0.0
17:04 gram_schmidt: Removing vector 18 of norm 0.0
17:04 gram_schmidt: Removing vector 19 of norm 0.0
17:04 gram_schmidt: Removing vector 20 of norm 0.0
17:04 gram_schmidt: Removing vector 21 of norm 0.0
17:04 gram_schmidt: Removing vector 22 of norm 0.0
17:04 gram_schmidt: Removing vector 23 of norm 0.0
17:04 gram_schmidt: Removing vector 24 of norm 0.0
17:04 gram_schmidt: Removing vector 25 of norm 0.0
17:04 gram_schmidt: Removing vector 26 of norm 0.0
17:04 gram_schmidt: Removing vector 27 of norm 0.0
17:04 gram_schmidt: Removing vector 28 of norm 0.0
17:04 gram_schmidt: Removing vector 29 of norm 0.0
17:04 gram_schmidt: Removing vector 30 of norm 0.0
17:04 gram_schmidt: Removing vector 31 of norm 0.0
17:04 gram_schmidt: Removing vector 32 of norm 0.0
17:04 gram_schmidt: Removing vector 33 of norm 0.0
17:04 gram_schmidt: Removing vector 34 of norm 0.0
17:04 gram_schmidt: Removing vector 35 of norm 0.0
17:04 gram_schmidt: Removing vector 36 of norm 0.0
17:04 gram_schmidt: Removing vector 37 of norm 0.0
17:04 gram_schmidt: Removing vector 38 of norm 0.0
17:04 gram_schmidt: Removing vector 39 of norm 0.0
17:04 gram_schmidt: Removing vector 40 of norm 0.0
17:04 gram_schmidt: Removing vector 41 of norm 0.0
17:04 gram_schmidt: Removing vector 42 of norm 0.0
17:04 gram_schmidt: Removing vector 43 of norm 0.0
17:04 gram_schmidt: Removing vector 44 of norm 0.0
17:04 gram_schmidt: Removing vector 45 of norm 0.0
17:04 gram_schmidt: Removing vector 46 of norm 0.0
17:04 gram_schmidt: Removing vector 47 of norm 0.0
17:04 gram_schmidt: Removing vector 48 of norm 0.0
17:04 gram_schmidt: Removing vector 49 of norm 0.0
17:04 gram_schmidt: Removing vector 50 of norm 0.0
17:04 gram_schmidt: Removing vector 51 of norm 0.0
17:04 gram_schmidt: Removing vector 52 of norm 0.0
17:04 gram_schmidt: Removing vector 53 of norm 0.0
17:04 gram_schmidt: Removing vector 54 of norm 0.0
17:04 gram_schmidt: Removing vector 55 of norm 0.0
17:04 gram_schmidt: Removing vector 56 of norm 0.0
17:04 gram_schmidt: Removing vector 57 of norm 0.0
17:04 gram_schmidt: Removing vector 58 of norm 0.0
17:04 gram_schmidt: Removing vector 59 of norm 0.0
17:04 gram_schmidt: Removing vector 60 of norm 0.0
17:04 gram_schmidt: Removing vector 61 of norm 0.0
17:04 gram_schmidt: Removing vector 62 of norm 0.0
17:04 gram_schmidt: Removing vector 63 of norm 0.0
17:04 gram_schmidt: Removing vector 64 of norm 0.0
17:04 gram_schmidt: Removing vector 65 of norm 0.0
17:04 gram_schmidt: Removing vector 66 of norm 0.0
17:04 gram_schmidt: Removing vector 67 of norm 0.0
17:04 gram_schmidt: Removing vector 68 of norm 0.0
17:04 gram_schmidt: Removing vector 69 of norm 0.0
17:04 gram_schmidt: Removing vector 70 of norm 0.0
17:04 gram_schmidt: Removing vector 71 of norm 0.0
17:04 gram_schmidt: Removing vector 72 of norm 0.0
17:04 gram_schmidt: Removing vector 73 of norm 0.0
17:04 gram_schmidt: Removing vector 74 of norm 0.0
17:04 gram_schmidt: Removing vector 75 of norm 0.0
17:04 gram_schmidt: Removing vector 76 of norm 0.0
17:04 gram_schmidt: Removing vector 77 of norm 0.0
17:04 gram_schmidt: Removing vector 78 of norm 0.0
17:04 gram_schmidt: Removing vector 79 of norm 0.0
17:04 gram_schmidt: Removing vector 80 of norm 0.0
17:04 gram_schmidt: Removing vector 81 of norm 0.0
17:04 gram_schmidt: Removing vector 82 of norm 0.0
17:04 gram_schmidt: Removing vector 83 of norm 0.0
17:04 gram_schmidt: Removing vector 84 of norm 0.0
17:04 gram_schmidt: Removing vector 85 of norm 0.0
17:04 gram_schmidt: Removing vector 86 of norm 0.0
17:04 gram_schmidt: Removing vector 87 of norm 0.0
17:04 gram_schmidt: Removing vector 88 of norm 0.0
17:04 gram_schmidt: Removing vector 89 of norm 0.0
17:04 gram_schmidt: Removing vector 90 of norm 0.0
17:04 gram_schmidt: Removing vector 91 of norm 0.0
17:04 gram_schmidt: Removing vector 92 of norm 0.0
17:04 gram_schmidt: Removing vector 93 of norm 0.0
17:04 gram_schmidt: Removing vector 94 of norm 0.0
17:04 gram_schmidt: Removing vector 95 of norm 0.0
17:04 gram_schmidt: Removing vector 96 of norm 0.0
17:04 gram_schmidt: Removing vector 97 of norm 0.0
17:04 gram_schmidt: Removing vector 98 of norm 0.0
17:04 gram_schmidt: Removing vector 99 of norm 0.0
17:04 gram_schmidt: Removing vector 100 of norm 0.0
17:04 gram_schmidt: Removing vector 101 of norm 0.0
17:04 gram_schmidt: Removing vector 0 of norm 0.0
17:04 gram_schmidt: Removing vector 1 of norm 0.0
17:04 gram_schmidt: Removing vector 2 of norm 0.0
17:04 gram_schmidt: Removing vector 3 of norm 0.0
17:04 gram_schmidt: Removing vector 4 of norm 0.0
17:04 gram_schmidt: Removing vector 5 of norm 0.0
17:04 gram_schmidt: Removing vector 6 of norm 0.0
17:04 gram_schmidt: Removing vector 7 of norm 0.0
17:04 gram_schmidt: Removing vector 8 of norm 0.0
17:04 gram_schmidt: Removing vector 9 of norm 0.0
17:04 gram_schmidt: Removing vector 10 of norm 0.0
17:04 gram_schmidt: Removing vector 11 of norm 0.0
17:04 gram_schmidt: Removing vector 12 of norm 0.0
17:04 gram_schmidt: Removing vector 13 of norm 0.0
17:04 gram_schmidt: Removing vector 14 of norm 0.0
17:04 gram_schmidt: Removing vector 15 of norm 0.0
17:04 gram_schmidt: Removing vector 16 of norm 0.0
17:04 gram_schmidt: Removing vector 17 of norm 0.0
17:04 gram_schmidt: Removing vector 18 of norm 0.0
17:04 gram_schmidt: Removing vector 19 of norm 0.0
17:04 gram_schmidt: Removing vector 20 of norm 0.0
17:04 gram_schmidt: Removing vector 21 of norm 0.0
17:04 gram_schmidt: Removing vector 22 of norm 0.0
17:04 gram_schmidt: Removing vector 23 of norm 0.0
17:04 gram_schmidt: Removing vector 24 of norm 0.0
17:04 gram_schmidt: Removing vector 25 of norm 0.0
17:04 gram_schmidt: Removing vector 26 of norm 0.0
17:04 gram_schmidt: Removing vector 27 of norm 0.0
17:04 gram_schmidt: Removing vector 28 of norm 0.0
17:04 gram_schmidt: Removing vector 29 of norm 0.0
17:04 gram_schmidt: Removing vector 30 of norm 0.0
17:04 gram_schmidt: Removing vector 31 of norm 0.0
17:04 gram_schmidt: Removing vector 32 of norm 0.0
17:04 gram_schmidt: Removing vector 33 of norm 0.0
17:04 gram_schmidt: Removing vector 34 of norm 0.0
17:04 gram_schmidt: Removing vector 35 of norm 0.0
17:04 gram_schmidt: Removing vector 36 of norm 0.0
17:04 gram_schmidt: Removing vector 37 of norm 0.0
17:04 gram_schmidt: Removing vector 38 of norm 0.0
17:04 gram_schmidt: Removing vector 39 of norm 0.0
17:04 gram_schmidt: Removing vector 40 of norm 0.0
17:04 gram_schmidt: Removing vector 41 of norm 0.0
17:04 gram_schmidt: Removing vector 42 of norm 0.0
17:04 gram_schmidt: Removing vector 43 of norm 0.0
17:04 gram_schmidt: Removing vector 44 of norm 0.0
17:04 gram_schmidt: Removing vector 45 of norm 0.0
17:04 gram_schmidt: Removing vector 46 of norm 0.0
17:04 gram_schmidt: Removing vector 47 of norm 0.0
17:04 gram_schmidt: Removing vector 48 of norm 0.0
17:04 gram_schmidt: Removing vector 49 of norm 0.0
17:04 gram_schmidt: Removing vector 50 of norm 0.0
17:04 gram_schmidt: Removing vector 51 of norm 0.0
17:04 gram_schmidt: Removing vector 52 of norm 0.0
17:04 gram_schmidt: Removing vector 53 of norm 0.0
17:04 gram_schmidt: Removing vector 54 of norm 0.0
17:04 gram_schmidt: Removing vector 55 of norm 0.0
17:04 gram_schmidt: Removing vector 56 of norm 0.0
17:04 gram_schmidt: Removing vector 57 of norm 0.0
17:04 gram_schmidt: Removing vector 58 of norm 0.0
17:04 gram_schmidt: Removing vector 59 of norm 0.0
17:04 gram_schmidt: Removing vector 60 of norm 0.0
17:04 gram_schmidt: Removing vector 61 of norm 0.0
17:04 gram_schmidt: Removing vector 62 of norm 0.0
17:04 gram_schmidt: Removing vector 63 of norm 0.0
17:04 gram_schmidt: Removing vector 64 of norm 0.0
17:04 gram_schmidt: Removing vector 65 of norm 0.0
17:04 gram_schmidt: Removing vector 66 of norm 0.0
17:04 gram_schmidt: Removing vector 67 of norm 0.0
17:04 gram_schmidt: Removing vector 68 of norm 0.0
17:04 gram_schmidt: Removing vector 69 of norm 0.0
17:04 gram_schmidt: Removing vector 70 of norm 0.0
17:04 gram_schmidt: Removing vector 71 of norm 0.0
17:04 gram_schmidt: Removing vector 72 of norm 0.0
17:04 gram_schmidt: Removing vector 73 of norm 0.0
17:04 gram_schmidt: Removing vector 74 of norm 0.0
17:04 gram_schmidt: Removing vector 75 of norm 0.0
17:04 gram_schmidt: Removing vector 76 of norm 0.0
17:04 gram_schmidt: Removing vector 77 of norm 0.0
17:04 gram_schmidt: Removing vector 78 of norm 0.0
17:04 gram_schmidt: Removing vector 79 of norm 0.0
17:04 gram_schmidt: Removing vector 80 of norm 0.0
17:04 gram_schmidt: Removing vector 81 of norm 0.0
17:04 gram_schmidt: Removing vector 82 of norm 0.0
17:04 gram_schmidt: Removing vector 83 of norm 0.0
17:04 gram_schmidt: Removing vector 84 of norm 0.0
17:04 gram_schmidt: Removing vector 85 of norm 0.0
17:04 gram_schmidt: Removing vector 86 of norm 0.0
17:04 gram_schmidt: Removing vector 87 of norm 0.0
17:04 gram_schmidt: Removing vector 88 of norm 0.0
17:04 gram_schmidt: Removing vector 89 of norm 0.0
17:04 gram_schmidt: Removing vector 90 of norm 0.0
17:04 gram_schmidt: Removing vector 91 of norm 0.0
17:04 gram_schmidt: Removing vector 92 of norm 0.0
17:04 gram_schmidt: Removing vector 93 of norm 0.0
17:04 gram_schmidt: Removing vector 94 of norm 0.0
17:04 gram_schmidt: Removing vector 95 of norm 0.0
17:04 gram_schmidt: Removing vector 96 of norm 0.0
17:04 gram_schmidt: Removing vector 97 of norm 0.0
17:04 gram_schmidt: Removing vector 98 of norm 0.0
17:04 gram_schmidt: Removing vector 99 of norm 0.0
17:04 gram_schmidt: Removing vector 100 of norm 0.0
17:04 gram_schmidt: Removing vector 101 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;5]" time="0.0026726722717285156"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;6]" time="0.0018157958984375"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;7]" time="0.0023353099822998047"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;8]" time="0.21413111686706543"><system-err>17:04 gram_schmidt: Orthonormalizing vector 31 again
17:04 gram_schmidt: Removing linear dependent vector 32
17:04 gram_schmidt: Removing linear dependent vector 33
17:04 gram_schmidt: Removing linear dependent vector 34
17:04 gram_schmidt: Removing linear dependent vector 35
17:04 gram_schmidt: Removing linear dependent vector 36
17:04 gram_schmidt: Removing linear dependent vector 37
17:04 gram_schmidt: Removing linear dependent vector 38
17:04 gram_schmidt: Removing linear dependent vector 39
17:04 gram_schmidt: Removing linear dependent vector 40
17:04 gram_schmidt: Removing linear dependent vector 41
17:04 gram_schmidt: Removing linear dependent vector 42
17:04 gram_schmidt: Orthonormalizing vector 31 again
17:04 gram_schmidt: Removing linear dependent vector 32
17:04 gram_schmidt: Removing linear dependent vector 33
17:04 gram_schmidt: Removing linear dependent vector 34
17:04 gram_schmidt: Removing linear dependent vector 35
17:04 gram_schmidt: Removing linear dependent vector 36
17:04 gram_schmidt: Removing linear dependent vector 37
17:04 gram_schmidt: Removing linear dependent vector 38
17:04 gram_schmidt: Removing linear dependent vector 39
17:04 gram_schmidt: Removing linear dependent vector 40
17:04 gram_schmidt: Removing linear dependent vector 41
17:04 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;9]" time="0.028050661087036133"><system-err>17:04 gram_schmidt: Removing vector 0 of norm 0.0
17:04 gram_schmidt: Removing vector 1 of norm 0.0
17:04 gram_schmidt: Removing vector 2 of norm 0.0
17:04 gram_schmidt: Removing vector 3 of norm 0.0
17:04 gram_schmidt: Removing vector 4 of norm 0.0
17:04 gram_schmidt: Removing vector 5 of norm 0.0
17:04 gram_schmidt: Removing vector 6 of norm 0.0
17:04 gram_schmidt: Removing vector 7 of norm 0.0
17:04 gram_schmidt: Removing vector 8 of norm 0.0
17:04 gram_schmidt: Removing vector 9 of norm 0.0
17:04 gram_schmidt: Removing vector 10 of norm 0.0
17:04 gram_schmidt: Removing vector 11 of norm 0.0
17:04 gram_schmidt: Removing vector 12 of norm 0.0
17:04 gram_schmidt: Removing vector 13 of norm 0.0
17:04 gram_schmidt: Removing vector 14 of norm 0.0
17:04 gram_schmidt: Removing vector 15 of norm 0.0
17:04 gram_schmidt: Removing vector 16 of norm 0.0
17:04 gram_schmidt: Removing vector 17 of norm 0.0
17:04 gram_schmidt: Removing vector 18 of norm 0.0
17:04 gram_schmidt: Removing vector 19 of norm 0.0
17:04 gram_schmidt: Removing vector 20 of norm 0.0
17:04 gram_schmidt: Removing vector 21 of norm 0.0
17:04 gram_schmidt: Removing vector 22 of norm 0.0
17:04 gram_schmidt: Removing vector 23 of norm 0.0
17:04 gram_schmidt: Removing vector 24 of norm 0.0
17:04 gram_schmidt: Removing vector 25 of norm 0.0
17:04 gram_schmidt: Removing vector 26 of norm 0.0
17:04 gram_schmidt: Removing vector 27 of norm 0.0
17:04 gram_schmidt: Removing vector 28 of norm 0.0
17:04 gram_schmidt: Removing vector 29 of norm 0.0
17:04 gram_schmidt: Removing vector 30 of norm 0.0
17:04 gram_schmidt: Removing vector 31 of norm 0.0
17:04 gram_schmidt: Removing vector 32 of norm 0.0
17:04 gram_schmidt: Removing vector 33 of norm 0.0
17:04 gram_schmidt: Removing vector 34 of norm 0.0
17:04 gram_schmidt: Removing vector 35 of norm 0.0
17:04 gram_schmidt: Removing vector 36 of norm 0.0
17:04 gram_schmidt: Removing vector 37 of norm 0.0
17:04 gram_schmidt: Removing vector 38 of norm 0.0
17:04 gram_schmidt: Removing vector 39 of norm 0.0
17:04 gram_schmidt: Removing vector 40 of norm 0.0
17:04 gram_schmidt: Removing vector 41 of norm 0.0
17:04 gram_schmidt: Removing vector 42 of norm 0.0
17:04 gram_schmidt: Removing vector 43 of norm 0.0
17:04 gram_schmidt: Removing vector 44 of norm 0.0
17:04 gram_schmidt: Removing vector 45 of norm 0.0
17:04 gram_schmidt: Removing vector 46 of norm 0.0
17:04 gram_schmidt: Removing vector 47 of norm 0.0
17:04 gram_schmidt: Removing vector 48 of norm 0.0
17:04 gram_schmidt: Removing vector 49 of norm 0.0
17:04 gram_schmidt: Removing vector 50 of norm 0.0
17:04 gram_schmidt: Removing vector 51 of norm 0.0
17:04 gram_schmidt: Removing vector 52 of norm 0.0
17:04 gram_schmidt: Removing vector 53 of norm 0.0
17:04 gram_schmidt: Removing vector 54 of norm 0.0
17:04 gram_schmidt: Removing vector 55 of norm 0.0
17:04 gram_schmidt: Removing vector 56 of norm 0.0
17:04 gram_schmidt: Removing vector 57 of norm 0.0
17:04 gram_schmidt: Removing vector 58 of norm 0.0
17:04 gram_schmidt: Removing vector 59 of norm 0.0
17:04 gram_schmidt: Removing vector 60 of norm 0.0
17:04 gram_schmidt: Removing vector 61 of norm 0.0
17:04 gram_schmidt: Removing vector 62 of norm 0.0
17:04 gram_schmidt: Removing vector 63 of norm 0.0
17:04 gram_schmidt: Removing vector 64 of norm 0.0
17:04 gram_schmidt: Removing vector 65 of norm 0.0
17:04 gram_schmidt: Removing vector 66 of norm 0.0
17:04 gram_schmidt: Removing vector 67 of norm 0.0
17:04 gram_schmidt: Removing vector 68 of norm 0.0
17:04 gram_schmidt: Removing vector 69 of norm 0.0
17:04 gram_schmidt: Removing vector 70 of norm 0.0
17:04 gram_schmidt: Removing vector 71 of norm 0.0
17:04 gram_schmidt: Removing vector 72 of norm 0.0
17:04 gram_schmidt: Removing vector 73 of norm 0.0
17:04 gram_schmidt: Removing vector 74 of norm 0.0
17:04 gram_schmidt: Removing vector 75 of norm 0.0
17:04 gram_schmidt: Removing vector 76 of norm 0.0
17:04 gram_schmidt: Removing vector 77 of norm 0.0
17:04 gram_schmidt: Removing vector 78 of norm 0.0
17:04 gram_schmidt: Removing vector 79 of norm 0.0
17:04 gram_schmidt: Removing vector 80 of norm 0.0
17:04 gram_schmidt: Removing vector 81 of norm 0.0
17:04 gram_schmidt: Removing vector 82 of norm 0.0
17:04 gram_schmidt: Removing vector 83 of norm 0.0
17:04 gram_schmidt: Removing vector 84 of norm 0.0
17:04 gram_schmidt: Removing vector 85 of norm 0.0
17:04 gram_schmidt: Removing vector 86 of norm 0.0
17:04 gram_schmidt: Removing vector 87 of norm 0.0
17:04 gram_schmidt: Removing vector 88 of norm 0.0
17:04 gram_schmidt: Removing vector 89 of norm 0.0
17:04 gram_schmidt: Removing vector 90 of norm 0.0
17:04 gram_schmidt: Removing vector 91 of norm 0.0
17:04 gram_schmidt: Removing vector 92 of norm 0.0
17:04 gram_schmidt: Removing vector 93 of norm 0.0
17:04 gram_schmidt: Removing vector 94 of norm 0.0
17:04 gram_schmidt: Removing vector 95 of norm 0.0
17:04 gram_schmidt: Removing vector 96 of norm 0.0
17:04 gram_schmidt: Removing vector 97 of norm 0.0
17:04 gram_schmidt: Removing vector 98 of norm 0.0
17:04 gram_schmidt: Removing vector 99 of norm 0.0
17:04 gram_schmidt: Removing vector 100 of norm 0.0
17:04 gram_schmidt: Removing vector 101 of norm 0.0
17:04 gram_schmidt: Removing vector 0 of norm 0.0
17:04 gram_schmidt: Removing vector 1 of norm 0.0
17:04 gram_schmidt: Removing vector 2 of norm 0.0
17:04 gram_schmidt: Removing vector 3 of norm 0.0
17:04 gram_schmidt: Removing vector 4 of norm 0.0
17:04 gram_schmidt: Removing vector 5 of norm 0.0
17:04 gram_schmidt: Removing vector 6 of norm 0.0
17:04 gram_schmidt: Removing vector 7 of norm 0.0
17:04 gram_schmidt: Removing vector 8 of norm 0.0
17:04 gram_schmidt: Removing vector 9 of norm 0.0
17:04 gram_schmidt: Removing vector 10 of norm 0.0
17:04 gram_schmidt: Removing vector 11 of norm 0.0
17:04 gram_schmidt: Removing vector 12 of norm 0.0
17:04 gram_schmidt: Removing vector 13 of norm 0.0
17:04 gram_schmidt: Removing vector 14 of norm 0.0
17:04 gram_schmidt: Removing vector 15 of norm 0.0
17:04 gram_schmidt: Removing vector 16 of norm 0.0
17:04 gram_schmidt: Removing vector 17 of norm 0.0
17:04 gram_schmidt: Removing vector 18 of norm 0.0
17:04 gram_schmidt: Removing vector 19 of norm 0.0
17:04 gram_schmidt: Removing vector 20 of norm 0.0
17:04 gram_schmidt: Removing vector 21 of norm 0.0
17:04 gram_schmidt: Removing vector 22 of norm 0.0
17:04 gram_schmidt: Removing vector 23 of norm 0.0
17:04 gram_schmidt: Removing vector 24 of norm 0.0
17:04 gram_schmidt: Removing vector 25 of norm 0.0
17:04 gram_schmidt: Removing vector 26 of norm 0.0
17:04 gram_schmidt: Removing vector 27 of norm 0.0
17:04 gram_schmidt: Removing vector 28 of norm 0.0
17:04 gram_schmidt: Removing vector 29 of norm 0.0
17:04 gram_schmidt: Removing vector 30 of norm 0.0
17:04 gram_schmidt: Removing vector 31 of norm 0.0
17:04 gram_schmidt: Removing vector 32 of norm 0.0
17:04 gram_schmidt: Removing vector 33 of norm 0.0
17:04 gram_schmidt: Removing vector 34 of norm 0.0
17:04 gram_schmidt: Removing vector 35 of norm 0.0
17:04 gram_schmidt: Removing vector 36 of norm 0.0
17:04 gram_schmidt: Removing vector 37 of norm 0.0
17:04 gram_schmidt: Removing vector 38 of norm 0.0
17:04 gram_schmidt: Removing vector 39 of norm 0.0
17:04 gram_schmidt: Removing vector 40 of norm 0.0
17:04 gram_schmidt: Removing vector 41 of norm 0.0
17:04 gram_schmidt: Removing vector 42 of norm 0.0
17:04 gram_schmidt: Removing vector 43 of norm 0.0
17:04 gram_schmidt: Removing vector 44 of norm 0.0
17:04 gram_schmidt: Removing vector 45 of norm 0.0
17:04 gram_schmidt: Removing vector 46 of norm 0.0
17:04 gram_schmidt: Removing vector 47 of norm 0.0
17:04 gram_schmidt: Removing vector 48 of norm 0.0
17:04 gram_schmidt: Removing vector 49 of norm 0.0
17:04 gram_schmidt: Removing vector 50 of norm 0.0
17:04 gram_schmidt: Removing vector 51 of norm 0.0
17:04 gram_schmidt: Removing vector 52 of norm 0.0
17:04 gram_schmidt: Removing vector 53 of norm 0.0
17:04 gram_schmidt: Removing vector 54 of norm 0.0
17:04 gram_schmidt: Removing vector 55 of norm 0.0
17:04 gram_schmidt: Removing vector 56 of norm 0.0
17:04 gram_schmidt: Removing vector 57 of norm 0.0
17:04 gram_schmidt: Removing vector 58 of norm 0.0
17:04 gram_schmidt: Removing vector 59 of norm 0.0
17:04 gram_schmidt: Removing vector 60 of norm 0.0
17:04 gram_schmidt: Removing vector 61 of norm 0.0
17:04 gram_schmidt: Removing vector 62 of norm 0.0
17:04 gram_schmidt: Removing vector 63 of norm 0.0
17:04 gram_schmidt: Removing vector 64 of norm 0.0
17:04 gram_schmidt: Removing vector 65 of norm 0.0
17:04 gram_schmidt: Removing vector 66 of norm 0.0
17:04 gram_schmidt: Removing vector 67 of norm 0.0
17:04 gram_schmidt: Removing vector 68 of norm 0.0
17:04 gram_schmidt: Removing vector 69 of norm 0.0
17:04 gram_schmidt: Removing vector 70 of norm 0.0
17:04 gram_schmidt: Removing vector 71 of norm 0.0
17:04 gram_schmidt: Removing vector 72 of norm 0.0
17:04 gram_schmidt: Removing vector 73 of norm 0.0
17:04 gram_schmidt: Removing vector 74 of norm 0.0
17:04 gram_schmidt: Removing vector 75 of norm 0.0
17:04 gram_schmidt: Removing vector 76 of norm 0.0
17:04 gram_schmidt: Removing vector 77 of norm 0.0
17:04 gram_schmidt: Removing vector 78 of norm 0.0
17:04 gram_schmidt: Removing vector 79 of norm 0.0
17:04 gram_schmidt: Removing vector 80 of norm 0.0
17:04 gram_schmidt: Removing vector 81 of norm 0.0
17:04 gram_schmidt: Removing vector 82 of norm 0.0
17:04 gram_schmidt: Removing vector 83 of norm 0.0
17:04 gram_schmidt: Removing vector 84 of norm 0.0
17:04 gram_schmidt: Removing vector 85 of norm 0.0
17:04 gram_schmidt: Removing vector 86 of norm 0.0
17:04 gram_schmidt: Removing vector 87 of norm 0.0
17:04 gram_schmidt: Removing vector 88 of norm 0.0
17:04 gram_schmidt: Removing vector 89 of norm 0.0
17:04 gram_schmidt: Removing vector 90 of norm 0.0
17:04 gram_schmidt: Removing vector 91 of norm 0.0
17:04 gram_schmidt: Removing vector 92 of norm 0.0
17:04 gram_schmidt: Removing vector 93 of norm 0.0
17:04 gram_schmidt: Removing vector 94 of norm 0.0
17:04 gram_schmidt: Removing vector 95 of norm 0.0
17:04 gram_schmidt: Removing vector 96 of norm 0.0
17:04 gram_schmidt: Removing vector 97 of norm 0.0
17:04 gram_schmidt: Removing vector 98 of norm 0.0
17:04 gram_schmidt: Removing vector 99 of norm 0.0
17:04 gram_schmidt: Removing vector 100 of norm 0.0
17:04 gram_schmidt: Removing vector 101 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;10]" time="0.0034148693084716797"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;11]" time="0.006501436233520508"><system-err>17:04 gram_schmidt: Removing linear dependent vector 3
17:04 gram_schmidt: Removing linear dependent vector 3
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;12]" time="0.003548145294189453"><system-err>17:04 gram_schmidt: Removing vector 0 of norm 0.0
17:04 gram_schmidt: Removing vector 1 of norm 0.0
17:04 gram_schmidt: Removing vector 2 of norm 0.0
17:04 gram_schmidt: Removing vector 0 of norm 0.0
17:04 gram_schmidt: Removing vector 1 of norm 0.0
17:04 gram_schmidt: Removing vector 2 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;13]" time="0.0024454593658447266"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;14]" time="0.0046536922454833984"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;15]" time="0.42214202880859375"><system-err>17:04 gram_schmidt: Removing linear dependent vector 36
17:04 gram_schmidt: Removing linear dependent vector 37
17:04 gram_schmidt: Removing linear dependent vector 38
17:04 gram_schmidt: Removing linear dependent vector 39
17:04 gram_schmidt: Removing linear dependent vector 40
17:04 gram_schmidt: Removing linear dependent vector 41
17:04 gram_schmidt: Removing linear dependent vector 42
17:05 gram_schmidt: Removing linear dependent vector 36
17:05 gram_schmidt: Removing linear dependent vector 37
17:05 gram_schmidt: Removing linear dependent vector 38
17:05 gram_schmidt: Removing linear dependent vector 39
17:05 gram_schmidt: Removing linear dependent vector 40
17:05 gram_schmidt: Removing linear dependent vector 41
17:05 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;16]" time="0.21276164054870605"><system-err>17:05 gram_schmidt: Removing linear dependent vector 3
17:05 gram_schmidt: Removing linear dependent vector 4
17:05 gram_schmidt: Removing linear dependent vector 5
17:05 gram_schmidt: Removing linear dependent vector 6
17:05 gram_schmidt: Removing linear dependent vector 7
17:05 gram_schmidt: Removing linear dependent vector 8
17:05 gram_schmidt: Removing linear dependent vector 9
17:05 gram_schmidt: Removing linear dependent vector 10
17:05 gram_schmidt: Removing linear dependent vector 11
17:05 gram_schmidt: Removing linear dependent vector 12
17:05 gram_schmidt: Removing linear dependent vector 13
17:05 gram_schmidt: Removing linear dependent vector 14
17:05 gram_schmidt: Removing linear dependent vector 15
17:05 gram_schmidt: Removing linear dependent vector 16
17:05 gram_schmidt: Removing linear dependent vector 17
17:05 gram_schmidt: Removing linear dependent vector 18
17:05 gram_schmidt: Removing linear dependent vector 19
17:05 gram_schmidt: Removing linear dependent vector 20
17:05 gram_schmidt: Removing linear dependent vector 21
17:05 gram_schmidt: Removing linear dependent vector 22
17:05 gram_schmidt: Removing linear dependent vector 23
17:05 gram_schmidt: Removing linear dependent vector 24
17:05 gram_schmidt: Removing linear dependent vector 25
17:05 gram_schmidt: Removing linear dependent vector 26
17:05 gram_schmidt: Removing linear dependent vector 27
17:05 gram_schmidt: Removing linear dependent vector 28
17:05 gram_schmidt: Removing linear dependent vector 29
17:05 gram_schmidt: Removing linear dependent vector 30
17:05 gram_schmidt: Removing linear dependent vector 31
17:05 gram_schmidt: Removing linear dependent vector 32
17:05 gram_schmidt: Removing linear dependent vector 33
17:05 gram_schmidt: Removing linear dependent vector 34
17:05 gram_schmidt: Removing linear dependent vector 35
17:05 gram_schmidt: Removing linear dependent vector 36
17:05 gram_schmidt: Removing linear dependent vector 37
17:05 gram_schmidt: Removing linear dependent vector 38
17:05 gram_schmidt: Removing linear dependent vector 39
17:05 gram_schmidt: Removing linear dependent vector 40
17:05 gram_schmidt: Removing linear dependent vector 41
17:05 gram_schmidt: Removing linear dependent vector 42
17:05 gram_schmidt: Removing linear dependent vector 43
17:05 gram_schmidt: Removing linear dependent vector 44
17:05 gram_schmidt: Removing linear dependent vector 45
17:05 gram_schmidt: Removing linear dependent vector 46
17:05 gram_schmidt: Removing linear dependent vector 47
17:05 gram_schmidt: Removing linear dependent vector 48
17:05 gram_schmidt: Removing linear dependent vector 49
17:05 gram_schmidt: Removing linear dependent vector 50
17:05 gram_schmidt: Removing linear dependent vector 51
17:05 gram_schmidt: Removing linear dependent vector 52
17:05 gram_schmidt: Removing linear dependent vector 53
17:05 gram_schmidt: Removing linear dependent vector 54
17:05 gram_schmidt: Removing linear dependent vector 55
17:05 gram_schmidt: Removing linear dependent vector 56
17:05 gram_schmidt: Removing linear dependent vector 57
17:05 gram_schmidt: Removing linear dependent vector 58
17:05 gram_schmidt: Removing linear dependent vector 59
17:05 gram_schmidt: Removing linear dependent vector 60
17:05 gram_schmidt: Removing linear dependent vector 61
17:05 gram_schmidt: Removing linear dependent vector 62
17:05 gram_schmidt: Removing linear dependent vector 63
17:05 gram_schmidt: Removing linear dependent vector 64
17:05 gram_schmidt: Removing linear dependent vector 65
17:05 gram_schmidt: Removing linear dependent vector 66
17:05 gram_schmidt: Removing linear dependent vector 67
17:05 gram_schmidt: Removing linear dependent vector 68
17:05 gram_schmidt: Removing linear dependent vector 69
17:05 gram_schmidt: Removing linear dependent vector 70
17:05 gram_schmidt: Removing linear dependent vector 71
17:05 gram_schmidt: Removing linear dependent vector 72
17:05 gram_schmidt: Removing linear dependent vector 73
17:05 gram_schmidt: Removing linear dependent vector 74
17:05 gram_schmidt: Removing linear dependent vector 75
17:05 gram_schmidt: Removing linear dependent vector 76
17:05 gram_schmidt: Removing linear dependent vector 77
17:05 gram_schmidt: Removing linear dependent vector 78
17:05 gram_schmidt: Removing linear dependent vector 79
17:05 gram_schmidt: Removing linear dependent vector 80
17:05 gram_schmidt: Removing linear dependent vector 81
17:05 gram_schmidt: Removing linear dependent vector 82
17:05 gram_schmidt: Removing linear dependent vector 83
17:05 gram_schmidt: Removing linear dependent vector 84
17:05 gram_schmidt: Removing linear dependent vector 85
17:05 gram_schmidt: Removing linear dependent vector 86
17:05 gram_schmidt: Removing linear dependent vector 87
17:05 gram_schmidt: Removing linear dependent vector 88
17:05 gram_schmidt: Removing linear dependent vector 89
17:05 gram_schmidt: Removing linear dependent vector 90
17:05 gram_schmidt: Removing linear dependent vector 91
17:05 gram_schmidt: Removing linear dependent vector 92
17:05 gram_schmidt: Removing linear dependent vector 93
17:05 gram_schmidt: Removing linear dependent vector 94
17:05 gram_schmidt: Removing linear dependent vector 95
17:05 gram_schmidt: Removing linear dependent vector 96
17:05 gram_schmidt: Removing linear dependent vector 97
17:05 gram_schmidt: Removing linear dependent vector 98
17:05 gram_schmidt: Removing linear dependent vector 99
17:05 gram_schmidt: Removing linear dependent vector 100
17:05 gram_schmidt: Removing linear dependent vector 101
17:05 gram_schmidt: Removing linear dependent vector 3
17:05 gram_schmidt: Removing linear dependent vector 4
17:05 gram_schmidt: Removing linear dependent vector 5
17:05 gram_schmidt: Removing linear dependent vector 6
17:05 gram_schmidt: Removing linear dependent vector 7
17:05 gram_schmidt: Removing linear dependent vector 8
17:05 gram_schmidt: Removing linear dependent vector 9
17:05 gram_schmidt: Removing linear dependent vector 10
17:05 gram_schmidt: Removing linear dependent vector 11
17:05 gram_schmidt: Removing linear dependent vector 12
17:05 gram_schmidt: Removing linear dependent vector 13
17:05 gram_schmidt: Removing linear dependent vector 14
17:05 gram_schmidt: Removing linear dependent vector 15
17:05 gram_schmidt: Removing linear dependent vector 16
17:05 gram_schmidt: Removing linear dependent vector 17
17:05 gram_schmidt: Removing linear dependent vector 18
17:05 gram_schmidt: Removing linear dependent vector 19
17:05 gram_schmidt: Removing linear dependent vector 20
17:05 gram_schmidt: Removing linear dependent vector 21
17:05 gram_schmidt: Removing linear dependent vector 22
17:05 gram_schmidt: Removing linear dependent vector 23
17:05 gram_schmidt: Removing linear dependent vector 24
17:05 gram_schmidt: Removing linear dependent vector 25
17:05 gram_schmidt: Removing linear dependent vector 26
17:05 gram_schmidt: Removing linear dependent vector 27
17:05 gram_schmidt: Removing linear dependent vector 28
17:05 gram_schmidt: Removing linear dependent vector 29
17:05 gram_schmidt: Removing linear dependent vector 30
17:05 gram_schmidt: Removing linear dependent vector 31
17:05 gram_schmidt: Removing linear dependent vector 32
17:05 gram_schmidt: Removing linear dependent vector 33
17:05 gram_schmidt: Removing linear dependent vector 34
17:05 gram_schmidt: Removing linear dependent vector 35
17:05 gram_schmidt: Removing linear dependent vector 36
17:05 gram_schmidt: Removing linear dependent vector 37
17:05 gram_schmidt: Removing linear dependent vector 38
17:05 gram_schmidt: Removing linear dependent vector 39
17:05 gram_schmidt: Removing linear dependent vector 40
17:05 gram_schmidt: Removing linear dependent vector 41
17:05 gram_schmidt: Removing linear dependent vector 42
17:05 gram_schmidt: Removing linear dependent vector 43
17:05 gram_schmidt: Removing linear dependent vector 44
17:05 gram_schmidt: Removing linear dependent vector 45
17:05 gram_schmidt: Removing linear dependent vector 46
17:05 gram_schmidt: Removing linear dependent vector 47
17:05 gram_schmidt: Removing linear dependent vector 48
17:05 gram_schmidt: Removing linear dependent vector 49
17:05 gram_schmidt: Removing linear dependent vector 50
17:05 gram_schmidt: Removing linear dependent vector 51
17:05 gram_schmidt: Removing linear dependent vector 52
17:05 gram_schmidt: Removing linear dependent vector 53
17:05 gram_schmidt: Removing linear dependent vector 54
17:05 gram_schmidt: Removing linear dependent vector 55
17:05 gram_schmidt: Removing linear dependent vector 56
17:05 gram_schmidt: Removing linear dependent vector 57
17:05 gram_schmidt: Removing linear dependent vector 58
17:05 gram_schmidt: Removing linear dependent vector 59
17:05 gram_schmidt: Removing linear dependent vector 60
17:05 gram_schmidt: Removing linear dependent vector 61
17:05 gram_schmidt: Removing linear dependent vector 62
17:05 gram_schmidt: Removing linear dependent vector 63
17:05 gram_schmidt: Removing linear dependent vector 64
17:05 gram_schmidt: Removing linear dependent vector 65
17:05 gram_schmidt: Removing linear dependent vector 66
17:05 gram_schmidt: Removing linear dependent vector 67
17:05 gram_schmidt: Removing linear dependent vector 68
17:05 gram_schmidt: Removing linear dependent vector 69
17:05 gram_schmidt: Removing linear dependent vector 70
17:05 gram_schmidt: Removing linear dependent vector 71
17:05 gram_schmidt: Removing linear dependent vector 72
17:05 gram_schmidt: Removing linear dependent vector 73
17:05 gram_schmidt: Removing linear dependent vector 74
17:05 gram_schmidt: Removing linear dependent vector 75
17:05 gram_schmidt: Removing linear dependent vector 76
17:05 gram_schmidt: Removing linear dependent vector 77
17:05 gram_schmidt: Removing linear dependent vector 78
17:05 gram_schmidt: Removing linear dependent vector 79
17:05 gram_schmidt: Removing linear dependent vector 80
17:05 gram_schmidt: Removing linear dependent vector 81
17:05 gram_schmidt: Removing linear dependent vector 82
17:05 gram_schmidt: Removing linear dependent vector 83
17:05 gram_schmidt: Removing linear dependent vector 84
17:05 gram_schmidt: Removing linear dependent vector 85
17:05 gram_schmidt: Removing linear dependent vector 86
17:05 gram_schmidt: Removing linear dependent vector 87
17:05 gram_schmidt: Removing linear dependent vector 88
17:05 gram_schmidt: Removing linear dependent vector 89
17:05 gram_schmidt: Removing linear dependent vector 90
17:05 gram_schmidt: Removing linear dependent vector 91
17:05 gram_schmidt: Removing linear dependent vector 92
17:05 gram_schmidt: Removing linear dependent vector 93
17:05 gram_schmidt: Removing linear dependent vector 94
17:05 gram_schmidt: Removing linear dependent vector 95
17:05 gram_schmidt: Removing linear dependent vector 96
17:05 gram_schmidt: Removing linear dependent vector 97
17:05 gram_schmidt: Removing linear dependent vector 98
17:05 gram_schmidt: Removing linear dependent vector 99
17:05 gram_schmidt: Removing linear dependent vector 100
17:05 gram_schmidt: Removing linear dependent vector 101
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;17]" time="0.003240346908569336"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;18]" time="0.002259969711303711"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;19]" time="0.00476527214050293"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;20]" time="0.28520703315734863"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;21]" time="1.5267775058746338"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;22]" time="0.002660512924194336"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;23]" time="0.0018131732940673828"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;24]" time="0.0073893070220947266"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;25]" time="0.4144773483276367"><system-err>17:07 gram_schmidt: Orthonormalizing vector 31 again
17:07 gram_schmidt: Removing linear dependent vector 32
17:07 gram_schmidt: Removing linear dependent vector 33
17:07 gram_schmidt: Removing linear dependent vector 34
17:07 gram_schmidt: Removing linear dependent vector 35
17:07 gram_schmidt: Removing linear dependent vector 36
17:07 gram_schmidt: Removing linear dependent vector 37
17:07 gram_schmidt: Removing linear dependent vector 38
17:07 gram_schmidt: Removing linear dependent vector 39
17:07 gram_schmidt: Removing linear dependent vector 40
17:07 gram_schmidt: Removing linear dependent vector 41
17:07 gram_schmidt: Removing linear dependent vector 42
17:07 gram_schmidt: Orthonormalizing vector 31 again
17:07 gram_schmidt: Removing linear dependent vector 32
17:07 gram_schmidt: Removing linear dependent vector 33
17:07 gram_schmidt: Removing linear dependent vector 34
17:07 gram_schmidt: Removing linear dependent vector 35
17:07 gram_schmidt: Removing linear dependent vector 36
17:07 gram_schmidt: Removing linear dependent vector 37
17:07 gram_schmidt: Removing linear dependent vector 38
17:07 gram_schmidt: Removing linear dependent vector 39
17:07 gram_schmidt: Removing linear dependent vector 40
17:07 gram_schmidt: Removing linear dependent vector 41
17:07 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[0-&lt;lambda&gt;26]" time="0.2333540916442871"><system-err>17:07 gram_schmidt: Removing vector 0 of norm 0.0
17:07 gram_schmidt: Removing vector 1 of norm 0.0
17:07 gram_schmidt: Removing vector 2 of norm 0.0
17:07 gram_schmidt: Removing vector 3 of norm 0.0
17:07 gram_schmidt: Removing vector 4 of norm 0.0
17:07 gram_schmidt: Removing vector 5 of norm 0.0
17:07 gram_schmidt: Removing vector 6 of norm 0.0
17:07 gram_schmidt: Removing vector 7 of norm 0.0
17:07 gram_schmidt: Removing vector 8 of norm 0.0
17:07 gram_schmidt: Removing vector 9 of norm 0.0
17:07 gram_schmidt: Removing vector 10 of norm 0.0
17:07 gram_schmidt: Removing vector 11 of norm 0.0
17:07 gram_schmidt: Removing vector 12 of norm 0.0
17:07 gram_schmidt: Removing vector 13 of norm 0.0
17:07 gram_schmidt: Removing vector 14 of norm 0.0
17:07 gram_schmidt: Removing vector 15 of norm 0.0
17:07 gram_schmidt: Removing vector 16 of norm 0.0
17:07 gram_schmidt: Removing vector 17 of norm 0.0
17:07 gram_schmidt: Removing vector 18 of norm 0.0
17:07 gram_schmidt: Removing vector 19 of norm 0.0
17:07 gram_schmidt: Removing vector 20 of norm 0.0
17:07 gram_schmidt: Removing vector 21 of norm 0.0
17:07 gram_schmidt: Removing vector 22 of norm 0.0
17:07 gram_schmidt: Removing vector 23 of norm 0.0
17:07 gram_schmidt: Removing vector 24 of norm 0.0
17:07 gram_schmidt: Removing vector 25 of norm 0.0
17:07 gram_schmidt: Removing vector 26 of norm 0.0
17:07 gram_schmidt: Removing vector 27 of norm 0.0
17:07 gram_schmidt: Removing vector 28 of norm 0.0
17:07 gram_schmidt: Removing vector 29 of norm 0.0
17:07 gram_schmidt: Removing vector 30 of norm 0.0
17:07 gram_schmidt: Removing vector 31 of norm 0.0
17:07 gram_schmidt: Removing vector 32 of norm 0.0
17:07 gram_schmidt: Removing vector 33 of norm 0.0
17:07 gram_schmidt: Removing vector 34 of norm 0.0
17:07 gram_schmidt: Removing vector 35 of norm 0.0
17:07 gram_schmidt: Removing vector 36 of norm 0.0
17:07 gram_schmidt: Removing vector 37 of norm 0.0
17:07 gram_schmidt: Removing vector 38 of norm 0.0
17:07 gram_schmidt: Removing vector 39 of norm 0.0
17:07 gram_schmidt: Removing vector 40 of norm 0.0
17:07 gram_schmidt: Removing vector 41 of norm 0.0
17:07 gram_schmidt: Removing vector 42 of norm 0.0
17:07 gram_schmidt: Removing vector 43 of norm 0.0
17:07 gram_schmidt: Removing vector 44 of norm 0.0
17:07 gram_schmidt: Removing vector 45 of norm 0.0
17:07 gram_schmidt: Removing vector 46 of norm 0.0
17:07 gram_schmidt: Removing vector 47 of norm 0.0
17:07 gram_schmidt: Removing vector 48 of norm 0.0
17:07 gram_schmidt: Removing vector 49 of norm 0.0
17:07 gram_schmidt: Removing vector 50 of norm 0.0
17:07 gram_schmidt: Removing vector 51 of norm 0.0
17:07 gram_schmidt: Removing vector 52 of norm 0.0
17:07 gram_schmidt: Removing vector 53 of norm 0.0
17:07 gram_schmidt: Removing vector 54 of norm 0.0
17:07 gram_schmidt: Removing vector 55 of norm 0.0
17:07 gram_schmidt: Removing vector 56 of norm 0.0
17:07 gram_schmidt: Removing vector 57 of norm 0.0
17:07 gram_schmidt: Removing vector 58 of norm 0.0
17:07 gram_schmidt: Removing vector 59 of norm 0.0
17:07 gram_schmidt: Removing vector 60 of norm 0.0
17:07 gram_schmidt: Removing vector 61 of norm 0.0
17:07 gram_schmidt: Removing vector 62 of norm 0.0
17:07 gram_schmidt: Removing vector 63 of norm 0.0
17:07 gram_schmidt: Removing vector 64 of norm 0.0
17:07 gram_schmidt: Removing vector 65 of norm 0.0
17:07 gram_schmidt: Removing vector 66 of norm 0.0
17:07 gram_schmidt: Removing vector 67 of norm 0.0
17:07 gram_schmidt: Removing vector 68 of norm 0.0
17:07 gram_schmidt: Removing vector 69 of norm 0.0
17:07 gram_schmidt: Removing vector 70 of norm 0.0
17:07 gram_schmidt: Removing vector 71 of norm 0.0
17:07 gram_schmidt: Removing vector 72 of norm 0.0
17:07 gram_schmidt: Removing vector 73 of norm 0.0
17:07 gram_schmidt: Removing vector 74 of norm 0.0
17:07 gram_schmidt: Removing vector 75 of norm 0.0
17:07 gram_schmidt: Removing vector 76 of norm 0.0
17:07 gram_schmidt: Removing vector 77 of norm 0.0
17:07 gram_schmidt: Removing vector 78 of norm 0.0
17:07 gram_schmidt: Removing vector 79 of norm 0.0
17:07 gram_schmidt: Removing vector 80 of norm 0.0
17:07 gram_schmidt: Removing vector 81 of norm 0.0
17:07 gram_schmidt: Removing vector 82 of norm 0.0
17:07 gram_schmidt: Removing vector 83 of norm 0.0
17:07 gram_schmidt: Removing vector 84 of norm 0.0
17:07 gram_schmidt: Removing vector 85 of norm 0.0
17:07 gram_schmidt: Removing vector 86 of norm 0.0
17:07 gram_schmidt: Removing vector 87 of norm 0.0
17:07 gram_schmidt: Removing vector 88 of norm 0.0
17:07 gram_schmidt: Removing vector 89 of norm 0.0
17:07 gram_schmidt: Removing vector 90 of norm 0.0
17:07 gram_schmidt: Removing vector 91 of norm 0.0
17:07 gram_schmidt: Removing vector 92 of norm 0.0
17:07 gram_schmidt: Removing vector 93 of norm 0.0
17:07 gram_schmidt: Removing vector 94 of norm 0.0
17:07 gram_schmidt: Removing vector 95 of norm 0.0
17:07 gram_schmidt: Removing vector 96 of norm 0.0
17:07 gram_schmidt: Removing vector 97 of norm 0.0
17:07 gram_schmidt: Removing vector 98 of norm 0.0
17:07 gram_schmidt: Removing vector 99 of norm 0.0
17:07 gram_schmidt: Removing vector 100 of norm 0.0
17:07 gram_schmidt: Removing vector 101 of norm 0.0
17:07 gram_schmidt: Removing vector 0 of norm 0.0
17:07 gram_schmidt: Removing vector 1 of norm 0.0
17:07 gram_schmidt: Removing vector 2 of norm 0.0
17:07 gram_schmidt: Removing vector 3 of norm 0.0
17:07 gram_schmidt: Removing vector 4 of norm 0.0
17:07 gram_schmidt: Removing vector 5 of norm 0.0
17:07 gram_schmidt: Removing vector 6 of norm 0.0
17:07 gram_schmidt: Removing vector 7 of norm 0.0
17:07 gram_schmidt: Removing vector 8 of norm 0.0
17:07 gram_schmidt: Removing vector 9 of norm 0.0
17:07 gram_schmidt: Removing vector 10 of norm 0.0
17:07 gram_schmidt: Removing vector 11 of norm 0.0
17:07 gram_schmidt: Removing vector 12 of norm 0.0
17:07 gram_schmidt: Removing vector 13 of norm 0.0
17:07 gram_schmidt: Removing vector 14 of norm 0.0
17:07 gram_schmidt: Removing vector 15 of norm 0.0
17:07 gram_schmidt: Removing vector 16 of norm 0.0
17:07 gram_schmidt: Removing vector 17 of norm 0.0
17:07 gram_schmidt: Removing vector 18 of norm 0.0
17:07 gram_schmidt: Removing vector 19 of norm 0.0
17:07 gram_schmidt: Removing vector 20 of norm 0.0
17:07 gram_schmidt: Removing vector 21 of norm 0.0
17:07 gram_schmidt: Removing vector 22 of norm 0.0
17:07 gram_schmidt: Removing vector 23 of norm 0.0
17:07 gram_schmidt: Removing vector 24 of norm 0.0
17:07 gram_schmidt: Removing vector 25 of norm 0.0
17:07 gram_schmidt: Removing vector 26 of norm 0.0
17:07 gram_schmidt: Removing vector 27 of norm 0.0
17:07 gram_schmidt: Removing vector 28 of norm 0.0
17:07 gram_schmidt: Removing vector 29 of norm 0.0
17:07 gram_schmidt: Removing vector 30 of norm 0.0
17:07 gram_schmidt: Removing vector 31 of norm 0.0
17:07 gram_schmidt: Removing vector 32 of norm 0.0
17:07 gram_schmidt: Removing vector 33 of norm 0.0
17:07 gram_schmidt: Removing vector 34 of norm 0.0
17:07 gram_schmidt: Removing vector 35 of norm 0.0
17:07 gram_schmidt: Removing vector 36 of norm 0.0
17:07 gram_schmidt: Removing vector 37 of norm 0.0
17:07 gram_schmidt: Removing vector 38 of norm 0.0
17:07 gram_schmidt: Removing vector 39 of norm 0.0
17:07 gram_schmidt: Removing vector 40 of norm 0.0
17:07 gram_schmidt: Removing vector 41 of norm 0.0
17:07 gram_schmidt: Removing vector 42 of norm 0.0
17:07 gram_schmidt: Removing vector 43 of norm 0.0
17:07 gram_schmidt: Removing vector 44 of norm 0.0
17:07 gram_schmidt: Removing vector 45 of norm 0.0
17:07 gram_schmidt: Removing vector 46 of norm 0.0
17:07 gram_schmidt: Removing vector 47 of norm 0.0
17:07 gram_schmidt: Removing vector 48 of norm 0.0
17:07 gram_schmidt: Removing vector 49 of norm 0.0
17:07 gram_schmidt: Removing vector 50 of norm 0.0
17:07 gram_schmidt: Removing vector 51 of norm 0.0
17:07 gram_schmidt: Removing vector 52 of norm 0.0
17:07 gram_schmidt: Removing vector 53 of norm 0.0
17:07 gram_schmidt: Removing vector 54 of norm 0.0
17:07 gram_schmidt: Removing vector 55 of norm 0.0
17:07 gram_schmidt: Removing vector 56 of norm 0.0
17:07 gram_schmidt: Removing vector 57 of norm 0.0
17:07 gram_schmidt: Removing vector 58 of norm 0.0
17:07 gram_schmidt: Removing vector 59 of norm 0.0
17:07 gram_schmidt: Removing vector 60 of norm 0.0
17:07 gram_schmidt: Removing vector 61 of norm 0.0
17:07 gram_schmidt: Removing vector 62 of norm 0.0
17:07 gram_schmidt: Removing vector 63 of norm 0.0
17:07 gram_schmidt: Removing vector 64 of norm 0.0
17:07 gram_schmidt: Removing vector 65 of norm 0.0
17:07 gram_schmidt: Removing vector 66 of norm 0.0
17:07 gram_schmidt: Removing vector 67 of norm 0.0
17:07 gram_schmidt: Removing vector 68 of norm 0.0
17:07 gram_schmidt: Removing vector 69 of norm 0.0
17:07 gram_schmidt: Removing vector 70 of norm 0.0
17:07 gram_schmidt: Removing vector 71 of norm 0.0
17:07 gram_schmidt: Removing vector 72 of norm 0.0
17:07 gram_schmidt: Removing vector 73 of norm 0.0
17:07 gram_schmidt: Removing vector 74 of norm 0.0
17:07 gram_schmidt: Removing vector 75 of norm 0.0
17:07 gram_schmidt: Removing vector 76 of norm 0.0
17:07 gram_schmidt: Removing vector 77 of norm 0.0
17:07 gram_schmidt: Removing vector 78 of norm 0.0
17:07 gram_schmidt: Removing vector 79 of norm 0.0
17:07 gram_schmidt: Removing vector 80 of norm 0.0
17:07 gram_schmidt: Removing vector 81 of norm 0.0
17:07 gram_schmidt: Removing vector 82 of norm 0.0
17:07 gram_schmidt: Removing vector 83 of norm 0.0
17:07 gram_schmidt: Removing vector 84 of norm 0.0
17:07 gram_schmidt: Removing vector 85 of norm 0.0
17:07 gram_schmidt: Removing vector 86 of norm 0.0
17:07 gram_schmidt: Removing vector 87 of norm 0.0
17:07 gram_schmidt: Removing vector 88 of norm 0.0
17:07 gram_schmidt: Removing vector 89 of norm 0.0
17:07 gram_schmidt: Removing vector 90 of norm 0.0
17:07 gram_schmidt: Removing vector 91 of norm 0.0
17:07 gram_schmidt: Removing vector 92 of norm 0.0
17:07 gram_schmidt: Removing vector 93 of norm 0.0
17:07 gram_schmidt: Removing vector 94 of norm 0.0
17:07 gram_schmidt: Removing vector 95 of norm 0.0
17:07 gram_schmidt: Removing vector 96 of norm 0.0
17:07 gram_schmidt: Removing vector 97 of norm 0.0
17:07 gram_schmidt: Removing vector 98 of norm 0.0
17:07 gram_schmidt: Removing vector 99 of norm 0.0
17:07 gram_schmidt: Removing vector 100 of norm 0.0
17:07 gram_schmidt: Removing vector 101 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;0]" time="0.0028772354125976562"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;1]" time="0.0019505023956298828"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;2]" time="0.002056121826171875"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;3]" time="0.11441707611083984"><system-err>17:07 gram_schmidt: Orthonormalizing vector 31 again
17:07 gram_schmidt: Removing linear dependent vector 32
17:07 gram_schmidt: Removing linear dependent vector 33
17:07 gram_schmidt: Removing linear dependent vector 34
17:07 gram_schmidt: Removing linear dependent vector 35
17:07 gram_schmidt: Removing linear dependent vector 36
17:07 gram_schmidt: Removing linear dependent vector 37
17:07 gram_schmidt: Removing linear dependent vector 38
17:07 gram_schmidt: Removing linear dependent vector 39
17:07 gram_schmidt: Removing linear dependent vector 40
17:07 gram_schmidt: Removing linear dependent vector 41
17:07 gram_schmidt: Removing linear dependent vector 42
17:08 gram_schmidt: Orthonormalizing vector 31 again
17:08 gram_schmidt: Removing linear dependent vector 32
17:08 gram_schmidt: Removing linear dependent vector 33
17:08 gram_schmidt: Removing linear dependent vector 34
17:08 gram_schmidt: Removing linear dependent vector 35
17:08 gram_schmidt: Removing linear dependent vector 36
17:08 gram_schmidt: Removing linear dependent vector 37
17:08 gram_schmidt: Removing linear dependent vector 38
17:08 gram_schmidt: Removing linear dependent vector 39
17:08 gram_schmidt: Removing linear dependent vector 40
17:08 gram_schmidt: Removing linear dependent vector 41
17:08 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;4]" time="0.022015810012817383"><system-err>17:08 gram_schmidt: Removing vector 0 of norm 0.0
17:08 gram_schmidt: Removing vector 1 of norm 0.0
17:08 gram_schmidt: Removing vector 2 of norm 0.0
17:08 gram_schmidt: Removing vector 3 of norm 0.0
17:08 gram_schmidt: Removing vector 4 of norm 0.0
17:08 gram_schmidt: Removing vector 5 of norm 0.0
17:08 gram_schmidt: Removing vector 6 of norm 0.0
17:08 gram_schmidt: Removing vector 7 of norm 0.0
17:08 gram_schmidt: Removing vector 8 of norm 0.0
17:08 gram_schmidt: Removing vector 9 of norm 0.0
17:08 gram_schmidt: Removing vector 10 of norm 0.0
17:08 gram_schmidt: Removing vector 11 of norm 0.0
17:08 gram_schmidt: Removing vector 12 of norm 0.0
17:08 gram_schmidt: Removing vector 13 of norm 0.0
17:08 gram_schmidt: Removing vector 14 of norm 0.0
17:08 gram_schmidt: Removing vector 15 of norm 0.0
17:08 gram_schmidt: Removing vector 16 of norm 0.0
17:08 gram_schmidt: Removing vector 17 of norm 0.0
17:08 gram_schmidt: Removing vector 18 of norm 0.0
17:08 gram_schmidt: Removing vector 19 of norm 0.0
17:08 gram_schmidt: Removing vector 20 of norm 0.0
17:08 gram_schmidt: Removing vector 21 of norm 0.0
17:08 gram_schmidt: Removing vector 22 of norm 0.0
17:08 gram_schmidt: Removing vector 23 of norm 0.0
17:08 gram_schmidt: Removing vector 24 of norm 0.0
17:08 gram_schmidt: Removing vector 25 of norm 0.0
17:08 gram_schmidt: Removing vector 26 of norm 0.0
17:08 gram_schmidt: Removing vector 27 of norm 0.0
17:08 gram_schmidt: Removing vector 28 of norm 0.0
17:08 gram_schmidt: Removing vector 29 of norm 0.0
17:08 gram_schmidt: Removing vector 30 of norm 0.0
17:08 gram_schmidt: Removing vector 31 of norm 0.0
17:08 gram_schmidt: Removing vector 32 of norm 0.0
17:08 gram_schmidt: Removing vector 33 of norm 0.0
17:08 gram_schmidt: Removing vector 34 of norm 0.0
17:08 gram_schmidt: Removing vector 35 of norm 0.0
17:08 gram_schmidt: Removing vector 36 of norm 0.0
17:08 gram_schmidt: Removing vector 37 of norm 0.0
17:08 gram_schmidt: Removing vector 38 of norm 0.0
17:08 gram_schmidt: Removing vector 39 of norm 0.0
17:08 gram_schmidt: Removing vector 40 of norm 0.0
17:08 gram_schmidt: Removing vector 41 of norm 0.0
17:08 gram_schmidt: Removing vector 42 of norm 0.0
17:08 gram_schmidt: Removing vector 43 of norm 0.0
17:08 gram_schmidt: Removing vector 44 of norm 0.0
17:08 gram_schmidt: Removing vector 45 of norm 0.0
17:08 gram_schmidt: Removing vector 46 of norm 0.0
17:08 gram_schmidt: Removing vector 47 of norm 0.0
17:08 gram_schmidt: Removing vector 48 of norm 0.0
17:08 gram_schmidt: Removing vector 49 of norm 0.0
17:08 gram_schmidt: Removing vector 50 of norm 0.0
17:08 gram_schmidt: Removing vector 51 of norm 0.0
17:08 gram_schmidt: Removing vector 52 of norm 0.0
17:08 gram_schmidt: Removing vector 53 of norm 0.0
17:08 gram_schmidt: Removing vector 54 of norm 0.0
17:08 gram_schmidt: Removing vector 55 of norm 0.0
17:08 gram_schmidt: Removing vector 56 of norm 0.0
17:08 gram_schmidt: Removing vector 57 of norm 0.0
17:08 gram_schmidt: Removing vector 58 of norm 0.0
17:08 gram_schmidt: Removing vector 59 of norm 0.0
17:08 gram_schmidt: Removing vector 60 of norm 0.0
17:08 gram_schmidt: Removing vector 61 of norm 0.0
17:08 gram_schmidt: Removing vector 62 of norm 0.0
17:08 gram_schmidt: Removing vector 63 of norm 0.0
17:08 gram_schmidt: Removing vector 64 of norm 0.0
17:08 gram_schmidt: Removing vector 65 of norm 0.0
17:08 gram_schmidt: Removing vector 66 of norm 0.0
17:08 gram_schmidt: Removing vector 67 of norm 0.0
17:08 gram_schmidt: Removing vector 68 of norm 0.0
17:08 gram_schmidt: Removing vector 69 of norm 0.0
17:08 gram_schmidt: Removing vector 70 of norm 0.0
17:08 gram_schmidt: Removing vector 71 of norm 0.0
17:08 gram_schmidt: Removing vector 72 of norm 0.0
17:08 gram_schmidt: Removing vector 73 of norm 0.0
17:08 gram_schmidt: Removing vector 74 of norm 0.0
17:08 gram_schmidt: Removing vector 75 of norm 0.0
17:08 gram_schmidt: Removing vector 76 of norm 0.0
17:08 gram_schmidt: Removing vector 77 of norm 0.0
17:08 gram_schmidt: Removing vector 78 of norm 0.0
17:08 gram_schmidt: Removing vector 79 of norm 0.0
17:08 gram_schmidt: Removing vector 80 of norm 0.0
17:08 gram_schmidt: Removing vector 81 of norm 0.0
17:08 gram_schmidt: Removing vector 82 of norm 0.0
17:08 gram_schmidt: Removing vector 83 of norm 0.0
17:08 gram_schmidt: Removing vector 84 of norm 0.0
17:08 gram_schmidt: Removing vector 85 of norm 0.0
17:08 gram_schmidt: Removing vector 86 of norm 0.0
17:08 gram_schmidt: Removing vector 87 of norm 0.0
17:08 gram_schmidt: Removing vector 88 of norm 0.0
17:08 gram_schmidt: Removing vector 89 of norm 0.0
17:08 gram_schmidt: Removing vector 90 of norm 0.0
17:08 gram_schmidt: Removing vector 91 of norm 0.0
17:08 gram_schmidt: Removing vector 92 of norm 0.0
17:08 gram_schmidt: Removing vector 93 of norm 0.0
17:08 gram_schmidt: Removing vector 94 of norm 0.0
17:08 gram_schmidt: Removing vector 95 of norm 0.0
17:08 gram_schmidt: Removing vector 96 of norm 0.0
17:08 gram_schmidt: Removing vector 97 of norm 0.0
17:08 gram_schmidt: Removing vector 98 of norm 0.0
17:08 gram_schmidt: Removing vector 99 of norm 0.0
17:08 gram_schmidt: Removing vector 100 of norm 0.0
17:08 gram_schmidt: Removing vector 101 of norm 0.0
17:08 gram_schmidt: Removing vector 0 of norm 0.0
17:08 gram_schmidt: Removing vector 1 of norm 0.0
17:08 gram_schmidt: Removing vector 2 of norm 0.0
17:08 gram_schmidt: Removing vector 3 of norm 0.0
17:08 gram_schmidt: Removing vector 4 of norm 0.0
17:08 gram_schmidt: Removing vector 5 of norm 0.0
17:08 gram_schmidt: Removing vector 6 of norm 0.0
17:08 gram_schmidt: Removing vector 7 of norm 0.0
17:08 gram_schmidt: Removing vector 8 of norm 0.0
17:08 gram_schmidt: Removing vector 9 of norm 0.0
17:08 gram_schmidt: Removing vector 10 of norm 0.0
17:08 gram_schmidt: Removing vector 11 of norm 0.0
17:08 gram_schmidt: Removing vector 12 of norm 0.0
17:08 gram_schmidt: Removing vector 13 of norm 0.0
17:08 gram_schmidt: Removing vector 14 of norm 0.0
17:08 gram_schmidt: Removing vector 15 of norm 0.0
17:08 gram_schmidt: Removing vector 16 of norm 0.0
17:08 gram_schmidt: Removing vector 17 of norm 0.0
17:08 gram_schmidt: Removing vector 18 of norm 0.0
17:08 gram_schmidt: Removing vector 19 of norm 0.0
17:08 gram_schmidt: Removing vector 20 of norm 0.0
17:08 gram_schmidt: Removing vector 21 of norm 0.0
17:08 gram_schmidt: Removing vector 22 of norm 0.0
17:08 gram_schmidt: Removing vector 23 of norm 0.0
17:08 gram_schmidt: Removing vector 24 of norm 0.0
17:08 gram_schmidt: Removing vector 25 of norm 0.0
17:08 gram_schmidt: Removing vector 26 of norm 0.0
17:08 gram_schmidt: Removing vector 27 of norm 0.0
17:08 gram_schmidt: Removing vector 28 of norm 0.0
17:08 gram_schmidt: Removing vector 29 of norm 0.0
17:08 gram_schmidt: Removing vector 30 of norm 0.0
17:08 gram_schmidt: Removing vector 31 of norm 0.0
17:08 gram_schmidt: Removing vector 32 of norm 0.0
17:08 gram_schmidt: Removing vector 33 of norm 0.0
17:08 gram_schmidt: Removing vector 34 of norm 0.0
17:08 gram_schmidt: Removing vector 35 of norm 0.0
17:08 gram_schmidt: Removing vector 36 of norm 0.0
17:08 gram_schmidt: Removing vector 37 of norm 0.0
17:08 gram_schmidt: Removing vector 38 of norm 0.0
17:08 gram_schmidt: Removing vector 39 of norm 0.0
17:08 gram_schmidt: Removing vector 40 of norm 0.0
17:08 gram_schmidt: Removing vector 41 of norm 0.0
17:08 gram_schmidt: Removing vector 42 of norm 0.0
17:08 gram_schmidt: Removing vector 43 of norm 0.0
17:08 gram_schmidt: Removing vector 44 of norm 0.0
17:08 gram_schmidt: Removing vector 45 of norm 0.0
17:08 gram_schmidt: Removing vector 46 of norm 0.0
17:08 gram_schmidt: Removing vector 47 of norm 0.0
17:08 gram_schmidt: Removing vector 48 of norm 0.0
17:08 gram_schmidt: Removing vector 49 of norm 0.0
17:08 gram_schmidt: Removing vector 50 of norm 0.0
17:08 gram_schmidt: Removing vector 51 of norm 0.0
17:08 gram_schmidt: Removing vector 52 of norm 0.0
17:08 gram_schmidt: Removing vector 53 of norm 0.0
17:08 gram_schmidt: Removing vector 54 of norm 0.0
17:08 gram_schmidt: Removing vector 55 of norm 0.0
17:08 gram_schmidt: Removing vector 56 of norm 0.0
17:08 gram_schmidt: Removing vector 57 of norm 0.0
17:08 gram_schmidt: Removing vector 58 of norm 0.0
17:08 gram_schmidt: Removing vector 59 of norm 0.0
17:08 gram_schmidt: Removing vector 60 of norm 0.0
17:08 gram_schmidt: Removing vector 61 of norm 0.0
17:08 gram_schmidt: Removing vector 62 of norm 0.0
17:08 gram_schmidt: Removing vector 63 of norm 0.0
17:08 gram_schmidt: Removing vector 64 of norm 0.0
17:08 gram_schmidt: Removing vector 65 of norm 0.0
17:08 gram_schmidt: Removing vector 66 of norm 0.0
17:08 gram_schmidt: Removing vector 67 of norm 0.0
17:08 gram_schmidt: Removing vector 68 of norm 0.0
17:08 gram_schmidt: Removing vector 69 of norm 0.0
17:08 gram_schmidt: Removing vector 70 of norm 0.0
17:08 gram_schmidt: Removing vector 71 of norm 0.0
17:08 gram_schmidt: Removing vector 72 of norm 0.0
17:08 gram_schmidt: Removing vector 73 of norm 0.0
17:08 gram_schmidt: Removing vector 74 of norm 0.0
17:08 gram_schmidt: Removing vector 75 of norm 0.0
17:08 gram_schmidt: Removing vector 76 of norm 0.0
17:08 gram_schmidt: Removing vector 77 of norm 0.0
17:08 gram_schmidt: Removing vector 78 of norm 0.0
17:08 gram_schmidt: Removing vector 79 of norm 0.0
17:08 gram_schmidt: Removing vector 80 of norm 0.0
17:08 gram_schmidt: Removing vector 81 of norm 0.0
17:08 gram_schmidt: Removing vector 82 of norm 0.0
17:08 gram_schmidt: Removing vector 83 of norm 0.0
17:08 gram_schmidt: Removing vector 84 of norm 0.0
17:08 gram_schmidt: Removing vector 85 of norm 0.0
17:08 gram_schmidt: Removing vector 86 of norm 0.0
17:08 gram_schmidt: Removing vector 87 of norm 0.0
17:08 gram_schmidt: Removing vector 88 of norm 0.0
17:08 gram_schmidt: Removing vector 89 of norm 0.0
17:08 gram_schmidt: Removing vector 90 of norm 0.0
17:08 gram_schmidt: Removing vector 91 of norm 0.0
17:08 gram_schmidt: Removing vector 92 of norm 0.0
17:08 gram_schmidt: Removing vector 93 of norm 0.0
17:08 gram_schmidt: Removing vector 94 of norm 0.0
17:08 gram_schmidt: Removing vector 95 of norm 0.0
17:08 gram_schmidt: Removing vector 96 of norm 0.0
17:08 gram_schmidt: Removing vector 97 of norm 0.0
17:08 gram_schmidt: Removing vector 98 of norm 0.0
17:08 gram_schmidt: Removing vector 99 of norm 0.0
17:08 gram_schmidt: Removing vector 100 of norm 0.0
17:08 gram_schmidt: Removing vector 101 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;5]" time="0.0025849342346191406"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;6]" time="0.0017499923706054688"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;7]" time="0.002269744873046875"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;8]" time="0.2121737003326416"><system-err>17:08 gram_schmidt: Orthonormalizing vector 31 again
17:08 gram_schmidt: Removing linear dependent vector 32
17:08 gram_schmidt: Removing linear dependent vector 33
17:08 gram_schmidt: Removing linear dependent vector 34
17:08 gram_schmidt: Removing linear dependent vector 35
17:08 gram_schmidt: Removing linear dependent vector 36
17:08 gram_schmidt: Removing linear dependent vector 37
17:08 gram_schmidt: Removing linear dependent vector 38
17:08 gram_schmidt: Removing linear dependent vector 39
17:08 gram_schmidt: Removing linear dependent vector 40
17:08 gram_schmidt: Removing linear dependent vector 41
17:08 gram_schmidt: Removing linear dependent vector 42
17:08 gram_schmidt: Orthonormalizing vector 31 again
17:08 gram_schmidt: Removing linear dependent vector 32
17:08 gram_schmidt: Removing linear dependent vector 33
17:08 gram_schmidt: Removing linear dependent vector 34
17:08 gram_schmidt: Removing linear dependent vector 35
17:08 gram_schmidt: Removing linear dependent vector 36
17:08 gram_schmidt: Removing linear dependent vector 37
17:08 gram_schmidt: Removing linear dependent vector 38
17:08 gram_schmidt: Removing linear dependent vector 39
17:08 gram_schmidt: Removing linear dependent vector 40
17:08 gram_schmidt: Removing linear dependent vector 41
17:08 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;9]" time="0.028623104095458984"><system-err>17:08 gram_schmidt: Removing vector 0 of norm 0.0
17:08 gram_schmidt: Removing vector 1 of norm 0.0
17:08 gram_schmidt: Removing vector 2 of norm 0.0
17:08 gram_schmidt: Removing vector 3 of norm 0.0
17:08 gram_schmidt: Removing vector 4 of norm 0.0
17:08 gram_schmidt: Removing vector 5 of norm 0.0
17:08 gram_schmidt: Removing vector 6 of norm 0.0
17:08 gram_schmidt: Removing vector 7 of norm 0.0
17:08 gram_schmidt: Removing vector 8 of norm 0.0
17:08 gram_schmidt: Removing vector 9 of norm 0.0
17:08 gram_schmidt: Removing vector 10 of norm 0.0
17:08 gram_schmidt: Removing vector 11 of norm 0.0
17:08 gram_schmidt: Removing vector 12 of norm 0.0
17:08 gram_schmidt: Removing vector 13 of norm 0.0
17:08 gram_schmidt: Removing vector 14 of norm 0.0
17:08 gram_schmidt: Removing vector 15 of norm 0.0
17:08 gram_schmidt: Removing vector 16 of norm 0.0
17:08 gram_schmidt: Removing vector 17 of norm 0.0
17:08 gram_schmidt: Removing vector 18 of norm 0.0
17:08 gram_schmidt: Removing vector 19 of norm 0.0
17:08 gram_schmidt: Removing vector 20 of norm 0.0
17:08 gram_schmidt: Removing vector 21 of norm 0.0
17:08 gram_schmidt: Removing vector 22 of norm 0.0
17:08 gram_schmidt: Removing vector 23 of norm 0.0
17:08 gram_schmidt: Removing vector 24 of norm 0.0
17:08 gram_schmidt: Removing vector 25 of norm 0.0
17:08 gram_schmidt: Removing vector 26 of norm 0.0
17:08 gram_schmidt: Removing vector 27 of norm 0.0
17:08 gram_schmidt: Removing vector 28 of norm 0.0
17:08 gram_schmidt: Removing vector 29 of norm 0.0
17:08 gram_schmidt: Removing vector 30 of norm 0.0
17:08 gram_schmidt: Removing vector 31 of norm 0.0
17:08 gram_schmidt: Removing vector 32 of norm 0.0
17:08 gram_schmidt: Removing vector 33 of norm 0.0
17:08 gram_schmidt: Removing vector 34 of norm 0.0
17:08 gram_schmidt: Removing vector 35 of norm 0.0
17:08 gram_schmidt: Removing vector 36 of norm 0.0
17:08 gram_schmidt: Removing vector 37 of norm 0.0
17:08 gram_schmidt: Removing vector 38 of norm 0.0
17:08 gram_schmidt: Removing vector 39 of norm 0.0
17:08 gram_schmidt: Removing vector 40 of norm 0.0
17:08 gram_schmidt: Removing vector 41 of norm 0.0
17:08 gram_schmidt: Removing vector 42 of norm 0.0
17:08 gram_schmidt: Removing vector 43 of norm 0.0
17:08 gram_schmidt: Removing vector 44 of norm 0.0
17:08 gram_schmidt: Removing vector 45 of norm 0.0
17:08 gram_schmidt: Removing vector 46 of norm 0.0
17:08 gram_schmidt: Removing vector 47 of norm 0.0
17:08 gram_schmidt: Removing vector 48 of norm 0.0
17:08 gram_schmidt: Removing vector 49 of norm 0.0
17:08 gram_schmidt: Removing vector 50 of norm 0.0
17:08 gram_schmidt: Removing vector 51 of norm 0.0
17:08 gram_schmidt: Removing vector 52 of norm 0.0
17:08 gram_schmidt: Removing vector 53 of norm 0.0
17:08 gram_schmidt: Removing vector 54 of norm 0.0
17:08 gram_schmidt: Removing vector 55 of norm 0.0
17:08 gram_schmidt: Removing vector 56 of norm 0.0
17:08 gram_schmidt: Removing vector 57 of norm 0.0
17:08 gram_schmidt: Removing vector 58 of norm 0.0
17:08 gram_schmidt: Removing vector 59 of norm 0.0
17:08 gram_schmidt: Removing vector 60 of norm 0.0
17:08 gram_schmidt: Removing vector 61 of norm 0.0
17:08 gram_schmidt: Removing vector 62 of norm 0.0
17:08 gram_schmidt: Removing vector 63 of norm 0.0
17:08 gram_schmidt: Removing vector 64 of norm 0.0
17:08 gram_schmidt: Removing vector 65 of norm 0.0
17:08 gram_schmidt: Removing vector 66 of norm 0.0
17:08 gram_schmidt: Removing vector 67 of norm 0.0
17:08 gram_schmidt: Removing vector 68 of norm 0.0
17:08 gram_schmidt: Removing vector 69 of norm 0.0
17:08 gram_schmidt: Removing vector 70 of norm 0.0
17:08 gram_schmidt: Removing vector 71 of norm 0.0
17:08 gram_schmidt: Removing vector 72 of norm 0.0
17:08 gram_schmidt: Removing vector 73 of norm 0.0
17:08 gram_schmidt: Removing vector 74 of norm 0.0
17:08 gram_schmidt: Removing vector 75 of norm 0.0
17:08 gram_schmidt: Removing vector 76 of norm 0.0
17:08 gram_schmidt: Removing vector 77 of norm 0.0
17:08 gram_schmidt: Removing vector 78 of norm 0.0
17:08 gram_schmidt: Removing vector 79 of norm 0.0
17:08 gram_schmidt: Removing vector 80 of norm 0.0
17:08 gram_schmidt: Removing vector 81 of norm 0.0
17:08 gram_schmidt: Removing vector 82 of norm 0.0
17:08 gram_schmidt: Removing vector 83 of norm 0.0
17:08 gram_schmidt: Removing vector 84 of norm 0.0
17:08 gram_schmidt: Removing vector 85 of norm 0.0
17:08 gram_schmidt: Removing vector 86 of norm 0.0
17:08 gram_schmidt: Removing vector 87 of norm 0.0
17:08 gram_schmidt: Removing vector 88 of norm 0.0
17:08 gram_schmidt: Removing vector 89 of norm 0.0
17:08 gram_schmidt: Removing vector 90 of norm 0.0
17:08 gram_schmidt: Removing vector 91 of norm 0.0
17:08 gram_schmidt: Removing vector 92 of norm 0.0
17:08 gram_schmidt: Removing vector 93 of norm 0.0
17:08 gram_schmidt: Removing vector 94 of norm 0.0
17:08 gram_schmidt: Removing vector 95 of norm 0.0
17:08 gram_schmidt: Removing vector 96 of norm 0.0
17:08 gram_schmidt: Removing vector 97 of norm 0.0
17:08 gram_schmidt: Removing vector 98 of norm 0.0
17:08 gram_schmidt: Removing vector 99 of norm 0.0
17:08 gram_schmidt: Removing vector 100 of norm 0.0
17:08 gram_schmidt: Removing vector 101 of norm 0.0
17:08 gram_schmidt: Removing vector 0 of norm 0.0
17:08 gram_schmidt: Removing vector 1 of norm 0.0
17:08 gram_schmidt: Removing vector 2 of norm 0.0
17:08 gram_schmidt: Removing vector 3 of norm 0.0
17:08 gram_schmidt: Removing vector 4 of norm 0.0
17:08 gram_schmidt: Removing vector 5 of norm 0.0
17:08 gram_schmidt: Removing vector 6 of norm 0.0
17:08 gram_schmidt: Removing vector 7 of norm 0.0
17:08 gram_schmidt: Removing vector 8 of norm 0.0
17:08 gram_schmidt: Removing vector 9 of norm 0.0
17:08 gram_schmidt: Removing vector 10 of norm 0.0
17:08 gram_schmidt: Removing vector 11 of norm 0.0
17:08 gram_schmidt: Removing vector 12 of norm 0.0
17:08 gram_schmidt: Removing vector 13 of norm 0.0
17:08 gram_schmidt: Removing vector 14 of norm 0.0
17:08 gram_schmidt: Removing vector 15 of norm 0.0
17:08 gram_schmidt: Removing vector 16 of norm 0.0
17:08 gram_schmidt: Removing vector 17 of norm 0.0
17:08 gram_schmidt: Removing vector 18 of norm 0.0
17:08 gram_schmidt: Removing vector 19 of norm 0.0
17:08 gram_schmidt: Removing vector 20 of norm 0.0
17:08 gram_schmidt: Removing vector 21 of norm 0.0
17:08 gram_schmidt: Removing vector 22 of norm 0.0
17:08 gram_schmidt: Removing vector 23 of norm 0.0
17:08 gram_schmidt: Removing vector 24 of norm 0.0
17:08 gram_schmidt: Removing vector 25 of norm 0.0
17:08 gram_schmidt: Removing vector 26 of norm 0.0
17:08 gram_schmidt: Removing vector 27 of norm 0.0
17:08 gram_schmidt: Removing vector 28 of norm 0.0
17:08 gram_schmidt: Removing vector 29 of norm 0.0
17:08 gram_schmidt: Removing vector 30 of norm 0.0
17:08 gram_schmidt: Removing vector 31 of norm 0.0
17:08 gram_schmidt: Removing vector 32 of norm 0.0
17:08 gram_schmidt: Removing vector 33 of norm 0.0
17:08 gram_schmidt: Removing vector 34 of norm 0.0
17:08 gram_schmidt: Removing vector 35 of norm 0.0
17:08 gram_schmidt: Removing vector 36 of norm 0.0
17:08 gram_schmidt: Removing vector 37 of norm 0.0
17:08 gram_schmidt: Removing vector 38 of norm 0.0
17:08 gram_schmidt: Removing vector 39 of norm 0.0
17:08 gram_schmidt: Removing vector 40 of norm 0.0
17:08 gram_schmidt: Removing vector 41 of norm 0.0
17:08 gram_schmidt: Removing vector 42 of norm 0.0
17:08 gram_schmidt: Removing vector 43 of norm 0.0
17:08 gram_schmidt: Removing vector 44 of norm 0.0
17:08 gram_schmidt: Removing vector 45 of norm 0.0
17:08 gram_schmidt: Removing vector 46 of norm 0.0
17:08 gram_schmidt: Removing vector 47 of norm 0.0
17:08 gram_schmidt: Removing vector 48 of norm 0.0
17:08 gram_schmidt: Removing vector 49 of norm 0.0
17:08 gram_schmidt: Removing vector 50 of norm 0.0
17:08 gram_schmidt: Removing vector 51 of norm 0.0
17:08 gram_schmidt: Removing vector 52 of norm 0.0
17:08 gram_schmidt: Removing vector 53 of norm 0.0
17:08 gram_schmidt: Removing vector 54 of norm 0.0
17:08 gram_schmidt: Removing vector 55 of norm 0.0
17:08 gram_schmidt: Removing vector 56 of norm 0.0
17:08 gram_schmidt: Removing vector 57 of norm 0.0
17:08 gram_schmidt: Removing vector 58 of norm 0.0
17:08 gram_schmidt: Removing vector 59 of norm 0.0
17:08 gram_schmidt: Removing vector 60 of norm 0.0
17:08 gram_schmidt: Removing vector 61 of norm 0.0
17:08 gram_schmidt: Removing vector 62 of norm 0.0
17:08 gram_schmidt: Removing vector 63 of norm 0.0
17:08 gram_schmidt: Removing vector 64 of norm 0.0
17:08 gram_schmidt: Removing vector 65 of norm 0.0
17:08 gram_schmidt: Removing vector 66 of norm 0.0
17:08 gram_schmidt: Removing vector 67 of norm 0.0
17:08 gram_schmidt: Removing vector 68 of norm 0.0
17:08 gram_schmidt: Removing vector 69 of norm 0.0
17:08 gram_schmidt: Removing vector 70 of norm 0.0
17:08 gram_schmidt: Removing vector 71 of norm 0.0
17:08 gram_schmidt: Removing vector 72 of norm 0.0
17:08 gram_schmidt: Removing vector 73 of norm 0.0
17:08 gram_schmidt: Removing vector 74 of norm 0.0
17:08 gram_schmidt: Removing vector 75 of norm 0.0
17:08 gram_schmidt: Removing vector 76 of norm 0.0
17:08 gram_schmidt: Removing vector 77 of norm 0.0
17:08 gram_schmidt: Removing vector 78 of norm 0.0
17:08 gram_schmidt: Removing vector 79 of norm 0.0
17:08 gram_schmidt: Removing vector 80 of norm 0.0
17:08 gram_schmidt: Removing vector 81 of norm 0.0
17:08 gram_schmidt: Removing vector 82 of norm 0.0
17:08 gram_schmidt: Removing vector 83 of norm 0.0
17:08 gram_schmidt: Removing vector 84 of norm 0.0
17:08 gram_schmidt: Removing vector 85 of norm 0.0
17:08 gram_schmidt: Removing vector 86 of norm 0.0
17:08 gram_schmidt: Removing vector 87 of norm 0.0
17:08 gram_schmidt: Removing vector 88 of norm 0.0
17:08 gram_schmidt: Removing vector 89 of norm 0.0
17:08 gram_schmidt: Removing vector 90 of norm 0.0
17:08 gram_schmidt: Removing vector 91 of norm 0.0
17:08 gram_schmidt: Removing vector 92 of norm 0.0
17:08 gram_schmidt: Removing vector 93 of norm 0.0
17:08 gram_schmidt: Removing vector 94 of norm 0.0
17:08 gram_schmidt: Removing vector 95 of norm 0.0
17:08 gram_schmidt: Removing vector 96 of norm 0.0
17:08 gram_schmidt: Removing vector 97 of norm 0.0
17:08 gram_schmidt: Removing vector 98 of norm 0.0
17:08 gram_schmidt: Removing vector 99 of norm 0.0
17:08 gram_schmidt: Removing vector 100 of norm 0.0
17:08 gram_schmidt: Removing vector 101 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;10]" time="0.003487110137939453"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;11]" time="0.007007122039794922"><system-err>17:08 gram_schmidt: Removing linear dependent vector 3
17:08 gram_schmidt: Removing linear dependent vector 3
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;12]" time="0.0038347244262695312"><system-err>17:08 gram_schmidt: Removing vector 0 of norm 0.0
17:08 gram_schmidt: Removing vector 1 of norm 0.0
17:08 gram_schmidt: Removing vector 2 of norm 0.0
17:08 gram_schmidt: Removing vector 0 of norm 0.0
17:08 gram_schmidt: Removing vector 1 of norm 0.0
17:08 gram_schmidt: Removing vector 2 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;13]" time="0.002624034881591797"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;14]" time="0.004834651947021484"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;15]" time="0.42557263374328613"><system-err>17:08 gram_schmidt: Removing linear dependent vector 36
17:08 gram_schmidt: Removing linear dependent vector 37
17:08 gram_schmidt: Removing linear dependent vector 38
17:08 gram_schmidt: Removing linear dependent vector 39
17:08 gram_schmidt: Removing linear dependent vector 40
17:08 gram_schmidt: Removing linear dependent vector 41
17:08 gram_schmidt: Removing linear dependent vector 42
17:08 gram_schmidt: Removing linear dependent vector 36
17:08 gram_schmidt: Removing linear dependent vector 37
17:08 gram_schmidt: Removing linear dependent vector 38
17:08 gram_schmidt: Removing linear dependent vector 39
17:08 gram_schmidt: Removing linear dependent vector 40
17:08 gram_schmidt: Removing linear dependent vector 41
17:08 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;16]" time="0.22103238105773926"><system-err>17:08 gram_schmidt: Removing linear dependent vector 3
17:08 gram_schmidt: Removing linear dependent vector 4
17:08 gram_schmidt: Removing linear dependent vector 5
17:08 gram_schmidt: Removing linear dependent vector 6
17:08 gram_schmidt: Removing linear dependent vector 7
17:08 gram_schmidt: Removing linear dependent vector 8
17:08 gram_schmidt: Removing linear dependent vector 9
17:08 gram_schmidt: Removing linear dependent vector 10
17:08 gram_schmidt: Removing linear dependent vector 11
17:08 gram_schmidt: Removing linear dependent vector 12
17:08 gram_schmidt: Removing linear dependent vector 13
17:08 gram_schmidt: Removing linear dependent vector 14
17:08 gram_schmidt: Removing linear dependent vector 15
17:08 gram_schmidt: Removing linear dependent vector 16
17:08 gram_schmidt: Removing linear dependent vector 17
17:08 gram_schmidt: Removing linear dependent vector 18
17:08 gram_schmidt: Removing linear dependent vector 19
17:08 gram_schmidt: Removing linear dependent vector 20
17:08 gram_schmidt: Removing linear dependent vector 21
17:08 gram_schmidt: Removing linear dependent vector 22
17:08 gram_schmidt: Removing linear dependent vector 23
17:08 gram_schmidt: Removing linear dependent vector 24
17:08 gram_schmidt: Removing linear dependent vector 25
17:08 gram_schmidt: Removing linear dependent vector 26
17:08 gram_schmidt: Removing linear dependent vector 27
17:08 gram_schmidt: Removing linear dependent vector 28
17:08 gram_schmidt: Removing linear dependent vector 29
17:08 gram_schmidt: Removing linear dependent vector 30
17:08 gram_schmidt: Removing linear dependent vector 31
17:08 gram_schmidt: Removing linear dependent vector 32
17:08 gram_schmidt: Removing linear dependent vector 33
17:08 gram_schmidt: Removing linear dependent vector 34
17:08 gram_schmidt: Removing linear dependent vector 35
17:08 gram_schmidt: Removing linear dependent vector 36
17:08 gram_schmidt: Removing linear dependent vector 37
17:08 gram_schmidt: Removing linear dependent vector 38
17:08 gram_schmidt: Removing linear dependent vector 39
17:08 gram_schmidt: Removing linear dependent vector 40
17:08 gram_schmidt: Removing linear dependent vector 41
17:08 gram_schmidt: Removing linear dependent vector 42
17:08 gram_schmidt: Removing linear dependent vector 43
17:08 gram_schmidt: Removing linear dependent vector 44
17:08 gram_schmidt: Removing linear dependent vector 45
17:08 gram_schmidt: Removing linear dependent vector 46
17:08 gram_schmidt: Removing linear dependent vector 47
17:08 gram_schmidt: Removing linear dependent vector 48
17:08 gram_schmidt: Removing linear dependent vector 49
17:08 gram_schmidt: Removing linear dependent vector 50
17:08 gram_schmidt: Removing linear dependent vector 51
17:08 gram_schmidt: Removing linear dependent vector 52
17:08 gram_schmidt: Removing linear dependent vector 53
17:08 gram_schmidt: Removing linear dependent vector 54
17:08 gram_schmidt: Removing linear dependent vector 55
17:08 gram_schmidt: Removing linear dependent vector 56
17:08 gram_schmidt: Removing linear dependent vector 57
17:08 gram_schmidt: Removing linear dependent vector 58
17:08 gram_schmidt: Removing linear dependent vector 59
17:08 gram_schmidt: Removing linear dependent vector 60
17:08 gram_schmidt: Removing linear dependent vector 61
17:08 gram_schmidt: Removing linear dependent vector 62
17:08 gram_schmidt: Removing linear dependent vector 63
17:08 gram_schmidt: Removing linear dependent vector 64
17:08 gram_schmidt: Removing linear dependent vector 65
17:08 gram_schmidt: Removing linear dependent vector 66
17:08 gram_schmidt: Removing linear dependent vector 67
17:08 gram_schmidt: Removing linear dependent vector 68
17:08 gram_schmidt: Removing linear dependent vector 69
17:08 gram_schmidt: Removing linear dependent vector 70
17:08 gram_schmidt: Removing linear dependent vector 71
17:08 gram_schmidt: Removing linear dependent vector 72
17:08 gram_schmidt: Removing linear dependent vector 73
17:08 gram_schmidt: Removing linear dependent vector 74
17:08 gram_schmidt: Removing linear dependent vector 75
17:08 gram_schmidt: Removing linear dependent vector 76
17:08 gram_schmidt: Removing linear dependent vector 77
17:08 gram_schmidt: Removing linear dependent vector 78
17:08 gram_schmidt: Removing linear dependent vector 79
17:08 gram_schmidt: Removing linear dependent vector 80
17:08 gram_schmidt: Removing linear dependent vector 81
17:08 gram_schmidt: Removing linear dependent vector 82
17:08 gram_schmidt: Removing linear dependent vector 83
17:08 gram_schmidt: Removing linear dependent vector 84
17:08 gram_schmidt: Removing linear dependent vector 85
17:08 gram_schmidt: Removing linear dependent vector 86
17:08 gram_schmidt: Removing linear dependent vector 87
17:08 gram_schmidt: Removing linear dependent vector 88
17:08 gram_schmidt: Removing linear dependent vector 89
17:08 gram_schmidt: Removing linear dependent vector 90
17:08 gram_schmidt: Removing linear dependent vector 91
17:08 gram_schmidt: Removing linear dependent vector 92
17:08 gram_schmidt: Removing linear dependent vector 93
17:08 gram_schmidt: Removing linear dependent vector 94
17:08 gram_schmidt: Removing linear dependent vector 95
17:08 gram_schmidt: Removing linear dependent vector 96
17:08 gram_schmidt: Removing linear dependent vector 97
17:08 gram_schmidt: Removing linear dependent vector 98
17:08 gram_schmidt: Removing linear dependent vector 99
17:08 gram_schmidt: Removing linear dependent vector 100
17:08 gram_schmidt: Removing linear dependent vector 101
17:08 gram_schmidt: Removing linear dependent vector 3
17:08 gram_schmidt: Removing linear dependent vector 4
17:08 gram_schmidt: Removing linear dependent vector 5
17:08 gram_schmidt: Removing linear dependent vector 6
17:08 gram_schmidt: Removing linear dependent vector 7
17:08 gram_schmidt: Removing linear dependent vector 8
17:08 gram_schmidt: Removing linear dependent vector 9
17:08 gram_schmidt: Removing linear dependent vector 10
17:08 gram_schmidt: Removing linear dependent vector 11
17:08 gram_schmidt: Removing linear dependent vector 12
17:08 gram_schmidt: Removing linear dependent vector 13
17:08 gram_schmidt: Removing linear dependent vector 14
17:08 gram_schmidt: Removing linear dependent vector 15
17:08 gram_schmidt: Removing linear dependent vector 16
17:08 gram_schmidt: Removing linear dependent vector 17
17:08 gram_schmidt: Removing linear dependent vector 18
17:08 gram_schmidt: Removing linear dependent vector 19
17:08 gram_schmidt: Removing linear dependent vector 20
17:08 gram_schmidt: Removing linear dependent vector 21
17:08 gram_schmidt: Removing linear dependent vector 22
17:08 gram_schmidt: Removing linear dependent vector 23
17:08 gram_schmidt: Removing linear dependent vector 24
17:08 gram_schmidt: Removing linear dependent vector 25
17:08 gram_schmidt: Removing linear dependent vector 26
17:08 gram_schmidt: Removing linear dependent vector 27
17:08 gram_schmidt: Removing linear dependent vector 28
17:08 gram_schmidt: Removing linear dependent vector 29
17:08 gram_schmidt: Removing linear dependent vector 30
17:08 gram_schmidt: Removing linear dependent vector 31
17:08 gram_schmidt: Removing linear dependent vector 32
17:08 gram_schmidt: Removing linear dependent vector 33
17:08 gram_schmidt: Removing linear dependent vector 34
17:08 gram_schmidt: Removing linear dependent vector 35
17:08 gram_schmidt: Removing linear dependent vector 36
17:08 gram_schmidt: Removing linear dependent vector 37
17:08 gram_schmidt: Removing linear dependent vector 38
17:08 gram_schmidt: Removing linear dependent vector 39
17:08 gram_schmidt: Removing linear dependent vector 40
17:08 gram_schmidt: Removing linear dependent vector 41
17:08 gram_schmidt: Removing linear dependent vector 42
17:08 gram_schmidt: Removing linear dependent vector 43
17:08 gram_schmidt: Removing linear dependent vector 44
17:08 gram_schmidt: Removing linear dependent vector 45
17:08 gram_schmidt: Removing linear dependent vector 46
17:08 gram_schmidt: Removing linear dependent vector 47
17:08 gram_schmidt: Removing linear dependent vector 48
17:08 gram_schmidt: Removing linear dependent vector 49
17:08 gram_schmidt: Removing linear dependent vector 50
17:08 gram_schmidt: Removing linear dependent vector 51
17:08 gram_schmidt: Removing linear dependent vector 52
17:08 gram_schmidt: Removing linear dependent vector 53
17:08 gram_schmidt: Removing linear dependent vector 54
17:08 gram_schmidt: Removing linear dependent vector 55
17:08 gram_schmidt: Removing linear dependent vector 56
17:08 gram_schmidt: Removing linear dependent vector 57
17:08 gram_schmidt: Removing linear dependent vector 58
17:08 gram_schmidt: Removing linear dependent vector 59
17:08 gram_schmidt: Removing linear dependent vector 60
17:08 gram_schmidt: Removing linear dependent vector 61
17:08 gram_schmidt: Removing linear dependent vector 62
17:08 gram_schmidt: Removing linear dependent vector 63
17:08 gram_schmidt: Removing linear dependent vector 64
17:08 gram_schmidt: Removing linear dependent vector 65
17:08 gram_schmidt: Removing linear dependent vector 66
17:08 gram_schmidt: Removing linear dependent vector 67
17:08 gram_schmidt: Removing linear dependent vector 68
17:08 gram_schmidt: Removing linear dependent vector 69
17:08 gram_schmidt: Removing linear dependent vector 70
17:08 gram_schmidt: Removing linear dependent vector 71
17:08 gram_schmidt: Removing linear dependent vector 72
17:08 gram_schmidt: Removing linear dependent vector 73
17:08 gram_schmidt: Removing linear dependent vector 74
17:08 gram_schmidt: Removing linear dependent vector 75
17:08 gram_schmidt: Removing linear dependent vector 76
17:08 gram_schmidt: Removing linear dependent vector 77
17:08 gram_schmidt: Removing linear dependent vector 78
17:08 gram_schmidt: Removing linear dependent vector 79
17:08 gram_schmidt: Removing linear dependent vector 80
17:08 gram_schmidt: Removing linear dependent vector 81
17:08 gram_schmidt: Removing linear dependent vector 82
17:08 gram_schmidt: Removing linear dependent vector 83
17:08 gram_schmidt: Removing linear dependent vector 84
17:08 gram_schmidt: Removing linear dependent vector 85
17:08 gram_schmidt: Removing linear dependent vector 86
17:08 gram_schmidt: Removing linear dependent vector 87
17:08 gram_schmidt: Removing linear dependent vector 88
17:08 gram_schmidt: Removing linear dependent vector 89
17:08 gram_schmidt: Removing linear dependent vector 90
17:08 gram_schmidt: Removing linear dependent vector 91
17:08 gram_schmidt: Removing linear dependent vector 92
17:08 gram_schmidt: Removing linear dependent vector 93
17:08 gram_schmidt: Removing linear dependent vector 94
17:08 gram_schmidt: Removing linear dependent vector 95
17:08 gram_schmidt: Removing linear dependent vector 96
17:08 gram_schmidt: Removing linear dependent vector 97
17:08 gram_schmidt: Removing linear dependent vector 98
17:08 gram_schmidt: Removing linear dependent vector 99
17:08 gram_schmidt: Removing linear dependent vector 100
17:08 gram_schmidt: Removing linear dependent vector 101
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;17]" time="0.00330352783203125"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;18]" time="0.0023925304412841797"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;19]" time="0.004870891571044922"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;20]" time="0.28646421432495117"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;21]" time="1.5214869976043701"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;22]" time="0.002555370330810547"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;23]" time="0.0018699169158935547"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;24]" time="0.009447336196899414"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;25]" time="0.40110325813293457"><system-err>17:10 gram_schmidt: Orthonormalizing vector 31 again
17:10 gram_schmidt: Removing linear dependent vector 32
17:10 gram_schmidt: Removing linear dependent vector 33
17:10 gram_schmidt: Removing linear dependent vector 34
17:10 gram_schmidt: Removing linear dependent vector 35
17:10 gram_schmidt: Removing linear dependent vector 36
17:10 gram_schmidt: Removing linear dependent vector 37
17:10 gram_schmidt: Removing linear dependent vector 38
17:10 gram_schmidt: Removing linear dependent vector 39
17:10 gram_schmidt: Removing linear dependent vector 40
17:10 gram_schmidt: Removing linear dependent vector 41
17:10 gram_schmidt: Removing linear dependent vector 42
17:11 gram_schmidt: Orthonormalizing vector 31 again
17:11 gram_schmidt: Removing linear dependent vector 32
17:11 gram_schmidt: Removing linear dependent vector 33
17:11 gram_schmidt: Removing linear dependent vector 34
17:11 gram_schmidt: Removing linear dependent vector 35
17:11 gram_schmidt: Removing linear dependent vector 36
17:11 gram_schmidt: Removing linear dependent vector 37
17:11 gram_schmidt: Removing linear dependent vector 38
17:11 gram_schmidt: Removing linear dependent vector 39
17:11 gram_schmidt: Removing linear dependent vector 40
17:11 gram_schmidt: Removing linear dependent vector 41
17:11 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[1-&lt;lambda&gt;26]" time="0.23146510124206543"><system-err>17:11 gram_schmidt: Removing vector 0 of norm 0.0
17:11 gram_schmidt: Removing vector 1 of norm 0.0
17:11 gram_schmidt: Removing vector 2 of norm 0.0
17:11 gram_schmidt: Removing vector 3 of norm 0.0
17:11 gram_schmidt: Removing vector 4 of norm 0.0
17:11 gram_schmidt: Removing vector 5 of norm 0.0
17:11 gram_schmidt: Removing vector 6 of norm 0.0
17:11 gram_schmidt: Removing vector 7 of norm 0.0
17:11 gram_schmidt: Removing vector 8 of norm 0.0
17:11 gram_schmidt: Removing vector 9 of norm 0.0
17:11 gram_schmidt: Removing vector 10 of norm 0.0
17:11 gram_schmidt: Removing vector 11 of norm 0.0
17:11 gram_schmidt: Removing vector 12 of norm 0.0
17:11 gram_schmidt: Removing vector 13 of norm 0.0
17:11 gram_schmidt: Removing vector 14 of norm 0.0
17:11 gram_schmidt: Removing vector 15 of norm 0.0
17:11 gram_schmidt: Removing vector 16 of norm 0.0
17:11 gram_schmidt: Removing vector 17 of norm 0.0
17:11 gram_schmidt: Removing vector 18 of norm 0.0
17:11 gram_schmidt: Removing vector 19 of norm 0.0
17:11 gram_schmidt: Removing vector 20 of norm 0.0
17:11 gram_schmidt: Removing vector 21 of norm 0.0
17:11 gram_schmidt: Removing vector 22 of norm 0.0
17:11 gram_schmidt: Removing vector 23 of norm 0.0
17:11 gram_schmidt: Removing vector 24 of norm 0.0
17:11 gram_schmidt: Removing vector 25 of norm 0.0
17:11 gram_schmidt: Removing vector 26 of norm 0.0
17:11 gram_schmidt: Removing vector 27 of norm 0.0
17:11 gram_schmidt: Removing vector 28 of norm 0.0
17:11 gram_schmidt: Removing vector 29 of norm 0.0
17:11 gram_schmidt: Removing vector 30 of norm 0.0
17:11 gram_schmidt: Removing vector 31 of norm 0.0
17:11 gram_schmidt: Removing vector 32 of norm 0.0
17:11 gram_schmidt: Removing vector 33 of norm 0.0
17:11 gram_schmidt: Removing vector 34 of norm 0.0
17:11 gram_schmidt: Removing vector 35 of norm 0.0
17:11 gram_schmidt: Removing vector 36 of norm 0.0
17:11 gram_schmidt: Removing vector 37 of norm 0.0
17:11 gram_schmidt: Removing vector 38 of norm 0.0
17:11 gram_schmidt: Removing vector 39 of norm 0.0
17:11 gram_schmidt: Removing vector 40 of norm 0.0
17:11 gram_schmidt: Removing vector 41 of norm 0.0
17:11 gram_schmidt: Removing vector 42 of norm 0.0
17:11 gram_schmidt: Removing vector 43 of norm 0.0
17:11 gram_schmidt: Removing vector 44 of norm 0.0
17:11 gram_schmidt: Removing vector 45 of norm 0.0
17:11 gram_schmidt: Removing vector 46 of norm 0.0
17:11 gram_schmidt: Removing vector 47 of norm 0.0
17:11 gram_schmidt: Removing vector 48 of norm 0.0
17:11 gram_schmidt: Removing vector 49 of norm 0.0
17:11 gram_schmidt: Removing vector 50 of norm 0.0
17:11 gram_schmidt: Removing vector 51 of norm 0.0
17:11 gram_schmidt: Removing vector 52 of norm 0.0
17:11 gram_schmidt: Removing vector 53 of norm 0.0
17:11 gram_schmidt: Removing vector 54 of norm 0.0
17:11 gram_schmidt: Removing vector 55 of norm 0.0
17:11 gram_schmidt: Removing vector 56 of norm 0.0
17:11 gram_schmidt: Removing vector 57 of norm 0.0
17:11 gram_schmidt: Removing vector 58 of norm 0.0
17:11 gram_schmidt: Removing vector 59 of norm 0.0
17:11 gram_schmidt: Removing vector 60 of norm 0.0
17:11 gram_schmidt: Removing vector 61 of norm 0.0
17:11 gram_schmidt: Removing vector 62 of norm 0.0
17:11 gram_schmidt: Removing vector 63 of norm 0.0
17:11 gram_schmidt: Removing vector 64 of norm 0.0
17:11 gram_schmidt: Removing vector 65 of norm 0.0
17:11 gram_schmidt: Removing vector 66 of norm 0.0
17:11 gram_schmidt: Removing vector 67 of norm 0.0
17:11 gram_schmidt: Removing vector 68 of norm 0.0
17:11 gram_schmidt: Removing vector 69 of norm 0.0
17:11 gram_schmidt: Removing vector 70 of norm 0.0
17:11 gram_schmidt: Removing vector 71 of norm 0.0
17:11 gram_schmidt: Removing vector 72 of norm 0.0
17:11 gram_schmidt: Removing vector 73 of norm 0.0
17:11 gram_schmidt: Removing vector 74 of norm 0.0
17:11 gram_schmidt: Removing vector 75 of norm 0.0
17:11 gram_schmidt: Removing vector 76 of norm 0.0
17:11 gram_schmidt: Removing vector 77 of norm 0.0
17:11 gram_schmidt: Removing vector 78 of norm 0.0
17:11 gram_schmidt: Removing vector 79 of norm 0.0
17:11 gram_schmidt: Removing vector 80 of norm 0.0
17:11 gram_schmidt: Removing vector 81 of norm 0.0
17:11 gram_schmidt: Removing vector 82 of norm 0.0
17:11 gram_schmidt: Removing vector 83 of norm 0.0
17:11 gram_schmidt: Removing vector 84 of norm 0.0
17:11 gram_schmidt: Removing vector 85 of norm 0.0
17:11 gram_schmidt: Removing vector 86 of norm 0.0
17:11 gram_schmidt: Removing vector 87 of norm 0.0
17:11 gram_schmidt: Removing vector 88 of norm 0.0
17:11 gram_schmidt: Removing vector 89 of norm 0.0
17:11 gram_schmidt: Removing vector 90 of norm 0.0
17:11 gram_schmidt: Removing vector 91 of norm 0.0
17:11 gram_schmidt: Removing vector 92 of norm 0.0
17:11 gram_schmidt: Removing vector 93 of norm 0.0
17:11 gram_schmidt: Removing vector 94 of norm 0.0
17:11 gram_schmidt: Removing vector 95 of norm 0.0
17:11 gram_schmidt: Removing vector 96 of norm 0.0
17:11 gram_schmidt: Removing vector 97 of norm 0.0
17:11 gram_schmidt: Removing vector 98 of norm 0.0
17:11 gram_schmidt: Removing vector 99 of norm 0.0
17:11 gram_schmidt: Removing vector 100 of norm 0.0
17:11 gram_schmidt: Removing vector 101 of norm 0.0
17:11 gram_schmidt: Removing vector 0 of norm 0.0
17:11 gram_schmidt: Removing vector 1 of norm 0.0
17:11 gram_schmidt: Removing vector 2 of norm 0.0
17:11 gram_schmidt: Removing vector 3 of norm 0.0
17:11 gram_schmidt: Removing vector 4 of norm 0.0
17:11 gram_schmidt: Removing vector 5 of norm 0.0
17:11 gram_schmidt: Removing vector 6 of norm 0.0
17:11 gram_schmidt: Removing vector 7 of norm 0.0
17:11 gram_schmidt: Removing vector 8 of norm 0.0
17:11 gram_schmidt: Removing vector 9 of norm 0.0
17:11 gram_schmidt: Removing vector 10 of norm 0.0
17:11 gram_schmidt: Removing vector 11 of norm 0.0
17:11 gram_schmidt: Removing vector 12 of norm 0.0
17:11 gram_schmidt: Removing vector 13 of norm 0.0
17:11 gram_schmidt: Removing vector 14 of norm 0.0
17:11 gram_schmidt: Removing vector 15 of norm 0.0
17:11 gram_schmidt: Removing vector 16 of norm 0.0
17:11 gram_schmidt: Removing vector 17 of norm 0.0
17:11 gram_schmidt: Removing vector 18 of norm 0.0
17:11 gram_schmidt: Removing vector 19 of norm 0.0
17:11 gram_schmidt: Removing vector 20 of norm 0.0
17:11 gram_schmidt: Removing vector 21 of norm 0.0
17:11 gram_schmidt: Removing vector 22 of norm 0.0
17:11 gram_schmidt: Removing vector 23 of norm 0.0
17:11 gram_schmidt: Removing vector 24 of norm 0.0
17:11 gram_schmidt: Removing vector 25 of norm 0.0
17:11 gram_schmidt: Removing vector 26 of norm 0.0
17:11 gram_schmidt: Removing vector 27 of norm 0.0
17:11 gram_schmidt: Removing vector 28 of norm 0.0
17:11 gram_schmidt: Removing vector 29 of norm 0.0
17:11 gram_schmidt: Removing vector 30 of norm 0.0
17:11 gram_schmidt: Removing vector 31 of norm 0.0
17:11 gram_schmidt: Removing vector 32 of norm 0.0
17:11 gram_schmidt: Removing vector 33 of norm 0.0
17:11 gram_schmidt: Removing vector 34 of norm 0.0
17:11 gram_schmidt: Removing vector 35 of norm 0.0
17:11 gram_schmidt: Removing vector 36 of norm 0.0
17:11 gram_schmidt: Removing vector 37 of norm 0.0
17:11 gram_schmidt: Removing vector 38 of norm 0.0
17:11 gram_schmidt: Removing vector 39 of norm 0.0
17:11 gram_schmidt: Removing vector 40 of norm 0.0
17:11 gram_schmidt: Removing vector 41 of norm 0.0
17:11 gram_schmidt: Removing vector 42 of norm 0.0
17:11 gram_schmidt: Removing vector 43 of norm 0.0
17:11 gram_schmidt: Removing vector 44 of norm 0.0
17:11 gram_schmidt: Removing vector 45 of norm 0.0
17:11 gram_schmidt: Removing vector 46 of norm 0.0
17:11 gram_schmidt: Removing vector 47 of norm 0.0
17:11 gram_schmidt: Removing vector 48 of norm 0.0
17:11 gram_schmidt: Removing vector 49 of norm 0.0
17:11 gram_schmidt: Removing vector 50 of norm 0.0
17:11 gram_schmidt: Removing vector 51 of norm 0.0
17:11 gram_schmidt: Removing vector 52 of norm 0.0
17:11 gram_schmidt: Removing vector 53 of norm 0.0
17:11 gram_schmidt: Removing vector 54 of norm 0.0
17:11 gram_schmidt: Removing vector 55 of norm 0.0
17:11 gram_schmidt: Removing vector 56 of norm 0.0
17:11 gram_schmidt: Removing vector 57 of norm 0.0
17:11 gram_schmidt: Removing vector 58 of norm 0.0
17:11 gram_schmidt: Removing vector 59 of norm 0.0
17:11 gram_schmidt: Removing vector 60 of norm 0.0
17:11 gram_schmidt: Removing vector 61 of norm 0.0
17:11 gram_schmidt: Removing vector 62 of norm 0.0
17:11 gram_schmidt: Removing vector 63 of norm 0.0
17:11 gram_schmidt: Removing vector 64 of norm 0.0
17:11 gram_schmidt: Removing vector 65 of norm 0.0
17:11 gram_schmidt: Removing vector 66 of norm 0.0
17:11 gram_schmidt: Removing vector 67 of norm 0.0
17:11 gram_schmidt: Removing vector 68 of norm 0.0
17:11 gram_schmidt: Removing vector 69 of norm 0.0
17:11 gram_schmidt: Removing vector 70 of norm 0.0
17:11 gram_schmidt: Removing vector 71 of norm 0.0
17:11 gram_schmidt: Removing vector 72 of norm 0.0
17:11 gram_schmidt: Removing vector 73 of norm 0.0
17:11 gram_schmidt: Removing vector 74 of norm 0.0
17:11 gram_schmidt: Removing vector 75 of norm 0.0
17:11 gram_schmidt: Removing vector 76 of norm 0.0
17:11 gram_schmidt: Removing vector 77 of norm 0.0
17:11 gram_schmidt: Removing vector 78 of norm 0.0
17:11 gram_schmidt: Removing vector 79 of norm 0.0
17:11 gram_schmidt: Removing vector 80 of norm 0.0
17:11 gram_schmidt: Removing vector 81 of norm 0.0
17:11 gram_schmidt: Removing vector 82 of norm 0.0
17:11 gram_schmidt: Removing vector 83 of norm 0.0
17:11 gram_schmidt: Removing vector 84 of norm 0.0
17:11 gram_schmidt: Removing vector 85 of norm 0.0
17:11 gram_schmidt: Removing vector 86 of norm 0.0
17:11 gram_schmidt: Removing vector 87 of norm 0.0
17:11 gram_schmidt: Removing vector 88 of norm 0.0
17:11 gram_schmidt: Removing vector 89 of norm 0.0
17:11 gram_schmidt: Removing vector 90 of norm 0.0
17:11 gram_schmidt: Removing vector 91 of norm 0.0
17:11 gram_schmidt: Removing vector 92 of norm 0.0
17:11 gram_schmidt: Removing vector 93 of norm 0.0
17:11 gram_schmidt: Removing vector 94 of norm 0.0
17:11 gram_schmidt: Removing vector 95 of norm 0.0
17:11 gram_schmidt: Removing vector 96 of norm 0.0
17:11 gram_schmidt: Removing vector 97 of norm 0.0
17:11 gram_schmidt: Removing vector 98 of norm 0.0
17:11 gram_schmidt: Removing vector 99 of norm 0.0
17:11 gram_schmidt: Removing vector 100 of norm 0.0
17:11 gram_schmidt: Removing vector 101 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;0]" time="0.0027239322662353516"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;1]" time="0.0019562244415283203"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;2]" time="0.002129793167114258"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;3]" time="0.11339759826660156"><system-err>17:11 gram_schmidt: Orthonormalizing vector 31 again
17:11 gram_schmidt: Removing linear dependent vector 32
17:11 gram_schmidt: Removing linear dependent vector 33
17:11 gram_schmidt: Removing linear dependent vector 34
17:11 gram_schmidt: Removing linear dependent vector 35
17:11 gram_schmidt: Removing linear dependent vector 36
17:11 gram_schmidt: Removing linear dependent vector 37
17:11 gram_schmidt: Removing linear dependent vector 38
17:11 gram_schmidt: Removing linear dependent vector 39
17:11 gram_schmidt: Removing linear dependent vector 40
17:11 gram_schmidt: Removing linear dependent vector 41
17:11 gram_schmidt: Removing linear dependent vector 42
17:11 gram_schmidt: Orthonormalizing vector 31 again
17:11 gram_schmidt: Removing linear dependent vector 32
17:11 gram_schmidt: Removing linear dependent vector 33
17:11 gram_schmidt: Removing linear dependent vector 34
17:11 gram_schmidt: Removing linear dependent vector 35
17:11 gram_schmidt: Removing linear dependent vector 36
17:11 gram_schmidt: Removing linear dependent vector 37
17:11 gram_schmidt: Removing linear dependent vector 38
17:11 gram_schmidt: Removing linear dependent vector 39
17:11 gram_schmidt: Removing linear dependent vector 40
17:11 gram_schmidt: Removing linear dependent vector 41
17:11 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;4]" time="0.022727251052856445"><system-err>17:11 gram_schmidt: Removing vector 0 of norm 0.0
17:11 gram_schmidt: Removing vector 1 of norm 0.0
17:11 gram_schmidt: Removing vector 2 of norm 0.0
17:11 gram_schmidt: Removing vector 3 of norm 0.0
17:11 gram_schmidt: Removing vector 4 of norm 0.0
17:11 gram_schmidt: Removing vector 5 of norm 0.0
17:11 gram_schmidt: Removing vector 6 of norm 0.0
17:11 gram_schmidt: Removing vector 7 of norm 0.0
17:11 gram_schmidt: Removing vector 8 of norm 0.0
17:11 gram_schmidt: Removing vector 9 of norm 0.0
17:11 gram_schmidt: Removing vector 10 of norm 0.0
17:11 gram_schmidt: Removing vector 11 of norm 0.0
17:11 gram_schmidt: Removing vector 12 of norm 0.0
17:11 gram_schmidt: Removing vector 13 of norm 0.0
17:11 gram_schmidt: Removing vector 14 of norm 0.0
17:11 gram_schmidt: Removing vector 15 of norm 0.0
17:11 gram_schmidt: Removing vector 16 of norm 0.0
17:11 gram_schmidt: Removing vector 17 of norm 0.0
17:11 gram_schmidt: Removing vector 18 of norm 0.0
17:11 gram_schmidt: Removing vector 19 of norm 0.0
17:11 gram_schmidt: Removing vector 20 of norm 0.0
17:11 gram_schmidt: Removing vector 21 of norm 0.0
17:11 gram_schmidt: Removing vector 22 of norm 0.0
17:11 gram_schmidt: Removing vector 23 of norm 0.0
17:11 gram_schmidt: Removing vector 24 of norm 0.0
17:11 gram_schmidt: Removing vector 25 of norm 0.0
17:11 gram_schmidt: Removing vector 26 of norm 0.0
17:11 gram_schmidt: Removing vector 27 of norm 0.0
17:11 gram_schmidt: Removing vector 28 of norm 0.0
17:11 gram_schmidt: Removing vector 29 of norm 0.0
17:11 gram_schmidt: Removing vector 30 of norm 0.0
17:11 gram_schmidt: Removing vector 31 of norm 0.0
17:11 gram_schmidt: Removing vector 32 of norm 0.0
17:11 gram_schmidt: Removing vector 33 of norm 0.0
17:11 gram_schmidt: Removing vector 34 of norm 0.0
17:11 gram_schmidt: Removing vector 35 of norm 0.0
17:11 gram_schmidt: Removing vector 36 of norm 0.0
17:11 gram_schmidt: Removing vector 37 of norm 0.0
17:11 gram_schmidt: Removing vector 38 of norm 0.0
17:11 gram_schmidt: Removing vector 39 of norm 0.0
17:11 gram_schmidt: Removing vector 40 of norm 0.0
17:11 gram_schmidt: Removing vector 41 of norm 0.0
17:11 gram_schmidt: Removing vector 42 of norm 0.0
17:11 gram_schmidt: Removing vector 43 of norm 0.0
17:11 gram_schmidt: Removing vector 44 of norm 0.0
17:11 gram_schmidt: Removing vector 45 of norm 0.0
17:11 gram_schmidt: Removing vector 46 of norm 0.0
17:11 gram_schmidt: Removing vector 47 of norm 0.0
17:11 gram_schmidt: Removing vector 48 of norm 0.0
17:11 gram_schmidt: Removing vector 49 of norm 0.0
17:11 gram_schmidt: Removing vector 50 of norm 0.0
17:11 gram_schmidt: Removing vector 51 of norm 0.0
17:11 gram_schmidt: Removing vector 52 of norm 0.0
17:11 gram_schmidt: Removing vector 53 of norm 0.0
17:11 gram_schmidt: Removing vector 54 of norm 0.0
17:11 gram_schmidt: Removing vector 55 of norm 0.0
17:11 gram_schmidt: Removing vector 56 of norm 0.0
17:11 gram_schmidt: Removing vector 57 of norm 0.0
17:11 gram_schmidt: Removing vector 58 of norm 0.0
17:11 gram_schmidt: Removing vector 59 of norm 0.0
17:11 gram_schmidt: Removing vector 60 of norm 0.0
17:11 gram_schmidt: Removing vector 61 of norm 0.0
17:11 gram_schmidt: Removing vector 62 of norm 0.0
17:11 gram_schmidt: Removing vector 63 of norm 0.0
17:11 gram_schmidt: Removing vector 64 of norm 0.0
17:11 gram_schmidt: Removing vector 65 of norm 0.0
17:11 gram_schmidt: Removing vector 66 of norm 0.0
17:11 gram_schmidt: Removing vector 67 of norm 0.0
17:11 gram_schmidt: Removing vector 68 of norm 0.0
17:11 gram_schmidt: Removing vector 69 of norm 0.0
17:11 gram_schmidt: Removing vector 70 of norm 0.0
17:11 gram_schmidt: Removing vector 71 of norm 0.0
17:11 gram_schmidt: Removing vector 72 of norm 0.0
17:11 gram_schmidt: Removing vector 73 of norm 0.0
17:11 gram_schmidt: Removing vector 74 of norm 0.0
17:11 gram_schmidt: Removing vector 75 of norm 0.0
17:11 gram_schmidt: Removing vector 76 of norm 0.0
17:11 gram_schmidt: Removing vector 77 of norm 0.0
17:11 gram_schmidt: Removing vector 78 of norm 0.0
17:11 gram_schmidt: Removing vector 79 of norm 0.0
17:11 gram_schmidt: Removing vector 80 of norm 0.0
17:11 gram_schmidt: Removing vector 81 of norm 0.0
17:11 gram_schmidt: Removing vector 82 of norm 0.0
17:11 gram_schmidt: Removing vector 83 of norm 0.0
17:11 gram_schmidt: Removing vector 84 of norm 0.0
17:11 gram_schmidt: Removing vector 85 of norm 0.0
17:11 gram_schmidt: Removing vector 86 of norm 0.0
17:11 gram_schmidt: Removing vector 87 of norm 0.0
17:11 gram_schmidt: Removing vector 88 of norm 0.0
17:11 gram_schmidt: Removing vector 89 of norm 0.0
17:11 gram_schmidt: Removing vector 90 of norm 0.0
17:11 gram_schmidt: Removing vector 91 of norm 0.0
17:11 gram_schmidt: Removing vector 92 of norm 0.0
17:11 gram_schmidt: Removing vector 93 of norm 0.0
17:11 gram_schmidt: Removing vector 94 of norm 0.0
17:11 gram_schmidt: Removing vector 95 of norm 0.0
17:11 gram_schmidt: Removing vector 96 of norm 0.0
17:11 gram_schmidt: Removing vector 97 of norm 0.0
17:11 gram_schmidt: Removing vector 98 of norm 0.0
17:11 gram_schmidt: Removing vector 99 of norm 0.0
17:11 gram_schmidt: Removing vector 100 of norm 0.0
17:11 gram_schmidt: Removing vector 101 of norm 0.0
17:11 gram_schmidt: Removing vector 0 of norm 0.0
17:11 gram_schmidt: Removing vector 1 of norm 0.0
17:11 gram_schmidt: Removing vector 2 of norm 0.0
17:11 gram_schmidt: Removing vector 3 of norm 0.0
17:11 gram_schmidt: Removing vector 4 of norm 0.0
17:11 gram_schmidt: Removing vector 5 of norm 0.0
17:11 gram_schmidt: Removing vector 6 of norm 0.0
17:11 gram_schmidt: Removing vector 7 of norm 0.0
17:11 gram_schmidt: Removing vector 8 of norm 0.0
17:11 gram_schmidt: Removing vector 9 of norm 0.0
17:11 gram_schmidt: Removing vector 10 of norm 0.0
17:11 gram_schmidt: Removing vector 11 of norm 0.0
17:11 gram_schmidt: Removing vector 12 of norm 0.0
17:11 gram_schmidt: Removing vector 13 of norm 0.0
17:11 gram_schmidt: Removing vector 14 of norm 0.0
17:11 gram_schmidt: Removing vector 15 of norm 0.0
17:11 gram_schmidt: Removing vector 16 of norm 0.0
17:11 gram_schmidt: Removing vector 17 of norm 0.0
17:11 gram_schmidt: Removing vector 18 of norm 0.0
17:11 gram_schmidt: Removing vector 19 of norm 0.0
17:11 gram_schmidt: Removing vector 20 of norm 0.0
17:11 gram_schmidt: Removing vector 21 of norm 0.0
17:11 gram_schmidt: Removing vector 22 of norm 0.0
17:11 gram_schmidt: Removing vector 23 of norm 0.0
17:11 gram_schmidt: Removing vector 24 of norm 0.0
17:11 gram_schmidt: Removing vector 25 of norm 0.0
17:11 gram_schmidt: Removing vector 26 of norm 0.0
17:11 gram_schmidt: Removing vector 27 of norm 0.0
17:11 gram_schmidt: Removing vector 28 of norm 0.0
17:11 gram_schmidt: Removing vector 29 of norm 0.0
17:11 gram_schmidt: Removing vector 30 of norm 0.0
17:11 gram_schmidt: Removing vector 31 of norm 0.0
17:11 gram_schmidt: Removing vector 32 of norm 0.0
17:11 gram_schmidt: Removing vector 33 of norm 0.0
17:11 gram_schmidt: Removing vector 34 of norm 0.0
17:11 gram_schmidt: Removing vector 35 of norm 0.0
17:11 gram_schmidt: Removing vector 36 of norm 0.0
17:11 gram_schmidt: Removing vector 37 of norm 0.0
17:11 gram_schmidt: Removing vector 38 of norm 0.0
17:11 gram_schmidt: Removing vector 39 of norm 0.0
17:11 gram_schmidt: Removing vector 40 of norm 0.0
17:11 gram_schmidt: Removing vector 41 of norm 0.0
17:11 gram_schmidt: Removing vector 42 of norm 0.0
17:11 gram_schmidt: Removing vector 43 of norm 0.0
17:11 gram_schmidt: Removing vector 44 of norm 0.0
17:11 gram_schmidt: Removing vector 45 of norm 0.0
17:11 gram_schmidt: Removing vector 46 of norm 0.0
17:11 gram_schmidt: Removing vector 47 of norm 0.0
17:11 gram_schmidt: Removing vector 48 of norm 0.0
17:11 gram_schmidt: Removing vector 49 of norm 0.0
17:11 gram_schmidt: Removing vector 50 of norm 0.0
17:11 gram_schmidt: Removing vector 51 of norm 0.0
17:11 gram_schmidt: Removing vector 52 of norm 0.0
17:11 gram_schmidt: Removing vector 53 of norm 0.0
17:11 gram_schmidt: Removing vector 54 of norm 0.0
17:11 gram_schmidt: Removing vector 55 of norm 0.0
17:11 gram_schmidt: Removing vector 56 of norm 0.0
17:11 gram_schmidt: Removing vector 57 of norm 0.0
17:11 gram_schmidt: Removing vector 58 of norm 0.0
17:11 gram_schmidt: Removing vector 59 of norm 0.0
17:11 gram_schmidt: Removing vector 60 of norm 0.0
17:11 gram_schmidt: Removing vector 61 of norm 0.0
17:11 gram_schmidt: Removing vector 62 of norm 0.0
17:11 gram_schmidt: Removing vector 63 of norm 0.0
17:11 gram_schmidt: Removing vector 64 of norm 0.0
17:11 gram_schmidt: Removing vector 65 of norm 0.0
17:11 gram_schmidt: Removing vector 66 of norm 0.0
17:11 gram_schmidt: Removing vector 67 of norm 0.0
17:11 gram_schmidt: Removing vector 68 of norm 0.0
17:11 gram_schmidt: Removing vector 69 of norm 0.0
17:11 gram_schmidt: Removing vector 70 of norm 0.0
17:11 gram_schmidt: Removing vector 71 of norm 0.0
17:11 gram_schmidt: Removing vector 72 of norm 0.0
17:11 gram_schmidt: Removing vector 73 of norm 0.0
17:11 gram_schmidt: Removing vector 74 of norm 0.0
17:11 gram_schmidt: Removing vector 75 of norm 0.0
17:11 gram_schmidt: Removing vector 76 of norm 0.0
17:11 gram_schmidt: Removing vector 77 of norm 0.0
17:11 gram_schmidt: Removing vector 78 of norm 0.0
17:11 gram_schmidt: Removing vector 79 of norm 0.0
17:11 gram_schmidt: Removing vector 80 of norm 0.0
17:11 gram_schmidt: Removing vector 81 of norm 0.0
17:11 gram_schmidt: Removing vector 82 of norm 0.0
17:11 gram_schmidt: Removing vector 83 of norm 0.0
17:11 gram_schmidt: Removing vector 84 of norm 0.0
17:11 gram_schmidt: Removing vector 85 of norm 0.0
17:11 gram_schmidt: Removing vector 86 of norm 0.0
17:11 gram_schmidt: Removing vector 87 of norm 0.0
17:11 gram_schmidt: Removing vector 88 of norm 0.0
17:11 gram_schmidt: Removing vector 89 of norm 0.0
17:11 gram_schmidt: Removing vector 90 of norm 0.0
17:11 gram_schmidt: Removing vector 91 of norm 0.0
17:11 gram_schmidt: Removing vector 92 of norm 0.0
17:11 gram_schmidt: Removing vector 93 of norm 0.0
17:11 gram_schmidt: Removing vector 94 of norm 0.0
17:11 gram_schmidt: Removing vector 95 of norm 0.0
17:11 gram_schmidt: Removing vector 96 of norm 0.0
17:11 gram_schmidt: Removing vector 97 of norm 0.0
17:11 gram_schmidt: Removing vector 98 of norm 0.0
17:11 gram_schmidt: Removing vector 99 of norm 0.0
17:11 gram_schmidt: Removing vector 100 of norm 0.0
17:11 gram_schmidt: Removing vector 101 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;5]" time="0.002727508544921875"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;6]" time="0.001898050308227539"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;7]" time="0.002402782440185547"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;8]" time="0.21325087547302246"><system-err>17:11 gram_schmidt: Orthonormalizing vector 31 again
17:11 gram_schmidt: Removing linear dependent vector 32
17:11 gram_schmidt: Removing linear dependent vector 33
17:11 gram_schmidt: Removing linear dependent vector 34
17:11 gram_schmidt: Removing linear dependent vector 35
17:11 gram_schmidt: Removing linear dependent vector 36
17:11 gram_schmidt: Removing linear dependent vector 37
17:11 gram_schmidt: Removing linear dependent vector 38
17:11 gram_schmidt: Removing linear dependent vector 39
17:11 gram_schmidt: Removing linear dependent vector 40
17:11 gram_schmidt: Removing linear dependent vector 41
17:11 gram_schmidt: Removing linear dependent vector 42
17:11 gram_schmidt: Orthonormalizing vector 31 again
17:11 gram_schmidt: Removing linear dependent vector 32
17:11 gram_schmidt: Removing linear dependent vector 33
17:11 gram_schmidt: Removing linear dependent vector 34
17:11 gram_schmidt: Removing linear dependent vector 35
17:11 gram_schmidt: Removing linear dependent vector 36
17:11 gram_schmidt: Removing linear dependent vector 37
17:11 gram_schmidt: Removing linear dependent vector 38
17:11 gram_schmidt: Removing linear dependent vector 39
17:11 gram_schmidt: Removing linear dependent vector 40
17:11 gram_schmidt: Removing linear dependent vector 41
17:11 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;9]" time="0.028128385543823242"><system-err>17:11 gram_schmidt: Removing vector 0 of norm 0.0
17:11 gram_schmidt: Removing vector 1 of norm 0.0
17:11 gram_schmidt: Removing vector 2 of norm 0.0
17:11 gram_schmidt: Removing vector 3 of norm 0.0
17:11 gram_schmidt: Removing vector 4 of norm 0.0
17:11 gram_schmidt: Removing vector 5 of norm 0.0
17:11 gram_schmidt: Removing vector 6 of norm 0.0
17:11 gram_schmidt: Removing vector 7 of norm 0.0
17:11 gram_schmidt: Removing vector 8 of norm 0.0
17:11 gram_schmidt: Removing vector 9 of norm 0.0
17:11 gram_schmidt: Removing vector 10 of norm 0.0
17:11 gram_schmidt: Removing vector 11 of norm 0.0
17:11 gram_schmidt: Removing vector 12 of norm 0.0
17:11 gram_schmidt: Removing vector 13 of norm 0.0
17:11 gram_schmidt: Removing vector 14 of norm 0.0
17:11 gram_schmidt: Removing vector 15 of norm 0.0
17:11 gram_schmidt: Removing vector 16 of norm 0.0
17:11 gram_schmidt: Removing vector 17 of norm 0.0
17:11 gram_schmidt: Removing vector 18 of norm 0.0
17:11 gram_schmidt: Removing vector 19 of norm 0.0
17:11 gram_schmidt: Removing vector 20 of norm 0.0
17:11 gram_schmidt: Removing vector 21 of norm 0.0
17:11 gram_schmidt: Removing vector 22 of norm 0.0
17:11 gram_schmidt: Removing vector 23 of norm 0.0
17:11 gram_schmidt: Removing vector 24 of norm 0.0
17:11 gram_schmidt: Removing vector 25 of norm 0.0
17:11 gram_schmidt: Removing vector 26 of norm 0.0
17:11 gram_schmidt: Removing vector 27 of norm 0.0
17:11 gram_schmidt: Removing vector 28 of norm 0.0
17:11 gram_schmidt: Removing vector 29 of norm 0.0
17:11 gram_schmidt: Removing vector 30 of norm 0.0
17:11 gram_schmidt: Removing vector 31 of norm 0.0
17:11 gram_schmidt: Removing vector 32 of norm 0.0
17:11 gram_schmidt: Removing vector 33 of norm 0.0
17:11 gram_schmidt: Removing vector 34 of norm 0.0
17:11 gram_schmidt: Removing vector 35 of norm 0.0
17:11 gram_schmidt: Removing vector 36 of norm 0.0
17:11 gram_schmidt: Removing vector 37 of norm 0.0
17:11 gram_schmidt: Removing vector 38 of norm 0.0
17:11 gram_schmidt: Removing vector 39 of norm 0.0
17:11 gram_schmidt: Removing vector 40 of norm 0.0
17:11 gram_schmidt: Removing vector 41 of norm 0.0
17:11 gram_schmidt: Removing vector 42 of norm 0.0
17:11 gram_schmidt: Removing vector 43 of norm 0.0
17:11 gram_schmidt: Removing vector 44 of norm 0.0
17:11 gram_schmidt: Removing vector 45 of norm 0.0
17:11 gram_schmidt: Removing vector 46 of norm 0.0
17:11 gram_schmidt: Removing vector 47 of norm 0.0
17:11 gram_schmidt: Removing vector 48 of norm 0.0
17:11 gram_schmidt: Removing vector 49 of norm 0.0
17:11 gram_schmidt: Removing vector 50 of norm 0.0
17:11 gram_schmidt: Removing vector 51 of norm 0.0
17:11 gram_schmidt: Removing vector 52 of norm 0.0
17:11 gram_schmidt: Removing vector 53 of norm 0.0
17:11 gram_schmidt: Removing vector 54 of norm 0.0
17:11 gram_schmidt: Removing vector 55 of norm 0.0
17:11 gram_schmidt: Removing vector 56 of norm 0.0
17:11 gram_schmidt: Removing vector 57 of norm 0.0
17:11 gram_schmidt: Removing vector 58 of norm 0.0
17:11 gram_schmidt: Removing vector 59 of norm 0.0
17:11 gram_schmidt: Removing vector 60 of norm 0.0
17:11 gram_schmidt: Removing vector 61 of norm 0.0
17:11 gram_schmidt: Removing vector 62 of norm 0.0
17:11 gram_schmidt: Removing vector 63 of norm 0.0
17:11 gram_schmidt: Removing vector 64 of norm 0.0
17:11 gram_schmidt: Removing vector 65 of norm 0.0
17:11 gram_schmidt: Removing vector 66 of norm 0.0
17:11 gram_schmidt: Removing vector 67 of norm 0.0
17:11 gram_schmidt: Removing vector 68 of norm 0.0
17:11 gram_schmidt: Removing vector 69 of norm 0.0
17:11 gram_schmidt: Removing vector 70 of norm 0.0
17:11 gram_schmidt: Removing vector 71 of norm 0.0
17:11 gram_schmidt: Removing vector 72 of norm 0.0
17:11 gram_schmidt: Removing vector 73 of norm 0.0
17:11 gram_schmidt: Removing vector 74 of norm 0.0
17:11 gram_schmidt: Removing vector 75 of norm 0.0
17:11 gram_schmidt: Removing vector 76 of norm 0.0
17:11 gram_schmidt: Removing vector 77 of norm 0.0
17:11 gram_schmidt: Removing vector 78 of norm 0.0
17:11 gram_schmidt: Removing vector 79 of norm 0.0
17:11 gram_schmidt: Removing vector 80 of norm 0.0
17:11 gram_schmidt: Removing vector 81 of norm 0.0
17:11 gram_schmidt: Removing vector 82 of norm 0.0
17:11 gram_schmidt: Removing vector 83 of norm 0.0
17:11 gram_schmidt: Removing vector 84 of norm 0.0
17:11 gram_schmidt: Removing vector 85 of norm 0.0
17:11 gram_schmidt: Removing vector 86 of norm 0.0
17:11 gram_schmidt: Removing vector 87 of norm 0.0
17:11 gram_schmidt: Removing vector 88 of norm 0.0
17:11 gram_schmidt: Removing vector 89 of norm 0.0
17:11 gram_schmidt: Removing vector 90 of norm 0.0
17:11 gram_schmidt: Removing vector 91 of norm 0.0
17:11 gram_schmidt: Removing vector 92 of norm 0.0
17:11 gram_schmidt: Removing vector 93 of norm 0.0
17:11 gram_schmidt: Removing vector 94 of norm 0.0
17:11 gram_schmidt: Removing vector 95 of norm 0.0
17:11 gram_schmidt: Removing vector 96 of norm 0.0
17:11 gram_schmidt: Removing vector 97 of norm 0.0
17:11 gram_schmidt: Removing vector 98 of norm 0.0
17:11 gram_schmidt: Removing vector 99 of norm 0.0
17:11 gram_schmidt: Removing vector 100 of norm 0.0
17:11 gram_schmidt: Removing vector 101 of norm 0.0
17:11 gram_schmidt: Removing vector 0 of norm 0.0
17:11 gram_schmidt: Removing vector 1 of norm 0.0
17:11 gram_schmidt: Removing vector 2 of norm 0.0
17:11 gram_schmidt: Removing vector 3 of norm 0.0
17:11 gram_schmidt: Removing vector 4 of norm 0.0
17:11 gram_schmidt: Removing vector 5 of norm 0.0
17:11 gram_schmidt: Removing vector 6 of norm 0.0
17:11 gram_schmidt: Removing vector 7 of norm 0.0
17:11 gram_schmidt: Removing vector 8 of norm 0.0
17:11 gram_schmidt: Removing vector 9 of norm 0.0
17:11 gram_schmidt: Removing vector 10 of norm 0.0
17:11 gram_schmidt: Removing vector 11 of norm 0.0
17:11 gram_schmidt: Removing vector 12 of norm 0.0
17:11 gram_schmidt: Removing vector 13 of norm 0.0
17:11 gram_schmidt: Removing vector 14 of norm 0.0
17:11 gram_schmidt: Removing vector 15 of norm 0.0
17:11 gram_schmidt: Removing vector 16 of norm 0.0
17:11 gram_schmidt: Removing vector 17 of norm 0.0
17:11 gram_schmidt: Removing vector 18 of norm 0.0
17:11 gram_schmidt: Removing vector 19 of norm 0.0
17:11 gram_schmidt: Removing vector 20 of norm 0.0
17:11 gram_schmidt: Removing vector 21 of norm 0.0
17:11 gram_schmidt: Removing vector 22 of norm 0.0
17:11 gram_schmidt: Removing vector 23 of norm 0.0
17:11 gram_schmidt: Removing vector 24 of norm 0.0
17:11 gram_schmidt: Removing vector 25 of norm 0.0
17:11 gram_schmidt: Removing vector 26 of norm 0.0
17:11 gram_schmidt: Removing vector 27 of norm 0.0
17:11 gram_schmidt: Removing vector 28 of norm 0.0
17:11 gram_schmidt: Removing vector 29 of norm 0.0
17:11 gram_schmidt: Removing vector 30 of norm 0.0
17:11 gram_schmidt: Removing vector 31 of norm 0.0
17:11 gram_schmidt: Removing vector 32 of norm 0.0
17:11 gram_schmidt: Removing vector 33 of norm 0.0
17:11 gram_schmidt: Removing vector 34 of norm 0.0
17:11 gram_schmidt: Removing vector 35 of norm 0.0
17:11 gram_schmidt: Removing vector 36 of norm 0.0
17:11 gram_schmidt: Removing vector 37 of norm 0.0
17:11 gram_schmidt: Removing vector 38 of norm 0.0
17:11 gram_schmidt: Removing vector 39 of norm 0.0
17:11 gram_schmidt: Removing vector 40 of norm 0.0
17:11 gram_schmidt: Removing vector 41 of norm 0.0
17:11 gram_schmidt: Removing vector 42 of norm 0.0
17:11 gram_schmidt: Removing vector 43 of norm 0.0
17:11 gram_schmidt: Removing vector 44 of norm 0.0
17:11 gram_schmidt: Removing vector 45 of norm 0.0
17:11 gram_schmidt: Removing vector 46 of norm 0.0
17:11 gram_schmidt: Removing vector 47 of norm 0.0
17:11 gram_schmidt: Removing vector 48 of norm 0.0
17:11 gram_schmidt: Removing vector 49 of norm 0.0
17:11 gram_schmidt: Removing vector 50 of norm 0.0
17:11 gram_schmidt: Removing vector 51 of norm 0.0
17:11 gram_schmidt: Removing vector 52 of norm 0.0
17:11 gram_schmidt: Removing vector 53 of norm 0.0
17:11 gram_schmidt: Removing vector 54 of norm 0.0
17:11 gram_schmidt: Removing vector 55 of norm 0.0
17:11 gram_schmidt: Removing vector 56 of norm 0.0
17:11 gram_schmidt: Removing vector 57 of norm 0.0
17:11 gram_schmidt: Removing vector 58 of norm 0.0
17:11 gram_schmidt: Removing vector 59 of norm 0.0
17:11 gram_schmidt: Removing vector 60 of norm 0.0
17:11 gram_schmidt: Removing vector 61 of norm 0.0
17:11 gram_schmidt: Removing vector 62 of norm 0.0
17:11 gram_schmidt: Removing vector 63 of norm 0.0
17:11 gram_schmidt: Removing vector 64 of norm 0.0
17:11 gram_schmidt: Removing vector 65 of norm 0.0
17:11 gram_schmidt: Removing vector 66 of norm 0.0
17:11 gram_schmidt: Removing vector 67 of norm 0.0
17:11 gram_schmidt: Removing vector 68 of norm 0.0
17:11 gram_schmidt: Removing vector 69 of norm 0.0
17:11 gram_schmidt: Removing vector 70 of norm 0.0
17:11 gram_schmidt: Removing vector 71 of norm 0.0
17:11 gram_schmidt: Removing vector 72 of norm 0.0
17:11 gram_schmidt: Removing vector 73 of norm 0.0
17:11 gram_schmidt: Removing vector 74 of norm 0.0
17:11 gram_schmidt: Removing vector 75 of norm 0.0
17:11 gram_schmidt: Removing vector 76 of norm 0.0
17:11 gram_schmidt: Removing vector 77 of norm 0.0
17:11 gram_schmidt: Removing vector 78 of norm 0.0
17:11 gram_schmidt: Removing vector 79 of norm 0.0
17:11 gram_schmidt: Removing vector 80 of norm 0.0
17:11 gram_schmidt: Removing vector 81 of norm 0.0
17:11 gram_schmidt: Removing vector 82 of norm 0.0
17:11 gram_schmidt: Removing vector 83 of norm 0.0
17:11 gram_schmidt: Removing vector 84 of norm 0.0
17:11 gram_schmidt: Removing vector 85 of norm 0.0
17:11 gram_schmidt: Removing vector 86 of norm 0.0
17:11 gram_schmidt: Removing vector 87 of norm 0.0
17:11 gram_schmidt: Removing vector 88 of norm 0.0
17:11 gram_schmidt: Removing vector 89 of norm 0.0
17:11 gram_schmidt: Removing vector 90 of norm 0.0
17:11 gram_schmidt: Removing vector 91 of norm 0.0
17:11 gram_schmidt: Removing vector 92 of norm 0.0
17:11 gram_schmidt: Removing vector 93 of norm 0.0
17:11 gram_schmidt: Removing vector 94 of norm 0.0
17:11 gram_schmidt: Removing vector 95 of norm 0.0
17:11 gram_schmidt: Removing vector 96 of norm 0.0
17:11 gram_schmidt: Removing vector 97 of norm 0.0
17:11 gram_schmidt: Removing vector 98 of norm 0.0
17:11 gram_schmidt: Removing vector 99 of norm 0.0
17:11 gram_schmidt: Removing vector 100 of norm 0.0
17:11 gram_schmidt: Removing vector 101 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;10]" time="0.0034742355346679688"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;11]" time="0.006976127624511719"><system-err>17:11 gram_schmidt: Removing linear dependent vector 3
17:11 gram_schmidt: Removing linear dependent vector 3
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;12]" time="0.00398707389831543"><system-err>17:11 gram_schmidt: Removing vector 0 of norm 0.0
17:11 gram_schmidt: Removing vector 1 of norm 0.0
17:11 gram_schmidt: Removing vector 2 of norm 0.0
17:11 gram_schmidt: Removing vector 0 of norm 0.0
17:11 gram_schmidt: Removing vector 1 of norm 0.0
17:11 gram_schmidt: Removing vector 2 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;13]" time="0.002719402313232422"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;14]" time="0.004960060119628906"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;15]" time="0.4235401153564453"><system-err>17:12 gram_schmidt: Removing linear dependent vector 36
17:12 gram_schmidt: Removing linear dependent vector 37
17:12 gram_schmidt: Removing linear dependent vector 38
17:12 gram_schmidt: Removing linear dependent vector 39
17:12 gram_schmidt: Removing linear dependent vector 40
17:12 gram_schmidt: Removing linear dependent vector 41
17:12 gram_schmidt: Removing linear dependent vector 42
17:12 gram_schmidt: Removing linear dependent vector 36
17:12 gram_schmidt: Removing linear dependent vector 37
17:12 gram_schmidt: Removing linear dependent vector 38
17:12 gram_schmidt: Removing linear dependent vector 39
17:12 gram_schmidt: Removing linear dependent vector 40
17:12 gram_schmidt: Removing linear dependent vector 41
17:12 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;16]" time="0.21850800514221191"><system-err>17:12 gram_schmidt: Removing linear dependent vector 3
17:12 gram_schmidt: Removing linear dependent vector 4
17:12 gram_schmidt: Removing linear dependent vector 5
17:12 gram_schmidt: Removing linear dependent vector 6
17:12 gram_schmidt: Removing linear dependent vector 7
17:12 gram_schmidt: Removing linear dependent vector 8
17:12 gram_schmidt: Removing linear dependent vector 9
17:12 gram_schmidt: Removing linear dependent vector 10
17:12 gram_schmidt: Removing linear dependent vector 11
17:12 gram_schmidt: Removing linear dependent vector 12
17:12 gram_schmidt: Removing linear dependent vector 13
17:12 gram_schmidt: Removing linear dependent vector 14
17:12 gram_schmidt: Removing linear dependent vector 15
17:12 gram_schmidt: Removing linear dependent vector 16
17:12 gram_schmidt: Removing linear dependent vector 17
17:12 gram_schmidt: Removing linear dependent vector 18
17:12 gram_schmidt: Removing linear dependent vector 19
17:12 gram_schmidt: Removing linear dependent vector 20
17:12 gram_schmidt: Removing linear dependent vector 21
17:12 gram_schmidt: Removing linear dependent vector 22
17:12 gram_schmidt: Removing linear dependent vector 23
17:12 gram_schmidt: Removing linear dependent vector 24
17:12 gram_schmidt: Removing linear dependent vector 25
17:12 gram_schmidt: Removing linear dependent vector 26
17:12 gram_schmidt: Removing linear dependent vector 27
17:12 gram_schmidt: Removing linear dependent vector 28
17:12 gram_schmidt: Removing linear dependent vector 29
17:12 gram_schmidt: Removing linear dependent vector 30
17:12 gram_schmidt: Removing linear dependent vector 31
17:12 gram_schmidt: Removing linear dependent vector 32
17:12 gram_schmidt: Removing linear dependent vector 33
17:12 gram_schmidt: Removing linear dependent vector 34
17:12 gram_schmidt: Removing linear dependent vector 35
17:12 gram_schmidt: Removing linear dependent vector 36
17:12 gram_schmidt: Removing linear dependent vector 37
17:12 gram_schmidt: Removing linear dependent vector 38
17:12 gram_schmidt: Removing linear dependent vector 39
17:12 gram_schmidt: Removing linear dependent vector 40
17:12 gram_schmidt: Removing linear dependent vector 41
17:12 gram_schmidt: Removing linear dependent vector 42
17:12 gram_schmidt: Removing linear dependent vector 43
17:12 gram_schmidt: Removing linear dependent vector 44
17:12 gram_schmidt: Removing linear dependent vector 45
17:12 gram_schmidt: Removing linear dependent vector 46
17:12 gram_schmidt: Removing linear dependent vector 47
17:12 gram_schmidt: Removing linear dependent vector 48
17:12 gram_schmidt: Removing linear dependent vector 49
17:12 gram_schmidt: Removing linear dependent vector 50
17:12 gram_schmidt: Removing linear dependent vector 51
17:12 gram_schmidt: Removing linear dependent vector 52
17:12 gram_schmidt: Removing linear dependent vector 53
17:12 gram_schmidt: Removing linear dependent vector 54
17:12 gram_schmidt: Removing linear dependent vector 55
17:12 gram_schmidt: Removing linear dependent vector 56
17:12 gram_schmidt: Removing linear dependent vector 57
17:12 gram_schmidt: Removing linear dependent vector 58
17:12 gram_schmidt: Removing linear dependent vector 59
17:12 gram_schmidt: Removing linear dependent vector 60
17:12 gram_schmidt: Removing linear dependent vector 61
17:12 gram_schmidt: Removing linear dependent vector 62
17:12 gram_schmidt: Removing linear dependent vector 63
17:12 gram_schmidt: Removing linear dependent vector 64
17:12 gram_schmidt: Removing linear dependent vector 65
17:12 gram_schmidt: Removing linear dependent vector 66
17:12 gram_schmidt: Removing linear dependent vector 67
17:12 gram_schmidt: Removing linear dependent vector 68
17:12 gram_schmidt: Removing linear dependent vector 69
17:12 gram_schmidt: Removing linear dependent vector 70
17:12 gram_schmidt: Removing linear dependent vector 71
17:12 gram_schmidt: Removing linear dependent vector 72
17:12 gram_schmidt: Removing linear dependent vector 73
17:12 gram_schmidt: Removing linear dependent vector 74
17:12 gram_schmidt: Removing linear dependent vector 75
17:12 gram_schmidt: Removing linear dependent vector 76
17:12 gram_schmidt: Removing linear dependent vector 77
17:12 gram_schmidt: Removing linear dependent vector 78
17:12 gram_schmidt: Removing linear dependent vector 79
17:12 gram_schmidt: Removing linear dependent vector 80
17:12 gram_schmidt: Removing linear dependent vector 81
17:12 gram_schmidt: Removing linear dependent vector 82
17:12 gram_schmidt: Removing linear dependent vector 83
17:12 gram_schmidt: Removing linear dependent vector 84
17:12 gram_schmidt: Removing linear dependent vector 85
17:12 gram_schmidt: Removing linear dependent vector 86
17:12 gram_schmidt: Removing linear dependent vector 87
17:12 gram_schmidt: Removing linear dependent vector 88
17:12 gram_schmidt: Removing linear dependent vector 89
17:12 gram_schmidt: Removing linear dependent vector 90
17:12 gram_schmidt: Removing linear dependent vector 91
17:12 gram_schmidt: Removing linear dependent vector 92
17:12 gram_schmidt: Removing linear dependent vector 93
17:12 gram_schmidt: Removing linear dependent vector 94
17:12 gram_schmidt: Removing linear dependent vector 95
17:12 gram_schmidt: Removing linear dependent vector 96
17:12 gram_schmidt: Removing linear dependent vector 97
17:12 gram_schmidt: Removing linear dependent vector 98
17:12 gram_schmidt: Removing linear dependent vector 99
17:12 gram_schmidt: Removing linear dependent vector 100
17:12 gram_schmidt: Removing linear dependent vector 101
17:12 gram_schmidt: Removing linear dependent vector 3
17:12 gram_schmidt: Removing linear dependent vector 4
17:12 gram_schmidt: Removing linear dependent vector 5
17:12 gram_schmidt: Removing linear dependent vector 6
17:12 gram_schmidt: Removing linear dependent vector 7
17:12 gram_schmidt: Removing linear dependent vector 8
17:12 gram_schmidt: Removing linear dependent vector 9
17:12 gram_schmidt: Removing linear dependent vector 10
17:12 gram_schmidt: Removing linear dependent vector 11
17:12 gram_schmidt: Removing linear dependent vector 12
17:12 gram_schmidt: Removing linear dependent vector 13
17:12 gram_schmidt: Removing linear dependent vector 14
17:12 gram_schmidt: Removing linear dependent vector 15
17:12 gram_schmidt: Removing linear dependent vector 16
17:12 gram_schmidt: Removing linear dependent vector 17
17:12 gram_schmidt: Removing linear dependent vector 18
17:12 gram_schmidt: Removing linear dependent vector 19
17:12 gram_schmidt: Removing linear dependent vector 20
17:12 gram_schmidt: Removing linear dependent vector 21
17:12 gram_schmidt: Removing linear dependent vector 22
17:12 gram_schmidt: Removing linear dependent vector 23
17:12 gram_schmidt: Removing linear dependent vector 24
17:12 gram_schmidt: Removing linear dependent vector 25
17:12 gram_schmidt: Removing linear dependent vector 26
17:12 gram_schmidt: Removing linear dependent vector 27
17:12 gram_schmidt: Removing linear dependent vector 28
17:12 gram_schmidt: Removing linear dependent vector 29
17:12 gram_schmidt: Removing linear dependent vector 30
17:12 gram_schmidt: Removing linear dependent vector 31
17:12 gram_schmidt: Removing linear dependent vector 32
17:12 gram_schmidt: Removing linear dependent vector 33
17:12 gram_schmidt: Removing linear dependent vector 34
17:12 gram_schmidt: Removing linear dependent vector 35
17:12 gram_schmidt: Removing linear dependent vector 36
17:12 gram_schmidt: Removing linear dependent vector 37
17:12 gram_schmidt: Removing linear dependent vector 38
17:12 gram_schmidt: Removing linear dependent vector 39
17:12 gram_schmidt: Removing linear dependent vector 40
17:12 gram_schmidt: Removing linear dependent vector 41
17:12 gram_schmidt: Removing linear dependent vector 42
17:12 gram_schmidt: Removing linear dependent vector 43
17:12 gram_schmidt: Removing linear dependent vector 44
17:12 gram_schmidt: Removing linear dependent vector 45
17:12 gram_schmidt: Removing linear dependent vector 46
17:12 gram_schmidt: Removing linear dependent vector 47
17:12 gram_schmidt: Removing linear dependent vector 48
17:12 gram_schmidt: Removing linear dependent vector 49
17:12 gram_schmidt: Removing linear dependent vector 50
17:12 gram_schmidt: Removing linear dependent vector 51
17:12 gram_schmidt: Removing linear dependent vector 52
17:12 gram_schmidt: Removing linear dependent vector 53
17:12 gram_schmidt: Removing linear dependent vector 54
17:12 gram_schmidt: Removing linear dependent vector 55
17:12 gram_schmidt: Removing linear dependent vector 56
17:12 gram_schmidt: Removing linear dependent vector 57
17:12 gram_schmidt: Removing linear dependent vector 58
17:12 gram_schmidt: Removing linear dependent vector 59
17:12 gram_schmidt: Removing linear dependent vector 60
17:12 gram_schmidt: Removing linear dependent vector 61
17:12 gram_schmidt: Removing linear dependent vector 62
17:12 gram_schmidt: Removing linear dependent vector 63
17:12 gram_schmidt: Removing linear dependent vector 64
17:12 gram_schmidt: Removing linear dependent vector 65
17:12 gram_schmidt: Removing linear dependent vector 66
17:12 gram_schmidt: Removing linear dependent vector 67
17:12 gram_schmidt: Removing linear dependent vector 68
17:12 gram_schmidt: Removing linear dependent vector 69
17:12 gram_schmidt: Removing linear dependent vector 70
17:12 gram_schmidt: Removing linear dependent vector 71
17:12 gram_schmidt: Removing linear dependent vector 72
17:12 gram_schmidt: Removing linear dependent vector 73
17:12 gram_schmidt: Removing linear dependent vector 74
17:12 gram_schmidt: Removing linear dependent vector 75
17:12 gram_schmidt: Removing linear dependent vector 76
17:12 gram_schmidt: Removing linear dependent vector 77
17:12 gram_schmidt: Removing linear dependent vector 78
17:12 gram_schmidt: Removing linear dependent vector 79
17:12 gram_schmidt: Removing linear dependent vector 80
17:12 gram_schmidt: Removing linear dependent vector 81
17:12 gram_schmidt: Removing linear dependent vector 82
17:12 gram_schmidt: Removing linear dependent vector 83
17:12 gram_schmidt: Removing linear dependent vector 84
17:12 gram_schmidt: Removing linear dependent vector 85
17:12 gram_schmidt: Removing linear dependent vector 86
17:12 gram_schmidt: Removing linear dependent vector 87
17:12 gram_schmidt: Removing linear dependent vector 88
17:12 gram_schmidt: Removing linear dependent vector 89
17:12 gram_schmidt: Removing linear dependent vector 90
17:12 gram_schmidt: Removing linear dependent vector 91
17:12 gram_schmidt: Removing linear dependent vector 92
17:12 gram_schmidt: Removing linear dependent vector 93
17:12 gram_schmidt: Removing linear dependent vector 94
17:12 gram_schmidt: Removing linear dependent vector 95
17:12 gram_schmidt: Removing linear dependent vector 96
17:12 gram_schmidt: Removing linear dependent vector 97
17:12 gram_schmidt: Removing linear dependent vector 98
17:12 gram_schmidt: Removing linear dependent vector 99
17:12 gram_schmidt: Removing linear dependent vector 100
17:12 gram_schmidt: Removing linear dependent vector 101
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;17]" time="0.0034325122833251953"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;18]" time="0.0025568008422851562"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;19]" time="0.0051000118255615234"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;20]" time="0.2937784194946289"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;21]" time="1.532158374786377"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;22]" time="0.0022912025451660156"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;23]" time="0.0018024444580078125"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;24]" time="0.007398843765258789"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;25]" time="0.41159629821777344"><system-err>17:14 gram_schmidt: Orthonormalizing vector 31 again
17:14 gram_schmidt: Removing linear dependent vector 32
17:14 gram_schmidt: Removing linear dependent vector 33
17:14 gram_schmidt: Removing linear dependent vector 34
17:14 gram_schmidt: Removing linear dependent vector 35
17:14 gram_schmidt: Removing linear dependent vector 36
17:14 gram_schmidt: Removing linear dependent vector 37
17:14 gram_schmidt: Removing linear dependent vector 38
17:14 gram_schmidt: Removing linear dependent vector 39
17:14 gram_schmidt: Removing linear dependent vector 40
17:14 gram_schmidt: Removing linear dependent vector 41
17:14 gram_schmidt: Removing linear dependent vector 42
17:14 gram_schmidt: Orthonormalizing vector 31 again
17:14 gram_schmidt: Removing linear dependent vector 32
17:14 gram_schmidt: Removing linear dependent vector 33
17:14 gram_schmidt: Removing linear dependent vector 34
17:14 gram_schmidt: Removing linear dependent vector 35
17:14 gram_schmidt: Removing linear dependent vector 36
17:14 gram_schmidt: Removing linear dependent vector 37
17:14 gram_schmidt: Removing linear dependent vector 38
17:14 gram_schmidt: Removing linear dependent vector 39
17:14 gram_schmidt: Removing linear dependent vector 40
17:14 gram_schmidt: Removing linear dependent vector 41
17:14 gram_schmidt: Removing linear dependent vector 42
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="12" name="test_gram_schmidt[2-&lt;lambda&gt;26]" time="0.23607754707336426"><system-err>17:14 gram_schmidt: Removing vector 0 of norm 0.0
17:14 gram_schmidt: Removing vector 1 of norm 0.0
17:14 gram_schmidt: Removing vector 2 of norm 0.0
17:14 gram_schmidt: Removing vector 3 of norm 0.0
17:14 gram_schmidt: Removing vector 4 of norm 0.0
17:14 gram_schmidt: Removing vector 5 of norm 0.0
17:14 gram_schmidt: Removing vector 6 of norm 0.0
17:14 gram_schmidt: Removing vector 7 of norm 0.0
17:14 gram_schmidt: Removing vector 8 of norm 0.0
17:14 gram_schmidt: Removing vector 9 of norm 0.0
17:14 gram_schmidt: Removing vector 10 of norm 0.0
17:14 gram_schmidt: Removing vector 11 of norm 0.0
17:14 gram_schmidt: Removing vector 12 of norm 0.0
17:14 gram_schmidt: Removing vector 13 of norm 0.0
17:14 gram_schmidt: Removing vector 14 of norm 0.0
17:14 gram_schmidt: Removing vector 15 of norm 0.0
17:14 gram_schmidt: Removing vector 16 of norm 0.0
17:14 gram_schmidt: Removing vector 17 of norm 0.0
17:14 gram_schmidt: Removing vector 18 of norm 0.0
17:14 gram_schmidt: Removing vector 19 of norm 0.0
17:14 gram_schmidt: Removing vector 20 of norm 0.0
17:14 gram_schmidt: Removing vector 21 of norm 0.0
17:14 gram_schmidt: Removing vector 22 of norm 0.0
17:14 gram_schmidt: Removing vector 23 of norm 0.0
17:14 gram_schmidt: Removing vector 24 of norm 0.0
17:14 gram_schmidt: Removing vector 25 of norm 0.0
17:14 gram_schmidt: Removing vector 26 of norm 0.0
17:14 gram_schmidt: Removing vector 27 of norm 0.0
17:14 gram_schmidt: Removing vector 28 of norm 0.0
17:14 gram_schmidt: Removing vector 29 of norm 0.0
17:14 gram_schmidt: Removing vector 30 of norm 0.0
17:14 gram_schmidt: Removing vector 31 of norm 0.0
17:14 gram_schmidt: Removing vector 32 of norm 0.0
17:14 gram_schmidt: Removing vector 33 of norm 0.0
17:14 gram_schmidt: Removing vector 34 of norm 0.0
17:14 gram_schmidt: Removing vector 35 of norm 0.0
17:14 gram_schmidt: Removing vector 36 of norm 0.0
17:14 gram_schmidt: Removing vector 37 of norm 0.0
17:14 gram_schmidt: Removing vector 38 of norm 0.0
17:14 gram_schmidt: Removing vector 39 of norm 0.0
17:14 gram_schmidt: Removing vector 40 of norm 0.0
17:14 gram_schmidt: Removing vector 41 of norm 0.0
17:14 gram_schmidt: Removing vector 42 of norm 0.0
17:14 gram_schmidt: Removing vector 43 of norm 0.0
17:14 gram_schmidt: Removing vector 44 of norm 0.0
17:14 gram_schmidt: Removing vector 45 of norm 0.0
17:14 gram_schmidt: Removing vector 46 of norm 0.0
17:14 gram_schmidt: Removing vector 47 of norm 0.0
17:14 gram_schmidt: Removing vector 48 of norm 0.0
17:14 gram_schmidt: Removing vector 49 of norm 0.0
17:14 gram_schmidt: Removing vector 50 of norm 0.0
17:14 gram_schmidt: Removing vector 51 of norm 0.0
17:14 gram_schmidt: Removing vector 52 of norm 0.0
17:14 gram_schmidt: Removing vector 53 of norm 0.0
17:14 gram_schmidt: Removing vector 54 of norm 0.0
17:14 gram_schmidt: Removing vector 55 of norm 0.0
17:14 gram_schmidt: Removing vector 56 of norm 0.0
17:14 gram_schmidt: Removing vector 57 of norm 0.0
17:14 gram_schmidt: Removing vector 58 of norm 0.0
17:14 gram_schmidt: Removing vector 59 of norm 0.0
17:14 gram_schmidt: Removing vector 60 of norm 0.0
17:14 gram_schmidt: Removing vector 61 of norm 0.0
17:14 gram_schmidt: Removing vector 62 of norm 0.0
17:14 gram_schmidt: Removing vector 63 of norm 0.0
17:14 gram_schmidt: Removing vector 64 of norm 0.0
17:14 gram_schmidt: Removing vector 65 of norm 0.0
17:14 gram_schmidt: Removing vector 66 of norm 0.0
17:14 gram_schmidt: Removing vector 67 of norm 0.0
17:14 gram_schmidt: Removing vector 68 of norm 0.0
17:14 gram_schmidt: Removing vector 69 of norm 0.0
17:14 gram_schmidt: Removing vector 70 of norm 0.0
17:14 gram_schmidt: Removing vector 71 of norm 0.0
17:14 gram_schmidt: Removing vector 72 of norm 0.0
17:14 gram_schmidt: Removing vector 73 of norm 0.0
17:14 gram_schmidt: Removing vector 74 of norm 0.0
17:14 gram_schmidt: Removing vector 75 of norm 0.0
17:14 gram_schmidt: Removing vector 76 of norm 0.0
17:14 gram_schmidt: Removing vector 77 of norm 0.0
17:14 gram_schmidt: Removing vector 78 of norm 0.0
17:14 gram_schmidt: Removing vector 79 of norm 0.0
17:14 gram_schmidt: Removing vector 80 of norm 0.0
17:14 gram_schmidt: Removing vector 81 of norm 0.0
17:14 gram_schmidt: Removing vector 82 of norm 0.0
17:14 gram_schmidt: Removing vector 83 of norm 0.0
17:14 gram_schmidt: Removing vector 84 of norm 0.0
17:14 gram_schmidt: Removing vector 85 of norm 0.0
17:14 gram_schmidt: Removing vector 86 of norm 0.0
17:14 gram_schmidt: Removing vector 87 of norm 0.0
17:14 gram_schmidt: Removing vector 88 of norm 0.0
17:14 gram_schmidt: Removing vector 89 of norm 0.0
17:14 gram_schmidt: Removing vector 90 of norm 0.0
17:14 gram_schmidt: Removing vector 91 of norm 0.0
17:14 gram_schmidt: Removing vector 92 of norm 0.0
17:14 gram_schmidt: Removing vector 93 of norm 0.0
17:14 gram_schmidt: Removing vector 94 of norm 0.0
17:14 gram_schmidt: Removing vector 95 of norm 0.0
17:14 gram_schmidt: Removing vector 96 of norm 0.0
17:14 gram_schmidt: Removing vector 97 of norm 0.0
17:14 gram_schmidt: Removing vector 98 of norm 0.0
17:14 gram_schmidt: Removing vector 99 of norm 0.0
17:14 gram_schmidt: Removing vector 100 of norm 0.0
17:14 gram_schmidt: Removing vector 101 of norm 0.0
17:15 gram_schmidt: Removing vector 0 of norm 0.0
17:15 gram_schmidt: Removing vector 1 of norm 0.0
17:15 gram_schmidt: Removing vector 2 of norm 0.0
17:15 gram_schmidt: Removing vector 3 of norm 0.0
17:15 gram_schmidt: Removing vector 4 of norm 0.0
17:15 gram_schmidt: Removing vector 5 of norm 0.0
17:15 gram_schmidt: Removing vector 6 of norm 0.0
17:15 gram_schmidt: Removing vector 7 of norm 0.0
17:15 gram_schmidt: Removing vector 8 of norm 0.0
17:15 gram_schmidt: Removing vector 9 of norm 0.0
17:15 gram_schmidt: Removing vector 10 of norm 0.0
17:15 gram_schmidt: Removing vector 11 of norm 0.0
17:15 gram_schmidt: Removing vector 12 of norm 0.0
17:15 gram_schmidt: Removing vector 13 of norm 0.0
17:15 gram_schmidt: Removing vector 14 of norm 0.0
17:15 gram_schmidt: Removing vector 15 of norm 0.0
17:15 gram_schmidt: Removing vector 16 of norm 0.0
17:15 gram_schmidt: Removing vector 17 of norm 0.0
17:15 gram_schmidt: Removing vector 18 of norm 0.0
17:15 gram_schmidt: Removing vector 19 of norm 0.0
17:15 gram_schmidt: Removing vector 20 of norm 0.0
17:15 gram_schmidt: Removing vector 21 of norm 0.0
17:15 gram_schmidt: Removing vector 22 of norm 0.0
17:15 gram_schmidt: Removing vector 23 of norm 0.0
17:15 gram_schmidt: Removing vector 24 of norm 0.0
17:15 gram_schmidt: Removing vector 25 of norm 0.0
17:15 gram_schmidt: Removing vector 26 of norm 0.0
17:15 gram_schmidt: Removing vector 27 of norm 0.0
17:15 gram_schmidt: Removing vector 28 of norm 0.0
17:15 gram_schmidt: Removing vector 29 of norm 0.0
17:15 gram_schmidt: Removing vector 30 of norm 0.0
17:15 gram_schmidt: Removing vector 31 of norm 0.0
17:15 gram_schmidt: Removing vector 32 of norm 0.0
17:15 gram_schmidt: Removing vector 33 of norm 0.0
17:15 gram_schmidt: Removing vector 34 of norm 0.0
17:15 gram_schmidt: Removing vector 35 of norm 0.0
17:15 gram_schmidt: Removing vector 36 of norm 0.0
17:15 gram_schmidt: Removing vector 37 of norm 0.0
17:15 gram_schmidt: Removing vector 38 of norm 0.0
17:15 gram_schmidt: Removing vector 39 of norm 0.0
17:15 gram_schmidt: Removing vector 40 of norm 0.0
17:15 gram_schmidt: Removing vector 41 of norm 0.0
17:15 gram_schmidt: Removing vector 42 of norm 0.0
17:15 gram_schmidt: Removing vector 43 of norm 0.0
17:15 gram_schmidt: Removing vector 44 of norm 0.0
17:15 gram_schmidt: Removing vector 45 of norm 0.0
17:15 gram_schmidt: Removing vector 46 of norm 0.0
17:15 gram_schmidt: Removing vector 47 of norm 0.0
17:15 gram_schmidt: Removing vector 48 of norm 0.0
17:15 gram_schmidt: Removing vector 49 of norm 0.0
17:15 gram_schmidt: Removing vector 50 of norm 0.0
17:15 gram_schmidt: Removing vector 51 of norm 0.0
17:15 gram_schmidt: Removing vector 52 of norm 0.0
17:15 gram_schmidt: Removing vector 53 of norm 0.0
17:15 gram_schmidt: Removing vector 54 of norm 0.0
17:15 gram_schmidt: Removing vector 55 of norm 0.0
17:15 gram_schmidt: Removing vector 56 of norm 0.0
17:15 gram_schmidt: Removing vector 57 of norm 0.0
17:15 gram_schmidt: Removing vector 58 of norm 0.0
17:15 gram_schmidt: Removing vector 59 of norm 0.0
17:15 gram_schmidt: Removing vector 60 of norm 0.0
17:15 gram_schmidt: Removing vector 61 of norm 0.0
17:15 gram_schmidt: Removing vector 62 of norm 0.0
17:15 gram_schmidt: Removing vector 63 of norm 0.0
17:15 gram_schmidt: Removing vector 64 of norm 0.0
17:15 gram_schmidt: Removing vector 65 of norm 0.0
17:15 gram_schmidt: Removing vector 66 of norm 0.0
17:15 gram_schmidt: Removing vector 67 of norm 0.0
17:15 gram_schmidt: Removing vector 68 of norm 0.0
17:15 gram_schmidt: Removing vector 69 of norm 0.0
17:15 gram_schmidt: Removing vector 70 of norm 0.0
17:15 gram_schmidt: Removing vector 71 of norm 0.0
17:15 gram_schmidt: Removing vector 72 of norm 0.0
17:15 gram_schmidt: Removing vector 73 of norm 0.0
17:15 gram_schmidt: Removing vector 74 of norm 0.0
17:15 gram_schmidt: Removing vector 75 of norm 0.0
17:15 gram_schmidt: Removing vector 76 of norm 0.0
17:15 gram_schmidt: Removing vector 77 of norm 0.0
17:15 gram_schmidt: Removing vector 78 of norm 0.0
17:15 gram_schmidt: Removing vector 79 of norm 0.0
17:15 gram_schmidt: Removing vector 80 of norm 0.0
17:15 gram_schmidt: Removing vector 81 of norm 0.0
17:15 gram_schmidt: Removing vector 82 of norm 0.0
17:15 gram_schmidt: Removing vector 83 of norm 0.0
17:15 gram_schmidt: Removing vector 84 of norm 0.0
17:15 gram_schmidt: Removing vector 85 of norm 0.0
17:15 gram_schmidt: Removing vector 86 of norm 0.0
17:15 gram_schmidt: Removing vector 87 of norm 0.0
17:15 gram_schmidt: Removing vector 88 of norm 0.0
17:15 gram_schmidt: Removing vector 89 of norm 0.0
17:15 gram_schmidt: Removing vector 90 of norm 0.0
17:15 gram_schmidt: Removing vector 91 of norm 0.0
17:15 gram_schmidt: Removing vector 92 of norm 0.0
17:15 gram_schmidt: Removing vector 93 of norm 0.0
17:15 gram_schmidt: Removing vector 94 of norm 0.0
17:15 gram_schmidt: Removing vector 95 of norm 0.0
17:15 gram_schmidt: Removing vector 96 of norm 0.0
17:15 gram_schmidt: Removing vector 97 of norm 0.0
17:15 gram_schmidt: Removing vector 98 of norm 0.0
17:15 gram_schmidt: Removing vector 99 of norm 0.0
17:15 gram_schmidt: Removing vector 100 of norm 0.0
17:15 gram_schmidt: Removing vector 101 of norm 0.0
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;0]" time="0.03650951385498047"><system-err>17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;1]" time="0.03336358070373535"><system-err>17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;2]" time="0.03781414031982422"><system-err>17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;3]" time="0.03448987007141113"><system-err>17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;4]" time="0.03696584701538086"><system-err>17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;5]" time="0.034407854080200195"><system-err>17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;6]" time="0.03598308563232422"><system-err>17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;7]" time="0.03421831130981445"><system-err>17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;8]" time="0.037404537200927734"><system-err>17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;9]" time="0.03511834144592285"><system-err>17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;10]" time="0.03896594047546387"><system-err>17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;11]" time="0.03595113754272461"><system-err>17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;12]" time="0.03826403617858887"><system-err>17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 gram_schmidt: Removing linear dependent vector 5
17:15 gram_schmidt: Removing linear dependent vector 6
17:15 gram_schmidt: Removing linear dependent vector 5
17:15 gram_schmidt: Removing linear dependent vector 6
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;13]" time="0.03488922119140625"><system-err>17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Removing linear dependent vector 5
17:15 gram_schmidt: Removing linear dependent vector 6
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Removing linear dependent vector 5
17:15 gram_schmidt: Removing linear dependent vector 6
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;14]" time="0.04149794578552246"><system-err>17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Removing linear dependent vector 5
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Removing linear dependent vector 5
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;15]" time="0.04008221626281738"><system-err>17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Orthonormalizing vector 5 again
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Orthonormalizing vector 5 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;16]" time="0.03691554069519043"><system-err>17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 gram_schmidt: Removing linear dependent vector 1
17:15 gram_schmidt: Removing linear dependent vector 2
17:15 gram_schmidt: Removing linear dependent vector 3
17:15 gram_schmidt: Removing linear dependent vector 4
17:15 gram_schmidt: Removing linear dependent vector 5
17:15 gram_schmidt: Removing linear dependent vector 6
17:15 gram_schmidt: Removing linear dependent vector 1
17:15 gram_schmidt: Removing linear dependent vector 2
17:15 gram_schmidt: Removing linear dependent vector 3
17:15 gram_schmidt: Removing linear dependent vector 4
17:15 gram_schmidt: Removing linear dependent vector 5
17:15 gram_schmidt: Removing linear dependent vector 6
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;17]" time="0.03187704086303711"><system-err>17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 gram_schmidt: Removing linear dependent vector 1
17:15 gram_schmidt: Removing linear dependent vector 2
17:15 gram_schmidt: Removing linear dependent vector 3
17:15 gram_schmidt: Removing linear dependent vector 4
17:15 gram_schmidt: Removing linear dependent vector 5
17:15 gram_schmidt: Removing linear dependent vector 6
17:15 gram_schmidt: Removing linear dependent vector 1
17:15 gram_schmidt: Removing linear dependent vector 2
17:15 gram_schmidt: Removing linear dependent vector 3
17:15 gram_schmidt: Removing linear dependent vector 4
17:15 gram_schmidt: Removing linear dependent vector 5
17:15 gram_schmidt: Removing linear dependent vector 6
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;18]" time="0.04095578193664551"><system-err>17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Removing linear dependent vector 5
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Removing linear dependent vector 5
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;19]" time="0.037795305252075195"><system-err>17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Orthonormalizing vector 5 again
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Orthonormalizing vector 5 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;20]" time="0.04216647148132324"><system-err>17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Removing linear dependent vector 5
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Removing linear dependent vector 5
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;21]" time="0.037863969802856445"><system-err>17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Orthonormalizing vector 5 again
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Orthonormalizing vector 5 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;22]" time="0.03733539581298828"><system-err>17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;23]" time="0.0345461368560791"><system-err>17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 L2ProductP1: Integrate the products of the shape functions on each element
17:15 L2ProductP1: Determine global dofs ...
17:15 L2ProductP1: Boundary treatment ...
17:15 L2ProductP1: Assemble system matrix ...
17:15 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:15 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:15 DiffusionOperatorP1: Determine global dofs ...
17:15 DiffusionOperatorP1: Boundary treatment ...
17:15 DiffusionOperatorP1: Assemble system matrix ...
17:15 gram_schmidt: Orthonormalizing vector 1 again
17:15 gram_schmidt: Orthonormalizing vector 2 again
17:15 gram_schmidt: Orthonormalizing vector 3 again
17:15 gram_schmidt: Orthonormalizing vector 4 again
17:16 gram_schmidt: Orthonormalizing vector 1 again
17:16 gram_schmidt: Orthonormalizing vector 2 again
17:16 gram_schmidt: Orthonormalizing vector 3 again
17:16 gram_schmidt: Orthonormalizing vector 4 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;24]" time="0.010679244995117188"><system-err>17:16 gram_schmidt: Orthonormalizing vector 1 again
17:16 gram_schmidt: Orthonormalizing vector 2 again
17:16 gram_schmidt: Orthonormalizing vector 3 again
17:16 gram_schmidt: Orthonormalizing vector 1 again
17:16 gram_schmidt: Orthonormalizing vector 2 again
17:16 gram_schmidt: Orthonormalizing vector 3 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;25]" time="0.010109186172485352"><system-err>17:16 gram_schmidt: Orthonormalizing vector 1 again
17:16 gram_schmidt: Orthonormalizing vector 2 again
17:16 gram_schmidt: Orthonormalizing vector 3 again
17:16 gram_schmidt: Orthonormalizing vector 1 again
17:16 gram_schmidt: Orthonormalizing vector 2 again
17:16 gram_schmidt: Orthonormalizing vector 3 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;26]" time="0.00956583023071289"><system-err>17:16 gram_schmidt: Orthonormalizing vector 1 again
17:16 gram_schmidt: Orthonormalizing vector 2 again
17:16 gram_schmidt: Orthonormalizing vector 3 again
17:16 gram_schmidt: Orthonormalizing vector 1 again
17:16 gram_schmidt: Orthonormalizing vector 2 again
17:16 gram_schmidt: Orthonormalizing vector 3 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;27]" time="0.006530046463012695"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;28]" time="0.007416963577270508"><system-err>17:16 gram_schmidt: Orthonormalizing vector 1 again
17:16 gram_schmidt: Orthonormalizing vector 2 again
17:16 gram_schmidt: Orthonormalizing vector 1 again
17:16 gram_schmidt: Orthonormalizing vector 2 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;29]" time="0.0067713260650634766"><system-err>17:16 gram_schmidt: Orthonormalizing vector 1 again
17:16 gram_schmidt: Orthonormalizing vector 2 again
17:16 gram_schmidt: Orthonormalizing vector 1 again
17:16 gram_schmidt: Orthonormalizing vector 2 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;30]" time="0.006846904754638672"><system-err>17:16 gram_schmidt: Orthonormalizing vector 1 again
17:16 gram_schmidt: Orthonormalizing vector 2 again
17:16 gram_schmidt: Orthonormalizing vector 1 again
17:16 gram_schmidt: Orthonormalizing vector 2 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;31]" time="0.0062482357025146484"><system-err>17:16 gram_schmidt: Orthonormalizing vector 1 again
17:16 gram_schmidt: Orthonormalizing vector 2 again
17:16 gram_schmidt: Orthonormalizing vector 1 again
17:16 gram_schmidt: Orthonormalizing vector 2 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;32]" time="0.022186756134033203"><system-err>17:16 gram_schmidt: Orthonormalizing vector 3 again
17:16 gram_schmidt: Orthonormalizing vector 3 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;33]" time="0.018495559692382812"><system-err>17:16 gram_schmidt: Orthonormalizing vector 3 again
17:16 gram_schmidt: Orthonormalizing vector 3 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;34]" time="0.010997295379638672"><system-err>17:16 gram_schmidt: Orthonormalizing vector 1 again
17:16 gram_schmidt: Orthonormalizing vector 2 again
17:16 gram_schmidt: Orthonormalizing vector 3 again
17:16 gram_schmidt: Orthonormalizing vector 1 again
17:16 gram_schmidt: Orthonormalizing vector 2 again
17:16 gram_schmidt: Orthonormalizing vector 3 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;35]" time="0.019933223724365234"><system-err>17:16 gram_schmidt: Orthonormalizing vector 2 again
17:16 gram_schmidt: Orthonormalizing vector 3 again
17:16 gram_schmidt: Orthonormalizing vector 2 again
17:16 gram_schmidt: Orthonormalizing vector 3 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="26" name="test_gram_schmidt_with_product[&lt;lambda&gt;36]" time="0.010670661926269531"><system-err>17:16 gram_schmidt: Orthonormalizing vector 1 again
17:16 gram_schmidt: Orthonormalizing vector 2 again
17:16 gram_schmidt: Orthonormalizing vector 3 again
17:16 gram_schmidt: Orthonormalizing vector 1 again
17:16 gram_schmidt: Orthonormalizing vector 2 again
17:16 gram_schmidt: Orthonormalizing vector 3 again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;0]" time="0.001644134521484375"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;1]" time="0.0011353492736816406"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;2]" time="0.0011146068572998047"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;3]" time="0.06044173240661621"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;4]" time="0.0016314983367919922"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;5]" time="0.001232147216796875"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;6]" time="0.001165151596069336"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;7]" time="0.0011105537414550781"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;8]" time="0.11173772811889648"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;9]" time="0.0022416114807128906"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;10]" time="0.0013768672943115234"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;11]" time="0.006127119064331055"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;12]" time="0.001321554183959961"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;13]" time="0.001226663589477539"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;14]" time="0.004384517669677734"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;15]" time="0.21977949142456055"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;16]" time="0.009057283401489258"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;17]" time="0.0029332637786865234"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;18]" time="0.002001523971557617"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;19]" time="0.0033075809478759766"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;20]" time="0.15223145484924316"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;21]" time="0.7663543224334717"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;22]" time="0.0016510486602783203"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;23]" time="0.0012347698211669922"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;24]" time="0.0020542144775390625"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;25]" time="0.3089785575866699"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[0-&lt;lambda&gt;26]" time="0.05504274368286133"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;0]" time="0.001744985580444336"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;1]" time="0.0011785030364990234"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;2]" time="0.0011773109436035156"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;3]" time="0.06104755401611328"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;4]" time="0.0019488334655761719"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;5]" time="0.0013773441314697266"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;6]" time="0.0012657642364501953"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;7]" time="0.001310586929321289"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;8]" time="0.11633777618408203"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;9]" time="0.0029191970825195312"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;10]" time="0.0014286041259765625"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;11]" time="0.0065157413482666016"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;12]" time="0.001483917236328125"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;13]" time="0.0012645721435546875"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;14]" time="0.004618167877197266"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;15]" time="0.2204453945159912"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;16]" time="0.008674144744873047"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;17]" time="0.0027785301208496094"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;18]" time="0.0020918846130371094"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;19]" time="0.0033273696899414062"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;20]" time="0.15276265144348145"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;21]" time="0.7576589584350586"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;22]" time="0.0020294189453125"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;23]" time="0.0012171268463134766"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;24]" time="0.002171754837036133"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;25]" time="0.30097246170043945"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[1-&lt;lambda&gt;26]" time="0.053102731704711914"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;0]" time="0.0019207000732421875"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;1]" time="0.0012631416320800781"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;2]" time="0.001255035400390625"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;3]" time="0.061118125915527344"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;4]" time="0.0018074512481689453"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;5]" time="0.0013048648834228516"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;6]" time="0.0012059211730957031"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;7]" time="0.0011982917785644531"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;8]" time="0.11329460144042969"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;9]" time="0.002790212631225586"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;10]" time="0.0014171600341796875"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;11]" time="0.006166934967041016"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;12]" time="0.0013911724090576172"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;13]" time="0.0012733936309814453"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;14]" time="0.0045015811920166016"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;15]" time="0.2190232276916504"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;16]" time="0.009211063385009766"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;17]" time="0.003020048141479492"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;18]" time="0.002039670944213867"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;19]" time="0.0034558773040771484"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;20]" time="0.15221357345581055"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;21]" time="0.7768540382385254"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;22]" time="0.0019176006317138672"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;23]" time="0.0012085437774658203"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;24]" time="0.0021615028381347656"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;25]" time="0.30031919479370117"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="40" name="test_gram_schmidt_biorth[2-&lt;lambda&gt;26]" time="0.052978515625"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;0]" time="0.032462120056152344"><system-err>17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 L2ProductP1: Integrate the products of the shape functions on each element
17:21 L2ProductP1: Determine global dofs ...
17:21 L2ProductP1: Boundary treatment ...
17:21 L2ProductP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 L2ProductP1: Integrate the products of the shape functions on each element
17:21 L2ProductP1: Determine global dofs ...
17:21 L2ProductP1: Boundary treatment ...
17:21 L2ProductP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;1]" time="0.029561996459960938"><system-err>17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 L2ProductP1: Integrate the products of the shape functions on each element
17:21 L2ProductP1: Determine global dofs ...
17:21 L2ProductP1: Boundary treatment ...
17:21 L2ProductP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 L2ProductP1: Integrate the products of the shape functions on each element
17:21 L2ProductP1: Determine global dofs ...
17:21 L2ProductP1: Boundary treatment ...
17:21 L2ProductP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 gram_schmidt_biorth: Projecting vector V[1] again
17:21 gram_schmidt_biorth: Projecting vector W[1] again
17:21 gram_schmidt_biorth: Projecting vector V[1] again
17:21 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;2]" time="0.03461432456970215"><system-err>17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 L2ProductP1: Integrate the products of the shape functions on each element
17:21 L2ProductP1: Determine global dofs ...
17:21 L2ProductP1: Boundary treatment ...
17:21 L2ProductP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 L2ProductP1: Integrate the products of the shape functions on each element
17:21 L2ProductP1: Determine global dofs ...
17:21 L2ProductP1: Boundary treatment ...
17:21 L2ProductP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;3]" time="0.03068399429321289"><system-err>17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 L2ProductP1: Integrate the products of the shape functions on each element
17:21 L2ProductP1: Determine global dofs ...
17:21 L2ProductP1: Boundary treatment ...
17:21 L2ProductP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 L2ProductP1: Integrate the products of the shape functions on each element
17:21 L2ProductP1: Determine global dofs ...
17:21 L2ProductP1: Boundary treatment ...
17:21 L2ProductP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 gram_schmidt_biorth: Projecting vector V[1] again
17:21 gram_schmidt_biorth: Projecting vector W[1] again
17:21 gram_schmidt_biorth: Projecting vector V[1] again
17:21 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;4]" time="0.03402996063232422"><system-err>17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 L2ProductP1: Integrate the products of the shape functions on each element
17:21 L2ProductP1: Determine global dofs ...
17:21 L2ProductP1: Boundary treatment ...
17:21 L2ProductP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 L2ProductP1: Integrate the products of the shape functions on each element
17:21 L2ProductP1: Determine global dofs ...
17:21 L2ProductP1: Boundary treatment ...
17:21 L2ProductP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;5]" time="0.029860496520996094"><system-err>17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 L2ProductP1: Integrate the products of the shape functions on each element
17:21 L2ProductP1: Determine global dofs ...
17:21 L2ProductP1: Boundary treatment ...
17:21 L2ProductP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 L2ProductP1: Integrate the products of the shape functions on each element
17:21 L2ProductP1: Determine global dofs ...
17:21 L2ProductP1: Boundary treatment ...
17:21 L2ProductP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 gram_schmidt_biorth: Projecting vector V[1] again
17:21 gram_schmidt_biorth: Projecting vector W[1] again
17:21 gram_schmidt_biorth: Projecting vector V[1] again
17:21 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;6]" time="0.03415250778198242"><system-err>17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 L2ProductP1: Integrate the products of the shape functions on each element
17:21 L2ProductP1: Determine global dofs ...
17:21 L2ProductP1: Boundary treatment ...
17:21 L2ProductP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 L2ProductP1: Integrate the products of the shape functions on each element
17:21 L2ProductP1: Determine global dofs ...
17:21 L2ProductP1: Boundary treatment ...
17:21 L2ProductP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;7]" time="0.030489444732666016"><system-err>17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 L2ProductP1: Integrate the products of the shape functions on each element
17:21 L2ProductP1: Determine global dofs ...
17:21 L2ProductP1: Boundary treatment ...
17:21 L2ProductP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 L2ProductP1: Integrate the products of the shape functions on each element
17:21 L2ProductP1: Determine global dofs ...
17:21 L2ProductP1: Boundary treatment ...
17:21 L2ProductP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 gram_schmidt_biorth: Projecting vector V[1] again
17:21 gram_schmidt_biorth: Projecting vector W[1] again
17:21 gram_schmidt_biorth: Projecting vector V[1] again
17:21 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;8]" time="0.03375649452209473"><system-err>17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 L2ProductP1: Integrate the products of the shape functions on each element
17:21 L2ProductP1: Determine global dofs ...
17:21 L2ProductP1: Boundary treatment ...
17:21 L2ProductP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 L2ProductP1: Integrate the products of the shape functions on each element
17:21 L2ProductP1: Determine global dofs ...
17:21 L2ProductP1: Boundary treatment ...
17:21 L2ProductP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;9]" time="0.03122711181640625"><system-err>17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 L2ProductP1: Integrate the products of the shape functions on each element
17:21 L2ProductP1: Determine global dofs ...
17:21 L2ProductP1: Boundary treatment ...
17:21 L2ProductP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 L2ProductP1: Integrate the products of the shape functions on each element
17:21 L2ProductP1: Determine global dofs ...
17:21 L2ProductP1: Boundary treatment ...
17:21 L2ProductP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 gram_schmidt_biorth: Projecting vector V[1] again
17:21 gram_schmidt_biorth: Projecting vector W[1] again
17:21 gram_schmidt_biorth: Projecting vector V[1] again
17:21 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;10]" time="0.034888505935668945"><system-err>17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 L2ProductP1: Integrate the products of the shape functions on each element
17:21 L2ProductP1: Determine global dofs ...
17:21 L2ProductP1: Boundary treatment ...
17:21 L2ProductP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 L2ProductP1: Integrate the products of the shape functions on each element
17:21 L2ProductP1: Determine global dofs ...
17:21 L2ProductP1: Boundary treatment ...
17:21 L2ProductP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;11]" time="0.031102657318115234"><system-err>17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 L2ProductP1: Integrate the products of the shape functions on each element
17:21 L2ProductP1: Determine global dofs ...
17:21 L2ProductP1: Boundary treatment ...
17:21 L2ProductP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 L2ProductP1: Integrate the products of the shape functions on each element
17:21 L2ProductP1: Determine global dofs ...
17:21 L2ProductP1: Boundary treatment ...
17:21 L2ProductP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 gram_schmidt_biorth: Projecting vector V[1] again
17:21 gram_schmidt_biorth: Projecting vector W[1] again
17:21 gram_schmidt_biorth: Projecting vector V[1] again
17:21 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;12]" time="0.034844398498535156"><system-err>17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 L2ProductP1: Integrate the products of the shape functions on each element
17:21 L2ProductP1: Determine global dofs ...
17:21 L2ProductP1: Boundary treatment ...
17:21 L2ProductP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 L2ProductP1: Integrate the products of the shape functions on each element
17:21 L2ProductP1: Determine global dofs ...
17:21 L2ProductP1: Boundary treatment ...
17:21 L2ProductP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;13]" time="0.030419588088989258"><system-err>17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 L2ProductP1: Integrate the products of the shape functions on each element
17:21 L2ProductP1: Determine global dofs ...
17:21 L2ProductP1: Boundary treatment ...
17:21 L2ProductP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 L2ProductP1: Integrate the products of the shape functions on each element
17:21 L2ProductP1: Determine global dofs ...
17:21 L2ProductP1: Boundary treatment ...
17:21 L2ProductP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;14]" time="0.03809404373168945"><system-err>17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 L2ProductP1: Integrate the products of the shape functions on each element
17:21 L2ProductP1: Determine global dofs ...
17:21 L2ProductP1: Boundary treatment ...
17:21 L2ProductP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 L2ProductP1: Integrate the products of the shape functions on each element
17:21 L2ProductP1: Determine global dofs ...
17:21 L2ProductP1: Boundary treatment ...
17:21 L2ProductP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 gram_schmidt_biorth: Projecting vector V[1] again
17:21 gram_schmidt_biorth: Projecting vector V[2] again
17:21 gram_schmidt_biorth: Projecting vector W[2] again
17:21 gram_schmidt_biorth: Projecting vector V[1] again
17:21 gram_schmidt_biorth: Projecting vector V[2] again
17:21 gram_schmidt_biorth: Projecting vector W[2] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;15]" time="0.03443765640258789"><system-err>17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 L2ProductP1: Integrate the products of the shape functions on each element
17:21 L2ProductP1: Determine global dofs ...
17:21 L2ProductP1: Boundary treatment ...
17:21 L2ProductP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 L2ProductP1: Integrate the products of the shape functions on each element
17:21 L2ProductP1: Determine global dofs ...
17:21 L2ProductP1: Boundary treatment ...
17:21 L2ProductP1: Assemble system matrix ...
17:21 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:21 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:21 DiffusionOperatorP1: Determine global dofs ...
17:21 DiffusionOperatorP1: Boundary treatment ...
17:21 DiffusionOperatorP1: Assemble system matrix ...
17:21 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector W[1] again
17:22 gram_schmidt_biorth: Projecting vector V[2] again
17:22 gram_schmidt_biorth: Projecting vector W[2] again
17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector W[1] again
17:22 gram_schmidt_biorth: Projecting vector V[2] again
17:22 gram_schmidt_biorth: Projecting vector W[2] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;16]" time="0.02994060516357422"><system-err>17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;17]" time="0.025731325149536133"><system-err>17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;18]" time="0.0375518798828125"><system-err>17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector V[2] again
17:22 gram_schmidt_biorth: Projecting vector W[2] again
17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector V[2] again
17:22 gram_schmidt_biorth: Projecting vector W[2] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;19]" time="0.033588409423828125"><system-err>17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector W[1] again
17:22 gram_schmidt_biorth: Projecting vector V[2] again
17:22 gram_schmidt_biorth: Projecting vector W[2] again
17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector W[1] again
17:22 gram_schmidt_biorth: Projecting vector V[2] again
17:22 gram_schmidt_biorth: Projecting vector W[2] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;20]" time="0.03693103790283203"><system-err>17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector V[2] again
17:22 gram_schmidt_biorth: Projecting vector W[2] again
17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector V[2] again
17:22 gram_schmidt_biorth: Projecting vector W[2] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;21]" time="0.03357267379760742"><system-err>17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector W[1] again
17:22 gram_schmidt_biorth: Projecting vector V[2] again
17:22 gram_schmidt_biorth: Projecting vector W[2] again
17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector W[1] again
17:22 gram_schmidt_biorth: Projecting vector V[2] again
17:22 gram_schmidt_biorth: Projecting vector W[2] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;22]" time="0.033185482025146484"><system-err>17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;23]" time="0.03040480613708496"><system-err>17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 L2ProductP1: Integrate the products of the shape functions on each element
17:22 L2ProductP1: Determine global dofs ...
17:22 L2ProductP1: Boundary treatment ...
17:22 L2ProductP1: Assemble system matrix ...
17:22 DiffusionOperatorP1: Calulate gradients of shape functions transformed by reference map ...
17:22 DiffusionOperatorP1: Calculate all local scalar products beween gradients ...
17:22 DiffusionOperatorP1: Determine global dofs ...
17:22 DiffusionOperatorP1: Boundary treatment ...
17:22 DiffusionOperatorP1: Assemble system matrix ...
17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector W[1] again
17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;24]" time="0.009423494338989258"><system-err>17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector W[1] again
17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;25]" time="0.009116649627685547"><system-err>17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector W[1] again
17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;26]" time="0.009049177169799805"><system-err>17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector W[1] again
17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;27]" time="0.00606226921081543"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;28]" time="0.005135774612426758"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;29]" time="0.0042552947998046875"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;30]" time="0.00408935546875"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;31]" time="0.0040836334228515625"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;32]" time="0.017085552215576172"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;33]" time="0.014354467391967773"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;34]" time="0.009648561477661133"><system-err>17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector W[1] again
17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;35]" time="0.013712167739868164"></testcase><testcase classname="src.pymortests.algorithms.gram_schmidt" file="src/pymortests/algorithms/gram_schmidt.py" line="68" name="test_gram_schmidt_biorth_with_product[&lt;lambda&gt;36]" time="0.009180068969726562"><system-err>17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector W[1] again
17:22 gram_schmidt_biorth: Projecting vector V[1] again
17:22 gram_schmidt_biorth: Projecting vector W[1] again
</system-err></testcase><testcase classname="src.pymortests.algorithms.stuff" file="src/pymortests/algorithms/stuff.py" line="20" name="test_newton[1]" time="0.0029141902923583984"><system-err>17:22 newton:       Initial Residual: 1.000000e+00
17:22 newton: Iteration  1: Residual: 0.000000e+00,  Reduction: 0.000000e+00, Total Reduction: 0.000000e+00
17:22 newton: Absolute limit of 1e-15 reached. Stopping.
</system-err></testcase><testcase classname="src.pymortests.algorithms.stuff" file="src/pymortests/algorithms/stuff.py" line="20" name="test_newton[2]" time="0.0022056102752685547"><system-err>17:22 newton:       Initial Residual: 1.000000e+00
17:22 newton: Iteration  1: Residual: 0.000000e+00,  Reduction: 0.000000e+00, Total Reduction: 0.000000e+00
17:22 newton: Absolute limit of 1e-15 reached. Stopping.
</system-err></testcase><testcase classname="src.pymortests.algorithms.stuff" file="src/pymortests/algorithms/stuff.py" line="20" name="test_newton[3]" time="0.0020170211791992188"><system-err>17:22 newton:       Initial Residual: 1.000000e+00
17:22 newton: Iteration  1: Residual: 0.000000e+00,  Reduction: 0.000000e+00, Total Reduction: 0.000000e+00
17:22 newton: Absolute limit of 1e-15 reached. Stopping.
</system-err></testcase><testcase classname="src.pymortests.algorithms.stuff" file="src/pymortests/algorithms/stuff.py" line="20" name="test_newton[4]" time="0.0019445419311523438"><system-err>17:22 newton:       Initial Residual: 1.000000e+00
17:22 newton: Iteration  1: Residual: 0.000000e+00,  Reduction: 0.000000e+00, Total Reduction: 0.000000e+00
17:22 newton: Absolute limit of 1e-15 reached. Stopping.
</system-err></testcase><testcase classname="src.pymortests.algorithms.stuff" file="src/pymortests/algorithms/stuff.py" line="20" name="test_newton[5]" time="0.002305746078491211"><system-err>17:22 newton:       Initial Residual: 1.000000e+00
17:22 newton: Iteration  1: Residual: 0.000000e+00,  Reduction: 0.000000e+00, Total Reduction: 0.000000e+00
17:22 newton: Absolute limit of 1e-15 reached. Stopping.
</system-err></testcase><testcase classname="src.pymortests.algorithms.stuff" file="src/pymortests/algorithms/stuff.py" line="20" name="test_newton[6]" time="0.0019655227661132812"><system-err>17:22 newton:       Initial Residual: 1.000000e+00
17:22 newton: Iteration  1: Residual: 0.000000e+00,  Reduction: 0.000000e+00, Total Reduction: 0.000000e+00
17:22 newton: Absolute limit of 1e-15 reached. Stopping.
</system-err></testcase><testcase classname="src.pymortests.algorithms.stuff" file="src/pymortests/algorithms/stuff.py" line="20" name="test_newton[7]" time="0.0020270347595214844"><system-err>17:22 newton:       Initial Residual: 1.000000e+00
17:22 newton: Iteration  1: Residual: 0.000000e+00,  Reduction: 0.000000e+00, Total Reduction: 0.000000e+00
17:22 newton: Absolute limit of 1e-15 reached. Stopping.
</system-err></testcase><testcase classname="src.pymortests.algorithms.stuff" file="src/pymortests/algorithms/stuff.py" line="26" name="test_newton_fail" time="0.004686594009399414"><system-err>17:22 newton:       Initial Residual: 1.000000e+00
17:22 newton: Iteration  1: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
17:22 newton: Iteration  2: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
17:22 newton: Iteration  3: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
17:22 newton: Iteration  4: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
17:22 newton: Iteration  5: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
17:22 newton: Iteration  6: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
17:22 newton: Iteration  7: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
17:22 newton: Iteration  8: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
17:22 newton: Iteration  9: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
17:22 newton: Iteration 10: Residual: 1.000000e+00,  Reduction: 1.000000e+00, Total Reduction: 1.000000e+00
</system-err></testcase><testcase classname="src.pymortests.core.config" file="src/pymortests/core/config.py" line="8" name="test_repr" time="0.015553474426269531"></testcase><testcase classname="src.pymortests.core.config" file="src/pymortests/core/config.py" line="12" name="test_entries" time="0.001190185546875"></testcase><testcase classname="src.pymortests.core.config" file="src/pymortests/core/config.py" line="19" name="test_dir" time="0.001100778579711914"></testcase><testcase classname="src.pymortests.core.defaults" file="src/pymortests/core/defaults.py" line="14" name="test_defaults" time="0.0012087821960449219"></testcase><testcase classname="src.pymortests.core.defaults" file="src/pymortests/core/defaults.py" line="30" name="test_print_defaults" time="0.04929637908935547"><system-out>                                                       defaults affecting state id calcuation                                                       
                                                       ======================================                                                       

path (shortened)                                                       value                                                                  source
---------------------------------------------------------------------  ---------------------------------------------------------------------  ------
basic.almost_equal.atol                                                1e-14                                                                  code  
basic.almost_equal.rtol                                                1e-14                                                                  code  
genericsolvers.apply_inverse.check_finite                              True                                                                   code  
genericsolvers.apply_inverse.default_least_squares_solver              &apos;generic_least_squares_lsmr&apos;                                           code  
genericsolvers.apply_inverse.default_solver                            &apos;generic_lgmres&apos;                                                       code  
genericsolvers.solver_options.least_squares_lsmr_atol                  1e-06                                                                  code  
genericsolvers.solver_options.least_squares_lsmr_btol                  1e-06                                                                  code  
genericsolvers.solver_options.least_squares_lsmr_conlim                100000000.0                                                            code  
genericsolvers.solver_options.least_squares_lsmr_damp                  0.0                                                                    code  
genericsolvers.solver_options.least_squares_lsmr_maxiter               None                                                                   code  
genericsolvers.solver_options.least_squares_lsqr_atol                  1e-06                                                                  code  
genericsolvers.solver_options.least_squares_lsqr_btol                  1e-06                                                                  code  
genericsolvers.solver_options.least_squares_lsqr_conlim                100000000.0                                                            code  
genericsolvers.solver_options.least_squares_lsqr_iter_lim              None                                                                   code  
genericsolvers.solver_options.lgmres_inner_m                           39                                                                     code  
genericsolvers.solver_options.lgmres_maxiter                           1000                                                                   code  
genericsolvers.solver_options.lgmres_outer_k                           3                                                                      code  
genericsolvers.solver_options.lgmres_tol                               1e-05                                                                  code  
gram_schmidt.gram_schmidt.atol                                         1e-13                                                                  code  
gram_schmidt.gram_schmidt.check                                        True                                                                   code  
gram_schmidt.gram_schmidt.check_tol                                    0.001                                                                  code  
gram_schmidt.gram_schmidt.reiterate                                    True                                                                   code  
gram_schmidt.gram_schmidt.reiteration_threshold                        0.1                                                                    code  
gram_schmidt.gram_schmidt.rtol                                         1e-13                                                                  code  
newton.newton.atol                                                     -1.0                                                                   code  
newton.newton.maxiter                                                  100                                                                    code  
newton.newton.miniter                                                  0                                                                      code  
newton.newton.rtol                                                     -1.0                                                                   code  
newton.newton.stagnation_threshold                                     0.9                                                                    code  
newton.newton.stagnation_window                                        3                                                                      code  
pod.pod.atol                                                           0.0                                                                    code  
pod.pod.check                                                          True                                                                   code  
pod.pod.check_tol                                                      1e-10                                                                  code  
pod.pod.l2_err                                                         0.0                                                                    code  
pod.pod.orthonormalize                                                 True                                                                   code  
pod.pod.rtol                                                           4e-08                                                                  code  
pod.pod.symmetrize                                                     False                                                                  code  
text.text_problem.font_name                                            None                                                                   code  
fenics._solver_options.preconditioner                                  &apos;amg&apos;                                                                  code  
fenics._solver_options.solver                                          &apos;bicgstab&apos;                                                             code  
ngsolve.NGSolveMatrixOperator.apply_inverse.default_solver             &apos;&apos;                                                                     code  
pyamg.apply_inverse.check_finite                                       True                                                                   code  
pyamg.apply_inverse.default_solver                                     &apos;pyamg_solve&apos;                                                          code  
pyamg.solver_options.maxiter                                           400                                                                    code  
pyamg.solver_options.rs_CF                                             &apos;RS&apos;                                                                   code  
pyamg.solver_options.rs_accel                                          None                                                                   code  
pyamg.solver_options.rs_coarse_solver                                  &apos;pinv2&apos;                                                                code  
pyamg.solver_options.rs_cycle                                          &apos;V&apos;                                                                    code  
pyamg.solver_options.rs_max_coarse                                     500                                                                    code  
pyamg.solver_options.rs_max_levels                                     10                                                                     code  
pyamg.solver_options.rs_maxiter                                        100                                                                    code  
pyamg.solver_options.rs_postsmoother                                   (&apos;gauss_seidel&apos;, {&apos;sweep&apos;: &apos;symmetric&apos;})                               code  
pyamg.solver_options.rs_strength                                       (&apos;classical&apos;, {&apos;theta&apos;: 0.25})                                         code  
pyamg.solver_options.rs_tol                                            1e-05                                                                  code  
pyamg.solver_options.sa_accel                                          None                                                                   code  
pyamg.solver_options.sa_aggregate                                      &apos;standard&apos;                                                             code  
pyamg.solver_options.sa_coarse_solver                                  &apos;pinv2&apos;                                                                code  
pyamg.solver_options.sa_cycle                                          &apos;V&apos;                                                                    code  
pyamg.solver_options.sa_diagonal_dominance                             False                                                                  code  
pyamg.solver_options.sa_improve_candidates                             ((&apos;block_gauss_seidel&apos;, {&apos;sweep&apos;: &apos;symmetric&apos;, &apos;iterations&apos;: 4}),      code  
                                                                       None)                                                                        
pyamg.solver_options.sa_max_coarse                                     500                                                                    code  
pyamg.solver_options.sa_max_levels                                     10                                                                     code  
pyamg.solver_options.sa_maxiter                                        100                                                                    code  
pyamg.solver_options.sa_postsmoother                                   (&apos;block_gauss_seidel&apos;, {&apos;sweep&apos;: &apos;symmetric&apos;})                         code  
pyamg.solver_options.sa_presmoother                                    (&apos;block_gauss_seidel&apos;, {&apos;sweep&apos;: &apos;symmetric&apos;})                         code  
pyamg.solver_options.sa_smooth                                         (&apos;jacobi&apos;, {&apos;omega&apos;: 1.3333333333333333})                              code  
pyamg.solver_options.sa_strength                                       &apos;symmetric&apos;                                                            code  
pyamg.solver_options.sa_symmetry                                       &apos;hermitian&apos;                                                            code  
pyamg.solver_options.sa_tol                                            1e-05                                                                  code  
pyamg.solver_options.tol                                               1e-05                                                                  code  
pymess.solve_lyap.default_solver                                       &apos;pymess&apos;                                                               code  
pymess.solve_ricc.default_solver                                       &apos;pymess&apos;                                                               code  
scipy.apply_inverse.check_finite                                       True                                                                   code  
scipy.apply_inverse.default_least_squares_solver                       &apos;scipy_least_squares_lsmr&apos;                                             code  
scipy.apply_inverse.default_solver                                     &apos;scipy_spsolve&apos;                                                        code  
scipy.solver_options.bicgstab_maxiter                                  None                                                                   code  
scipy.solver_options.bicgstab_tol                                      1e-15                                                                  code  
scipy.solver_options.least_squares_lsmr_atol                           1e-06                                                                  code  
scipy.solver_options.least_squares_lsmr_btol                           1e-06                                                                  code  
scipy.solver_options.least_squares_lsmr_conlim                         100000000.0                                                            code  
scipy.solver_options.least_squares_lsmr_damp                           0.0                                                                    code  
scipy.solver_options.least_squares_lsmr_maxiter                        None                                                                   code  
scipy.solver_options.least_squares_lsqr_atol                           1e-06                                                                  code  
scipy.solver_options.least_squares_lsqr_btol                           1e-06                                                                  code  
scipy.solver_options.least_squares_lsqr_conlim                         100000000.0                                                            code  
scipy.solver_options.least_squares_lsqr_iter_lim                       None                                                                   code  
scipy.solver_options.lgmres_inner_m                                    39                                                                     code  
scipy.solver_options.lgmres_maxiter                                    1000                                                                   code  
scipy.solver_options.lgmres_outer_k                                    3                                                                      code  
scipy.solver_options.lgmres_tol                                        1e-05                                                                  code  
scipy.solver_options.spilu_drop_rule                                   None                                                                   code  
scipy.solver_options.spilu_drop_tol                                    0.0001                                                                 code  
scipy.solver_options.spilu_fill_factor                                 10                                                                     code  
scipy.solver_options.spilu_permc_spec                                  &apos;COLAMD&apos;                                                               code  
scipy.solver_options.spsolve_keep_factorization                        True                                                                   code  
scipy.solver_options.spsolve_permc_spec                                &apos;COLAMD&apos;                                                               code  
iosys.LTISystem._lyap_solver.default_solver_backend                    &apos;pymess&apos;                                                               code  
constructions.induced_norm.raise_negative                              True                                                                   code  
constructions.induced_norm.tol                                         1e-10                                                                  code  
fv.jacobian_options.delta                                              1e-07                                                                  code  
numpy.NumpyMatrixOperator.apply_inverse.check_finite                   True                                                                   code  
numpy.NumpyMatrixOperator.apply_inverse.default_sparse_solver_backend  &apos;scipy&apos;                                                                code  
default.new_parallel_pool.allow_mpi                                    True                                                                   code  
default.new_parallel_pool.ipython_num_engines                          None                                                                   code  
default.new_parallel_pool.ipython_profile                              None                                                                   code  
bt.BRBTReductor._ricc_solver.default_solver_backend                    &apos;slycot&apos;                                                               code  
bt.LQGBTReductor._ricc_solver.default_solver_backend                   &apos;pymess&apos;                                                               code  
floatcmp.float_cmp.atol                                                1e-14                                                                  code  
floatcmp.float_cmp.rtol                                                1e-14                                                                  code  
mpi.event_loop_settings.auto_launch                                    True                                                                   code  
random.new_random_state.seed                                           42                                                                     code  
defaults.func.c                                                        43                                                                     user  
defaults.func.d                                                        3                                                                      code  



                  defaults not affecting state id calculation                   
                  ===========================================                   

path (shortened)                     value                                source
-----------------------------------  -----------------------------------  ------
genericsolvers.solver_options.least  False                                code  
_squares_lsmr_show                                                              
genericsolvers.solver_options.least  False                                code  
_squares_lsqr_show                                                              
pyamg.solver_options.verb            False                                code  
scipy.solver_options.least_squares_  False                                code  
lsmr_show                                                                       
scipy.solver_options.least_squares_  False                                code  
lsqr_show                                                                       
cache.default_regions.disk_max_size  1073741824                           code  
cache.default_regions.disk_path      &apos;/tmp/pymor.cache.pymor&apos;             code  
cache.default_regions.memory_max_ke  1000                                 code  
ys                                                                              
cache.default_regions.persistent_ma  1073741824                           code  
x_size                                                                          
cache.default_regions.persistent_pa  &apos;/tmp/pymor.persistent.cache.pymor&apos;  code  
th                                                                              
logger.getLogger.filename            &apos;&apos;                                   code  
logger.set_log_format.block_timings  False                                code  
logger.set_log_format.indent_blocks  True                                 code  
logger.set_log_format.max_hierarchy  1                                    code  
_level                                                                          
logger.set_log_levels.levels         None                                 code  
gl.colormap_texture.name             &apos;viridis&apos;                            code  
qt.visualize_patch.backend           &apos;gl&apos;                                 code  
pprint.format_array.compact_print    False                                code  

</system-out></testcase><testcase classname="src.pymortests.core.defaults" file="src/pymortests/core/defaults.py" line="34" name="test_write_defaults_to_file" time="0.013192176818847656"><system-out>Written defaults to file /tmp/tmpqndmbq_l/defaults.py
</system-out></testcase><testcase classname="src.pymortests.core.defaults" file="src/pymortests/core/defaults.py" line="39" name="test_load_defaults_from_file" time="0.014064311981201172"><system-out>Written defaults to file /tmp/tmpgj02shiz/defaults.py
</system-out></testcase><testcase classname="src.pymortests.core.interface.Test_Interface" file="src/pymortests/core/interface.py" line="18" name="testImplementorlist" time="0.0013966560363769531"></testcase><testcase classname="src.pymortests.core.interface.Test_Interface" file="src/pymortests/core/interface.py" line="24" name="testAbstractMethods" time="0.0027298927307128906"></testcase><testcase classname="src.pymortests.core.interface.Test_Interface" file="src/pymortests/core/interface.py" line="56" name="testVersion" time="0.0008339881896972656"></testcase><testcase classname="src.pymortests.core.interface" file="src/pymortests/core/interface.py" line="78" name="test_withcopy_implementors" time="0.008690357208251953"></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[RuleTable]" time="0.0014927387237548828"><system-err>17:22 |WARNING|RuleTable: warning -- logger &lt;Logger pymor.algorithms.rules.RuleTable (INFO)&gt;
17:22 |ERROR|RuleTable: error -- logger &lt;Logger pymor.algorithms.rules.RuleTable (INFO)&gt;
17:22 RuleTable: info -- logger &lt;Logger pymor.algorithms.rules.RuleTable (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[PatchVisualizer]" time="0.0012814998626708984"><system-err>17:22 |WARNING|PatchVisualizer: warning -- logger &lt;Logger pymor.gui.visualizers.PatchVisualizer (INFO)&gt;
17:22 |ERROR|PatchVisualizer: error -- logger &lt;Logger pymor.gui.visualizers.PatchVisualizer (INFO)&gt;
17:22 PatchVisualizer: info -- logger &lt;Logger pymor.gui.visualizers.PatchVisualizer (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[OnedVisualizer]" time="0.001188516616821289"><system-err>17:22 |WARNING|OnedVisualizer: warning -- logger &lt;Logger pymor.gui.visualizers.OnedVisualizer (INFO)&gt;
17:22 |ERROR|OnedVisualizer: error -- logger &lt;Logger pymor.gui.visualizers.OnedVisualizer (INFO)&gt;
17:22 OnedVisualizer: info -- logger &lt;Logger pymor.gui.visualizers.OnedVisualizer (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[FenicsVisualizer]" time="0.0012357234954833984"><system-err>17:22 |WARNING|FenicsVisualizer: warning -- logger &lt;Logger pymor.bindings.fenics.FenicsVisualizer (INFO)&gt;
17:22 |ERROR|FenicsVisualizer: error -- logger &lt;Logger pymor.bindings.fenics.FenicsVisualizer (INFO)&gt;
17:22 FenicsVisualizer: info -- logger &lt;Logger pymor.bindings.fenics.FenicsVisualizer (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[BoringTestClass]" time="0.0011627674102783203"><system-err>17:22 |WARNING|BoringTestClass: warning -- logger &lt;Logger pymortests.core.dummies.BoringTestClass (INFO)&gt;
17:22 |ERROR|BoringTestClass: error -- logger &lt;Logger pymortests.core.dummies.BoringTestClass (INFO)&gt;
17:22 BoringTestClass: info -- logger &lt;Logger pymortests.core.dummies.BoringTestClass (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[RemoteObjectManager]" time="0.0012319087982177734"><system-err>17:22 |WARNING|RemoteObjectManager: warning -- logger &lt;Logger pymor.parallel.manager.RemoteObjectManager (INFO)&gt;
17:22 |ERROR|RemoteObjectManager: error -- logger &lt;Logger pymor.parallel.manager.RemoteObjectManager (INFO)&gt;
17:22 RemoteObjectManager: info -- logger &lt;Logger pymor.parallel.manager.RemoteObjectManager (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[AdaptiveSampleSet]" time="0.0011904239654541016"><system-err>17:22 |WARNING|AdaptiveSampleSet: warning -- logger &lt;Logger pymor.algorithms.adaptivegreedy.AdaptiveSampleSet (INFO)&gt;
17:22 |ERROR|AdaptiveSampleSet: error -- logger &lt;Logger pymor.algorithms.adaptivegreedy.AdaptiveSampleSet (INFO)&gt;
17:22 AdaptiveSampleSet: info -- logger &lt;Logger pymor.algorithms.adaptivegreedy.AdaptiveSampleSet (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[Tree]" time="0.001188516616821289"><system-err>17:22 |WARNING|Tree: warning -- logger &lt;Logger pymor.algorithms.hapod.Tree (INFO)&gt;
17:22 |ERROR|Tree: error -- logger &lt;Logger pymor.algorithms.hapod.Tree (INFO)&gt;
17:22 Tree: info -- logger &lt;Logger pymor.algorithms.hapod.Tree (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[GenericRBReductor]" time="0.001180887222290039"><system-err>17:22 |WARNING|GenericRBReductor: warning -- logger &lt;Logger pymor.reductors.basic.GenericRBReductor (INFO)&gt;
17:22 |ERROR|GenericRBReductor: error -- logger &lt;Logger pymor.reductors.basic.GenericRBReductor (INFO)&gt;
17:22 GenericRBReductor: info -- logger &lt;Logger pymor.reductors.basic.GenericRBReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[GenericPGReductor]" time="0.0011589527130126953"><system-err>17:22 |WARNING|GenericPGReductor: warning -- logger &lt;Logger pymor.reductors.basic.GenericPGReductor (INFO)&gt;
17:22 |ERROR|GenericPGReductor: error -- logger &lt;Logger pymor.reductors.basic.GenericPGReductor (INFO)&gt;
17:22 GenericPGReductor: info -- logger &lt;Logger pymor.reductors.basic.GenericPGReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[GenericBTReductor]" time="0.0011339187622070312"><system-err>17:22 |WARNING|GenericBTReductor: warning -- logger &lt;Logger pymor.reductors.bt.GenericBTReductor (INFO)&gt;
17:22 |ERROR|GenericBTReductor: error -- logger &lt;Logger pymor.reductors.bt.GenericBTReductor (INFO)&gt;
17:22 GenericBTReductor: info -- logger &lt;Logger pymor.reductors.bt.GenericBTReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[ResidualReductor]" time="0.0011708736419677734"><system-err>17:22 |WARNING|ResidualReductor: warning -- logger &lt;Logger pymor.reductors.residual.ResidualReductor (INFO)&gt;
17:22 |ERROR|ResidualReductor: error -- logger &lt;Logger pymor.reductors.residual.ResidualReductor (INFO)&gt;
17:22 ResidualReductor: info -- logger &lt;Logger pymor.reductors.residual.ResidualReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[ImplicitEulerResidualReductor]" time="0.0011641979217529297"><system-err>17:22 |WARNING|ImplicitEulerResidualReductor: warning -- logger &lt;Logger pymor.reductors.residual.ImplicitEulerResidualReductor (INFO)&gt;
17:22 |ERROR|ImplicitEulerResidualReductor: error -- logger &lt;Logger pymor.reductors.residual.ImplicitEulerResidualReductor (INFO)&gt;
17:22 ImplicitEulerResidualReductor: info -- logger &lt;Logger pymor.reductors.residual.ImplicitEulerResidualReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[GenericBHIReductor]" time="0.0011310577392578125"><system-err>17:22 |WARNING|GenericBHIReductor: warning -- logger &lt;Logger pymor.reductors.interpolation.GenericBHIReductor (INFO)&gt;
17:22 |ERROR|GenericBHIReductor: error -- logger &lt;Logger pymor.reductors.interpolation.GenericBHIReductor (INFO)&gt;
17:22 GenericBHIReductor: info -- logger &lt;Logger pymor.reductors.interpolation.GenericBHIReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[TFInterpReductor]" time="0.0011019706726074219"><system-err>17:22 |WARNING|TFInterpReductor: warning -- logger &lt;Logger pymor.reductors.interpolation.TFInterpReductor (INFO)&gt;
17:22 |ERROR|TFInterpReductor: error -- logger &lt;Logger pymor.reductors.interpolation.TFInterpReductor (INFO)&gt;
17:22 TFInterpReductor: info -- logger &lt;Logger pymor.reductors.interpolation.TFInterpReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[IRKAReductor]" time="0.0011363029479980469"><system-err>17:22 |WARNING|IRKAReductor: warning -- logger &lt;Logger pymor.reductors.h2.IRKAReductor (INFO)&gt;
17:22 |ERROR|IRKAReductor: error -- logger &lt;Logger pymor.reductors.h2.IRKAReductor (INFO)&gt;
17:22 IRKAReductor: info -- logger &lt;Logger pymor.reductors.h2.IRKAReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[TSIAReductor]" time="0.0011258125305175781"><system-err>17:22 |WARNING|TSIAReductor: warning -- logger &lt;Logger pymor.reductors.h2.TSIAReductor (INFO)&gt;
17:22 |ERROR|TSIAReductor: error -- logger &lt;Logger pymor.reductors.h2.TSIAReductor (INFO)&gt;
17:22 TSIAReductor: info -- logger &lt;Logger pymor.reductors.h2.TSIAReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[TF_IRKAReductor]" time="0.0011429786682128906"><system-err>17:22 |WARNING|TF_IRKAReductor: warning -- logger &lt;Logger pymor.reductors.h2.TF_IRKAReductor (INFO)&gt;
17:22 |ERROR|TF_IRKAReductor: error -- logger &lt;Logger pymor.reductors.h2.TF_IRKAReductor (INFO)&gt;
17:22 TF_IRKAReductor: info -- logger &lt;Logger pymor.reductors.h2.TF_IRKAReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[GenericSOBTpvReductor]" time="0.001134634017944336"><system-err>17:22 |WARNING|GenericSOBTpvReductor: warning -- logger &lt;Logger pymor.reductors.sobt.GenericSOBTpvReductor (INFO)&gt;
17:22 |ERROR|GenericSOBTpvReductor: error -- logger &lt;Logger pymor.reductors.sobt.GenericSOBTpvReductor (INFO)&gt;
17:22 GenericSOBTpvReductor: info -- logger &lt;Logger pymor.reductors.sobt.GenericSOBTpvReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[SOBTfvReductor]" time="0.001153707504272461"><system-err>17:22 |WARNING|SOBTfvReductor: warning -- logger &lt;Logger pymor.reductors.sobt.SOBTfvReductor (INFO)&gt;
17:22 |ERROR|SOBTfvReductor: error -- logger &lt;Logger pymor.reductors.sobt.SOBTfvReductor (INFO)&gt;
17:22 SOBTfvReductor: info -- logger &lt;Logger pymor.reductors.sobt.SOBTfvReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[SOBTReductor]" time="0.0014369487762451172"><system-err>17:22 |WARNING|SOBTReductor: warning -- logger &lt;Logger pymor.reductors.sobt.SOBTReductor (INFO)&gt;
17:22 |ERROR|SOBTReductor: error -- logger &lt;Logger pymor.reductors.sobt.SOBTReductor (INFO)&gt;
17:22 SOBTReductor: info -- logger &lt;Logger pymor.reductors.sobt.SOBTReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[SOR_IRKAReductor]" time="0.001203298568725586"><system-err>17:22 |WARNING|SOR_IRKAReductor: warning -- logger &lt;Logger pymor.reductors.sor_irka.SOR_IRKAReductor (INFO)&gt;
17:22 |ERROR|SOR_IRKAReductor: error -- logger &lt;Logger pymor.reductors.sor_irka.SOR_IRKAReductor (INFO)&gt;
17:22 SOR_IRKAReductor: info -- logger &lt;Logger pymor.reductors.sor_irka.SOR_IRKAReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[new_ipcluster_pool]" time="0.0011382102966308594"><system-err>17:22 |WARNING|new_ipcluster_pool: warning -- logger &lt;Logger pymor.parallel.ipython.new_ipcluster_pool (INFO)&gt;
17:22 |ERROR|new_ipcluster_pool: error -- logger &lt;Logger pymor.parallel.ipython.new_ipcluster_pool (INFO)&gt;
17:22 new_ipcluster_pool: info -- logger &lt;Logger pymor.parallel.ipython.new_ipcluster_pool (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[StationaryProblem]" time="0.0011262893676757812"><system-err>17:22 |WARNING|StationaryProblem: warning -- logger &lt;Logger pymor.analyticalproblems.elliptic.StationaryProblem (INFO)&gt;
17:22 |ERROR|StationaryProblem: error -- logger &lt;Logger pymor.analyticalproblems.elliptic.StationaryProblem (INFO)&gt;
17:22 StationaryProblem: info -- logger &lt;Logger pymor.analyticalproblems.elliptic.StationaryProblem (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[InstationaryProblem]" time="0.0011718273162841797"><system-err>17:22 |WARNING|InstationaryProblem: warning -- logger &lt;Logger pymor.analyticalproblems.instationary.InstationaryProblem (INFO)&gt;
17:22 |ERROR|InstationaryProblem: error -- logger &lt;Logger pymor.analyticalproblems.instationary.InstationaryProblem (INFO)&gt;
17:22 InstationaryProblem: info -- logger &lt;Logger pymor.analyticalproblems.instationary.InstationaryProblem (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[InducedNorm]" time="0.0011546611785888672"><system-err>17:22 |WARNING|InducedNorm: warning -- logger &lt;Logger pymor.operators.constructions.InducedNorm (INFO)&gt;
17:22 |ERROR|InducedNorm: error -- logger &lt;Logger pymor.operators.constructions.InducedNorm (INFO)&gt;
17:22 InducedNorm: info -- logger &lt;Logger pymor.operators.constructions.InducedNorm (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[NGSolveVisualizer]" time="0.0011203289031982422"><system-err>17:22 |WARNING|NGSolveVisualizer: warning -- logger &lt;Logger pymor.bindings.ngsolve.NGSolveVisualizer (INFO)&gt;
17:22 |ERROR|NGSolveVisualizer: error -- logger &lt;Logger pymor.bindings.ngsolve.NGSolveVisualizer (INFO)&gt;
17:22 NGSolveVisualizer: info -- logger &lt;Logger pymor.bindings.ngsolve.NGSolveVisualizer (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[CoerciveRBEstimator]" time="0.0011103153228759766"><system-err>17:22 |WARNING|CoerciveRBEstimator: warning -- logger &lt;Logger pymor.reductors.coercive.CoerciveRBEstimator (INFO)&gt;
17:22 |ERROR|CoerciveRBEstimator: error -- logger &lt;Logger pymor.reductors.coercive.CoerciveRBEstimator (INFO)&gt;
17:22 CoerciveRBEstimator: info -- logger &lt;Logger pymor.reductors.coercive.CoerciveRBEstimator (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[SimpleCoerciveRBEstimator]" time="0.0012102127075195312"><system-err>17:22 |WARNING|SimpleCoerciveRBEstimator: warning -- logger &lt;Logger pymor.reductors.coercive.SimpleCoerciveRBEstimator (INFO)&gt;
17:22 |ERROR|SimpleCoerciveRBEstimator: error -- logger &lt;Logger pymor.reductors.coercive.SimpleCoerciveRBEstimator (INFO)&gt;
17:22 SimpleCoerciveRBEstimator: info -- logger &lt;Logger pymor.reductors.coercive.SimpleCoerciveRBEstimator (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[ParabolicRBEstimator]" time="0.0011487007141113281"><system-err>17:22 |WARNING|ParabolicRBEstimator: warning -- logger &lt;Logger pymor.reductors.parabolic.ParabolicRBEstimator (INFO)&gt;
17:22 |ERROR|ParabolicRBEstimator: error -- logger &lt;Logger pymor.reductors.parabolic.ParabolicRBEstimator (INFO)&gt;
17:22 ParabolicRBEstimator: info -- logger &lt;Logger pymor.reductors.parabolic.ParabolicRBEstimator (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[MPIVisualizer]" time="0.0012040138244628906"><system-err>17:22 |WARNING|MPIVisualizer: warning -- logger &lt;Logger pymor.discretizations.mpi.MPIVisualizer (INFO)&gt;
17:22 |ERROR|MPIVisualizer: error -- logger &lt;Logger pymor.discretizations.mpi.MPIVisualizer (INFO)&gt;
17:22 MPIVisualizer: info -- logger &lt;Logger pymor.discretizations.mpi.MPIVisualizer (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[NumpyVectorArray]" time="0.001178741455078125"><system-err>17:22 |WARNING|NumpyVectorArray: warning -- logger &lt;Logger pymor.vectorarrays.numpy.NumpyVectorArray (INFO)&gt;
17:22 |ERROR|NumpyVectorArray: error -- logger &lt;Logger pymor.vectorarrays.numpy.NumpyVectorArray (INFO)&gt;
17:22 NumpyVectorArray: info -- logger &lt;Logger pymor.vectorarrays.numpy.NumpyVectorArray (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[BlockVectorArray]" time="0.0011680126190185547"><system-err>17:22 |WARNING|BlockVectorArray: warning -- logger &lt;Logger pymor.vectorarrays.block.BlockVectorArray (INFO)&gt;
17:22 |ERROR|BlockVectorArray: error -- logger &lt;Logger pymor.vectorarrays.block.BlockVectorArray (INFO)&gt;
17:22 BlockVectorArray: info -- logger &lt;Logger pymor.vectorarrays.block.BlockVectorArray (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[ListVectorArray]" time="0.0012280941009521484"><system-err>17:22 |WARNING|ListVectorArray: warning -- logger &lt;Logger pymor.vectorarrays.list.ListVectorArray (INFO)&gt;
17:22 |ERROR|ListVectorArray: error -- logger &lt;Logger pymor.vectorarrays.list.ListVectorArray (INFO)&gt;
17:22 ListVectorArray: info -- logger &lt;Logger pymor.vectorarrays.list.ListVectorArray (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[MPIVectorArray]" time="0.0011725425720214844"><system-err>17:22 |WARNING|MPIVectorArray: warning -- logger &lt;Logger pymor.vectorarrays.mpi.MPIVectorArray (INFO)&gt;
17:22 |ERROR|MPIVectorArray: error -- logger &lt;Logger pymor.vectorarrays.mpi.MPIVectorArray (INFO)&gt;
17:22 MPIVectorArray: info -- logger &lt;Logger pymor.vectorarrays.mpi.MPIVectorArray (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[PreAssembleRules]" time="0.001251220703125"><system-err>17:22 |WARNING|PreAssembleRules: warning -- logger &lt;Logger pymor.algorithms.preassemble.PreAssembleRules (INFO)&gt;
17:22 |ERROR|PreAssembleRules: error -- logger &lt;Logger pymor.algorithms.preassemble.PreAssembleRules (INFO)&gt;
17:22 PreAssembleRules: info -- logger &lt;Logger pymor.algorithms.preassemble.PreAssembleRules (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[ProjectRules]" time="0.0012323856353759766"><system-err>17:22 |WARNING|ProjectRules: warning -- logger &lt;Logger pymor.algorithms.projection.ProjectRules (INFO)&gt;
17:22 |ERROR|ProjectRules: error -- logger &lt;Logger pymor.algorithms.projection.ProjectRules (INFO)&gt;
17:22 ProjectRules: info -- logger &lt;Logger pymor.algorithms.projection.ProjectRules (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[ProjectToSubbasisRules]" time="0.001218557357788086"><system-err>17:22 |WARNING|ProjectToSubbasisRules: warning -- logger &lt;Logger pymor.algorithms.projection.ProjectToSubbasisRules (INFO)&gt;
17:22 |ERROR|ProjectToSubbasisRules: error -- logger &lt;Logger pymor.algorithms.projection.ProjectToSubbasisRules (INFO)&gt;
17:22 ProjectToSubbasisRules: info -- logger &lt;Logger pymor.algorithms.projection.ProjectToSubbasisRules (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[ToMatrixRules]" time="0.0012483596801757812"><system-err>17:22 |WARNING|ToMatrixRules: warning -- logger &lt;Logger pymor.algorithms.to_matrix.ToMatrixRules (INFO)&gt;
17:22 |ERROR|ToMatrixRules: error -- logger &lt;Logger pymor.algorithms.to_matrix.ToMatrixRules (INFO)&gt;
17:22 ToMatrixRules: info -- logger &lt;Logger pymor.algorithms.to_matrix.ToMatrixRules (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[CollectOperatorRangeRules]" time="0.0012285709381103516"><system-err>17:22 |WARNING|CollectOperatorRangeRules: warning -- logger &lt;Logger pymor.algorithms.image.CollectOperatorRangeRules (INFO)&gt;
17:22 |ERROR|CollectOperatorRangeRules: error -- logger &lt;Logger pymor.algorithms.image.CollectOperatorRangeRules (INFO)&gt;
17:22 CollectOperatorRangeRules: info -- logger &lt;Logger pymor.algorithms.image.CollectOperatorRangeRules (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[CollectVectorRangeRules]" time="0.001298666000366211"><system-err>17:22 |WARNING|CollectVectorRangeRules: warning -- logger &lt;Logger pymor.algorithms.image.CollectVectorRangeRules (INFO)&gt;
17:22 |ERROR|CollectVectorRangeRules: error -- logger &lt;Logger pymor.algorithms.image.CollectVectorRangeRules (INFO)&gt;
17:22 CollectVectorRangeRules: info -- logger &lt;Logger pymor.algorithms.image.CollectVectorRangeRules (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[CopyOnWriteVector]" time="0.0012404918670654297"><system-err>17:22 |WARNING|CopyOnWriteVector: warning -- logger &lt;Logger pymor.vectorarrays.list.CopyOnWriteVector (INFO)&gt;
17:22 |ERROR|CopyOnWriteVector: error -- logger &lt;Logger pymor.vectorarrays.list.CopyOnWriteVector (INFO)&gt;
17:22 CopyOnWriteVector: info -- logger &lt;Logger pymor.vectorarrays.list.CopyOnWriteVector (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[AllDirichletBoundaryInfo]" time="0.0012249946594238281"><system-err>17:22 |WARNING|AllDirichletBoundaryInfo: warning -- logger &lt;Logger pymortests.core.dummies.AllDirichletBoundaryInfo (INFO)&gt;
17:22 |ERROR|AllDirichletBoundaryInfo: error -- logger &lt;Logger pymortests.core.dummies.AllDirichletBoundaryInfo (INFO)&gt;
17:22 AllDirichletBoundaryInfo: info -- logger &lt;Logger pymortests.core.dummies.AllDirichletBoundaryInfo (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[StupidImplementer]" time="0.0012280941009521484"><system-err>17:22 |WARNING|StupidImplementer: warning -- logger &lt;Logger pymortests.core.dummies.StupidImplementer (INFO)&gt;
17:22 |ERROR|StupidImplementer: error -- logger &lt;Logger pymortests.core.dummies.StupidImplementer (INFO)&gt;
17:22 StupidImplementer: info -- logger &lt;Logger pymortests.core.dummies.StupidImplementer (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[AverageImplementer0]" time="0.0014870166778564453"><system-err>17:22 |WARNING|AverageImplementer: warning -- logger &lt;Logger pymortests.core.dummies.AverageImplementer (INFO)&gt;
17:22 |ERROR|AverageImplementer: error -- logger &lt;Logger pymortests.core.dummies.AverageImplementer (INFO)&gt;
17:22 AverageImplementer: info -- logger &lt;Logger pymortests.core.dummies.AverageImplementer (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[FailImplementer]" time="0.001209259033203125"><system-err>17:22 |WARNING|FailImplementer: warning -- logger &lt;Logger pymortests.core.dummies.FailImplementer (INFO)&gt;
17:22 |ERROR|FailImplementer: error -- logger &lt;Logger pymortests.core.dummies.FailImplementer (INFO)&gt;
17:22 FailImplementer: info -- logger &lt;Logger pymortests.core.dummies.FailImplementer (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[AverageImplementer1]" time="0.0011970996856689453"><system-err>17:22 |WARNING|AverageImplementer: warning -- logger &lt;Logger pymortests.core.dummies.AverageImplementer (INFO)&gt;
17:22 |ERROR|AverageImplementer: error -- logger &lt;Logger pymortests.core.dummies.AverageImplementer (INFO)&gt;
17:22 AverageImplementer: info -- logger &lt;Logger pymortests.core.dummies.AverageImplementer (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[DummyPool]" time="0.0012090206146240234"><system-err>17:22 |WARNING|DummyPool: warning -- logger &lt;Logger pymor.parallel.dummy.DummyPool (INFO)&gt;
17:22 |ERROR|DummyPool: error -- logger &lt;Logger pymor.parallel.dummy.DummyPool (INFO)&gt;
17:22 DummyPool: info -- logger &lt;Logger pymor.parallel.dummy.DummyPool (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[WorkerPoolBase]" time="0.0012030601501464844"><system-err>17:22 |WARNING|WorkerPoolBase: warning -- logger &lt;Logger pymor.parallel.basic.WorkerPoolBase (INFO)&gt;
17:22 |ERROR|WorkerPoolBase: error -- logger &lt;Logger pymor.parallel.basic.WorkerPoolBase (INFO)&gt;
17:22 WorkerPoolBase: info -- logger &lt;Logger pymor.parallel.basic.WorkerPoolBase (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[IncHAPODTree]" time="0.0012068748474121094"><system-err>17:22 |WARNING|IncHAPODTree: warning -- logger &lt;Logger pymor.algorithms.hapod.IncHAPODTree (INFO)&gt;
17:22 |ERROR|IncHAPODTree: error -- logger &lt;Logger pymor.algorithms.hapod.IncHAPODTree (INFO)&gt;
17:22 IncHAPODTree: info -- logger &lt;Logger pymor.algorithms.hapod.IncHAPODTree (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[DistHAPODTree]" time="0.0012385845184326172"><system-err>17:22 |WARNING|DistHAPODTree: warning -- logger &lt;Logger pymor.algorithms.hapod.DistHAPODTree (INFO)&gt;
17:22 |ERROR|DistHAPODTree: error -- logger &lt;Logger pymor.algorithms.hapod.DistHAPODTree (INFO)&gt;
17:22 DistHAPODTree: info -- logger &lt;Logger pymor.algorithms.hapod.DistHAPODTree (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[CoerciveRBReductor]" time="0.001191854476928711"><system-err>17:22 |WARNING|CoerciveRBReductor: warning -- logger &lt;Logger pymor.reductors.coercive.CoerciveRBReductor (INFO)&gt;
17:22 |ERROR|CoerciveRBReductor: error -- logger &lt;Logger pymor.reductors.coercive.CoerciveRBReductor (INFO)&gt;
17:22 CoerciveRBReductor: info -- logger &lt;Logger pymor.reductors.coercive.CoerciveRBReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[SimpleCoerciveRBReductor]" time="0.0012085437774658203"><system-err>17:22 |WARNING|SimpleCoerciveRBReductor: warning -- logger &lt;Logger pymor.reductors.coercive.SimpleCoerciveRBReductor (INFO)&gt;
17:22 |ERROR|SimpleCoerciveRBReductor: error -- logger &lt;Logger pymor.reductors.coercive.SimpleCoerciveRBReductor (INFO)&gt;
17:22 SimpleCoerciveRBReductor: info -- logger &lt;Logger pymor.reductors.coercive.SimpleCoerciveRBReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[ParabolicRBReductor]" time="0.0011739730834960938"><system-err>17:22 |WARNING|ParabolicRBReductor: warning -- logger &lt;Logger pymor.reductors.parabolic.ParabolicRBReductor (INFO)&gt;
17:22 |ERROR|ParabolicRBReductor: error -- logger &lt;Logger pymor.reductors.parabolic.ParabolicRBReductor (INFO)&gt;
17:22 ParabolicRBReductor: info -- logger &lt;Logger pymor.reductors.parabolic.ParabolicRBReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[BTReductor]" time="0.001245260238647461"><system-err>17:22 |WARNING|BTReductor: warning -- logger &lt;Logger pymor.reductors.bt.BTReductor (INFO)&gt;
17:22 |ERROR|BTReductor: error -- logger &lt;Logger pymor.reductors.bt.BTReductor (INFO)&gt;
17:22 BTReductor: info -- logger &lt;Logger pymor.reductors.bt.BTReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[LQGBTReductor]" time="0.001233816146850586"><system-err>17:22 |WARNING|LQGBTReductor: warning -- logger &lt;Logger pymor.reductors.bt.LQGBTReductor (INFO)&gt;
17:22 |ERROR|LQGBTReductor: error -- logger &lt;Logger pymor.reductors.bt.LQGBTReductor (INFO)&gt;
17:22 LQGBTReductor: info -- logger &lt;Logger pymor.reductors.bt.LQGBTReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[BRBTReductor]" time="0.0012602806091308594"><system-err>17:22 |WARNING|BRBTReductor: warning -- logger &lt;Logger pymor.reductors.bt.BRBTReductor (INFO)&gt;
17:22 |ERROR|BRBTReductor: error -- logger &lt;Logger pymor.reductors.bt.BRBTReductor (INFO)&gt;
17:22 BRBTReductor: info -- logger &lt;Logger pymor.reductors.bt.BRBTReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[LTI_BHIReductor]" time="0.0012469291687011719"><system-err>17:22 |WARNING|LTI_BHIReductor: warning -- logger &lt;Logger pymor.reductors.interpolation.LTI_BHIReductor (INFO)&gt;
17:22 |ERROR|LTI_BHIReductor: error -- logger &lt;Logger pymor.reductors.interpolation.LTI_BHIReductor (INFO)&gt;
17:22 LTI_BHIReductor: info -- logger &lt;Logger pymor.reductors.interpolation.LTI_BHIReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[SO_BHIReductor]" time="0.0012347698211669922"><system-err>17:22 |WARNING|SO_BHIReductor: warning -- logger &lt;Logger pymor.reductors.interpolation.SO_BHIReductor (INFO)&gt;
17:22 |ERROR|SO_BHIReductor: error -- logger &lt;Logger pymor.reductors.interpolation.SO_BHIReductor (INFO)&gt;
17:22 SO_BHIReductor: info -- logger &lt;Logger pymor.reductors.interpolation.SO_BHIReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[DelayBHIReductor]" time="0.0012323856353759766"><system-err>17:22 |WARNING|DelayBHIReductor: warning -- logger &lt;Logger pymor.reductors.interpolation.DelayBHIReductor (INFO)&gt;
17:22 |ERROR|DelayBHIReductor: error -- logger &lt;Logger pymor.reductors.interpolation.DelayBHIReductor (INFO)&gt;
17:22 DelayBHIReductor: info -- logger &lt;Logger pymor.reductors.interpolation.DelayBHIReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[SOBTpReductor]" time="0.0011868476867675781"><system-err>17:22 |WARNING|SOBTpReductor: warning -- logger &lt;Logger pymor.reductors.sobt.SOBTpReductor (INFO)&gt;
17:22 |ERROR|SOBTpReductor: error -- logger &lt;Logger pymor.reductors.sobt.SOBTpReductor (INFO)&gt;
17:22 SOBTpReductor: info -- logger &lt;Logger pymor.reductors.sobt.SOBTpReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[SOBTvReductor]" time="0.001132965087890625"><system-err>17:22 |WARNING|SOBTvReductor: warning -- logger &lt;Logger pymor.reductors.sobt.SOBTvReductor (INFO)&gt;
17:22 |ERROR|SOBTvReductor: error -- logger &lt;Logger pymor.reductors.sobt.SOBTvReductor (INFO)&gt;
17:22 SOBTvReductor: info -- logger &lt;Logger pymor.reductors.sobt.SOBTvReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[SOBTpvReductor]" time="0.0011518001556396484"><system-err>17:22 |WARNING|SOBTpvReductor: warning -- logger &lt;Logger pymor.reductors.sobt.SOBTpvReductor (INFO)&gt;
17:22 |ERROR|SOBTpvReductor: error -- logger &lt;Logger pymor.reductors.sobt.SOBTpvReductor (INFO)&gt;
17:22 SOBTpvReductor: info -- logger &lt;Logger pymor.reductors.sobt.SOBTpvReductor (INFO)&gt;
</system-err></testcase><testcase classname="src.pymortests.core.logger" file="src/pymortests/core/logger.py" line="20" name="test_logclass[SOBTvpReductor]" time="0.0011968612670898438"><system-err>17:22 |WARNING|SOBTvpReductor: warning -- logger &lt;Logger pymor.reductors.sobt.SOBTvpReductor (INFO)&gt;
17:22 |ERROR|SOBTvpReductor: error -- logger &lt;Logger pymor.reductors.sobt.SOBTvpReductor (INFO)&gt;
17:22 SOBTvpReductor: info -- logger &lt;Logger pymor.reductors.sobt.SOBTvpReductor (INFO)&gt;
</system-err></testcase></testsuite>